{
    /*
     * iASL Warning: There were 27 external control methods found during
     * disassembly, but only 0 were resolved (27 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_PR_.BGIA, IntObj)
    External (_PR_.BGMA, IntObj)
    External (_PR_.BGMS, IntObj)
    External (_PR_.CPPC, UnknownObj)
    External (_PR_.CPU0.LPSS, UnknownObj)
    External (_PR_.CPU0.TPSS, UnknownObj)
    External (_PR_.DSAE, UnknownObj)
    External (_PR_.DTSE, UnknownObj)
    External (_PR_.DTSF, IntObj)
    External (_PR_.ELNG, IntObj)
    External (_PR_.EMNA, IntObj)
    External (_PR_.EPCS, UnknownObj)
    External (_PR_.TRPD, UnknownObj)
    External (_PR_.TRPF, UnknownObj)
    External (_SB_.PCI0.GFX0.ADVD, IntObj)
    External (_SB_.PCI0.GFX0.AINT, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GFX0.CBLV, UnknownObj)
    External (_SB_.PCI0.GFX0.CLID, UnknownObj)
    External (_SB_.PCI0.GFX0.DWBL, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GFX0.GCBL, IntObj)
    External (_SB_.PCI0.GFX0.GCDS, IntObj)
    External (_SB_.PCI0.GFX0.GLID, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GFX0.GSCI, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GFX0.GSSE, UnknownObj)
    External (_SB_.PCI0.GFX0.LCDD._DCS, UnknownObj)
    External (_SB_.PCI0.GFX0.NATK, IntObj)
    External (_SB_.PCI0.GFX0.OPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GFX0.OWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GFX0.PRST, IntObj)
    External (_SB_.PCI0.GFX0.SWHD, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GFX0.UPBL, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PAUD.PUAM, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PEG0.HPME, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PEG0.PEGP.ADVD, IntObj)
    External (_SB_.PCI0.PEG0.PEGP.DWBL, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PEG0.PEGP.GCDS, IntObj)
    External (_SB_.PCI0.PEG0.PEGP.LCDD._DCS, UnknownObj)
    External (_SB_.PCI0.PEG0.PEGP.NATK, IntObj)
    External (_SB_.PCI0.PEG0.PEGP.PRST, IntObj)
    External (_SB_.PCI0.PEG0.PEGP.SWHD, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.PEG0.PEGP.UPBL, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PEG1.HPME, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PEG2.HPME, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.XHC_.DUAM, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.XHC_.RHUB.INIR, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.TPM_.PTS_, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AL6F, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (D1F0, UnknownObj)
    External (D1F1, UnknownObj)
    External (D1F2, UnknownObj)
    External (GSMI, UnknownObj)
    External (HLVT, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (LIDS, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (M32B, IntObj)
    External (M32L, IntObj)
    External (M64B, IntObj)
    External (M64L, IntObj)
    External (MDBG, IntObj)
    External (P0L6, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (P0WK, UnknownObj)
    External (P1GP, UnknownObj)
    External (P1L6, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (P1WK, UnknownObj)
    External (P2GP, UnknownObj)
    External (P2L6, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (P2WK, UnknownObj)
    External (PDC0, UnknownObj)
    External (PDC1, UnknownObj)
    External (PDC2, UnknownObj)
    External (PDC3, UnknownObj)
    External (PDC4, UnknownObj)
    External (PDC5, UnknownObj)
    External (PDC6, UnknownObj)
    External (PDC7, UnknownObj)
    External (PS0X, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (PS2X, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (PS3X, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (SDSM, IntObj)
    External (SGGP, UnknownObj)
    External (SGMD, UnknownObj)

    Name (MCHB, 0xFED10000)

    0024: 08 4D 43 48 42 0C 00 00 D1 FE                    // .MCHB.....

    Name (MCHL, 0x8000)

    002E: 08 4D 43 48 4C 0B 00 80                          // .MCHL...

    Name (EGPB, 0xFED19000)

    0036: 08 45 47 50 42 0C 00 90 D1 FE                    // .EGPB.....

    Name (EGPL, 0x1000)

    0040: 08 45 47 50 4C 0B 00 10                          // .EGPL...

    Name (DMIB, 0xFED18000)

    0048: 08 44 4D 49 42 0C 00 80 D1 FE                    // .DMIB.....

    Name (DMIL, 0x1000)

    0052: 08 44 4D 49 4C 0B 00 10                          // .DMIL...

    Name (VTBS, 0xFED90000)

    005A: 08 56 54 42 53 0C 00 00 D9 FE                    // .VTBS.....

    Name (VTLN, 0x4000)

    0064: 08 56 54 4C 4E 0B 00 40                          // .VTLN..@

    Name (CPVD, Zero)

    006C: 08 43 50 56 44 00                                // .CPVD.

    Name (SMIP, 0xB2)

    0072: 08 53 4D 49 50 0A B2                             // .SMIP..

    Name (PMBA, 0x1800)

    0079: 08 50 4D 42 41 0B 00 18                          // .PMBA...

    Name (PMLN, 0x80)

    0081: 08 50 4D 4C 4E 0A 80                             // .PMLN..

    Name (SMCR, 0x1830)

    0088: 08 53 4D 43 52 0B 30 18                          // .SMCR.0.

    Name (TCBR, 0xFED08000)

    0090: 08 54 43 42 52 0C 00 80 D0 FE                    // .TCBR.....

    Name (TCLT, 0x1000)

    009A: 08 54 43 4C 54 0B 00 10                          // .TCLT...

    Name (SMBL, 0x20)

    00A2: 08 53 4D 42 4C 0A 20                             // .SMBL. 

    Name (APCB, 0xFEC00000)

    00A9: 08 41 50 43 42 0C 00 00 C0 FE                    // .APCB.....

    Name (APCL, 0x1000)

    00B3: 08 41 50 43 4C 0B 00 10                          // .APCL...

    Name (HPTC, 0x60)

    00BB: 08 48 50 54 43 0A 60                             // .HPTC.`

    Name (GPBA, 0x1C00)

    00C2: 08 47 50 42 41 0B 00 1C                          // .GPBA...

    Name (GPLN, 0x0400)

    00CA: 08 47 50 4C 4E 0B 00 04                          // .GPLN...

    Name (FMBL, One)

    00D2: 08 46 4D 42 4C 01                                // .FMBL.

    Name (FDTP, 0x02)

    00D8: 08 46 44 54 50 0A 02                             // .FDTP..

    Name (FUPS, 0x04)

    00DF: 08 46 55 50 53 0A 04                             // .FUPS..

    Name (FUWS, 0x03)

    00E6: 08 46 55 57 53 0A 03                             // .FUWS..

    Name (FEMD, 0x04)

    00ED: 08 46 45 4D 44 0A 04                             // .FEMD..

    Name (ASSB, Zero)

    00F4: 08 41 53 53 42 00                                // .ASSB.

    Name (AOTB, Zero)

    00FA: 08 41 4F 54 42 00                                // .AOTB.

    Name (AAXB, Zero)

    0100: 08 41 41 58 42 00                                // .AAXB.

    Name (PEHP, One)

    0106: 08 50 45 48 50 01                                // .PEHP.

    Name (SHPC, One)

    010C: 08 53 48 50 43 01                                // .SHPC.

    Name (PEPM, One)

    0112: 08 50 45 50 4D 01                                // .PEPM.

    Name (PEER, One)

    0118: 08 50 45 45 52 01                                // .PEER.

    Name (PECS, One)

    011E: 08 50 45 43 53 01                                // .PECS.

    Name (ITKE, Zero)

    0124: 08 49 54 4B 45 00                                // .ITKE.

    Name (MBEC, 0xFFFF)

    012A: 08 4D 42 45 43 0B FF FF                          // .MBEC...

    Name (PEBS, 0xE0000000)

    0132: 08 50 45 42 53 0C 00 00 00 E0                    // .PEBS.....

    Name (PELN, 0x10000000)

    013C: 08 50 45 4C 4E 0C 00 00 00 10                    // .PELN.....

    Name (SRSI, 0xB2)

    0146: 08 53 52 53 49 0A B2                             // .SRSI..

    Name (CSMI, 0x61)

    014D: 08 43 53 4D 49 0A 61                             // .CSMI.a

    Name (DSSP, Zero)

    0154: 08 44 53 53 50 00                                // .DSSP.

    Name (FHPP, One)

    015A: 08 46 48 50 50 01                                // .FHPP.

    Name (SMIA, 0xB2)

    0160: 08 53 4D 49 41 0A B2                             // .SMIA..

    Name (SMIB, 0xB3)

    0167: 08 53 4D 49 42 0A B3                             // .SMIB..

    Name (OFST, 0x35)

    016E: 08 4F 46 53 54 0A 35                             // .OFST.5

    Name (TRST, 0x02)

    0175: 08 54 52 53 54 0A 02                             // .TRST..

    Name (TCMF, Zero)

    017C: 08 54 43 4D 46 00                                // .TCMF.

    Name (TMF1, Zero)

    0182: 08 54 4D 46 31 00                                // .TMF1.

    Name (TMF2, Zero)

    0188: 08 54 4D 46 32 00                                // .TMF2.

    Name (TMF3, Zero)

    018E: 08 54 4D 46 33 00                                // .TMF3.

    Name (DTPT, One)

    0194: 08 44 54 50 54 01                                // .DTPT.

    Name (TPMB, 0xFFFFFFFF)

    019A: 08 54 50 4D 42 0C FF FF FF FF                    // .TPMB.....

    Name (TPMC, 0xFFFFFFFF)

    01A4: 08 54 50 4D 43 0C FF FF FF FF                    // .TPMC.....

    Name (TPMM, 0xFED40000)

    01AE: 08 54 50 4D 4D 0C 00 00 D4 FE                    // .TPMM.....

    Name (FTPM, 0xFED40040)

    01B8: 08 46 54 50 4D 0C 40 00 D4 FE                    // .FTPM.@...

    Name (AMDT, Zero)

    01C2: 08 41 4D 44 54 00                                // .AMDT.

    Name (TPMF, One)

    01C8: 08 54 50 4D 46 01                                // .TPMF.

    Name (MBLF, 0x0A)

    01CE: 08 4D 42 4C 46 0A 0A                             // .MBLF..

    Name (TTDP, One)

    01D5: 08 54 54 44 50 01                                // .TTDP.

    Name (TTPF, Zero)

    01DB: 08 54 54 50 46 00                                // .TTPF.

    Name (SS1, One)

    01E1: 08 53 53 31 5F 01                                // .SS1_.

    Name (SS2, Zero)

    01E7: 08 53 53 32 5F 00                                // .SS2_.

    Name (SS3, One)

    01ED: 08 53 53 33 5F 01                                // .SS3_.

    Name (SS4, One)

    01F3: 08 53 53 34 5F 01                                // .SS4_.

    Name (IOST, 0xFFFF)

    01F9: 08 49 4F 53 54 0B FF FF                          // .IOST...

    Name (TOPM, 0x00000000)

    0201: 08 54 4F 50 4D 0C 00 00 00 00                    // .TOPM.....

    Name (ROMS, 0xFFE00000)

    020B: 08 52 4F 4D 53 0C 00 00 E0 FF                    // .ROMS.....

    Name (VGAF, One)

    0215: 08 56 47 41 46 01                                // .VGAF.

    OperationRegion (GNVS, SystemMemory, 0x77324000, 0x05F5)

    021B: 5B 80 47 4E 56 53 00 0C 00 40 32 77 0B F5 05     // [.GNVS...@2w...

    Field (GNVS, AnyAcc, Lock, Preserve)
    {
        OSYS,   16, 
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        SCIF,   8, 
        PRM2,   8, 
        PRM3,   8, 
        LCKF,   8, 
        PRM4,   8, 
        PRM5,   8, 
        P80D,   32, 
        PWRS,   8, 
        DBGS,   8, 
        THOF,   8, 
        ACT1,   8, 
        ACTT,   8, 
        PSVT,   8, 
        TC1V,   8, 
        TC2V,   8, 
        TSPV,   8, 
        CRTT,   8, 
        DTSE,   8, 
        DTS1,   8, 
        DTS2,   8, 
        DTSF,   8, 
        Offset (0x1E), 
        Offset (0x1F), 
        Offset (0x20), 
        Offset (0x21), 
        Offset (0x22), 
        Offset (0x23), 
        Offset (0x24), 
        Offset (0x25), 
        REVN,   8, 
        APIC,   8, 
        TCNT,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PPCM,   8, 
        PPMF,   32, 
        C67L,   8, 
        NATP,   8, 
        CMAP,   8, 
        CMBP,   8, 
        LPTP,   8, 
        FDCP,   8, 
        CMCP,   8, 
        CIRP,   8, 
        SMSC,   8, 
        W381,   8, 
        SMC1,   8, 
        EMAE,   8, 
        EMAP,   16, 
        EMAL,   16, 
        MEFE,   8, 
        DSTS,   8, 
        MORD,   8, 
        TCGP,   8, 
        PPRP,   32, 
        PPRQ,   8, 
        LPPR,   8, 
        IDEM,   8, 
        BID,    16, 
        PLID,   8, 
        BTYP,   8, 
        OSCC,   8, 
        NEXP,   8, 
        SBV1,   8, 
        SBV2,   8, 
        ECON,   8, 
        DSEN,   8, 
        GPIC,   8, 
        CTYP,   8, 
        L01C,   8, 
        VFN0,   8, 
        VFN1,   8, 
        VFN2,   8, 
        VFN3,   8, 
        VFN4,   8, 
        VFN5,   8, 
        VFN6,   8, 
        VFN7,   8, 
        VFN8,   8, 
        VFN9,   8, 
        ATMC,   8, 
        PTMC,   8, 
        PNHM,   32, 
        TBAL,   32, 
        TBAH,   32, 
        RTIP,   8, 
        TSOD,   8, 
        PFLV,   8, 
        BREV,   8, 
        BBID,   8, 
        PDTS,   8, 
        PKGA,   8, 
        PAMT,   8, 
        AC0F,   8, 
        AC1F,   8, 
        DTS3,   8, 
        DTS4,   8, 
        LTR1,   8, 
        LTR2,   8, 
        LTR3,   8, 
        LTR4,   8, 
        LTR5,   8, 
        LTR6,   8, 
        LTR7,   8, 
        LTR8,   8, 
        LTR9,   8, 
        LTRA,   8, 
        LTRB,   8, 
        LTRC,   8, 
        LTRD,   8, 
        LTRE,   8, 
        LTRF,   8, 
        LTRG,   8, 
        LTRH,   8, 
        LTRI,   8, 
        LTRJ,   8, 
        LTRK,   8, 
        OBF1,   8, 
        OBF2,   8, 
        OBF3,   8, 
        OBF4,   8, 
        OBF5,   8, 
        OBF6,   8, 
        OBF7,   8, 
        OBF8,   8, 
        OBF9,   8, 
        OBFA,   8, 
        OBFB,   8, 
        OBFC,   8, 
        OBFD,   8, 
        OBFE,   8, 
        OBFF,   8, 
        OBFG,   8, 
        OBFH,   8, 
        OBFI,   8, 
        OBFJ,   8, 
        OBFK,   8, 
        XTUB,   32, 
        XTUS,   32, 
        XMPB,   32, 
        DDRF,   8, 
        RTD3,   8, 
        PEP0,   8, 
        PEP3,   8, 
        DPTF,   8, 
        SADE,   8, 
        SACR,   8, 
        SAHT,   8, 
        CTDP,   8, 
        LPMP,   8, 
        LPMV,   8, 
        ECEU,   8, 
        TGFG,   16, 
        MEMD,   8, 
        ATRA,   8, 
        PTRA,   8, 
        MEMC,   8, 
        MEMH,   8, 
        FND1,   8, 
        FND2,   8, 
        AMBD,   8, 
        AMAT,   8, 
        AMPT,   8, 
        AMCT,   8, 
        AMHT,   8, 
        SKDE,   8, 
        SKAT,   8, 
        SKPT,   8, 
        SKCT,   8, 
        SKHT,   8, 
        EFDE,   8, 
        EFAT,   8, 
        EFPT,   8, 
        EFCT,   8, 
        EFHT,   8, 
        VRDE,   8, 
        VRAT,   8, 
        VRPT,   8, 
        VRCT,   8, 
        VRHT,   8, 
        DPAP,   8, 
        DPPP,   8, 
        DPCP,   8, 
        DCMP,   8, 
        TRTV,   8, 
        LPOE,   8, 
        LPOP,   8, 
        LPOS,   8, 
        LPOW,   8, 
        LPER,   8, 
        PPSZ,   32, 
        DISE,   8, 
        BGMA,   64, 
        BGMS,   8, 
        BGIA,   16, 
        IRMC,   8, 
        NFCE,   8, 
        CHEN,   8, 
        S0ID,   8, 
        CTDB,   8, 
        DKSM,   8, 
        SIO1,   16, 
        SIO2,   16, 
        SPBA,   16, 
        SEC0,   32, 
        SEC1,   32, 
        SEC2,   32, 
        SEC3,   32, 
        SEC4,   32, 
        SEC5,   32, 
        SEC6,   32, 
        SEC7,   32, 
        SEC8,   32, 
        Offset (0x1F4), 
        WIFD,   8, 
        WFAT,   8, 
        WFPT,   8, 
        WFCT,   8, 
        WFHT,   8, 
        PWRE,   8, 
        PWRP,   8, 
        Offset (0x203), 
        XHPR,   8, 
        RIC0,   8, 
        DVS0,   8, 
        DVS1,   8, 
        DVS2,   8, 
        DVS3,   8, 
        GBSX,   8, 
        IUBE,   8, 
        IUCE,   8, 
        IUDE,   8, 
        ECNO,   8, 
        AUDD,   16, 
        IC0D,   16, 
        IC1D,   16, 
        IC1S,   16, 
        VRRD,   16, 
        PSCP,   8, 
        I20D,   16, 
        I21D,   16, 
        RCG0,   16, 
        ECDB,   8, 
        P2ME,   8, 
        SSH0,   16, 
        SSL0,   16, 
        SSD0,   16, 
        FMH0,   16, 
        FML0,   16, 
        FMD0,   16, 
        FPH0,   16, 
        FPL0,   16, 
        FPD0,   16, 
        SSH1,   16, 
        SSL1,   16, 
        SSD1,   16, 
        FMH1,   16, 
        FML1,   16, 
        FMD1,   16, 
        FPH1,   16, 
        FPL1,   16, 
        FPD1,   16, 
        M0C0,   16, 
        M1C0,   16, 
        M2C0,   16, 
        M0C1,   16, 
        M1C1,   16, 
        M2C1,   16, 
        M0C2,   16, 
        M1C2,   16, 
        M0C3,   16, 
        M1C3,   16, 
        M0C4,   16, 
        M1C4,   16, 
        M0C5,   16, 
        M1C5,   16, 
        TBSF,   8, 
        GIRQ,   32, 
        DMTP,   8, 
        DMTD,   8, 
        DMSH,   8, 
        LANP,   8, 
        SHSB,   8, 
        PLCS,   8, 
        PLVL,   16, 
        GN1E,   8, 
        G1AT,   8, 
        G1PT,   8, 
        G1CT,   8, 
        G1HT,   8, 
        GN2E,   8, 
        G2AT,   8, 
        G2PT,   8, 
        G2CT,   8, 
        G2HT,   8, 
        WWSD,   8, 
        CVSD,   8, 
        SSDD,   8, 
        INLD,   8, 
        IFAT,   8, 
        IFPT,   8, 
        IFCT,   8, 
        IFHT,   8, 
        SDWE,   8, 
        USBH,   8, 
        BCV4,   8, 
        WTV0,   8, 
        WTV1,   8, 
        APFU,   8, 
        SOHP,   8, 
        GP5F,   8, 
        NOHP,   8, 
        TBSE,   8, 
        WKFN,   8, 
        PEPC,   32, 
        VRSD,   16, 
        PB1E,   8, 
        GNID,   8, 
        WAND,   8, 
        WWAT,   8, 
        WWPT,   8, 
        WWCT,   8, 
        WWHT,   8, 
        Offset (0x2A3), 
        MPL0,   16, 
        CHGE,   8, 
        SAC3,   8, 
        MEM3,   8, 
        AMC3,   8, 
        SKC3,   8, 
        EFC3,   8, 
        VRC3,   8, 
        WFC3,   8, 
        G1C3,   8, 
        G2C3,   8, 
        IFC3,   8, 
        WWC3,   8, 
        WGC3,   8, 
        SPST,   8, 
        PERE,   8, 
        Offset (0x2B7), 
        GN3E,   8, 
        G3AT,   8, 
        G3PT,   8, 
        G3CT,   8, 
        G3HT,   8, 
        GN4E,   8, 
        G4AT,   8, 
        G4PT,   8, 
        G4CT,   8, 
        G4HT,   8, 
        GN5E,   8, 
        G5AT,   8, 
        G5PT,   8, 
        G5CT,   8, 
        G5HT,   8, 
        GN6E,   8, 
        G6AT,   8, 
        G6PT,   8, 
        G6CT,   8, 
        G6HT,   8, 
        ECLP,   8, 
        G3C3,   8, 
        G4C3,   8, 
        G5C3,   8, 
        G6C3,   8, 
        TSP1,   8, 
        TSP2,   8, 
        TSP3,   8, 
        TSP4,   8, 
        TSP5,   8, 
        TSP6,   8, 
        TSP7,   8, 
        TSP8,   8, 
        SSP1,   8, 
        SSP2,   8, 
        SSP3,   8, 
        SSP4,   8, 
        SSP5,   8, 
        SSP6,   8, 
        SSP7,   8, 
        SSP8,   8, 
        MEMS,   8, 
        Offset (0x2F8), 
        S1DE,   8, 
        S1AT,   8, 
        S1PT,   8, 
        S1CT,   8, 
        S1HT,   8, 
        S2DE,   8, 
        S2AT,   8, 
        S2PT,   8, 
        S2CT,   8, 
        S2HT,   8, 
        S3DE,   8, 
        S3AT,   8, 
        S3PT,   8, 
        S3CT,   8, 
        S3HT,   8, 
        S4DE,   8, 
        S4AT,   8, 
        S4PT,   8, 
        S4CT,   8, 
        S4HT,   8, 
        S5DE,   8, 
        S5AT,   8, 
        S5PT,   8, 
        S5CT,   8, 
        S5HT,   8, 
        S6DE,   8, 
        S6AT,   8, 
        S6PT,   8, 
        S6CT,   8, 
        S6HT,   8, 
        S7DE,   8, 
        S7AT,   8, 
        S7PT,   8, 
        S7CT,   8, 
        S7HT,   8, 
        S1S3,   8, 
        S2S3,   8, 
        S3S3,   8, 
        S4S3,   8, 
        S5S3,   8, 
        S6S3,   8, 
        S7S3,   8, 
        PSME,   8, 
        PDT1,   8, 
        PLM1,   16, 
        PTW1,   16, 
        PDT2,   8, 
        PLM2,   16, 
        PTW2,   16, 
        DDT1,   8, 
        DDP1,   8, 
        DLI1,   16, 
        DPL1,   16, 
        DTW1,   16, 
        DMI1,   16, 
        DMA1,   16, 
        DMT1,   16, 
        DDT2,   8, 
        DDP2,   8, 
        DLI2,   16, 
        DPL2,   16, 
        DTW2,   16, 
        DMI2,   16, 
        DMA2,   16, 
        DMT2,   16, 
        WIFE,   8, 
        DOM1,   8, 
        LIM1,   16, 
        TIM1,   16, 
        DOM2,   8, 
        LIM2,   16, 
        TIM2,   16, 
        DOM3,   8, 
        LIM3,   16, 
        TIM3,   16, 
        TRD0,   8, 
        TRL0,   8, 
        TRD1,   8, 
        TRL1,   8, 
        WDM1,   8, 
        CID1,   16, 
        WDM2,   8, 
        CID2,   16, 
        Offset (0x364), 
        APPE,   8, 
        MPL1,   16, 
        MPL2,   16, 
        SDS0,   8, 
        SDS1,   8, 
        SDS2,   8, 
        SDS3,   8, 
        SDS4,   8, 
        SDS5,   8, 
        SDS6,   8, 
        SDS7,   8, 
        SDS8,   8, 
        SDS9,   8, 
        SDSA,   8, 
        TPLB,   8, 
        TPLH,   16, 
        WTVX,   8, 
        WITX,   8, 
        GPTD,   8, 
        GDBT,   16, 
        UTKX,   8, 
        SPTD,   8, 
        GEXN,   8, 
        TBTS,   8, 
        AICS,   8, 
        TARS,   8, 
        FPAT,   8, 
        FPEN,   8, 
        FPGN,   32, 
        FPLV,   8, 
        CPAD,   16, 
        CPAB,   8, 
        TNAT,   8, 
        CPGN,   32, 
        CF2T,   8, 
        ATLB,   32, 
        SDM0,   8, 
        SDM1,   8, 
        SDM2,   8, 
        SDM3,   8, 
        SDM4,   8, 
        SDM5,   8, 
        SDM6,   8, 
        SDM7,   8, 
        SDM8,   8, 
        SDM9,   8, 
        SDMA,   8, 
        USTP,   8, 
        SSHI,   16, 
        SSLI,   16, 
        SSDI,   16, 
        FMHI,   16, 
        FMLI,   16, 
        FMDI,   16, 
        FPHI,   16, 
        FPLI,   16, 
        FPDI,   16, 
        M0CI,   16, 
        M1CI,   16, 
        M0CS,   16, 
        M1CS,   16, 
        M0CU,   16, 
        M1CU,   16, 
        CAMT,   8, 
        DS4D,   16, 
        IVDF,   8, 
        EIDF,   8, 
        GFPS,   32, 
        GFPI,   32, 
        GNSM,   8, 
        GNSC,   8, 
        GGNR,   32, 
        GBTW,   32, 
        GBTK,   32, 
        GBTI,   32, 
        GPDI,   32, 
        GPLI,   32, 
        CL00,   8, 
        CL01,   8, 
        CL02,   8, 
        CL03,   8, 
        L0EN,   8, 
        L1EN,   8, 
        L2EN,   8, 
        L3EN,   8, 
        CDIV,   8, 
        C0TP,   8, 
        C0CV,   8, 
        C0GP,   8, 
        C0IB,   8, 
        C0IA,   16, 
        C0P0,   8, 
        C0P1,   8, 
        C0P2,   8, 
        C0P3,   8, 
        C0G0,   8, 
        C0G1,   8, 
        C0G2,   8, 
        C0G3,   8, 
        C0F0,   8, 
        C0F1,   8, 
        C0F2,   8, 
        C0F3,   8, 
        C0A0,   8, 
        C0A1,   8, 
        C0A2,   8, 
        C0A3,   8, 
        C0I0,   8, 
        C0I1,   8, 
        C0I2,   8, 
        C0I3,   8, 
        C0PL,   8, 
        C1TP,   8, 
        C1CV,   8, 
        C1GP,   8, 
        C1IB,   8, 
        C1IA,   16, 
        C1P0,   8, 
        C1P1,   8, 
        C1P2,   8, 
        C1P3,   8, 
        C1G0,   8, 
        C1G1,   8, 
        C1G2,   8, 
        C1G3,   8, 
        C1F0,   8, 
        C1F1,   8, 
        C1F2,   8, 
        C1F3,   8, 
        C1A0,   8, 
        C1A1,   8, 
        C1A2,   8, 
        C1A3,   8, 
        C1I0,   8, 
        C1I1,   8, 
        C1I2,   8, 
        C1I3,   8, 
        C1PL,   8, 
        C2TP,   8, 
        C2CV,   8, 
        C2GP,   8, 
        C2IB,   8, 
        C2IA,   16, 
        C2P0,   8, 
        C2P1,   8, 
        C2P2,   8, 
        C2P3,   8, 
        C2G0,   8, 
        C2G1,   8, 
        C2G2,   8, 
        C2G3,   8, 
        C2F0,   8, 
        C2F1,   8, 
        C2F2,   8, 
        C2F3,   8, 
        C2A0,   8, 
        C2A1,   8, 
        C2A2,   8, 
        C2A3,   8, 
        C2I0,   8, 
        C2I1,   8, 
        C2I2,   8, 
        C2I3,   8, 
        C2PL,   8, 
        C3TP,   8, 
        C3CV,   8, 
        C3GP,   8, 
        C3IB,   8, 
        C3IA,   16, 
        C3P0,   8, 
        C3P1,   8, 
        C3P2,   8, 
        C3P3,   8, 
        C3G0,   8, 
        C3G1,   8, 
        C3G2,   8, 
        C3G3,   8, 
        C3F0,   8, 
        C3F1,   8, 
        C3F2,   8, 
        C3F3,   8, 
        C3A0,   8, 
        C3A1,   8, 
        C3A2,   8, 
        C3A3,   8, 
        C3I0,   8, 
        C3I1,   8, 
        C3I2,   8, 
        C3I3,   8, 
        C3PL,   8, 
        L0SM,   8, 
        L0H0,   8, 
        L0H1,   8, 
        L0H2,   8, 
        L0H3,   8, 
        L0H4,   8, 
        L0H5,   8, 
        L0H6,   8, 
        L0H7,   8, 
        L0H8,   8, 
        L0PL,   8, 
        L0M0,   8, 
        L0M1,   8, 
        L0M2,   8, 
        L0M3,   8, 
        L0M4,   8, 
        L0M5,   8, 
        L0M6,   8, 
        L0M7,   8, 
        L0M8,   8, 
        L0M9,   8, 
        L0MA,   8, 
        L0MB,   8, 
        L0MC,   8, 
        L0MD,   8, 
        L0ME,   8, 
        L0MF,   8, 
        L0DI,   8, 
        L0BS,   8, 
        L0A0,   16, 
        L0A1,   16, 
        L0A2,   16, 
        L0A3,   16, 
        L0A4,   16, 
        L0A5,   16, 
        L0A6,   16, 
        L0A7,   16, 
        L0A8,   16, 
        L0A9,   16, 
        L0AA,   16, 
        L0AB,   16, 
        L0D0,   8, 
        L0D1,   8, 
        L0D2,   8, 
        L0D3,   8, 
        L0D4,   8, 
        L0D5,   8, 
        L0D6,   8, 
        L0D7,   8, 
        L0D8,   8, 
        L0D9,   8, 
        L0DA,   8, 
        L0DB,   8, 
        L0DV,   8, 
        L0CV,   8, 
        L0LU,   8, 
        L0NL,   8, 
        L0EE,   8, 
        L0VC,   8, 
        L0FS,   8, 
        L0DG,   8, 
        L0C0,   8, 
        L0C1,   8, 
        L0C2,   8, 
        L0C3,   8, 
        L0CK,   32, 
        L0CL,   8, 
        L1SM,   8, 
        L1H0,   8, 
        L1H1,   8, 
        L1H2,   8, 
        L1H3,   8, 
        L1H4,   8, 
        L1H5,   8, 
        L1H6,   8, 
        L1H7,   8, 
        L1H8,   8, 
        L1PL,   8, 
        L1M0,   8, 
        L1M1,   8, 
        L1M2,   8, 
        L1M3,   8, 
        L1M4,   8, 
        L1M5,   8, 
        L1M6,   8, 
        L1M7,   8, 
        L1M8,   8, 
        L1M9,   8, 
        L1MA,   8, 
        L1MB,   8, 
        L1MC,   8, 
        L1MD,   8, 
        L1ME,   8, 
        L1MF,   8, 
        L1DI,   8, 
        L1BS,   8, 
        L1A0,   16, 
        L1A1,   16, 
        L1A2,   16, 
        L1A3,   16, 
        L1A4,   16, 
        L1A5,   16, 
        L1A6,   16, 
        L1A7,   16, 
        L1A8,   16, 
        L1A9,   16, 
        L1AA,   16, 
        L1AB,   16, 
        L1D0,   8, 
        L1D1,   8, 
        L1D2,   8, 
        L1D3,   8, 
        L1D4,   8, 
        L1D5,   8, 
        L1D6,   8, 
        L1D7,   8, 
        L1D8,   8, 
        L1D9,   8, 
        L1DA,   8, 
        L1DB,   8, 
        L1DV,   8, 
        L1CV,   8, 
        L1LU,   8, 
        L1NL,   8, 
        L1EE,   8, 
        L1VC,   8, 
        L1FS,   8, 
        L1DG,   8, 
        L1C0,   8, 
        L1C1,   8, 
        L1C2,   8, 
        L1C3,   8, 
        L1CK,   32, 
        L1CL,   8, 
        L2SM,   8, 
        L2H0,   8, 
        L2H1,   8, 
        L2H2,   8, 
        L2H3,   8, 
        L2H4,   8, 
        L2H5,   8, 
        L2H6,   8, 
        L2H7,   8, 
        L2H8,   8, 
        L2PL,   8, 
        L2M0,   8, 
        L2M1,   8, 
        L2M2,   8, 
        L2M3,   8, 
        L2M4,   8, 
        L2M5,   8, 
        L2M6,   8, 
        L2M7,   8, 
        L2M8,   8, 
        L2M9,   8, 
        L2MA,   8, 
        L2MB,   8, 
        L2MC,   8, 
        L2MD,   8, 
        L2ME,   8, 
        L2MF,   8, 
        L2DI,   8, 
        L2BS,   8, 
        L2A0,   16, 
        L2A1,   16, 
        L2A2,   16, 
        L2A3,   16, 
        L2A4,   16, 
        L2A5,   16, 
        L2A6,   16, 
        L2A7,   16, 
        L2A8,   16, 
        L2A9,   16, 
        L2AA,   16, 
        L2AB,   16, 
        L2D0,   8, 
        L2D1,   8, 
        L2D2,   8, 
        L2D3,   8, 
        L2D4,   8, 
        L2D5,   8, 
        L2D6,   8, 
        L2D7,   8, 
        L2D8,   8, 
        L2D9,   8, 
        L2DA,   8, 
        L2DB,   8, 
        L2DV,   8, 
        L2CV,   8, 
        L2LU,   8, 
        L2NL,   8, 
        L2EE,   8, 
        L2VC,   8, 
        L2FS,   8, 
        L2DG,   8, 
        L2C0,   8, 
        L2C1,   8, 
        L2C2,   8, 
        L2C3,   8, 
        L2CK,   32, 
        L2CL,   8, 
        L3SM,   8, 
        L3H0,   8, 
        L3H1,   8, 
        L3H2,   8, 
        L3H3,   8, 
        L3H4,   8, 
        L3H5,   8, 
        L3H6,   8, 
        L3H7,   8, 
        L3H8,   8, 
        L3PL,   8, 
        L3M0,   8, 
        L3M1,   8, 
        L3M2,   8, 
        L3M3,   8, 
        L3M4,   8, 
        L3M5,   8, 
        L3M6,   8, 
        L3M7,   8, 
        L3M8,   8, 
        L3M9,   8, 
        L3MA,   8, 
        L3MB,   8, 
        L3MC,   8, 
        L3MD,   8, 
        L3ME,   8, 
        L3MF,   8, 
        L3DI,   8, 
        L3BS,   8, 
        L3A0,   16, 
        L3A1,   16, 
        L3A2,   16, 
        L3A3,   16, 
        L3A4,   16, 
        L3A5,   16, 
        L3A6,   16, 
        L3A7,   16, 
        L3A8,   16, 
        L3A9,   16, 
        L3AA,   16, 
        L3AB,   16, 
        L3D0,   8, 
        L3D1,   8, 
        L3D2,   8, 
        L3D3,   8, 
        L3D4,   8, 
        L3D5,   8, 
        L3D6,   8, 
        L3D7,   8, 
        L3D8,   8, 
        L3D9,   8, 
        L3DA,   8, 
        L3DB,   8, 
        L3DV,   8, 
        L3CV,   8, 
        L3LU,   8, 
        L3NL,   8, 
        L3EE,   8, 
        L3VC,   8, 
        L3FS,   8, 
        L3DG,   8, 
        L3C0,   8, 
        L3C1,   8, 
        L3C2,   8, 
        L3C3,   8, 
        L3CK,   32, 
        L3CL,   8, 
        ECR1,   8, 
        Offset (0x5AA), 
        I2SC,   8, 
        ODV0,   8, 
        ODV1,   8, 
        ODV2,   8, 
        ODV3,   8, 
        ODV4,   8, 
        ODV5,   8, 
        UBCB,   32, 
        EMOD,   8, 
        WIFC,   8, 
        Offset (0x5BE), 
        TPLS,   8, 
        TPDB,   8, 
        TPDH,   16, 
        TPDS,   8, 
        AG1L,   64, 
        AG1H,   64, 
        AG2L,   64, 
        AG2H,   64, 
        AG3L,   64, 
        AG3H,   64, 
        HEFE,   8, 
        XDCE,   8
    }


    022A: 5B 81 8A 28 01 47 4E 56 53 10 4F 53 59 53 10 53  // [..(.GNVS.OSYS.S
    023A: 4D 49 46 08 50 52 4D 30 08 50 52 4D 31 08 53 43  // MIF.PRM0.PRM1.SC
    024A: 49 46 08 50 52 4D 32 08 50 52 4D 33 08 4C 43 4B  // IF.PRM2.PRM3.LCK
    025A: 46 08 50 52 4D 34 08 50 52 4D 35 08 50 38 30 44  // F.PRM4.PRM5.P80D
    026A: 20 50 57 52 53 08 44 42 47 53 08 54 48 4F 46 08  //  PWRS.DBGS.THOF.
    027A: 41 43 54 31 08 41 43 54 54 08 50 53 56 54 08 54  // ACT1.ACTT.PSVT.T
    028A: 43 31 56 08 54 43 32 56 08 54 53 50 56 08 43 52  // C1V.TC2V.TSPV.CR
    029A: 54 54 08 44 54 53 45 08 44 54 53 31 08 44 54 53  // TT.DTSE.DTS1.DTS
    02AA: 32 08 44 54 53 46 08 00 08 00 08 00 08 00 08 00  // 2.DTSF..........
    02BA: 08 00 08 00 08 00 08 52 45 56 4E 08 41 50 49 43  // .......REVN.APIC
    02CA: 08 54 43 4E 54 08 50 43 50 30 08 50 43 50 31 08  // .TCNT.PCP0.PCP1.
    02DA: 50 50 43 4D 08 50 50 4D 46 20 43 36 37 4C 08 4E  // PPCM.PPMF C67L.N
    02EA: 41 54 50 08 43 4D 41 50 08 43 4D 42 50 08 4C 50  // ATP.CMAP.CMBP.LP
    02FA: 54 50 08 46 44 43 50 08 43 4D 43 50 08 43 49 52  // TP.FDCP.CMCP.CIR
    030A: 50 08 53 4D 53 43 08 57 33 38 31 08 53 4D 43 31  // P.SMSC.W381.SMC1
    031A: 08 45 4D 41 45 08 45 4D 41 50 10 45 4D 41 4C 10  // .EMAE.EMAP.EMAL.
    032A: 4D 45 46 45 08 44 53 54 53 08 4D 4F 52 44 08 54  // MEFE.DSTS.MORD.T
    033A: 43 47 50 08 50 50 52 50 20 50 50 52 51 08 4C 50  // CGP.PPRP PPRQ.LP
    034A: 50 52 08 49 44 45 4D 08 42 49 44 5F 10 50 4C 49  // PR.IDEM.BID_.PLI
    035A: 44 08 42 54 59 50 08 4F 53 43 43 08 4E 45 58 50  // D.BTYP.OSCC.NEXP
    036A: 08 53 42 56 31 08 53 42 56 32 08 45 43 4F 4E 08  // .SBV1.SBV2.ECON.
    037A: 44 53 45 4E 08 47 50 49 43 08 43 54 59 50 08 4C  // DSEN.GPIC.CTYP.L
    038A: 30 31 43 08 56 46 4E 30 08 56 46 4E 31 08 56 46  // 01C.VFN0.VFN1.VF
    039A: 4E 32 08 56 46 4E 33 08 56 46 4E 34 08 56 46 4E  // N2.VFN3.VFN4.VFN
    03AA: 35 08 56 46 4E 36 08 56 46 4E 37 08 56 46 4E 38  // 5.VFN6.VFN7.VFN8
    03BA: 08 56 46 4E 39 08 41 54 4D 43 08 50 54 4D 43 08  // .VFN9.ATMC.PTMC.
    03CA: 50 4E 48 4D 20 54 42 41 4C 20 54 42 41 48 20 52  // PNHM TBAL TBAH R
    03DA: 54 49 50 08 54 53 4F 44 08 50 46 4C 56 08 42 52  // TIP.TSOD.PFLV.BR
    03EA: 45 56 08 42 42 49 44 08 50 44 54 53 08 50 4B 47  // EV.BBID.PDTS.PKG
    03FA: 41 08 50 41 4D 54 08 41 43 30 46 08 41 43 31 46  // A.PAMT.AC0F.AC1F
    040A: 08 44 54 53 33 08 44 54 53 34 08 4C 54 52 31 08  // .DTS3.DTS4.LTR1.
    041A: 4C 54 52 32 08 4C 54 52 33 08 4C 54 52 34 08 4C  // LTR2.LTR3.LTR4.L
    042A: 54 52 35 08 4C 54 52 36 08 4C 54 52 37 08 4C 54  // TR5.LTR6.LTR7.LT
    043A: 52 38 08 4C 54 52 39 08 4C 54 52 41 08 4C 54 52  // R8.LTR9.LTRA.LTR
    044A: 42 08 4C 54 52 43 08 4C 54 52 44 08 4C 54 52 45  // B.LTRC.LTRD.LTRE
    045A: 08 4C 54 52 46 08 4C 54 52 47 08 4C 54 52 48 08  // .LTRF.LTRG.LTRH.
    046A: 4C 54 52 49 08 4C 54 52 4A 08 4C 54 52 4B 08 4F  // LTRI.LTRJ.LTRK.O
    047A: 42 46 31 08 4F 42 46 32 08 4F 42 46 33 08 4F 42  // BF1.OBF2.OBF3.OB
    048A: 46 34 08 4F 42 46 35 08 4F 42 46 36 08 4F 42 46  // F4.OBF5.OBF6.OBF
    049A: 37 08 4F 42 46 38 08 4F 42 46 39 08 4F 42 46 41  // 7.OBF8.OBF9.OBFA
    04AA: 08 4F 42 46 42 08 4F 42 46 43 08 4F 42 46 44 08  // .OBFB.OBFC.OBFD.
    04BA: 4F 42 46 45 08 4F 42 46 46 08 4F 42 46 47 08 4F  // OBFE.OBFF.OBFG.O
    04CA: 42 46 48 08 4F 42 46 49 08 4F 42 46 4A 08 4F 42  // BFH.OBFI.OBFJ.OB
    04DA: 46 4B 08 58 54 55 42 20 58 54 55 53 20 58 4D 50  // FK.XTUB XTUS XMP
    04EA: 42 20 44 44 52 46 08 52 54 44 33 08 50 45 50 30  // B DDRF.RTD3.PEP0
    04FA: 08 50 45 50 33 08 44 50 54 46 08 53 41 44 45 08  // .PEP3.DPTF.SADE.
    050A: 53 41 43 52 08 53 41 48 54 08 43 54 44 50 08 4C  // SACR.SAHT.CTDP.L
    051A: 50 4D 50 08 4C 50 4D 56 08 45 43 45 55 08 54 47  // PMP.LPMV.ECEU.TG
    052A: 46 47 10 4D 45 4D 44 08 41 54 52 41 08 50 54 52  // FG.MEMD.ATRA.PTR
    053A: 41 08 4D 45 4D 43 08 4D 45 4D 48 08 46 4E 44 31  // A.MEMC.MEMH.FND1
    054A: 08 46 4E 44 32 08 41 4D 42 44 08 41 4D 41 54 08  // .FND2.AMBD.AMAT.
    055A: 41 4D 50 54 08 41 4D 43 54 08 41 4D 48 54 08 53  // AMPT.AMCT.AMHT.S
    056A: 4B 44 45 08 53 4B 41 54 08 53 4B 50 54 08 53 4B  // KDE.SKAT.SKPT.SK
    057A: 43 54 08 53 4B 48 54 08 45 46 44 45 08 45 46 41  // CT.SKHT.EFDE.EFA
    058A: 54 08 45 46 50 54 08 45 46 43 54 08 45 46 48 54  // T.EFPT.EFCT.EFHT
    059A: 08 56 52 44 45 08 56 52 41 54 08 56 52 50 54 08  // .VRDE.VRAT.VRPT.
    05AA: 56 52 43 54 08 56 52 48 54 08 44 50 41 50 08 44  // VRCT.VRHT.DPAP.D
    05BA: 50 50 50 08 44 50 43 50 08 44 43 4D 50 08 54 52  // PPP.DPCP.DCMP.TR
    05CA: 54 56 08 4C 50 4F 45 08 4C 50 4F 50 08 4C 50 4F  // TV.LPOE.LPOP.LPO
    05DA: 53 08 4C 50 4F 57 08 4C 50 45 52 08 50 50 53 5A  // S.LPOW.LPER.PPSZ
    05EA: 20 44 49 53 45 08 42 47 4D 41 40 04 42 47 4D 53  //  DISE.BGMA@.BGMS
    05FA: 08 42 47 49 41 10 49 52 4D 43 08 4E 46 43 45 08  // .BGIA.IRMC.NFCE.
    060A: 43 48 45 4E 08 53 30 49 44 08 43 54 44 42 08 44  // CHEN.S0ID.CTDB.D
    061A: 4B 53 4D 08 53 49 4F 31 10 53 49 4F 32 10 53 50  // KSM.SIO1.SIO2.SP
    062A: 42 41 10 53 45 43 30 20 53 45 43 31 20 53 45 43  // BA.SEC0 SEC1 SEC
    063A: 32 20 53 45 43 33 20 53 45 43 34 20 53 45 43 35  // 2 SEC3 SEC4 SEC5
    064A: 20 53 45 43 36 20 53 45 43 37 20 53 45 43 38 20  //  SEC6 SEC7 SEC8 
    065A: 00 40 69 57 49 46 44 08 57 46 41 54 08 57 46 50  // .@iWIFD.WFAT.WFP
    066A: 54 08 57 46 43 54 08 57 46 48 54 08 50 57 52 45  // T.WFCT.WFHT.PWRE
    067A: 08 50 57 52 50 08 00 40 04 58 48 50 52 08 52 49  // .PWRP..@.XHPR.RI
    068A: 43 30 08 44 56 53 30 08 44 56 53 31 08 44 56 53  // C0.DVS0.DVS1.DVS
    069A: 32 08 44 56 53 33 08 47 42 53 58 08 49 55 42 45  // 2.DVS3.GBSX.IUBE
    06AA: 08 49 55 43 45 08 49 55 44 45 08 45 43 4E 4F 08  // .IUCE.IUDE.ECNO.
    06BA: 41 55 44 44 10 49 43 30 44 10 49 43 31 44 10 49  // AUDD.IC0D.IC1D.I
    06CA: 43 31 53 10 56 52 52 44 10 50 53 43 50 08 49 32  // C1S.VRRD.PSCP.I2
    06DA: 30 44 10 49 32 31 44 10 52 43 47 30 10 45 43 44  // 0D.I21D.RCG0.ECD
    06EA: 42 08 50 32 4D 45 08 53 53 48 30 10 53 53 4C 30  // B.P2ME.SSH0.SSL0
    06FA: 10 53 53 44 30 10 46 4D 48 30 10 46 4D 4C 30 10  // .SSD0.FMH0.FML0.
    070A: 46 4D 44 30 10 46 50 48 30 10 46 50 4C 30 10 46  // FMD0.FPH0.FPL0.F
    071A: 50 44 30 10 53 53 48 31 10 53 53 4C 31 10 53 53  // PD0.SSH1.SSL1.SS
    072A: 44 31 10 46 4D 48 31 10 46 4D 4C 31 10 46 4D 44  // D1.FMH1.FML1.FMD
    073A: 31 10 46 50 48 31 10 46 50 4C 31 10 46 50 44 31  // 1.FPH1.FPL1.FPD1
    074A: 10 4D 30 43 30 10 4D 31 43 30 10 4D 32 43 30 10  // .M0C0.M1C0.M2C0.
    075A: 4D 30 43 31 10 4D 31 43 31 10 4D 32 43 31 10 4D  // M0C1.M1C1.M2C1.M
    076A: 30 43 32 10 4D 31 43 32 10 4D 30 43 33 10 4D 31  // 0C2.M1C2.M0C3.M1
    077A: 43 33 10 4D 30 43 34 10 4D 31 43 34 10 4D 30 43  // C3.M0C4.M1C4.M0C
    078A: 35 10 4D 31 43 35 10 54 42 53 46 08 47 49 52 51  // 5.M1C5.TBSF.GIRQ
    079A: 20 44 4D 54 50 08 44 4D 54 44 08 44 4D 53 48 08  //  DMTP.DMTD.DMSH.
    07AA: 4C 41 4E 50 08 53 48 53 42 08 50 4C 43 53 08 50  // LANP.SHSB.PLCS.P
    07BA: 4C 56 4C 10 47 4E 31 45 08 47 31 41 54 08 47 31  // LVL.GN1E.G1AT.G1
    07CA: 50 54 08 47 31 43 54 08 47 31 48 54 08 47 4E 32  // PT.G1CT.G1HT.GN2
    07DA: 45 08 47 32 41 54 08 47 32 50 54 08 47 32 43 54  // E.G2AT.G2PT.G2CT
    07EA: 08 47 32 48 54 08 57 57 53 44 08 43 56 53 44 08  // .G2HT.WWSD.CVSD.
    07FA: 53 53 44 44 08 49 4E 4C 44 08 49 46 41 54 08 49  // SSDD.INLD.IFAT.I
    080A: 46 50 54 08 49 46 43 54 08 49 46 48 54 08 53 44  // FPT.IFCT.IFHT.SD
    081A: 57 45 08 55 53 42 48 08 42 43 56 34 08 57 54 56  // WE.USBH.BCV4.WTV
    082A: 30 08 57 54 56 31 08 41 50 46 55 08 53 4F 48 50  // 0.WTV1.APFU.SOHP
    083A: 08 47 50 35 46 08 4E 4F 48 50 08 54 42 53 45 08  // .GP5F.NOHP.TBSE.
    084A: 57 4B 46 4E 08 50 45 50 43 20 56 52 53 44 10 50  // WKFN.PEPC VRSD.P
    085A: 42 31 45 08 47 4E 49 44 08 57 41 4E 44 08 57 57  // B1E.GNID.WAND.WW
    086A: 41 54 08 57 57 50 54 08 57 57 43 54 08 57 57 48  // AT.WWPT.WWCT.WWH
    087A: 54 08 00 48 05 4D 50 4C 30 10 43 48 47 45 08 53  // T..H.MPL0.CHGE.S
    088A: 41 43 33 08 4D 45 4D 33 08 41 4D 43 33 08 53 4B  // AC3.MEM3.AMC3.SK
    089A: 43 33 08 45 46 43 33 08 56 52 43 33 08 57 46 43  // C3.EFC3.VRC3.WFC
    08AA: 33 08 47 31 43 33 08 47 32 43 33 08 49 46 43 33  // 3.G1C3.G2C3.IFC3
    08BA: 08 57 57 43 33 08 57 47 43 33 08 53 50 53 54 08  // .WWC3.WGC3.SPST.
    08CA: 50 45 52 45 08 00 18 47 4E 33 45 08 47 33 41 54  // PERE...GN3E.G3AT
    08DA: 08 47 33 50 54 08 47 33 43 54 08 47 33 48 54 08  // .G3PT.G3CT.G3HT.
    08EA: 47 4E 34 45 08 47 34 41 54 08 47 34 50 54 08 47  // GN4E.G4AT.G4PT.G
    08FA: 34 43 54 08 47 34 48 54 08 47 4E 35 45 08 47 35  // 4CT.G4HT.GN5E.G5
    090A: 41 54 08 47 35 50 54 08 47 35 43 54 08 47 35 48  // AT.G5PT.G5CT.G5H
    091A: 54 08 47 4E 36 45 08 47 36 41 54 08 47 36 50 54  // T.GN6E.G6AT.G6PT
    092A: 08 47 36 43 54 08 47 36 48 54 08 45 43 4C 50 08  // .G6CT.G6HT.ECLP.
    093A: 47 33 43 33 08 47 34 43 33 08 47 35 43 33 08 47  // G3C3.G4C3.G5C3.G
    094A: 36 43 33 08 54 53 50 31 08 54 53 50 32 08 54 53  // 6C3.TSP1.TSP2.TS
    095A: 50 33 08 54 53 50 34 08 54 53 50 35 08 54 53 50  // P3.TSP4.TSP5.TSP
    096A: 36 08 54 53 50 37 08 54 53 50 38 08 53 53 50 31  // 6.TSP7.TSP8.SSP1
    097A: 08 53 53 50 32 08 53 53 50 33 08 53 53 50 34 08  // .SSP2.SSP3.SSP4.
    098A: 53 53 50 35 08 53 53 50 36 08 53 53 50 37 08 53  // SSP5.SSP6.SSP7.S
    099A: 53 50 38 08 4D 45 4D 53 08 00 48 0B 53 31 44 45  // SP8.MEMS..H.S1DE
    09AA: 08 53 31 41 54 08 53 31 50 54 08 53 31 43 54 08  // .S1AT.S1PT.S1CT.
    09BA: 53 31 48 54 08 53 32 44 45 08 53 32 41 54 08 53  // S1HT.S2DE.S2AT.S
    09CA: 32 50 54 08 53 32 43 54 08 53 32 48 54 08 53 33  // 2PT.S2CT.S2HT.S3
    09DA: 44 45 08 53 33 41 54 08 53 33 50 54 08 53 33 43  // DE.S3AT.S3PT.S3C
    09EA: 54 08 53 33 48 54 08 53 34 44 45 08 53 34 41 54  // T.S3HT.S4DE.S4AT
    09FA: 08 53 34 50 54 08 53 34 43 54 08 53 34 48 54 08  // .S4PT.S4CT.S4HT.
    0A0A: 53 35 44 45 08 53 35 41 54 08 53 35 50 54 08 53  // S5DE.S5AT.S5PT.S
    0A1A: 35 43 54 08 53 35 48 54 08 53 36 44 45 08 53 36  // 5CT.S5HT.S6DE.S6
    0A2A: 41 54 08 53 36 50 54 08 53 36 43 54 08 53 36 48  // AT.S6PT.S6CT.S6H
    0A3A: 54 08 53 37 44 45 08 53 37 41 54 08 53 37 50 54  // T.S7DE.S7AT.S7PT
    0A4A: 08 53 37 43 54 08 53 37 48 54 08 53 31 53 33 08  // .S7CT.S7HT.S1S3.
    0A5A: 53 32 53 33 08 53 33 53 33 08 53 34 53 33 08 53  // S2S3.S3S3.S4S3.S
    0A6A: 35 53 33 08 53 36 53 33 08 53 37 53 33 08 50 53  // 5S3.S6S3.S7S3.PS
    0A7A: 4D 45 08 50 44 54 31 08 50 4C 4D 31 10 50 54 57  // ME.PDT1.PLM1.PTW
    0A8A: 31 10 50 44 54 32 08 50 4C 4D 32 10 50 54 57 32  // 1.PDT2.PLM2.PTW2
    0A9A: 10 44 44 54 31 08 44 44 50 31 08 44 4C 49 31 10  // .DDT1.DDP1.DLI1.
    0AAA: 44 50 4C 31 10 44 54 57 31 10 44 4D 49 31 10 44  // DPL1.DTW1.DMI1.D
    0ABA: 4D 41 31 10 44 4D 54 31 10 44 44 54 32 08 44 44  // MA1.DMT1.DDT2.DD
    0ACA: 50 32 08 44 4C 49 32 10 44 50 4C 32 10 44 54 57  // P2.DLI2.DPL2.DTW
    0ADA: 32 10 44 4D 49 32 10 44 4D 41 32 10 44 4D 54 32  // 2.DMI2.DMA2.DMT2
    0AEA: 10 57 49 46 45 08 44 4F 4D 31 08 4C 49 4D 31 10  // .WIFE.DOM1.LIM1.
    0AFA: 54 49 4D 31 10 44 4F 4D 32 08 4C 49 4D 32 10 54  // TIM1.DOM2.LIM2.T
    0B0A: 49 4D 32 10 44 4F 4D 33 08 4C 49 4D 33 10 54 49  // IM2.DOM3.LIM3.TI
    0B1A: 4D 33 10 54 52 44 30 08 54 52 4C 30 08 54 52 44  // M3.TRD0.TRL0.TRD
    0B2A: 31 08 54 52 4C 31 08 57 44 4D 31 08 43 49 44 31  // 1.TRL1.WDM1.CID1
    0B3A: 10 57 44 4D 32 08 43 49 44 32 10 00 08 41 50 50  // .WDM2.CID2...APP
    0B4A: 45 08 4D 50 4C 31 10 4D 50 4C 32 10 53 44 53 30  // E.MPL1.MPL2.SDS0
    0B5A: 08 53 44 53 31 08 53 44 53 32 08 53 44 53 33 08  // .SDS1.SDS2.SDS3.
    0B6A: 53 44 53 34 08 53 44 53 35 08 53 44 53 36 08 53  // SDS4.SDS5.SDS6.S
    0B7A: 44 53 37 08 53 44 53 38 08 53 44 53 39 08 53 44  // DS7.SDS8.SDS9.SD
    0B8A: 53 41 08 54 50 4C 42 08 54 50 4C 48 10 57 54 56  // SA.TPLB.TPLH.WTV
    0B9A: 58 08 57 49 54 58 08 47 50 54 44 08 47 44 42 54  // X.WITX.GPTD.GDBT
    0BAA: 10 55 54 4B 58 08 53 50 54 44 08 47 45 58 4E 08  // .UTKX.SPTD.GEXN.
    0BBA: 54 42 54 53 08 41 49 43 53 08 54 41 52 53 08 46  // TBTS.AICS.TARS.F
    0BCA: 50 41 54 08 46 50 45 4E 08 46 50 47 4E 20 46 50  // PAT.FPEN.FPGN FP
    0BDA: 4C 56 08 43 50 41 44 10 43 50 41 42 08 54 4E 41  // LV.CPAD.CPAB.TNA
    0BEA: 54 08 43 50 47 4E 20 43 46 32 54 08 41 54 4C 42  // T.CPGN CF2T.ATLB
    0BFA: 20 53 44 4D 30 08 53 44 4D 31 08 53 44 4D 32 08  //  SDM0.SDM1.SDM2.
    0C0A: 53 44 4D 33 08 53 44 4D 34 08 53 44 4D 35 08 53  // SDM3.SDM4.SDM5.S
    0C1A: 44 4D 36 08 53 44 4D 37 08 53 44 4D 38 08 53 44  // DM6.SDM7.SDM8.SD
    0C2A: 4D 39 08 53 44 4D 41 08 55 53 54 50 08 53 53 48  // M9.SDMA.USTP.SSH
    0C3A: 49 10 53 53 4C 49 10 53 53 44 49 10 46 4D 48 49  // I.SSLI.SSDI.FMHI
    0C4A: 10 46 4D 4C 49 10 46 4D 44 49 10 46 50 48 49 10  // .FMLI.FMDI.FPHI.
    0C5A: 46 50 4C 49 10 46 50 44 49 10 4D 30 43 49 10 4D  // FPLI.FPDI.M0CI.M
    0C6A: 31 43 49 10 4D 30 43 53 10 4D 31 43 53 10 4D 30  // 1CI.M0CS.M1CS.M0
    0C7A: 43 55 10 4D 31 43 55 10 43 41 4D 54 08 44 53 34  // CU.M1CU.CAMT.DS4
    0C8A: 44 10 49 56 44 46 08 45 49 44 46 08 47 46 50 53  // D.IVDF.EIDF.GFPS
    0C9A: 20 47 46 50 49 20 47 4E 53 4D 08 47 4E 53 43 08  //  GFPI GNSM.GNSC.
    0CAA: 47 47 4E 52 20 47 42 54 57 20 47 42 54 4B 20 47  // GGNR GBTW GBTK G
    0CBA: 42 54 49 20 47 50 44 49 20 47 50 4C 49 20 43 4C  // BTI GPDI GPLI CL
    0CCA: 30 30 08 43 4C 30 31 08 43 4C 30 32 08 43 4C 30  // 00.CL01.CL02.CL0
    0CDA: 33 08 4C 30 45 4E 08 4C 31 45 4E 08 4C 32 45 4E  // 3.L0EN.L1EN.L2EN
    0CEA: 08 4C 33 45 4E 08 43 44 49 56 08 43 30 54 50 08  // .L3EN.CDIV.C0TP.
    0CFA: 43 30 43 56 08 43 30 47 50 08 43 30 49 42 08 43  // C0CV.C0GP.C0IB.C
    0D0A: 30 49 41 10 43 30 50 30 08 43 30 50 31 08 43 30  // 0IA.C0P0.C0P1.C0
    0D1A: 50 32 08 43 30 50 33 08 43 30 47 30 08 43 30 47  // P2.C0P3.C0G0.C0G
    0D2A: 31 08 43 30 47 32 08 43 30 47 33 08 43 30 46 30  // 1.C0G2.C0G3.C0F0
    0D3A: 08 43 30 46 31 08 43 30 46 32 08 43 30 46 33 08  // .C0F1.C0F2.C0F3.
    0D4A: 43 30 41 30 08 43 30 41 31 08 43 30 41 32 08 43  // C0A0.C0A1.C0A2.C
    0D5A: 30 41 33 08 43 30 49 30 08 43 30 49 31 08 43 30  // 0A3.C0I0.C0I1.C0
    0D6A: 49 32 08 43 30 49 33 08 43 30 50 4C 08 43 31 54  // I2.C0I3.C0PL.C1T
    0D7A: 50 08 43 31 43 56 08 43 31 47 50 08 43 31 49 42  // P.C1CV.C1GP.C1IB
    0D8A: 08 43 31 49 41 10 43 31 50 30 08 43 31 50 31 08  // .C1IA.C1P0.C1P1.
    0D9A: 43 31 50 32 08 43 31 50 33 08 43 31 47 30 08 43  // C1P2.C1P3.C1G0.C
    0DAA: 31 47 31 08 43 31 47 32 08 43 31 47 33 08 43 31  // 1G1.C1G2.C1G3.C1
    0DBA: 46 30 08 43 31 46 31 08 43 31 46 32 08 43 31 46  // F0.C1F1.C1F2.C1F
    0DCA: 33 08 43 31 41 30 08 43 31 41 31 08 43 31 41 32  // 3.C1A0.C1A1.C1A2
    0DDA: 08 43 31 41 33 08 43 31 49 30 08 43 31 49 31 08  // .C1A3.C1I0.C1I1.
    0DEA: 43 31 49 32 08 43 31 49 33 08 43 31 50 4C 08 43  // C1I2.C1I3.C1PL.C
    0DFA: 32 54 50 08 43 32 43 56 08 43 32 47 50 08 43 32  // 2TP.C2CV.C2GP.C2
    0E0A: 49 42 08 43 32 49 41 10 43 32 50 30 08 43 32 50  // IB.C2IA.C2P0.C2P
    0E1A: 31 08 43 32 50 32 08 43 32 50 33 08 43 32 47 30  // 1.C2P2.C2P3.C2G0
    0E2A: 08 43 32 47 31 08 43 32 47 32 08 43 32 47 33 08  // .C2G1.C2G2.C2G3.
    0E3A: 43 32 46 30 08 43 32 46 31 08 43 32 46 32 08 43  // C2F0.C2F1.C2F2.C
    0E4A: 32 46 33 08 43 32 41 30 08 43 32 41 31 08 43 32  // 2F3.C2A0.C2A1.C2
    0E5A: 41 32 08 43 32 41 33 08 43 32 49 30 08 43 32 49  // A2.C2A3.C2I0.C2I
    0E6A: 31 08 43 32 49 32 08 43 32 49 33 08 43 32 50 4C  // 1.C2I2.C2I3.C2PL
    0E7A: 08 43 33 54 50 08 43 33 43 56 08 43 33 47 50 08  // .C3TP.C3CV.C3GP.
    0E8A: 43 33 49 42 08 43 33 49 41 10 43 33 50 30 08 43  // C3IB.C3IA.C3P0.C
    0E9A: 33 50 31 08 43 33 50 32 08 43 33 50 33 08 43 33  // 3P1.C3P2.C3P3.C3
    0EAA: 47 30 08 43 33 47 31 08 43 33 47 32 08 43 33 47  // G0.C3G1.C3G2.C3G
    0EBA: 33 08 43 33 46 30 08 43 33 46 31 08 43 33 46 32  // 3.C3F0.C3F1.C3F2
    0ECA: 08 43 33 46 33 08 43 33 41 30 08 43 33 41 31 08  // .C3F3.C3A0.C3A1.
    0EDA: 43 33 41 32 08 43 33 41 33 08 43 33 49 30 08 43  // C3A2.C3A3.C3I0.C
    0EEA: 33 49 31 08 43 33 49 32 08 43 33 49 33 08 43 33  // 3I1.C3I2.C3I3.C3
    0EFA: 50 4C 08 4C 30 53 4D 08 4C 30 48 30 08 4C 30 48  // PL.L0SM.L0H0.L0H
    0F0A: 31 08 4C 30 48 32 08 4C 30 48 33 08 4C 30 48 34  // 1.L0H2.L0H3.L0H4
    0F1A: 08 4C 30 48 35 08 4C 30 48 36 08 4C 30 48 37 08  // .L0H5.L0H6.L0H7.
    0F2A: 4C 30 48 38 08 4C 30 50 4C 08 4C 30 4D 30 08 4C  // L0H8.L0PL.L0M0.L
    0F3A: 30 4D 31 08 4C 30 4D 32 08 4C 30 4D 33 08 4C 30  // 0M1.L0M2.L0M3.L0
    0F4A: 4D 34 08 4C 30 4D 35 08 4C 30 4D 36 08 4C 30 4D  // M4.L0M5.L0M6.L0M
    0F5A: 37 08 4C 30 4D 38 08 4C 30 4D 39 08 4C 30 4D 41  // 7.L0M8.L0M9.L0MA
    0F6A: 08 4C 30 4D 42 08 4C 30 4D 43 08 4C 30 4D 44 08  // .L0MB.L0MC.L0MD.
    0F7A: 4C 30 4D 45 08 4C 30 4D 46 08 4C 30 44 49 08 4C  // L0ME.L0MF.L0DI.L
    0F8A: 30 42 53 08 4C 30 41 30 10 4C 30 41 31 10 4C 30  // 0BS.L0A0.L0A1.L0
    0F9A: 41 32 10 4C 30 41 33 10 4C 30 41 34 10 4C 30 41  // A2.L0A3.L0A4.L0A
    0FAA: 35 10 4C 30 41 36 10 4C 30 41 37 10 4C 30 41 38  // 5.L0A6.L0A7.L0A8
    0FBA: 10 4C 30 41 39 10 4C 30 41 41 10 4C 30 41 42 10  // .L0A9.L0AA.L0AB.
    0FCA: 4C 30 44 30 08 4C 30 44 31 08 4C 30 44 32 08 4C  // L0D0.L0D1.L0D2.L
    0FDA: 30 44 33 08 4C 30 44 34 08 4C 30 44 35 08 4C 30  // 0D3.L0D4.L0D5.L0
    0FEA: 44 36 08 4C 30 44 37 08 4C 30 44 38 08 4C 30 44  // D6.L0D7.L0D8.L0D
    0FFA: 39 08 4C 30 44 41 08 4C 30 44 42 08 4C 30 44 56  // 9.L0DA.L0DB.L0DV
    100A: 08 4C 30 43 56 08 4C 30 4C 55 08 4C 30 4E 4C 08  // .L0CV.L0LU.L0NL.
    101A: 4C 30 45 45 08 4C 30 56 43 08 4C 30 46 53 08 4C  // L0EE.L0VC.L0FS.L
    102A: 30 44 47 08 4C 30 43 30 08 4C 30 43 31 08 4C 30  // 0DG.L0C0.L0C1.L0
    103A: 43 32 08 4C 30 43 33 08 4C 30 43 4B 20 4C 30 43  // C2.L0C3.L0CK L0C
    104A: 4C 08 4C 31 53 4D 08 4C 31 48 30 08 4C 31 48 31  // L.L1SM.L1H0.L1H1
    105A: 08 4C 31 48 32 08 4C 31 48 33 08 4C 31 48 34 08  // .L1H2.L1H3.L1H4.
    106A: 4C 31 48 35 08 4C 31 48 36 08 4C 31 48 37 08 4C  // L1H5.L1H6.L1H7.L
    107A: 31 48 38 08 4C 31 50 4C 08 4C 31 4D 30 08 4C 31  // 1H8.L1PL.L1M0.L1
    108A: 4D 31 08 4C 31 4D 32 08 4C 31 4D 33 08 4C 31 4D  // M1.L1M2.L1M3.L1M
    109A: 34 08 4C 31 4D 35 08 4C 31 4D 36 08 4C 31 4D 37  // 4.L1M5.L1M6.L1M7
    10AA: 08 4C 31 4D 38 08 4C 31 4D 39 08 4C 31 4D 41 08  // .L1M8.L1M9.L1MA.
    10BA: 4C 31 4D 42 08 4C 31 4D 43 08 4C 31 4D 44 08 4C  // L1MB.L1MC.L1MD.L
    10CA: 31 4D 45 08 4C 31 4D 46 08 4C 31 44 49 08 4C 31  // 1ME.L1MF.L1DI.L1
    10DA: 42 53 08 4C 31 41 30 10 4C 31 41 31 10 4C 31 41  // BS.L1A0.L1A1.L1A
    10EA: 32 10 4C 31 41 33 10 4C 31 41 34 10 4C 31 41 35  // 2.L1A3.L1A4.L1A5
    10FA: 10 4C 31 41 36 10 4C 31 41 37 10 4C 31 41 38 10  // .L1A6.L1A7.L1A8.
    110A: 4C 31 41 39 10 4C 31 41 41 10 4C 31 41 42 10 4C  // L1A9.L1AA.L1AB.L
    111A: 31 44 30 08 4C 31 44 31 08 4C 31 44 32 08 4C 31  // 1D0.L1D1.L1D2.L1
    112A: 44 33 08 4C 31 44 34 08 4C 31 44 35 08 4C 31 44  // D3.L1D4.L1D5.L1D
    113A: 36 08 4C 31 44 37 08 4C 31 44 38 08 4C 31 44 39  // 6.L1D7.L1D8.L1D9
    114A: 08 4C 31 44 41 08 4C 31 44 42 08 4C 31 44 56 08  // .L1DA.L1DB.L1DV.
    115A: 4C 31 43 56 08 4C 31 4C 55 08 4C 31 4E 4C 08 4C  // L1CV.L1LU.L1NL.L
    116A: 31 45 45 08 4C 31 56 43 08 4C 31 46 53 08 4C 31  // 1EE.L1VC.L1FS.L1
    117A: 44 47 08 4C 31 43 30 08 4C 31 43 31 08 4C 31 43  // DG.L1C0.L1C1.L1C
    118A: 32 08 4C 31 43 33 08 4C 31 43 4B 20 4C 31 43 4C  // 2.L1C3.L1CK L1CL
    119A: 08 4C 32 53 4D 08 4C 32 48 30 08 4C 32 48 31 08  // .L2SM.L2H0.L2H1.
    11AA: 4C 32 48 32 08 4C 32 48 33 08 4C 32 48 34 08 4C  // L2H2.L2H3.L2H4.L
    11BA: 32 48 35 08 4C 32 48 36 08 4C 32 48 37 08 4C 32  // 2H5.L2H6.L2H7.L2
    11CA: 48 38 08 4C 32 50 4C 08 4C 32 4D 30 08 4C 32 4D  // H8.L2PL.L2M0.L2M
    11DA: 31 08 4C 32 4D 32 08 4C 32 4D 33 08 4C 32 4D 34  // 1.L2M2.L2M3.L2M4
    11EA: 08 4C 32 4D 35 08 4C 32 4D 36 08 4C 32 4D 37 08  // .L2M5.L2M6.L2M7.
    11FA: 4C 32 4D 38 08 4C 32 4D 39 08 4C 32 4D 41 08 4C  // L2M8.L2M9.L2MA.L
    120A: 32 4D 42 08 4C 32 4D 43 08 4C 32 4D 44 08 4C 32  // 2MB.L2MC.L2MD.L2
    121A: 4D 45 08 4C 32 4D 46 08 4C 32 44 49 08 4C 32 42  // ME.L2MF.L2DI.L2B
    122A: 53 08 4C 32 41 30 10 4C 32 41 31 10 4C 32 41 32  // S.L2A0.L2A1.L2A2
    123A: 10 4C 32 41 33 10 4C 32 41 34 10 4C 32 41 35 10  // .L2A3.L2A4.L2A5.
    124A: 4C 32 41 36 10 4C 32 41 37 10 4C 32 41 38 10 4C  // L2A6.L2A7.L2A8.L
    125A: 32 41 39 10 4C 32 41 41 10 4C 32 41 42 10 4C 32  // 2A9.L2AA.L2AB.L2
    126A: 44 30 08 4C 32 44 31 08 4C 32 44 32 08 4C 32 44  // D0.L2D1.L2D2.L2D
    127A: 33 08 4C 32 44 34 08 4C 32 44 35 08 4C 32 44 36  // 3.L2D4.L2D5.L2D6
    128A: 08 4C 32 44 37 08 4C 32 44 38 08 4C 32 44 39 08  // .L2D7.L2D8.L2D9.
    129A: 4C 32 44 41 08 4C 32 44 42 08 4C 32 44 56 08 4C  // L2DA.L2DB.L2DV.L
    12AA: 32 43 56 08 4C 32 4C 55 08 4C 32 4E 4C 08 4C 32  // 2CV.L2LU.L2NL.L2
    12BA: 45 45 08 4C 32 56 43 08 4C 32 46 53 08 4C 32 44  // EE.L2VC.L2FS.L2D
    12CA: 47 08 4C 32 43 30 08 4C 32 43 31 08 4C 32 43 32  // G.L2C0.L2C1.L2C2
    12DA: 08 4C 32 43 33 08 4C 32 43 4B 20 4C 32 43 4C 08  // .L2C3.L2CK L2CL.
    12EA: 4C 33 53 4D 08 4C 33 48 30 08 4C 33 48 31 08 4C  // L3SM.L3H0.L3H1.L
    12FA: 33 48 32 08 4C 33 48 33 08 4C 33 48 34 08 4C 33  // 3H2.L3H3.L3H4.L3
    130A: 48 35 08 4C 33 48 36 08 4C 33 48 37 08 4C 33 48  // H5.L3H6.L3H7.L3H
    131A: 38 08 4C 33 50 4C 08 4C 33 4D 30 08 4C 33 4D 31  // 8.L3PL.L3M0.L3M1
    132A: 08 4C 33 4D 32 08 4C 33 4D 33 08 4C 33 4D 34 08  // .L3M2.L3M3.L3M4.
    133A: 4C 33 4D 35 08 4C 33 4D 36 08 4C 33 4D 37 08 4C  // L3M5.L3M6.L3M7.L
    134A: 33 4D 38 08 4C 33 4D 39 08 4C 33 4D 41 08 4C 33  // 3M8.L3M9.L3MA.L3
    135A: 4D 42 08 4C 33 4D 43 08 4C 33 4D 44 08 4C 33 4D  // MB.L3MC.L3MD.L3M
    136A: 45 08 4C 33 4D 46 08 4C 33 44 49 08 4C 33 42 53  // E.L3MF.L3DI.L3BS
    137A: 08 4C 33 41 30 10 4C 33 41 31 10 4C 33 41 32 10  // .L3A0.L3A1.L3A2.
    138A: 4C 33 41 33 10 4C 33 41 34 10 4C 33 41 35 10 4C  // L3A3.L3A4.L3A5.L
    139A: 33 41 36 10 4C 33 41 37 10 4C 33 41 38 10 4C 33  // 3A6.L3A7.L3A8.L3
    13AA: 41 39 10 4C 33 41 41 10 4C 33 41 42 10 4C 33 44  // A9.L3AA.L3AB.L3D
    13BA: 30 08 4C 33 44 31 08 4C 33 44 32 08 4C 33 44 33  // 0.L3D1.L3D2.L3D3
    13CA: 08 4C 33 44 34 08 4C 33 44 35 08 4C 33 44 36 08  // .L3D4.L3D5.L3D6.
    13DA: 4C 33 44 37 08 4C 33 44 38 08 4C 33 44 39 08 4C  // L3D7.L3D8.L3D9.L
    13EA: 33 44 41 08 4C 33 44 42 08 4C 33 44 56 08 4C 33  // 3DA.L3DB.L3DV.L3
    13FA: 43 56 08 4C 33 4C 55 08 4C 33 4E 4C 08 4C 33 45  // CV.L3LU.L3NL.L3E
    140A: 45 08 4C 33 56 43 08 4C 33 46 53 08 4C 33 44 47  // E.L3VC.L3FS.L3DG
    141A: 08 4C 33 43 30 08 4C 33 43 31 08 4C 33 43 32 08  // .L3C0.L3C1.L3C2.
    142A: 4C 33 43 33 08 4C 33 43 4B 20 4C 33 43 4C 08 45  // L3C3.L3CK L3CL.E
    143A: 43 52 31 08 00 28 49 32 53 43 08 4F 44 56 30 08  // CR1..(I2SC.ODV0.
    144A: 4F 44 56 31 08 4F 44 56 32 08 4F 44 56 33 08 4F  // ODV1.ODV2.ODV3.O
    145A: 44 56 34 08 4F 44 56 35 08 55 42 43 42 20 45 4D  // DV4.ODV5.UBCB EM
    146A: 4F 44 08 57 49 46 43 08 00 38 54 50 4C 53 08 54  // OD.WIFC..8TPLS.T
    147A: 50 44 42 08 54 50 44 48 10 54 50 44 53 08 41 47  // PDB.TPDH.TPDS.AG
    148A: 31 4C 40 04 41 47 31 48 40 04 41 47 32 4C 40 04  // 1L@.AG1H@.AG2L@.
    149A: 41 47 32 48 40 04 41 47 33 4C 40 04 41 47 33 48  // AG2H@.AG3L@.AG3H
    14AA: 40 04 48 45 46 45 08 58 44 43 45 08              // @.HEFE.XDCE.

    Scope (_SB)
    {

    14B6: 10 42 E8 5F 53 42 5F                             // .B._SB_

        Name (PRSA, 
    14BD: 08 50 52 53 41                                   // .PRSA

ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,4,5,6,10,11,12,14,15}
        })

    14C2: 11 09 0A 06 23 78 DC 18 79 00                    // ....#x..y.

        Alias (PRSA, PRSB)

    14CC: 06 50 52 53 41 50 52 53 42                       // .PRSAPRSB

        Alias (PRSA, PRSC)

    14D5: 06 50 52 53 41 50 52 53 43                       // .PRSAPRSC

        Alias (PRSA, PRSD)

    14DE: 06 50 52 53 41 50 52 53 44                       // .PRSAPRSD

        Alias (PRSA, PRSE)

    14E7: 06 50 52 53 41 50 52 53 45                       // .PRSAPRSE

        Alias (PRSA, PRSF)

    14F0: 06 50 52 53 41 50 52 53 46                       // .PRSAPRSF

        Alias (PRSA, PRSG)

    14F9: 06 50 52 53 41 50 52 53 47                       // .PRSAPRSG

        Alias (PRSA, PRSH)

    1502: 06 50 52 53 41 50 52 53 48                       // .PRSAPRSH

        Name (PR00, 
    150B: 08 50 52 30 30                                   // .PR00

Package (0x2A)
        {

    1510: 12 41 26 2A                                      // .A&*

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    1514: 12 0D 04 0C FF FF 01 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1522: 12 0D 04 0C FF FF 01 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    1530: 12 0E 04 0C FF FF 01 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    153F: 12 0E 04 0C FF FF 01 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    154E: 12 0D 04 0C FF FF 04 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    155C: 12 0D 04 0C FF FF 05 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    156A: 12 0D 04 0C FF FF 08 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    1578: 12 0D 04 0C FF FF 1F 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    1586: 12 0D 04 0C FF FF 1E 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001EFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1594: 12 0D 04 0C FF FF 1E 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001EFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    15A2: 12 0E 04 0C FF FF 1E 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001EFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    15B1: 12 0E 04 0C FF FF 1E 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    15C0: 12 0D 04 0C FF FF 1D 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    15CE: 12 0D 04 0C FF FF 1D 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    15DC: 12 0E 04 0C FF FF 1D 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    15EB: 12 0E 04 0C FF FF 1D 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    15FA: 12 0D 04 0C FF FF 1C 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1608: 12 0D 04 0C FF FF 1C 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    1616: 12 0E 04 0C FF FF 1C 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    1625: 12 0E 04 0C FF FF 1C 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    1634: 12 0D 04 0C FF FF 1B 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1642: 12 0D 04 0C FF FF 1B 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    1650: 12 0E 04 0C FF FF 1B 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    165F: 12 0E 04 0C FF FF 1B 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    166E: 12 0D 04 0C FF FF 17 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    167C: 12 0D 04 0C FF FF 16 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    168A: 12 0D 04 0C FF FF 16 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    1698: 12 0E 04 0C FF FF 16 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    16A7: 12 0E 04 0C FF FF 16 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    16B6: 12 0D 04 0C FF FF 15 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    16C4: 12 0D 04 0C FF FF 15 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    16D2: 12 0E 04 0C FF FF 15 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    16E1: 12 0E 04 0C FF FF 15 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    16F0: 12 0D 04 0C FF FF 14 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    16FE: 12 0E 04 0C FF FF 14 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    170D: 12 0D 04 0C FF FF 14 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    171B: 12 0E 04 0C FF FF 14 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    172A: 12 0D 04 0C FF FF 13 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1738: 12 0D 04 0C FF FF 1F 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    1746: 12 0E 04 0C FF FF 1F 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    1755: 12 0E 04 0C FF FF 1F 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKA, 
                Zero
            }
        })

    1764: 12 0D 04 0C FF FF 02 00 00 4C 4E 4B 41 00        // .........LNKA.

        Name (AR00, 
    1772: 08 41 52 30 30                                   // .AR00

Package (0x2A)
        {

    1777: 12 4D 20 2A                                      // .M *

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    177B: 12 0B 04 0C FF FF 01 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x11
            }, 


    1787: 12 0B 04 0C FF FF 01 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    1793: 12 0C 04 0C FF FF 01 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    17A0: 12 0C 04 0C FF FF 01 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    17AD: 12 0B 04 0C FF FF 04 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    17B9: 12 0B 04 0C FF FF 05 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    17C5: 12 0B 04 0C FF FF 08 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    17D1: 12 0B 04 0C FF FF 1F 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x14
            }, 


    17DD: 12 0B 04 0C FF FF 1E 00 00 00 0A 14              // ............

            Package (0x04)
            {
                0x001EFFFF, 
                One, 
                Zero, 
                0x15
            }, 


    17E9: 12 0B 04 0C FF FF 1E 00 01 00 0A 15              // ............

            Package (0x04)
            {
                0x001EFFFF, 
                0x02, 
                Zero, 
                0x16
            }, 


    17F5: 12 0C 04 0C FF FF 1E 00 0A 02 00 0A 16           // .............

            Package (0x04)
            {
                0x001EFFFF, 
                0x03, 
                Zero, 
                0x17
            }, 


    1802: 12 0C 04 0C FF FF 1E 00 0A 03 00 0A 17           // .............

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    180F: 12 0B 04 0C FF FF 1D 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    181B: 12 0B 04 0C FF FF 1D 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    1827: 12 0C 04 0C FF FF 1D 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    1834: 12 0C 04 0C FF FF 1D 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    1841: 12 0B 04 0C FF FF 1C 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    184D: 12 0B 04 0C FF FF 1C 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    1859: 12 0C 04 0C FF FF 1C 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    1866: 12 0C 04 0C FF FF 1C 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    1873: 12 0B 04 0C FF FF 1B 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    187F: 12 0B 04 0C FF FF 1B 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    188B: 12 0C 04 0C FF FF 1B 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    1898: 12 0C 04 0C FF FF 1B 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    18A5: 12 0B 04 0C FF FF 17 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    18B1: 12 0B 04 0C FF FF 16 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                Zero, 
                0x11
            }, 


    18BD: 12 0B 04 0C FF FF 16 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    18C9: 12 0C 04 0C FF FF 16 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    18D6: 12 0C 04 0C FF FF 16 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    18E3: 12 0B 04 0C FF FF 15 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                Zero, 
                0x11
            }, 


    18EF: 12 0B 04 0C FF FF 15 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    18FB: 12 0C 04 0C FF FF 15 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    1908: 12 0C 04 0C FF FF 15 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    1915: 12 0B 04 0C FF FF 14 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    1921: 12 0C 04 0C FF FF 14 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                Zero, 
                0x11
            }, 


    192E: 12 0B 04 0C FF FF 14 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    193A: 12 0C 04 0C FF FF 14 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x14
            }, 


    1947: 12 0B 04 0C FF FF 13 00 00 00 0A 14              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    1953: 12 0B 04 0C FF FF 1F 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    195F: 12 0C 04 0C FF FF 1F 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    196C: 12 0C 04 0C FF FF 1F 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x10
            }
        })

    1979: 12 0B 04 0C FF FF 02 00 00 00 0A 10              // ............

        Name (PR01, 
    1985: 08 50 52 30 31                                   // .PR01

Package (0x04)
        {

    198A: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    198D: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1999: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    19A5: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    19B2: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR01, 
    19BF: 08 41 52 30 31                                   // .AR01

Package (0x04)
        {

    19C4: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    19C7: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    19D1: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    19DB: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    19E6: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR02, 
    19F1: 08 50 52 30 32                                   // .PR02

Package (0x04)
        {

    19F6: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


    19F9: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


    1A05: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


    1A11: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

    1A1E: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR02, 
    1A2B: 08 41 52 30 32                                   // .AR02

Package (0x04)
        {

    1A30: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


    1A33: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


    1A3D: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


    1A47: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

    1A52: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR03, 
    1A5D: 08 50 52 30 33                                   // .PR03

Package (0x04)
        {

    1A62: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


    1A65: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    1A71: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


    1A7D: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

    1A8A: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR03, 
    1A97: 08 41 52 30 33                                   // .AR03

Package (0x04)
        {

    1A9C: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


    1A9F: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    1AA9: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


    1AB3: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

    1ABE: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR0C, 
    1AC9: 08 50 52 30 43                                   // .PR0C

Package (0x04)
        {

    1ACE: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    1AD1: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1ADD: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    1AE9: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    1AF6: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR0C, 
    1B03: 08 41 52 30 43                                   // .AR0C

Package (0x04)
        {

    1B08: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    1B0B: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    1B15: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    1B1F: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    1B2A: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR0D, 
    1B35: 08 50 52 30 44                                   // .PR0D

Package (0x04)
        {

    1B3A: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


    1B3D: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


    1B49: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


    1B55: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

    1B62: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR0D, 
    1B6F: 08 41 52 30 44                                   // .AR0D

Package (0x04)
        {

    1B74: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


    1B77: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


    1B81: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


    1B8B: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

    1B96: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR0E, 
    1BA1: 08 50 52 30 45                                   // .PR0E

Package (0x04)
        {

    1BA6: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


    1BA9: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    1BB5: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


    1BC1: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

    1BCE: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR0E, 
    1BDB: 08 41 52 30 45                                   // .AR0E

Package (0x04)
        {

    1BE0: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


    1BE3: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    1BED: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


    1BF7: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

    1C02: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR0F, 
    1C0D: 08 50 52 30 46                                   // .PR0F

Package (0x04)
        {

    1C12: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


    1C15: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


    1C21: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


    1C2D: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

    1C3A: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR0F, 
    1C47: 08 41 52 30 46                                   // .AR0F

Package (0x04)
        {

    1C4C: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


    1C4F: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


    1C59: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


    1C63: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

    1C6E: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR10, 
    1C79: 08 50 52 31 30                                   // .PR10

Package (0x04)
        {

    1C7E: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    1C81: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1C8D: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    1C99: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    1CA6: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR10, 
    1CB3: 08 41 52 31 30                                   // .AR10

Package (0x04)
        {

    1CB8: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    1CBB: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    1CC5: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    1CCF: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    1CDA: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR04, 
    1CE5: 08 50 52 30 34                                   // .PR04

Package (0x04)
        {

    1CEA: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    1CED: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1CF9: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    1D05: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    1D12: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR04, 
    1D1F: 08 41 52 30 34                                   // .AR04

Package (0x04)
        {

    1D24: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    1D27: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    1D31: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    1D3B: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    1D46: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR05, 
    1D51: 08 50 52 30 35                                   // .PR05

Package (0x04)
        {

    1D56: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


    1D59: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


    1D65: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


    1D71: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

    1D7E: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR05, 
    1D8B: 08 41 52 30 35                                   // .AR05

Package (0x04)
        {

    1D90: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


    1D93: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


    1D9D: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


    1DA7: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

    1DB2: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR06, 
    1DBD: 08 50 52 30 36                                   // .PR06

Package (0x04)
        {

    1DC2: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


    1DC5: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    1DD1: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


    1DDD: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

    1DEA: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR06, 
    1DF7: 08 41 52 30 36                                   // .AR06

Package (0x04)
        {

    1DFC: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


    1DFF: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    1E09: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


    1E13: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

    1E1E: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR07, 
    1E29: 08 50 52 30 37                                   // .PR07

Package (0x04)
        {

    1E2E: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


    1E31: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


    1E3D: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


    1E49: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

    1E56: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR07, 
    1E63: 08 41 52 30 37                                   // .AR07

Package (0x04)
        {

    1E68: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


    1E6B: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


    1E75: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


    1E7F: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

    1E8A: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR08, 
    1E95: 08 50 52 30 38                                   // .PR08

Package (0x04)
        {

    1E9A: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    1E9D: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    1EA9: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    1EB5: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    1EC2: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR08, 
    1ECF: 08 41 52 30 38                                   // .AR08

Package (0x04)
        {

    1ED4: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    1ED7: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    1EE1: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    1EEB: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    1EF6: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR09, 
    1F01: 08 50 52 30 39                                   // .PR09

Package (0x04)
        {

    1F06: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


    1F09: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


    1F15: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


    1F21: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

    1F2E: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR09, 
    1F3B: 08 41 52 30 39                                   // .AR09

Package (0x04)
        {

    1F40: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


    1F43: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


    1F4D: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


    1F57: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

    1F62: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR0A, 
    1F6D: 08 50 52 30 41                                   // .PR0A

Package (0x04)
        {

    1F72: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


    1F75: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    1F81: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


    1F8D: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

    1F9A: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR0A, 
    1FA7: 08 41 52 30 41                                   // .AR0A

Package (0x04)
        {

    1FAC: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


    1FAF: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    1FB9: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


    1FC3: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

    1FCE: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR0B, 
    1FD9: 08 50 52 30 42                                   // .PR0B

Package (0x04)
        {

    1FDE: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


    1FE1: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


    1FED: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


    1FF9: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

    2006: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR0B, 
    2013: 08 41 52 30 42                                   // .AR0B

Package (0x04)
        {

    2018: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


    201B: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


    2025: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


    202F: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

    203A: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR14, 
    2045: 08 50 52 31 34                                   // .PR14

Package (0x04)
        {

    204A: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    204D: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    2059: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    2065: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    2072: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR14, 
    207F: 08 41 52 31 34                                   // .AR14

Package (0x04)
        {

    2084: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    2087: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    2091: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    209B: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    20A6: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR15, 
    20B1: 08 50 52 31 35                                   // .PR15

Package (0x04)
        {

    20B6: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


    20B9: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


    20C5: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


    20D1: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

    20DE: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR15, 
    20EB: 08 41 52 31 35                                   // .AR15

Package (0x04)
        {

    20F0: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


    20F3: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


    20FD: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


    2107: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

    2112: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR16, 
    211D: 08 50 52 31 36                                   // .PR16

Package (0x04)
        {

    2122: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


    2125: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    2131: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


    213D: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

    214A: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR16, 
    2157: 08 41 52 31 36                                   // .AR16

Package (0x04)
        {

    215C: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


    215F: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    2169: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


    2173: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

    217E: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR17, 
    2189: 08 50 52 31 37                                   // .PR17

Package (0x04)
        {

    218E: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


    2191: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


    219D: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


    21A9: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

    21B6: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR17, 
    21C3: 08 41 52 31 37                                   // .AR17

Package (0x04)
        {

    21C8: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


    21CB: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


    21D5: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


    21DF: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

    21EA: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR11, 
    21F5: 08 50 52 31 31                                   // .PR11

Package (0x04)
        {

    21FA: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


    21FD: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


    2209: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


    2215: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

    2222: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR11, 
    222F: 08 41 52 31 31                                   // .AR11

Package (0x04)
        {

    2234: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


    2237: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


    2241: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


    224B: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

    2256: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR12, 
    2261: 08 50 52 31 32                                   // .PR12

Package (0x04)
        {

    2266: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


    2269: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    2275: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


    2281: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

    228E: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR12, 
    229B: 08 41 52 31 32                                   // .AR12

Package (0x04)
        {

    22A0: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


    22A3: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    22AD: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


    22B7: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

    22C2: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR13, 
    22CD: 08 50 52 31 33                                   // .PR13

Package (0x04)
        {

    22D2: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


    22D5: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


    22E1: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


    22ED: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

    22FA: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR13, 
    2307: 08 41 52 31 33                                   // .AR13

Package (0x04)
        {

    230C: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


    230F: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


    2319: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


    2323: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
    }


    232E: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

    Scope (_SB)
    {

    2339: 10 8B 04 05 5F 53 42 5F                          // ...._SB_

        Device (PCI0)
        {

    2341: 5B 82 82 04 05 50 43 49 30                       // [....PCI0

            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID

    234A: 08 5F 48 49 44 0C 41 D0 0A 08                    // ._HID.A...

            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID

    2354: 08 5F 43 49 44 0C 41 D0 0A 03                    // ._CID.A...

            Name (_ADR, Zero)  // _ADR: Address

    235E: 08 5F 41 44 52 00                                // ._ADR.

            Method (^BN00, 0, NotSerialized)
            {

    2364: 14 09 5E 42 4E 30 30 00                          // ..^BN00.

                Return (Zero)
            }


    236C: A4 00                                            // ..

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {

    236E: 14 0B 5F 42 42 4E 00                             // .._BBN.

                Return (BN00 ())
            }


    2375: A4 42 4E 30 30                                   // .BN00

            Name (_UID, Zero)  // _UID: Unique ID

    237A: 08 5F 55 49 44 00                                // ._UID.

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    2380: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

    2387: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR00) /* \_SB_.AR00 */
                }


    238D: A4 41 52 30 30                                   // .AR00

                Return (PR00) /* \_SB_.PR00 */
            }


    2392: A4 50 52 30 30                                   // .PR00

            OperationRegion (HBUS, PCI_Config, Zero, 0x0100)

    2397: 5B 80 48 42 55 53 02 00 0B 00 01                 // [.HBUS.....

            Field (HBUS, DWordAcc, NoLock, Preserve)
            {
                Offset (0x40), 
                EPEN,   1, 
                    ,   11, 
                EPBR,   20, 
                Offset (0x48), 
                MHEN,   1, 
                    ,   14, 
                MHBR,   17, 
                Offset (0x50), 
                GCLK,   1, 
                Offset (0x54), 
                D0EN,   1, 
                D1F2,   1, 
                D1F1,   1, 
                D1F0,   1, 
                Offset (0x60), 
                PXEN,   1, 
                PXSZ,   2, 
                    ,   23, 
                PXBR,   6, 
                Offset (0x68), 
                DIEN,   1, 
                    ,   11, 
                DIBR,   20, 
                Offset (0x70), 
                    ,   20, 
                MEBR,   12, 
                Offset (0x80), 
                PMLK,   1, 
                    ,   3, 
                PM0H,   2, 
                Offset (0x81), 
                PM1L,   2, 
                    ,   2, 
                PM1H,   2, 
                Offset (0x82), 
                PM2L,   2, 
                    ,   2, 
                PM2H,   2, 
                Offset (0x83), 
                PM3L,   2, 
                    ,   2, 
                PM3H,   2, 
                Offset (0x84), 
                PM4L,   2, 
                    ,   2, 
                PM4H,   2, 
                Offset (0x85), 
                PM5L,   2, 
                    ,   2, 
                PM5H,   2, 
                Offset (0x86), 
                PM6L,   2, 
                    ,   2, 
                PM6H,   2, 
                Offset (0x87), 
                Offset (0xA8), 
                    ,   20, 
                TUUD,   19, 
                Offset (0xBC), 
                    ,   20, 
                TLUD,   12, 
                Offset (0xC8), 
                    ,   7, 
                HTSE,   1
            }


    23A2: 5B 81 4F 0E 48 42 55 53 03 00 40 20 45 50 45 4E  // [.O.HBUS..@ EPEN
    23B2: 01 00 0B 45 50 42 52 14 00 20 4D 48 45 4E 01 00  // ...EPBR.. MHEN..
    23C2: 0E 4D 48 42 52 11 00 20 47 43 4C 4B 01 00 1F 44  // .MHBR.. GCLK...D
    23D2: 30 45 4E 01 44 31 46 32 01 44 31 46 31 01 44 31  // 0EN.D1F2.D1F1.D1
    23E2: 46 30 01 00 4C 05 50 58 45 4E 01 50 58 53 5A 02  // F0..L.PXEN.PXSZ.
    23F2: 00 17 50 58 42 52 06 00 20 44 49 45 4E 01 00 0B  // ..PXBR.. DIEN...
    2402: 44 49 42 52 14 00 20 00 14 4D 45 42 52 0C 00 40  // DIBR.. ..MEBR..@
    2412: 06 50 4D 4C 4B 01 00 03 50 4D 30 48 02 00 02 50  // .PMLK...PM0H...P
    2422: 4D 31 4C 02 00 02 50 4D 31 48 02 00 02 50 4D 32  // M1L...PM1H...PM2
    2432: 4C 02 00 02 50 4D 32 48 02 00 02 50 4D 33 4C 02  // L...PM2H...PM3L.
    2442: 00 02 50 4D 33 48 02 00 02 50 4D 34 4C 02 00 02  // ..PM3H...PM4L...
    2452: 50 4D 34 48 02 00 02 50 4D 35 4C 02 00 02 50 4D  // PM4H...PM5L...PM
    2462: 35 48 02 00 02 50 4D 36 4C 02 00 02 50 4D 36 48  // 5H...PM6L...PM6H
    2472: 02 00 02 00 48 10 00 14 54 55 55 44 13 00 49 07  // ....H...TUUD..I.
    2482: 00 14 54 4C 55 44 0C 00 40 04 00 07 48 54 53 45  // ..TLUD..@...HTSE
    2492: 01                                               // .

            Name (BUF0, 
    2493: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    ,, _Y00)
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000CF7,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000CF8,         // Length
                    ,, , TypeStatic, DenseTranslation)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000D00,         // Range Minimum
                    0x0000FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x0000F300,         // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y06, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y07, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y08, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y09, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0A, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000F0000,         // Range Minimum
                    0x000FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00010000,         // Length
                    ,, _Y0D, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0xDFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xE0000000,         // Length
                    ,, _Y0E, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000010000, // Range Minimum
                    0x000000000001FFFF, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000010000, // Length
                    ,, _Y0F, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFD000000,         // Range Minimum
                    0xFE7FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x01800000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
            })

    2498: 11 41 22 0B 1C 02 88 0D 00 02 0C 00 00 00 00 00  // .A".............
    24A8: FF 00 00 00 00 01 87 17 00 01 0C 03 00 00 00 00  // ................
    24B8: 00 00 00 00 F7 0C 00 00 00 00 00 00 F8 0C 00 00  // ................
    24C8: 47 01 F8 0C F8 0C 01 08 87 17 00 01 0C 03 00 00  // G...............
    24D8: 00 00 00 0D 00 00 FF FF 00 00 00 00 00 00 00 F3  // ................
    24E8: 00 00 87 17 00 00 0C 03 00 00 00 00 00 00 0A 00  // ................
    24F8: FF FF 0B 00 00 00 00 00 00 00 02 00 87 17 00 00  // ................
    2508: 0C 03 00 00 00 00 00 00 0C 00 FF 3F 0C 00 00 00  // ...........?....
    2518: 00 00 00 40 00 00 87 17 00 00 0C 03 00 00 00 00  // ...@............
    2528: 00 40 0C 00 FF 7F 0C 00 00 00 00 00 00 40 00 00  // .@...........@..
    2538: 87 17 00 00 0C 03 00 00 00 00 00 80 0C 00 FF BF  // ................
    2548: 0C 00 00 00 00 00 00 40 00 00 87 17 00 00 0C 03  // .......@........
    2558: 00 00 00 00 00 C0 0C 00 FF FF 0C 00 00 00 00 00  // ................
    2568: 00 40 00 00 87 17 00 00 0C 03 00 00 00 00 00 00  // .@..............
    2578: 0D 00 FF 3F 0D 00 00 00 00 00 00 40 00 00 87 17  // ...?.......@....
    2588: 00 00 0C 03 00 00 00 00 00 40 0D 00 FF 7F 0D 00  // .........@......
    2598: 00 00 00 00 00 40 00 00 87 17 00 00 0C 03 00 00  // .....@..........
    25A8: 00 00 00 80 0D 00 FF BF 0D 00 00 00 00 00 00 40  // ...............@
    25B8: 00 00 87 17 00 00 0C 03 00 00 00 00 00 C0 0D 00  // ................
    25C8: FF FF 0D 00 00 00 00 00 00 40 00 00 87 17 00 00  // .........@......
    25D8: 0C 03 00 00 00 00 00 00 0E 00 FF 3F 0E 00 00 00  // ...........?....
    25E8: 00 00 00 40 00 00 87 17 00 00 0C 03 00 00 00 00  // ...@............
    25F8: 00 40 0E 00 FF 7F 0E 00 00 00 00 00 00 40 00 00  // .@...........@..
    2608: 87 17 00 00 0C 03 00 00 00 00 00 80 0E 00 FF BF  // ................
    2618: 0E 00 00 00 00 00 00 40 00 00 87 17 00 00 0C 03  // .......@........
    2628: 00 00 00 00 00 C0 0E 00 FF FF 0E 00 00 00 00 00  // ................
    2638: 00 40 00 00 87 17 00 00 0C 03 00 00 00 00 00 00  // .@..............
    2648: 0F 00 FF FF 0F 00 00 00 00 00 00 00 01 00 87 17  // ................
    2658: 00 00 0C 01 00 00 00 00 00 00 00 00 FF FF FF DF  // ................
    2668: 00 00 00 00 00 00 00 E0 8A 2B 00 00 0C 01 00 00  // .........+......
    2678: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 FF FF  // ................
    2688: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    2698: 01 00 00 00 00 00 87 17 00 00 0C 01 00 00 00 00  // ................
    26A8: 00 00 00 FD FF FF 7F FE 00 00 00 00 00 00 80 01  // ................
    26B8: 79 00                                            // y.

            Name (EP_B, Zero)

    26BA: 08 45 50 5F 42 00                                // .EP_B.

            Name (MH_B, Zero)

    26C0: 08 4D 48 5F 42 00                                // .MH_B.

            Name (PC_B, Zero)

    26C6: 08 50 43 5F 42 00                                // .PC_B.

            Name (PC_L, Zero)

    26CC: 08 50 43 5F 4C 00                                // .PC_L.

            Name (DM_B, Zero)

    26D2: 08 44 4D 5F 42 00                                // .DM_B.

            Method (GEPB, 0, Serialized)
            {

    26D8: 14 1E 47 45 50 42 08                             // ..GEPB.

                If (LEqual (EP_B, Zero))
                {

    26DF: A0 12 93 45 50 5F 42 00                          // ...EP_B.

                    ShiftLeft (EPBR, 0x0C, EP_B) /* \_SB_.PCI0.EP_B */
                }


    26E7: 79 45 50 42 52 0A 0C 45 50 5F 42                 // yEPBR..EP_B

                Return (EP_B) /* \_SB_.PCI0.EP_B */
            }


    26F2: A4 45 50 5F 42                                   // .EP_B

            Method (GMHB, 0, Serialized)
            {

    26F7: 14 1E 47 4D 48 42 08                             // ..GMHB.

                If (LEqual (MH_B, Zero))
                {

    26FE: A0 12 93 4D 48 5F 42 00                          // ...MH_B.

                    ShiftLeft (MHBR, 0x0F, MH_B) /* \_SB_.PCI0.MH_B */
                }


    2706: 79 4D 48 42 52 0A 0F 4D 48 5F 42                 // yMHBR..MH_B

                Return (MH_B) /* \_SB_.PCI0.MH_B */
            }


    2711: A4 4D 48 5F 42                                   // .MH_B

            Method (GPCB, 0, Serialized)
            {

    2716: 14 1E 47 50 43 42 08                             // ..GPCB.

                If (LEqual (PC_B, Zero))
                {

    271D: A0 12 93 50 43 5F 42 00                          // ...PC_B.

                    ShiftLeft (PXBR, 0x1A, PC_B) /* \_SB_.PCI0.PC_B */
                }


    2725: 79 50 58 42 52 0A 1A 50 43 5F 42                 // yPXBR..PC_B

                Return (PC_B) /* \_SB_.PCI0.PC_B */
            }


    2730: A4 50 43 5F 42                                   // .PC_B

            Method (GPCL, 0, Serialized)
            {

    2735: 14 21 47 50 43 4C 08                             // .!GPCL.

                If (LEqual (PC_L, Zero))
                {

    273C: A0 15 93 50 43 5F 4C 00                          // ...PC_L.

                    ShiftRight (0x10000000, PXSZ, PC_L) /* \_SB_.PCI0.PC_L */
                }


    2744: 7A 0C 00 00 00 10 50 58 53 5A 50 43 5F 4C        // z.....PXSZPC_L

                Return (PC_L) /* \_SB_.PCI0.PC_L */
            }


    2752: A4 50 43 5F 4C                                   // .PC_L

            Method (GDMB, 0, Serialized)
            {

    2757: 14 1E 47 44 4D 42 08                             // ..GDMB.

                If (LEqual (DM_B, Zero))
                {

    275E: A0 12 93 44 4D 5F 42 00                          // ...DM_B.

                    ShiftLeft (DIBR, 0x0C, DM_B) /* \_SB_.PCI0.DM_B */
                }


    2766: 79 44 49 42 52 0A 0C 44 4D 5F 42                 // yDIBR..DM_B

                Return (DM_B) /* \_SB_.PCI0.DM_B */
            }


    2771: A4 44 4D 5F 42                                   // .DM_B

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (GPCL (), Local0)

    2776: 14 40 37 5F 43 52 53 08 70 47 50 43 4C 60        // .@7_CRS.pGPCL`

                CreateWordField (BUF0, \_SB.PCI0._Y00._MAX, PBMX)  // _MAX: Maximum Base Address
                Store (Subtract (ShiftRight (Local0, 0x14), 0x02), PBMX) /* \_SB_.PCI0._CRS.PBMX */

    2784: 8B 42 55 46 30 0A 0A 50 42 4D 58 70 74 7A 60 0A  // .BUF0..PBMXptz`.
    2794: 14 00 0A 02 00 50 42 4D 58                       // .....PBMX

                CreateWordField (BUF0, \_SB.PCI0._Y00._LEN, PBLN)  // _LEN: Length
                Store (Subtract (ShiftRight (Local0, 0x14), One), PBLN) /* \_SB_.PCI0._CRS.PBLN */

    279D: 8B 42 55 46 30 0A 0E 50 42 4C 4E 70 74 7A 60 0A  // .BUF0..PBLNptz`.
    27AD: 14 00 01 00 50 42 4C 4E                          // ....PBLN

                If (PM1L)
                {

    27B5: A0 16 50 4D 31 4C                                // ..PM1L

                    CreateDWordField (BUF0, \_SB.PCI0._Y01._LEN, C0LN)  // _LEN: Length

    27BB: 8A 42 55 46 30 0A 7C 43 30 4C 4E                 // .BUF0.|C0LN

                    Store (Zero, C0LN) /* \_SB_.PCI0._CRS.C0LN */
                }


    27C6: 70 00 43 30 4C 4E                                // p.C0LN

                If (LEqual (PM1L, One))
                {

    27CC: A0 19 93 50 4D 31 4C 01                          // ...PM1L.

                    CreateBitField (BUF0, \_SB.PCI0._Y01._RW, C0RW)  // _RW_: Read-Write Status

    27D4: 8D 42 55 46 30 0B 58 03 43 30 52 57              // .BUF0.X.C0RW

                    Store (Zero, C0RW) /* \_SB_.PCI0._CRS.C0RW */
                }


    27E0: 70 00 43 30 52 57                                // p.C0RW

                If (PM1H)
                {

    27E6: A0 16 50 4D 31 48                                // ..PM1H

                    CreateDWordField (BUF0, \_SB.PCI0._Y02._LEN, C4LN)  // _LEN: Length

    27EC: 8A 42 55 46 30 0A 96 43 34 4C 4E                 // .BUF0..C4LN

                    Store (Zero, C4LN) /* \_SB_.PCI0._CRS.C4LN */
                }


    27F7: 70 00 43 34 4C 4E                                // p.C4LN

                If (LEqual (PM1H, One))
                {

    27FD: A0 19 93 50 4D 31 48 01                          // ...PM1H.

                    CreateBitField (BUF0, \_SB.PCI0._Y02._RW, C4RW)  // _RW_: Read-Write Status

    2805: 8D 42 55 46 30 0B 28 04 43 34 52 57              // .BUF0.(.C4RW

                    Store (Zero, C4RW) /* \_SB_.PCI0._CRS.C4RW */
                }


    2811: 70 00 43 34 52 57                                // p.C4RW

                If (PM2L)
                {

    2817: A0 16 50 4D 32 4C                                // ..PM2L

                    CreateDWordField (BUF0, \_SB.PCI0._Y03._LEN, C8LN)  // _LEN: Length

    281D: 8A 42 55 46 30 0A B0 43 38 4C 4E                 // .BUF0..C8LN

                    Store (Zero, C8LN) /* \_SB_.PCI0._CRS.C8LN */
                }


    2828: 70 00 43 38 4C 4E                                // p.C8LN

                If (LEqual (PM2L, One))
                {

    282E: A0 19 93 50 4D 32 4C 01                          // ...PM2L.

                    CreateBitField (BUF0, \_SB.PCI0._Y03._RW, C8RW)  // _RW_: Read-Write Status

    2836: 8D 42 55 46 30 0B F8 04 43 38 52 57              // .BUF0...C8RW

                    Store (Zero, C8RW) /* \_SB_.PCI0._CRS.C8RW */
                }


    2842: 70 00 43 38 52 57                                // p.C8RW

                If (PM2H)
                {

    2848: A0 16 50 4D 32 48                                // ..PM2H

                    CreateDWordField (BUF0, \_SB.PCI0._Y04._LEN, CCLN)  // _LEN: Length

    284E: 8A 42 55 46 30 0A CA 43 43 4C 4E                 // .BUF0..CCLN

                    Store (Zero, CCLN) /* \_SB_.PCI0._CRS.CCLN */
                }


    2859: 70 00 43 43 4C 4E                                // p.CCLN

                If (LEqual (PM2H, One))
                {

    285F: A0 19 93 50 4D 32 48 01                          // ...PM2H.

                    CreateBitField (BUF0, \_SB.PCI0._Y04._RW, CCRW)  // _RW_: Read-Write Status

    2867: 8D 42 55 46 30 0B C8 05 43 43 52 57              // .BUF0...CCRW

                    Store (Zero, CCRW) /* \_SB_.PCI0._CRS.CCRW */
                }


    2873: 70 00 43 43 52 57                                // p.CCRW

                If (PM3L)
                {

    2879: A0 16 50 4D 33 4C                                // ..PM3L

                    CreateDWordField (BUF0, \_SB.PCI0._Y05._LEN, D0LN)  // _LEN: Length

    287F: 8A 42 55 46 30 0A E4 44 30 4C 4E                 // .BUF0..D0LN

                    Store (Zero, D0LN) /* \_SB_.PCI0._CRS.D0LN */
                }


    288A: 70 00 44 30 4C 4E                                // p.D0LN

                If (LEqual (PM3L, One))
                {

    2890: A0 19 93 50 4D 33 4C 01                          // ...PM3L.

                    CreateBitField (BUF0, \_SB.PCI0._Y05._RW, D0RW)  // _RW_: Read-Write Status

    2898: 8D 42 55 46 30 0B 98 06 44 30 52 57              // .BUF0...D0RW

                    Store (Zero, D0RW) /* \_SB_.PCI0._CRS.D0RW */
                }


    28A4: 70 00 44 30 52 57                                // p.D0RW

                If (PM3H)
                {

    28AA: A0 16 50 4D 33 48                                // ..PM3H

                    CreateDWordField (BUF0, \_SB.PCI0._Y06._LEN, D4LN)  // _LEN: Length

    28B0: 8A 42 55 46 30 0A FE 44 34 4C 4E                 // .BUF0..D4LN

                    Store (Zero, D4LN) /* \_SB_.PCI0._CRS.D4LN */
                }


    28BB: 70 00 44 34 4C 4E                                // p.D4LN

                If (LEqual (PM3H, One))
                {

    28C1: A0 19 93 50 4D 33 48 01                          // ...PM3H.

                    CreateBitField (BUF0, \_SB.PCI0._Y06._RW, D4RW)  // _RW_: Read-Write Status

    28C9: 8D 42 55 46 30 0B 68 07 44 34 52 57              // .BUF0.h.D4RW

                    Store (Zero, D4RW) /* \_SB_.PCI0._CRS.D4RW */
                }


    28D5: 70 00 44 34 52 57                                // p.D4RW

                If (PM4L)
                {

    28DB: A0 17 50 4D 34 4C                                // ..PM4L

                    CreateDWordField (BUF0, \_SB.PCI0._Y07._LEN, D8LN)  // _LEN: Length

    28E1: 8A 42 55 46 30 0B 18 01 44 38 4C 4E              // .BUF0...D8LN

                    Store (Zero, D8LN) /* \_SB_.PCI0._CRS.D8LN */
                }


    28ED: 70 00 44 38 4C 4E                                // p.D8LN

                If (LEqual (PM4L, One))
                {

    28F3: A0 19 93 50 4D 34 4C 01                          // ...PM4L.

                    CreateBitField (BUF0, \_SB.PCI0._Y07._RW, D8RW)  // _RW_: Read-Write Status

    28FB: 8D 42 55 46 30 0B 38 08 44 38 52 57              // .BUF0.8.D8RW

                    Store (Zero, D8RW) /* \_SB_.PCI0._CRS.D8RW */
                }


    2907: 70 00 44 38 52 57                                // p.D8RW

                If (PM4H)
                {

    290D: A0 17 50 4D 34 48                                // ..PM4H

                    CreateDWordField (BUF0, \_SB.PCI0._Y08._LEN, DCLN)  // _LEN: Length

    2913: 8A 42 55 46 30 0B 32 01 44 43 4C 4E              // .BUF0.2.DCLN

                    Store (Zero, DCLN) /* \_SB_.PCI0._CRS.DCLN */
                }


    291F: 70 00 44 43 4C 4E                                // p.DCLN

                If (LEqual (PM4H, One))
                {

    2925: A0 19 93 50 4D 34 48 01                          // ...PM4H.

                    CreateBitField (BUF0, \_SB.PCI0._Y08._RW, DCRW)  // _RW_: Read-Write Status

    292D: 8D 42 55 46 30 0B 08 09 44 43 52 57              // .BUF0...DCRW

                    Store (Zero, DCRW) /* \_SB_.PCI0._CRS.DCRW */
                }


    2939: 70 00 44 43 52 57                                // p.DCRW

                If (PM5L)
                {

    293F: A0 17 50 4D 35 4C                                // ..PM5L

                    CreateDWordField (BUF0, \_SB.PCI0._Y09._LEN, E0LN)  // _LEN: Length

    2945: 8A 42 55 46 30 0B 4C 01 45 30 4C 4E              // .BUF0.L.E0LN

                    Store (Zero, E0LN) /* \_SB_.PCI0._CRS.E0LN */
                }


    2951: 70 00 45 30 4C 4E                                // p.E0LN

                If (LEqual (PM5L, One))
                {

    2957: A0 19 93 50 4D 35 4C 01                          // ...PM5L.

                    CreateBitField (BUF0, \_SB.PCI0._Y09._RW, E0RW)  // _RW_: Read-Write Status

    295F: 8D 42 55 46 30 0B D8 09 45 30 52 57              // .BUF0...E0RW

                    Store (Zero, E0RW) /* \_SB_.PCI0._CRS.E0RW */
                }


    296B: 70 00 45 30 52 57                                // p.E0RW

                If (PM5H)
                {

    2971: A0 17 50 4D 35 48                                // ..PM5H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0A._LEN, E4LN)  // _LEN: Length

    2977: 8A 42 55 46 30 0B 66 01 45 34 4C 4E              // .BUF0.f.E4LN

                    Store (Zero, E4LN) /* \_SB_.PCI0._CRS.E4LN */
                }


    2983: 70 00 45 34 4C 4E                                // p.E4LN

                If (LEqual (PM5H, One))
                {

    2989: A0 19 93 50 4D 35 48 01                          // ...PM5H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0A._RW, E4RW)  // _RW_: Read-Write Status

    2991: 8D 42 55 46 30 0B A8 0A 45 34 52 57              // .BUF0...E4RW

                    Store (Zero, E4RW) /* \_SB_.PCI0._CRS.E4RW */
                }


    299D: 70 00 45 34 52 57                                // p.E4RW

                If (PM6L)
                {

    29A3: A0 17 50 4D 36 4C                                // ..PM6L

                    CreateDWordField (BUF0, \_SB.PCI0._Y0B._LEN, E8LN)  // _LEN: Length

    29A9: 8A 42 55 46 30 0B 80 01 45 38 4C 4E              // .BUF0...E8LN

                    Store (Zero, E8LN) /* \_SB_.PCI0._CRS.E8LN */
                }


    29B5: 70 00 45 38 4C 4E                                // p.E8LN

                If (LEqual (PM6L, One))
                {

    29BB: A0 19 93 50 4D 36 4C 01                          // ...PM6L.

                    CreateBitField (BUF0, \_SB.PCI0._Y0B._RW, E8RW)  // _RW_: Read-Write Status

    29C3: 8D 42 55 46 30 0B 78 0B 45 38 52 57              // .BUF0.x.E8RW

                    Store (Zero, E8RW) /* \_SB_.PCI0._CRS.E8RW */
                }


    29CF: 70 00 45 38 52 57                                // p.E8RW

                If (PM6H)
                {

    29D5: A0 17 50 4D 36 48                                // ..PM6H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0C._LEN, ECLN)  // _LEN: Length

    29DB: 8A 42 55 46 30 0B 9A 01 45 43 4C 4E              // .BUF0...ECLN

                    Store (Zero, ECLN) /* \_SB_.PCI0._CRS.ECLN */
                }


    29E7: 70 00 45 43 4C 4E                                // p.ECLN

                If (LEqual (PM6H, One))
                {

    29ED: A0 19 93 50 4D 36 48 01                          // ...PM6H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0C._RW, ECRW)  // _RW_: Read-Write Status

    29F5: 8D 42 55 46 30 0B 48 0C 45 43 52 57              // .BUF0.H.ECRW

                    Store (Zero, ECRW) /* \_SB_.PCI0._CRS.ECRW */
                }


    2A01: 70 00 45 43 52 57                                // p.ECRW

                If (PM0H)
                {

    2A07: A0 17 50 4D 30 48                                // ..PM0H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0D._LEN, F0LN)  // _LEN: Length

    2A0D: 8A 42 55 46 30 0B B4 01 46 30 4C 4E              // .BUF0...F0LN

                    Store (Zero, F0LN) /* \_SB_.PCI0._CRS.F0LN */
                }


    2A19: 70 00 46 30 4C 4E                                // p.F0LN

                If (LEqual (PM0H, One))
                {

    2A1F: A0 19 93 50 4D 30 48 01                          // ...PM0H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0D._RW, F0RW)  // _RW_: Read-Write Status

    2A27: 8D 42 55 46 30 0B 18 0D 46 30 52 57              // .BUF0...F0RW

                    Store (Zero, F0RW) /* \_SB_.PCI0._CRS.F0RW */
                }


    2A33: 70 00 46 30 52 57                                // p.F0RW

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MIN, M1MN)  // _MIN: Minimum Base Address

    2A39: 8A 42 55 46 30 0B C2 01 4D 31 4D 4E              // .BUF0...M1MN

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MAX, M1MX)  // _MAX: Maximum Base Address

    2A45: 8A 42 55 46 30 0B C6 01 4D 31 4D 58              // .BUF0...M1MX

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._LEN, M1LN)  // _LEN: Length
                Store (M32L, M1LN) /* \_SB_.PCI0._CRS.M1LN */
                Store (M32B, M1MN) /* \_SB_.PCI0._CRS.M1MN */
                Subtract (Add (M1MN, M1LN), One, M1MX) /* \_SB_.PCI0._CRS.M1MX */

    2A51: 8A 42 55 46 30 0B CE 01 4D 31 4C 4E 70 4D 33 32  // .BUF0...M1LNpM32
    2A61: 4C 4D 31 4C 4E 70 4D 33 32 42 4D 31 4D 4E 74 72  // LM1LNpM32BM1MNtr
    2A71: 4D 31 4D 4E 4D 31 4C 4E 00 01 4D 31 4D 58        // M1MNM1LN..M1MX

                If (LEqual (M64L, Zero))
                {

    2A7F: A0 19 93 4D 36 34 4C 00                          // ...M64L.

                    CreateDWordField (BUF0, \_SB.PCI0._Y0F._LEN, MSLN)  // _LEN: Length

    2A87: 8A 42 55 46 30 0B F8 01 4D 53 4C 4E              // .BUF0...MSLN

                    Store (Zero, MSLN) /* \_SB_.PCI0._CRS.MSLN */
                }

    2A93: 70 00 4D 53 4C 4E                                // p.MSLN

                Else
                {

    2A99: A1 48 04                                         // .H.

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._LEN, M2LN)  // _LEN: Length

    2A9C: 8F 42 55 46 30 0B F8 01 4D 32 4C 4E              // .BUF0...M2LN

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._MIN, M2MN)  // _MIN: Minimum Base Address

    2AA8: 8F 42 55 46 30 0B E0 01 4D 32 4D 4E              // .BUF0...M2MN

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._MAX, M2MX)  // _MAX: Maximum Base Address
                    Store (M64L, M2LN) /* \_SB_.PCI0._CRS.M2LN */
                    Store (M64B, M2MN) /* \_SB_.PCI0._CRS.M2MN */

    2AB4: 8F 42 55 46 30 0B E8 01 4D 32 4D 58 70 4D 36 34  // .BUF0...M2MXpM64
    2AC4: 4C 4D 32 4C 4E 70 4D 36 34 42 4D 32 4D 4E        // LM2LNpM64BM2MN

                    Subtract (Add (M2MN, M2LN), One, M2MX) /* \_SB_.PCI0._CRS.M2MX */
                }


    2AD2: 74 72 4D 32 4D 4E 4D 32 4C 4E 00 01 4D 32 4D 58  // trM2MNM2LN..M2MX

                Return (BUF0) /* \_SB_.PCI0.BUF0 */
            }


    2AE2: A4 42 55 46 30                                   // .BUF0

            Name (GUID, 
    2AE7: 08 47 55 49 44                                   // .GUID

ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */)

    2AEC: 11 13 0A 10 5B 4D DB 33 F7 1F 1C 40 96 57 74 41  // ....[M.3...@.WtA
    2AFC: C0 3D D7 66                                      // .=.f

            Name (SUPP, Zero)

    2B00: 08 53 55 50 50 00                                // .SUPP.

            Name (CTRL, Zero)

    2B06: 08 43 54 52 4C 00                                // .CTRL.

            Name (XCNT, Zero)

    2B0C: 08 58 43 4E 54 00                                // .XCNT.

            Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
            {
                Store (Arg3, Local0)

    2B12: 14 4F 0C 5F 4F 53 43 0C 70 6B 60                 // .O._OSC.pk`

                CreateDWordField (Local0, Zero, CDW1)

    2B1D: 8A 60 00 43 44 57 31                             // .`.CDW1

                CreateDWordField (Local0, 0x04, CDW2)

    2B24: 8A 60 0A 04 43 44 57 32                          // .`..CDW2

                CreateDWordField (Local0, 0x08, CDW3)

    2B2C: 8A 60 0A 08 43 44 57 33                          // .`..CDW3

                If (LAnd (LEqual (Arg0, GUID), NEXP))
                {
                    Store (CDW2, SUPP) /* \_SB_.PCI0.SUPP */
                    Store (CDW3, CTRL) /* \_SB_.PCI0.CTRL */

    2B34: A0 4E 09 90 93 68 47 55 49 44 4E 45 58 50 70 43  // .N...hGUIDNEXPpC
    2B44: 44 57 32 53 55 50 50 70 43 44 57 33 43 54 52 4C  // DW2SUPPpCDW3CTRL

                    If (LAnd (LEqual (TBTS, One), 
    2B54: A0 1C 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (TNAT, One)))
                    {

    2B5D: 93 54 4E 41 54 01                                // .TNAT.

                        And (CTRL, 0xFFFFFFF7, CTRL) /* \_SB_.PCI0.CTRL */
                    }


    2B63: 7B 43 54 52 4C 0C F7 FF FF FF 43 54 52 4C        // {CTRL.....CTRL

                    If (Not (And (CDW1, One)))
                    {

    2B71: A0 25 80 7B 43 44 57 31 01 00 00                 // .%.{CDW1...

                        If (And (CTRL, One))
                        {
                            NHPG ()
                        }


    2B7C: A0 0C 7B 43 54 52 4C 01 00 4E 48 50 47           // ..{CTRL..NHPG

                        If (And (CTRL, 0x04))
                        {
                            NPME ()
                        }
                    }


    2B89: A0 0D 7B 43 54 52 4C 0A 04 00 4E 50 4D 45        // ..{CTRL...NPME

                    If (
    2B97: A0 10 92                                         // ...

LNotEqual (Arg1, One))
                    {

    2B9A: 93 69 01                                         // .i.

                        Or (CDW1, 0x08, CDW1) /* \_SB_.PCI0._OSC.CDW1 */
                    }


    2B9D: 7D 43 44 57 31 0A 08 43 44 57 31                 // }CDW1..CDW1

                    If (
    2BA8: A0 16 92                                         // ...

LNotEqual (CDW3, CTRL))
                    {

    2BAB: 93 43 44 57 33 43 54 52 4C                       // .CDW3CTRL

                        Or (CDW1, 0x10, CDW1) /* \_SB_.PCI0._OSC.CDW1 */
                    }

                    Store (CTRL, CDW3) /* \_SB_.PCI0._OSC.CDW3 */
                    Store (CTRL, OSCC) /* \OSCC */

    2BB4: 7D 43 44 57 31 0A 10 43 44 57 31 70 43 54 52 4C  // }CDW1..CDW1pCTRL
    2BC4: 43 44 57 33 70 43 54 52 4C 4F 53 43 43           // CDW3pCTRLOSCC

                    Return (Local0)
                }

    2BD1: A4 60                                            // .`

                Else
                {
                    Or (CDW1, 0x04, CDW1) /* \_SB_.PCI0._OSC.CDW1 */

    2BD3: A1 0E 7D 43 44 57 31 0A 04 43 44 57 31           // ..}CDW1..CDW1

                    Return (Local0)
                }
            }


    2BE0: A4 60                                            // .`

            Scope (\_SB.PCI0)
            {

    2BE2: 10 45 04 5C 2E 5F 53 42 5F 50 43 49 30           // .E.\._SB_PCI0

                Device (GFX0)
                {

    2BEF: 5B 82 0F 47 46 58 30                             // [..GFX0

                    Name (_ADR, 0x00020000)  // _ADR: Address
                }


    2BF6: 08 5F 41 44 52 0C 00 00 02 00                    // ._ADR.....

                Device (B0D4)
                {

    2C00: 5B 82 26 42 30 44 34                             // [.&B0D4

                    Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                    {

    2C07: 14 16 5F 44 53 4D 0C                             // .._DSM.

                        If (PCIC (Arg0))
                        {

    2C0E: A0 0F 50 43 49 43 68                             // ..PCICh

                            Return (PCID (Arg0, Arg1, Arg2, Arg3))
                        }
                    }


    2C15: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Name (_ADR, 0x00040000)  // _ADR: Address
                }
            }


    2C1E: 08 5F 41 44 52 0C 00 00 04 00                    // ._ADR.....

            Scope (\_SB.PCI0)
            {

    2C28: 10 4C 16 5C 2E 5F 53 42 5F 50 43 49 30           // .L.\._SB_PCI0

                Name (PALK, Zero)

    2C35: 08 50 41 4C 4B 00                                // .PALK.

                Name (PA0H, Zero)

    2C3B: 08 50 41 30 48 00                                // .PA0H.

                Name (PA1H, Zero)

    2C41: 08 50 41 31 48 00                                // .PA1H.

                Name (PA1L, Zero)

    2C47: 08 50 41 31 4C 00                                // .PA1L.

                Name (PA2H, Zero)

    2C4D: 08 50 41 32 48 00                                // .PA2H.

                Name (PA2L, Zero)

    2C53: 08 50 41 32 4C 00                                // .PA2L.

                Name (PA3H, Zero)

    2C59: 08 50 41 33 48 00                                // .PA3H.

                Name (PA3L, Zero)

    2C5F: 08 50 41 33 4C 00                                // .PA3L.

                Name (PA4H, Zero)

    2C65: 08 50 41 34 48 00                                // .PA4H.

                Name (PA4L, Zero)

    2C6B: 08 50 41 34 4C 00                                // .PA4L.

                Name (PA5H, Zero)

    2C71: 08 50 41 35 48 00                                // .PA5H.

                Name (PA5L, Zero)

    2C77: 08 50 41 35 4C 00                                // .PA5L.

                Name (PA6H, Zero)

    2C7D: 08 50 41 36 48 00                                // .PA6H.

                Name (PA6L, Zero)

    2C83: 08 50 41 36 4C 00                                // .PA6L.

                Method (NPTS, 1, NotSerialized)
                {
                    Store (PM0H, PA0H) /* \_SB_.PCI0.PA0H */
                    Store (PMLK, PALK) /* \_SB_.PCI0.PALK */
                    Store (PM1H, PA1H) /* \_SB_.PCI0.PA1H */
                    Store (PM1L, PA1L) /* \_SB_.PCI0.PA1L */
                    Store (PM2H, PA2H) /* \_SB_.PCI0.PA2H */
                    Store (PM2L, PA2L) /* \_SB_.PCI0.PA2L */
                    Store (PM3H, PA3H) /* \_SB_.PCI0.PA3H */
                    Store (PM3L, PA3L) /* \_SB_.PCI0.PA3L */
                    Store (PM4H, PA4H) /* \_SB_.PCI0.PA4H */
                    Store (PM4L, PA4L) /* \_SB_.PCI0.PA4L */
                    Store (PM5H, PA5H) /* \_SB_.PCI0.PA5H */
                    Store (PM5L, PA5L) /* \_SB_.PCI0.PA5L */
                    Store (PM6H, PA6H) /* \_SB_.PCI0.PA6H */

    2C89: 14 45 08 4E 50 54 53 01 70 50 4D 30 48 50 41 30  // .E.NPTS.pPM0HPA0
    2C99: 48 70 50 4D 4C 4B 50 41 4C 4B 70 50 4D 31 48 50  // HpPMLKPALKpPM1HP
    2CA9: 41 31 48 70 50 4D 31 4C 50 41 31 4C 70 50 4D 32  // A1HpPM1LPA1LpPM2
    2CB9: 48 50 41 32 48 70 50 4D 32 4C 50 41 32 4C 70 50  // HPA2HpPM2LPA2LpP
    2CC9: 4D 33 48 50 41 33 48 70 50 4D 33 4C 50 41 33 4C  // M3HPA3HpPM3LPA3L
    2CD9: 70 50 4D 34 48 50 41 34 48 70 50 4D 34 4C 50 41  // pPM4HPA4HpPM4LPA
    2CE9: 34 4C 70 50 4D 35 48 50 41 35 48 70 50 4D 35 4C  // 4LpPM5HPA5HpPM5L
    2CF9: 50 41 35 4C 70 50 4D 36 48 50 41 36 48           // PA5LpPM6HPA6H

                    Store (PM6L, PA6L) /* \_SB_.PCI0.PA6L */
                }


    2D06: 70 50 4D 36 4C 50 41 36 4C                       // pPM6LPA6L

                Method (NWAK, 1, NotSerialized)
                {
                    Store (PA0H, PM0H) /* \_SB_.PCI0.PM0H */
                    Store (PA1H, PM1H) /* \_SB_.PCI0.PM1H */
                    Store (PA1L, PM1L) /* \_SB_.PCI0.PM1L */
                    Store (PA2H, PM2H) /* \_SB_.PCI0.PM2H */
                    Store (PA2L, PM2L) /* \_SB_.PCI0.PM2L */
                    Store (PA3H, PM3H) /* \_SB_.PCI0.PM3H */
                    Store (PA3L, PM3L) /* \_SB_.PCI0.PM3L */
                    Store (PA4H, PM4H) /* \_SB_.PCI0.PM4H */
                    Store (PA4L, PM4L) /* \_SB_.PCI0.PM4L */
                    Store (PA5H, PM5H) /* \_SB_.PCI0.PM5H */
                    Store (PA5L, PM5L) /* \_SB_.PCI0.PM5L */
                    Store (PA6H, PM6H) /* \_SB_.PCI0.PM6H */
                    Store (PA6L, PM6L) /* \_SB_.PCI0.PM6L */

    2D0F: 14 45 08 4E 57 41 4B 01 70 50 41 30 48 50 4D 30  // .E.NWAK.pPA0HPM0
    2D1F: 48 70 50 41 31 48 50 4D 31 48 70 50 41 31 4C 50  // HpPA1HPM1HpPA1LP
    2D2F: 4D 31 4C 70 50 41 32 48 50 4D 32 48 70 50 41 32  // M1LpPA2HPM2HpPA2
    2D3F: 4C 50 4D 32 4C 70 50 41 33 48 50 4D 33 48 70 50  // LPM2LpPA3HPM3HpP
    2D4F: 41 33 4C 50 4D 33 4C 70 50 41 34 48 50 4D 34 48  // A3LPM3LpPA4HPM4H
    2D5F: 70 50 41 34 4C 50 4D 34 4C 70 50 41 35 48 50 4D  // pPA4LPM4LpPA5HPM
    2D6F: 35 48 70 50 41 35 4C 50 4D 35 4C 70 50 41 36 48  // 5HpPA5LPM5LpPA6H
    2D7F: 50 4D 36 48 70 50 41 36 4C 50 4D 36 4C           // PM6HpPA6LPM6L

                    Store (PALK, PMLK) /* \_SB_.PCI0.PMLK */
                }
            }


    2D8C: 70 50 41 4C 4B 50 4D 4C 4B                       // pPALKPMLK

            Device (PEG0)
            {

    2D95: 5B 82 33 50 45 47 30                             // [.3PEG0

                Name (_ADR, 0x00010000)  // _ADR: Address

    2D9C: 08 5F 41 44 52 0C 00 00 01 00                    // ._ADR.....

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    2DA6: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    2DAD: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR01) /* \_SB_.AR01 */
                    }


    2DB3: A4 41 52 30 31                                   // .AR01

                    Return (PR01) /* \_SB_.PR01 */
                }


    2DB8: A4 50 52 30 31                                   // .PR01

                Device (PEGP)
                {

    2DBD: 5B 82 0B 50 45 47 50                             // [..PEGP

                    Name (_ADR, Zero)  // _ADR: Address
                }
            }


    2DC4: 08 5F 41 44 52 00                                // ._ADR.

            Device (PEG1)
            {

    2DCA: 5B 82 33 50 45 47 31                             // [.3PEG1

                Name (_ADR, 0x00010001)  // _ADR: Address

    2DD1: 08 5F 41 44 52 0C 01 00 01 00                    // ._ADR.....

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    2DDB: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    2DE2: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR02) /* \_SB_.AR02 */
                    }


    2DE8: A4 41 52 30 32                                   // .AR02

                    Return (PR02) /* \_SB_.PR02 */
                }


    2DED: A4 50 52 30 32                                   // .PR02

                Device (PEGP)
                {

    2DF2: 5B 82 0B 50 45 47 50                             // [..PEGP

                    Name (_ADR, Zero)  // _ADR: Address
                }
            }


    2DF9: 08 5F 41 44 52 00                                // ._ADR.

            Device (PEG2)
            {

    2DFF: 5B 82 33 50 45 47 32                             // [.3PEG2

                Name (_ADR, 0x00010002)  // _ADR: Address

    2E06: 08 5F 41 44 52 0C 02 00 01 00                    // ._ADR.....

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    2E10: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    2E17: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR03) /* \_SB_.AR03 */
                    }


    2E1D: A4 41 52 30 33                                   // .AR03

                    Return (PR03) /* \_SB_.PR03 */
                }


    2E22: A4 50 52 30 33                                   // .PR03

                Device (PEGP)
                {

    2E27: 5B 82 0B 50 45 47 50                             // [..PEGP

                    Name (_ADR, Zero)  // _ADR: Address
                }
            }


    2E2E: 08 5F 41 44 52 00                                // ._ADR.

            Device (RP09)
            {

    2E34: 5B 82 40 36 52 50 30 39                          // [.@6RP09

                Name (_ADR, 0x001D0000)  // _ADR: Address

    2E3C: 08 5F 41 44 52 0C 00 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    2E46: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    2E51: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    2E61: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    2E71: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    2E81: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    2E91: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    2EA1: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    2EB1: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    2EC1: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    2ED1: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    2EDF: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    2EEF: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    2EF6: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    2EFB: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    2F02: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    2F0A: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    2F10: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    2F15: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    2F25: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    2F29: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    2F35: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    2F3E: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    2F43: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    2F49: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    2F53: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    2F5E: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    2F69: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    2F74: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    2F7F: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP09._DSM.FUN0 */

    2F82: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    2F8C: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP09._DSM.FUN6 */
                                    }


    2F92: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    2F98: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP09._DSM.FUN4 */
                                    }


    2F9E: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    2FA4: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    2FAC: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP09._DSM.FUN8 */

    2FAF: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP09._DSM.FUN9 */
                                        }
                                    }
                                }


    2FB9: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP09._DSM.OPTS */
                            }

    2FBF: A4 4F 50 54 53                                   // .OPTS

                            Case
    2FC4: A1 42 14                                         // .B.

 (0x04)
                            {

    2FC7: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    2FD1: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    2FD4: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    2FD8: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    2FDE: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    2FDF: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    2FEF: 00 00 00 00                                      // ....

                                    Else
                                    {

    2FF3: A1 16                                            // ..

                                        Return (
    2FF5: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    2FF6: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    3006: 00 00 00 00                                      // ....

                            Case
    300A: A1 4C 0F                                         // .L.

 (0x06)
                            {

    300D: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    3017: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    301B: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    301F: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    3026: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    3030: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    3036: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    3046: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    3049: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    3051: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    3053: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    3063: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    3066: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    3076: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    307B: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    308B: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    308C: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    309C: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    30A0: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    30B0: 03 00                                            // ..

Index (LTRV, 0x03))

    30B2: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP09.LTRV */
                                    }

    30BA: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    30BF: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    30C1: A4 00                                            // ..

                            Case
    30C3: A1 43 04                                         // .C.

 (0x08)
                            {

    30C6: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    30CF: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    30D7: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    30DA: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    30DE: A4 01                                            // ..

                            Case
    30E0: A1 26                                            // .&

 (0x09)
                            {

    30E2: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    30EB: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    30F3: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    30F6: 95 69 0A 03                                      // .i..

                                        Return (
    30FA: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    30FB: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    3107: A5                                               // .

                    Return (
    3108: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    3109: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    310D: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    3114: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    311A: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP09.HPCE */
                    }
                }


    3121: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    3126: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    312D: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP09.PMSX */

    3137: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    3140: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    3146: 76 60                                            // v`

                            Else
                            {

    3148: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    314A: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    314D: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    3154: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    3164: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    3174: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    3176: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    317F: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    3186: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0C) /* \_SB_.AR0C */
                    }


    318C: A4 41 52 30 43                                   // .AR0C

                    Return (PR0C) /* \_SB_.PR0C */
                }
            }


    3191: A4 50 52 30 43                                   // .PR0C

            Device (RP10)
            {

    3196: 5B 82 40 36 52 50 31 30                          // [.@6RP10

                Name (_ADR, 0x001D0001)  // _ADR: Address

    319E: 08 5F 41 44 52 0C 01 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    31A8: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    31B3: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    31C3: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    31D3: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    31E3: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    31F3: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    3203: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    3213: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    3223: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    3233: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    3241: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    3251: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    3258: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    325D: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    3264: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    326C: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    3272: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    3277: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    3287: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    328B: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    3297: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    32A0: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    32A5: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    32AB: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    32B5: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    32C0: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    32CB: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    32D6: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    32E1: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP10._DSM.FUN0 */

    32E4: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    32EE: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP10._DSM.FUN6 */
                                    }


    32F4: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    32FA: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP10._DSM.FUN4 */
                                    }


    3300: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    3306: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    330E: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP10._DSM.FUN8 */

    3311: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP10._DSM.FUN9 */
                                        }
                                    }
                                }


    331B: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP10._DSM.OPTS */
                            }

    3321: A4 4F 50 54 53                                   // .OPTS

                            Case
    3326: A1 42 14                                         // .B.

 (0x04)
                            {

    3329: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    3333: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    3336: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    333A: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    3340: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    3341: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    3351: 00 00 00 00                                      // ....

                                    Else
                                    {

    3355: A1 16                                            // ..

                                        Return (
    3357: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    3358: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    3368: 00 00 00 00                                      // ....

                            Case
    336C: A1 4C 0F                                         // .L.

 (0x06)
                            {

    336F: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    3379: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    337D: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    3381: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    3388: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    3392: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    3398: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    33A8: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    33AB: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    33B3: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    33B5: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    33C5: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    33C8: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    33D8: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    33DD: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    33ED: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    33EE: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    33FE: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    3402: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    3412: 03 00                                            // ..

Index (LTRV, 0x03))

    3414: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP10.LTRV */
                                    }

    341C: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    3421: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    3423: A4 00                                            // ..

                            Case
    3425: A1 43 04                                         // .C.

 (0x08)
                            {

    3428: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    3431: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    3439: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    343C: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    3440: A4 01                                            // ..

                            Case
    3442: A1 26                                            // .&

 (0x09)
                            {

    3444: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    344D: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    3455: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    3458: 95 69 0A 03                                      // .i..

                                        Return (
    345C: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    345D: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    3469: A5                                               // .

                    Return (
    346A: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    346B: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    346F: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    3476: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    347C: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP10.HPCE */
                    }
                }


    3483: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    3488: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    348F: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP10.PMSX */

    3499: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    34A2: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    34A8: 76 60                                            // v`

                            Else
                            {

    34AA: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    34AC: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    34AF: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    34B6: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    34C6: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    34D6: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    34D8: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    34E1: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    34E8: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0D) /* \_SB_.AR0D */
                    }


    34EE: A4 41 52 30 44                                   // .AR0D

                    Return (PR0D) /* \_SB_.PR0D */
                }
            }


    34F3: A4 50 52 30 44                                   // .PR0D

            Device (RP11)
            {

    34F8: 5B 82 40 36 52 50 31 31                          // [.@6RP11

                Name (_ADR, 0x001D0002)  // _ADR: Address

    3500: 08 5F 41 44 52 0C 02 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    350A: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    3515: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    3525: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    3535: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    3545: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    3555: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    3565: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    3575: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    3585: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    3595: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    35A3: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    35B3: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    35BA: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    35BF: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    35C6: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    35CE: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    35D4: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    35D9: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    35E9: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    35ED: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    35F9: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    3602: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    3607: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    360D: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    3617: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    3622: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    362D: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    3638: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    3643: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP11._DSM.FUN0 */

    3646: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    3650: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP11._DSM.FUN6 */
                                    }


    3656: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    365C: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP11._DSM.FUN4 */
                                    }


    3662: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    3668: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    3670: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP11._DSM.FUN8 */

    3673: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP11._DSM.FUN9 */
                                        }
                                    }
                                }


    367D: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP11._DSM.OPTS */
                            }

    3683: A4 4F 50 54 53                                   // .OPTS

                            Case
    3688: A1 42 14                                         // .B.

 (0x04)
                            {

    368B: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    3695: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    3698: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    369C: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    36A2: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    36A3: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    36B3: 00 00 00 00                                      // ....

                                    Else
                                    {

    36B7: A1 16                                            // ..

                                        Return (
    36B9: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    36BA: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    36CA: 00 00 00 00                                      // ....

                            Case
    36CE: A1 4C 0F                                         // .L.

 (0x06)
                            {

    36D1: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    36DB: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    36DF: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    36E3: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    36EA: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    36F4: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    36FA: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    370A: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    370D: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    3715: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    3717: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    3727: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    372A: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    373A: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    373F: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    374F: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    3750: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    3760: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    3764: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    3774: 03 00                                            // ..

Index (LTRV, 0x03))

    3776: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP11.LTRV */
                                    }

    377E: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    3783: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    3785: A4 00                                            // ..

                            Case
    3787: A1 43 04                                         // .C.

 (0x08)
                            {

    378A: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    3793: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    379B: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    379E: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    37A2: A4 01                                            // ..

                            Case
    37A4: A1 26                                            // .&

 (0x09)
                            {

    37A6: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    37AF: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    37B7: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    37BA: 95 69 0A 03                                      // .i..

                                        Return (
    37BE: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    37BF: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    37CB: A5                                               // .

                    Return (
    37CC: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    37CD: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    37D1: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    37D8: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    37DE: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP11.HPCE */
                    }
                }


    37E5: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    37EA: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    37F1: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP11.PMSX */

    37FB: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    3804: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    380A: 76 60                                            // v`

                            Else
                            {

    380C: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    380E: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    3811: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    3818: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    3828: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    3838: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    383A: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    3843: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    384A: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0E) /* \_SB_.AR0E */
                    }


    3850: A4 41 52 30 45                                   // .AR0E

                    Return (PR0E) /* \_SB_.PR0E */
                }
            }


    3855: A4 50 52 30 45                                   // .PR0E

            Device (RP12)
            {

    385A: 5B 82 40 36 52 50 31 32                          // [.@6RP12

                Name (_ADR, 0x001D0003)  // _ADR: Address

    3862: 08 5F 41 44 52 0C 03 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    386C: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    3877: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    3887: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    3897: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    38A7: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    38B7: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    38C7: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    38D7: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    38E7: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    38F7: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    3905: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    3915: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    391C: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    3921: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    3928: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    3930: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    3936: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    393B: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    394B: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    394F: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    395B: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    3964: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    3969: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    396F: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    3979: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    3984: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    398F: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    399A: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    39A5: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP12._DSM.FUN0 */

    39A8: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    39B2: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP12._DSM.FUN6 */
                                    }


    39B8: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    39BE: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP12._DSM.FUN4 */
                                    }


    39C4: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    39CA: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    39D2: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP12._DSM.FUN8 */

    39D5: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP12._DSM.FUN9 */
                                        }
                                    }
                                }


    39DF: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP12._DSM.OPTS */
                            }

    39E5: A4 4F 50 54 53                                   // .OPTS

                            Case
    39EA: A1 42 14                                         // .B.

 (0x04)
                            {

    39ED: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    39F7: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    39FA: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    39FE: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    3A04: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    3A05: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    3A15: 00 00 00 00                                      // ....

                                    Else
                                    {

    3A19: A1 16                                            // ..

                                        Return (
    3A1B: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    3A1C: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    3A2C: 00 00 00 00                                      // ....

                            Case
    3A30: A1 4C 0F                                         // .L.

 (0x06)
                            {

    3A33: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    3A3D: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    3A41: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    3A45: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    3A4C: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    3A56: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    3A5C: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    3A6C: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    3A6F: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    3A77: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    3A79: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    3A89: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    3A8C: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    3A9C: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    3AA1: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    3AB1: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    3AB2: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    3AC2: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    3AC6: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    3AD6: 03 00                                            // ..

Index (LTRV, 0x03))

    3AD8: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP12.LTRV */
                                    }

    3AE0: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    3AE5: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    3AE7: A4 00                                            // ..

                            Case
    3AE9: A1 43 04                                         // .C.

 (0x08)
                            {

    3AEC: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    3AF5: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    3AFD: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    3B00: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    3B04: A4 01                                            // ..

                            Case
    3B06: A1 26                                            // .&

 (0x09)
                            {

    3B08: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    3B11: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    3B19: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    3B1C: 95 69 0A 03                                      // .i..

                                        Return (
    3B20: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    3B21: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    3B2D: A5                                               // .

                    Return (
    3B2E: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    3B2F: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    3B33: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    3B3A: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    3B40: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP12.HPCE */
                    }
                }


    3B47: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    3B4C: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    3B53: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP12.PMSX */

    3B5D: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    3B66: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    3B6C: 76 60                                            // v`

                            Else
                            {

    3B6E: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    3B70: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    3B73: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    3B7A: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    3B8A: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    3B9A: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    3B9C: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    3BA5: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    3BAC: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0F) /* \_SB_.AR0F */
                    }


    3BB2: A4 41 52 30 46                                   // .AR0F

                    Return (PR0F) /* \_SB_.PR0F */
                }
            }


    3BB7: A4 50 52 30 46                                   // .PR0F

            Device (RP13)
            {

    3BBC: 5B 82 40 36 52 50 31 33                          // [.@6RP13

                Name (_ADR, 0x001D0004)  // _ADR: Address

    3BC4: 08 5F 41 44 52 0C 04 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    3BCE: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    3BD9: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    3BE9: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    3BF9: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    3C09: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    3C19: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    3C29: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    3C39: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    3C49: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    3C59: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    3C67: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    3C77: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    3C7E: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    3C83: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    3C8A: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    3C92: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    3C98: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    3C9D: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    3CAD: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    3CB1: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    3CBD: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    3CC6: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    3CCB: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    3CD1: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    3CDB: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    3CE6: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    3CF1: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    3CFC: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    3D07: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP13._DSM.FUN0 */

    3D0A: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    3D14: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP13._DSM.FUN6 */
                                    }


    3D1A: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    3D20: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP13._DSM.FUN4 */
                                    }


    3D26: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    3D2C: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    3D34: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP13._DSM.FUN8 */

    3D37: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP13._DSM.FUN9 */
                                        }
                                    }
                                }


    3D41: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP13._DSM.OPTS */
                            }

    3D47: A4 4F 50 54 53                                   // .OPTS

                            Case
    3D4C: A1 42 14                                         // .B.

 (0x04)
                            {

    3D4F: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    3D59: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    3D5C: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    3D60: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    3D66: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    3D67: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    3D77: 00 00 00 00                                      // ....

                                    Else
                                    {

    3D7B: A1 16                                            // ..

                                        Return (
    3D7D: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    3D7E: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    3D8E: 00 00 00 00                                      // ....

                            Case
    3D92: A1 4C 0F                                         // .L.

 (0x06)
                            {

    3D95: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    3D9F: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    3DA3: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    3DA7: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    3DAE: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    3DB8: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    3DBE: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    3DCE: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    3DD1: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    3DD9: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    3DDB: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    3DEB: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    3DEE: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    3DFE: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    3E03: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    3E13: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    3E14: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    3E24: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    3E28: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    3E38: 03 00                                            // ..

Index (LTRV, 0x03))

    3E3A: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP13.LTRV */
                                    }

    3E42: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    3E47: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    3E49: A4 00                                            // ..

                            Case
    3E4B: A1 43 04                                         // .C.

 (0x08)
                            {

    3E4E: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    3E57: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    3E5F: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    3E62: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    3E66: A4 01                                            // ..

                            Case
    3E68: A1 26                                            // .&

 (0x09)
                            {

    3E6A: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    3E73: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    3E7B: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    3E7E: 95 69 0A 03                                      // .i..

                                        Return (
    3E82: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    3E83: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    3E8F: A5                                               // .

                    Return (
    3E90: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    3E91: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    3E95: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    3E9C: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    3EA2: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP13.HPCE */
                    }
                }


    3EA9: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    3EAE: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    3EB5: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP13.PMSX */

    3EBF: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    3EC8: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    3ECE: 76 60                                            // v`

                            Else
                            {

    3ED0: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    3ED2: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    3ED5: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    3EDC: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    3EEC: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    3EFC: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    3EFE: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    3F07: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    3F0E: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR10) /* \_SB_.AR10 */
                    }


    3F14: A4 41 52 31 30                                   // .AR10

                    Return (PR10) /* \_SB_.PR10 */
                }
            }


    3F19: A4 50 52 31 30                                   // .PR10

            Device (RP01)
            {

    3F1E: 5B 82 40 36 52 50 30 31                          // [.@6RP01

                Name (_ADR, 0x001C0002)  // _ADR: Address

    3F26: 08 5F 41 44 52 0C 02 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    3F30: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    3F3B: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    3F4B: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    3F5B: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    3F6B: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    3F7B: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    3F8B: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    3F9B: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    3FAB: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    3FBB: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    3FC9: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    3FD9: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    3FE0: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    3FE5: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    3FEC: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    3FF4: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    3FFA: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    3FFF: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    400F: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    4013: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    401F: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    4028: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    402D: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    4033: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    403D: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    4048: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    4053: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    405E: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    4069: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP01._DSM.FUN0 */

    406C: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    4076: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP01._DSM.FUN6 */
                                    }


    407C: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    4082: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP01._DSM.FUN4 */
                                    }


    4088: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    408E: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    4096: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP01._DSM.FUN8 */

    4099: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP01._DSM.FUN9 */
                                        }
                                    }
                                }


    40A3: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP01._DSM.OPTS */
                            }

    40A9: A4 4F 50 54 53                                   // .OPTS

                            Case
    40AE: A1 42 14                                         // .B.

 (0x04)
                            {

    40B1: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    40BB: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    40BE: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    40C2: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    40C8: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    40C9: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    40D9: 00 00 00 00                                      // ....

                                    Else
                                    {

    40DD: A1 16                                            // ..

                                        Return (
    40DF: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    40E0: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    40F0: 00 00 00 00                                      // ....

                            Case
    40F4: A1 4C 0F                                         // .L.

 (0x06)
                            {

    40F7: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    4101: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    4105: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    4109: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    4110: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    411A: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    4120: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    4130: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    4133: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    413B: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    413D: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    414D: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    4150: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    4160: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    4165: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    4175: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    4176: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    4186: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    418A: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    419A: 03 00                                            // ..

Index (LTRV, 0x03))

    419C: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP01.LTRV */
                                    }

    41A4: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    41A9: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    41AB: A4 00                                            // ..

                            Case
    41AD: A1 43 04                                         // .C.

 (0x08)
                            {

    41B0: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    41B9: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    41C1: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    41C4: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    41C8: A4 01                                            // ..

                            Case
    41CA: A1 26                                            // .&

 (0x09)
                            {

    41CC: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    41D5: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    41DD: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    41E0: 95 69 0A 03                                      // .i..

                                        Return (
    41E4: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    41E5: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    41F1: A5                                               // .

                    Return (
    41F2: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    41F3: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    41F7: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    41FE: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    4204: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP01.HPCE */
                    }
                }


    420B: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    4210: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    4217: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP01.PMSX */

    4221: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    422A: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    4230: 76 60                                            // v`

                            Else
                            {

    4232: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    4234: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    4237: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    423E: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    424E: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    425E: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    4260: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    4269: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    4270: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR04) /* \_SB_.AR04 */
                    }


    4276: A4 41 52 30 34                                   // .AR04

                    Return (PR04) /* \_SB_.PR04 */
                }
            }


    427B: A4 50 52 30 34                                   // .PR04

            Device (RP02)
            {

    4280: 5B 82 40 36 52 50 30 32                          // [.@6RP02

                Name (_ADR, 0x001C0001)  // _ADR: Address

    4288: 08 5F 41 44 52 0C 01 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    4292: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    429D: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    42AD: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    42BD: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    42CD: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    42DD: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    42ED: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    42FD: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    430D: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    431D: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    432B: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    433B: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    4342: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    4347: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    434E: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    4356: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    435C: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    4361: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    4371: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    4375: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    4381: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    438A: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    438F: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    4395: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    439F: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    43AA: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    43B5: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    43C0: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    43CB: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP02._DSM.FUN0 */

    43CE: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    43D8: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP02._DSM.FUN6 */
                                    }


    43DE: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    43E4: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP02._DSM.FUN4 */
                                    }


    43EA: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    43F0: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    43F8: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP02._DSM.FUN8 */

    43FB: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP02._DSM.FUN9 */
                                        }
                                    }
                                }


    4405: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP02._DSM.OPTS */
                            }

    440B: A4 4F 50 54 53                                   // .OPTS

                            Case
    4410: A1 42 14                                         // .B.

 (0x04)
                            {

    4413: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    441D: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    4420: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    4424: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    442A: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    442B: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    443B: 00 00 00 00                                      // ....

                                    Else
                                    {

    443F: A1 16                                            // ..

                                        Return (
    4441: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    4442: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4452: 00 00 00 00                                      // ....

                            Case
    4456: A1 4C 0F                                         // .L.

 (0x06)
                            {

    4459: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    4463: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    4467: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    446B: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    4472: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    447C: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    4482: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    4492: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    4495: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    449D: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    449F: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    44AF: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    44B2: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    44C2: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    44C7: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    44D7: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    44D8: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    44E8: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    44EC: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    44FC: 03 00                                            // ..

Index (LTRV, 0x03))

    44FE: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP02.LTRV */
                                    }

    4506: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    450B: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    450D: A4 00                                            // ..

                            Case
    450F: A1 43 04                                         // .C.

 (0x08)
                            {

    4512: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    451B: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    4523: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    4526: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    452A: A4 01                                            // ..

                            Case
    452C: A1 26                                            // .&

 (0x09)
                            {

    452E: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    4537: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    453F: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    4542: 95 69 0A 03                                      // .i..

                                        Return (
    4546: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    4547: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    4553: A5                                               // .

                    Return (
    4554: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    4555: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    4559: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    4560: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    4566: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP02.HPCE */
                    }
                }


    456D: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    4572: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    4579: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP02.PMSX */

    4583: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    458C: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    4592: 76 60                                            // v`

                            Else
                            {

    4594: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    4596: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    4599: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    45A0: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    45B0: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    45C0: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    45C2: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    45CB: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    45D2: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR05) /* \_SB_.AR05 */
                    }


    45D8: A4 41 52 30 35                                   // .AR05

                    Return (PR05) /* \_SB_.PR05 */
                }
            }


    45DD: A4 50 52 30 35                                   // .PR05

            Device (RP03)
            {

    45E2: 5B 82 4C 3C 52 50 30 33                          // [.L<RP03

                Name (_ADR, 0x001C0000)  // _ADR: Address

    45EA: 08 5F 41 44 52 0C 00 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    45F4: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    45FF: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    460F: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    461F: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    462F: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    463F: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    464F: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    465F: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    466F: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    467F: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    468D: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    469D: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    46A4: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    46A9: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    46B0: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    46B8: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    46BE: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    46C3: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    46D3: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    46D7: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    46E3: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    46EC: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    46F1: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    46F7: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    4701: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    470C: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    4717: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    4722: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    472D: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP03._DSM.FUN0 */

    4730: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    473A: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP03._DSM.FUN6 */
                                    }


    4740: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    4746: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP03._DSM.FUN4 */
                                    }


    474C: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    4752: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    475A: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP03._DSM.FUN8 */

    475D: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP03._DSM.FUN9 */
                                        }
                                    }
                                }


    4767: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP03._DSM.OPTS */
                            }

    476D: A4 4F 50 54 53                                   // .OPTS

                            Case
    4772: A1 42 14                                         // .B.

 (0x04)
                            {

    4775: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    477F: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    4782: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    4786: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    478C: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    478D: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    479D: 00 00 00 00                                      // ....

                                    Else
                                    {

    47A1: A1 16                                            // ..

                                        Return (
    47A3: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    47A4: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    47B4: 00 00 00 00                                      // ....

                            Case
    47B8: A1 4C 0F                                         // .L.

 (0x06)
                            {

    47BB: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    47C5: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    47C9: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    47CD: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    47D4: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    47DE: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    47E4: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    47F4: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    47F7: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    47FF: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    4801: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    4811: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    4814: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    4824: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    4829: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    4839: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    483A: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    484A: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    484E: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    485E: 03 00                                            // ..

Index (LTRV, 0x03))

    4860: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP03.LTRV */
                                    }

    4868: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    486D: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    486F: A4 00                                            // ..

                            Case
    4871: A1 43 04                                         // .C.

 (0x08)
                            {

    4874: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    487D: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    4885: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    4888: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    488C: A4 01                                            // ..

                            Case
    488E: A1 26                                            // .&

 (0x09)
                            {

    4890: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    4899: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    48A1: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    48A4: 95 69 0A 03                                      // .i..

                                        Return (
    48A8: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    48A9: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    48B5: A5                                               // .

                    Return (
    48B6: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    48B7: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    48BB: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    48C2: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    48C8: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP03.HPCE */
                    }
                }


    48CF: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    48D4: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    48DB: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP03.PMSX */

    48E5: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    48EE: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    48F4: 76 60                                            // v`

                            Else
                            {

    48F6: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    48F8: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    48FB: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    4902: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    4912: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    4922: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    4924: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    492D: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    4934: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR06) /* \_SB_.AR06 */
                    }


    493A: A4 41 52 30 36                                   // .AR06

                    Return (PR06) /* \_SB_.PR06 */
                }


    493F: A4 50 52 30 36                                   // .PR06

                Device (WLAN)
                {

    4944: 5B 82 4A 06 57 4C 41 4E                          // [.J.WLAN

                    Name (_ADR, Zero)  // _ADR: Address

    494C: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    4952: 14 08 5F 52 4D 56 00                             // .._RMV.

                        Return (Zero)
                    }


    4959: A4 00                                            // ..

                    OperationRegion (MINP, PCI_Config, Zero, 0x68)

    495B: 5B 80 4D 49 4E 50 02 00 0A 68                    // [.MINP...h

                    Field (MINP, ByteAcc, NoLock, Preserve)
                    {
                        VNUM,   32, 
                        Offset (0x09), 
                        PINF,   8, 
                        SBCC,   8, 
                        BSCC,   8, 
                        Offset (0x2C), 
                        SNUM,   32, 
                        Offset (0x34)
                    }


    4965: 5B 81 26 4D 49 4E 50 01 56 4E 55 4D 20 00 28 50  // [.&MINP.VNUM .(P
    4975: 49 4E 46 08 53 42 43 43 08 42 53 43 43 08 00 40  // INF.SBCC.BSCC..@
    4985: 10 53 4E 55 4D 20 00 20                          // .SNUM . 

                    Method (MPDP, 0, NotSerialized)
                    {

    498D: 14 22 4D 50 44 50 00                             // ."MPDP.

                        If (LEqual (SNUM, 0xFFFFFFFF))
                        {

    4994: A0 0D 93 53 4E 55 4D 0C FF FF FF FF              // ...SNUM.....

                            Return (Zero)
                        }


    49A0: A4 00                                            // ..

                        If (
    49A2: A0 0B 92                                         // ...

LNotEqual (BSCC, 0x02))
                        {

    49A5: 93 42 53 43 43 0A 02                             // .BSCC..

                            Return (Zero)
                        }


    49AC: A4 00                                            // ..

                        Return (One)
                    }
                }
            }


    49AE: A4 01                                            // ..

            Device (RP04)
            {

    49B0: 5B 82 48 39 52 50 30 34                          // [.H9RP04

                Name (_ADR, 0x001C0003)  // _ADR: Address

    49B8: 08 5F 41 44 52 0C 03 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    49C2: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    49CD: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    49DD: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    49ED: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    49FD: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    4A0D: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    4A1D: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    4A2D: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    4A3D: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    4A4D: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    4A5B: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    4A6B: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    4A72: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    4A77: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    4A7E: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    4A86: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    4A8C: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    4A91: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    4AA1: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    4AA5: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    4AB1: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    4ABA: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    4ABF: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    4AC5: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    4ACF: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    4ADA: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    4AE5: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    4AF0: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    4AFB: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP04._DSM.FUN0 */

    4AFE: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    4B08: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP04._DSM.FUN6 */
                                    }


    4B0E: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    4B14: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP04._DSM.FUN4 */
                                    }


    4B1A: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    4B20: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    4B28: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP04._DSM.FUN8 */

    4B2B: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP04._DSM.FUN9 */
                                        }
                                    }
                                }


    4B35: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP04._DSM.OPTS */
                            }

    4B3B: A4 4F 50 54 53                                   // .OPTS

                            Case
    4B40: A1 42 14                                         // .B.

 (0x04)
                            {

    4B43: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    4B4D: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    4B50: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    4B54: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    4B5A: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    4B5B: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    4B6B: 00 00 00 00                                      // ....

                                    Else
                                    {

    4B6F: A1 16                                            // ..

                                        Return (
    4B71: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    4B72: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4B82: 00 00 00 00                                      // ....

                            Case
    4B86: A1 4C 0F                                         // .L.

 (0x06)
                            {

    4B89: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    4B93: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    4B97: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    4B9B: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    4BA2: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    4BAC: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    4BB2: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    4BC2: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    4BC5: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    4BCD: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    4BCF: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    4BDF: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    4BE2: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    4BF2: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    4BF7: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    4C07: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    4C08: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    4C18: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    4C1C: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    4C2C: 03 00                                            // ..

Index (LTRV, 0x03))

    4C2E: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP04.LTRV */
                                    }

    4C36: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    4C3B: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    4C3D: A4 00                                            // ..

                            Case
    4C3F: A1 43 04                                         // .C.

 (0x08)
                            {

    4C42: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    4C4B: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    4C53: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    4C56: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    4C5A: A4 01                                            // ..

                            Case
    4C5C: A1 26                                            // .&

 (0x09)
                            {

    4C5E: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    4C67: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    4C6F: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    4C72: 95 69 0A 03                                      // .i..

                                        Return (
    4C76: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    4C77: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    4C83: A5                                               // .

                    Return (
    4C84: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    4C85: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    4C89: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    4C90: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    4C96: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP04.HPCE */
                    }
                }


    4C9D: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    4CA2: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    4CA9: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP04.PMSX */

    4CB3: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    4CBC: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    4CC2: 76 60                                            // v`

                            Else
                            {

    4CC4: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    4CC6: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    4CC9: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    4CD0: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    4CE0: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    4CF0: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    4CF2: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    4CFB: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    4D02: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR07) /* \_SB_.AR07 */
                    }


    4D08: A4 41 52 30 37                                   // .AR07

                    Return (PR07) /* \_SB_.PR07 */
                }


    4D0D: A4 50 52 30 37                                   // .PR07

                Device (GLAN)
                {

    4D12: 5B 82 36 47 4C 41 4E                             // [.6GLAN

                    Name (_ADR, One)  // _ADR: Address

    4D19: 08 5F 41 44 52 01                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    4D1F: 14 08 5F 52 4D 56 00                             // .._RMV.

                        Return (Zero)
                    }


    4D26: A4 00                                            // ..

                    OperationRegion (LANR, PCI_Config, Zero, 0x0100)

    4D28: 5B 80 4C 41 4E 52 02 00 0B 00 01                 // [.LANR.....

                    Field (LANR, ByteAcc, NoLock, Preserve)
                    {
                        VID,    16, 
                        Offset (0xE0), 
                            ,   15, 
                        PMES,   1
                    }
                }
            }


    4D33: 5B 81 15 4C 41 4E 52 01 56 49 44 5F 10 00 40 6F  // [..LANR.VID_..@o
    4D43: 00 0F 50 4D 45 53 01                             // ..PMES.

            Device (RP05)
            {

    4D4A: 5B 82 40 36 52 50 30 35                          // [.@6RP05

                Name (_ADR, 0x001C0004)  // _ADR: Address

    4D52: 08 5F 41 44 52 0C 04 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    4D5C: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    4D67: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    4D77: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    4D87: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    4D97: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    4DA7: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    4DB7: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    4DC7: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    4DD7: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    4DE7: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    4DF5: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    4E05: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    4E0C: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    4E11: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    4E18: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    4E20: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    4E26: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    4E2B: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    4E3B: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    4E3F: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    4E4B: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    4E54: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    4E59: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    4E5F: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    4E69: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    4E74: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    4E7F: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    4E8A: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    4E95: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP05._DSM.FUN0 */

    4E98: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    4EA2: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP05._DSM.FUN6 */
                                    }


    4EA8: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    4EAE: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP05._DSM.FUN4 */
                                    }


    4EB4: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    4EBA: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    4EC2: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP05._DSM.FUN8 */

    4EC5: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP05._DSM.FUN9 */
                                        }
                                    }
                                }


    4ECF: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP05._DSM.OPTS */
                            }

    4ED5: A4 4F 50 54 53                                   // .OPTS

                            Case
    4EDA: A1 42 14                                         // .B.

 (0x04)
                            {

    4EDD: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    4EE7: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    4EEA: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    4EEE: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    4EF4: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    4EF5: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    4F05: 00 00 00 00                                      // ....

                                    Else
                                    {

    4F09: A1 16                                            // ..

                                        Return (
    4F0B: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    4F0C: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4F1C: 00 00 00 00                                      // ....

                            Case
    4F20: A1 4C 0F                                         // .L.

 (0x06)
                            {

    4F23: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    4F2D: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    4F31: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    4F35: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    4F3C: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    4F46: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    4F4C: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    4F5C: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    4F5F: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    4F67: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    4F69: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    4F79: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    4F7C: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    4F8C: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    4F91: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    4FA1: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    4FA2: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    4FB2: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    4FB6: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    4FC6: 03 00                                            // ..

Index (LTRV, 0x03))

    4FC8: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP05.LTRV */
                                    }

    4FD0: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    4FD5: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    4FD7: A4 00                                            // ..

                            Case
    4FD9: A1 43 04                                         // .C.

 (0x08)
                            {

    4FDC: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    4FE5: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    4FED: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    4FF0: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    4FF4: A4 01                                            // ..

                            Case
    4FF6: A1 26                                            // .&

 (0x09)
                            {

    4FF8: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    5001: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    5009: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    500C: 95 69 0A 03                                      // .i..

                                        Return (
    5010: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    5011: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    501D: A5                                               // .

                    Return (
    501E: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    501F: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    5023: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    502A: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    5030: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP05.HPCE */
                    }
                }


    5037: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    503C: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    5043: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP05.PMSX */

    504D: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    5056: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    505C: 76 60                                            // v`

                            Else
                            {

    505E: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    5060: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    5063: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    506A: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    507A: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    508A: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    508C: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    5095: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    509C: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR08) /* \_SB_.AR08 */
                    }


    50A2: A4 41 52 30 38                                   // .AR08

                    Return (PR08) /* \_SB_.PR08 */
                }
            }


    50A7: A4 50 52 30 38                                   // .PR08

            Device (RP06)
            {

    50AC: 5B 82 40 36 52 50 30 36                          // [.@6RP06

                Name (_ADR, 0x001C0005)  // _ADR: Address

    50B4: 08 5F 41 44 52 0C 05 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    50BE: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    50C9: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    50D9: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    50E9: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    50F9: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    5109: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    5119: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    5129: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    5139: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    5149: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    5157: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    5167: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    516E: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    5173: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    517A: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    5182: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    5188: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    518D: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    519D: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    51A1: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    51AD: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    51B6: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    51BB: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    51C1: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    51CB: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    51D6: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    51E1: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    51EC: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    51F7: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP06._DSM.FUN0 */

    51FA: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    5204: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP06._DSM.FUN6 */
                                    }


    520A: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    5210: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP06._DSM.FUN4 */
                                    }


    5216: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    521C: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    5224: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP06._DSM.FUN8 */

    5227: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP06._DSM.FUN9 */
                                        }
                                    }
                                }


    5231: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP06._DSM.OPTS */
                            }

    5237: A4 4F 50 54 53                                   // .OPTS

                            Case
    523C: A1 42 14                                         // .B.

 (0x04)
                            {

    523F: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    5249: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    524C: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    5250: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    5256: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    5257: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    5267: 00 00 00 00                                      // ....

                                    Else
                                    {

    526B: A1 16                                            // ..

                                        Return (
    526D: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    526E: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    527E: 00 00 00 00                                      // ....

                            Case
    5282: A1 4C 0F                                         // .L.

 (0x06)
                            {

    5285: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    528F: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    5293: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    5297: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    529E: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    52A8: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    52AE: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    52BE: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    52C1: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    52C9: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    52CB: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    52DB: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    52DE: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    52EE: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    52F3: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    5303: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    5304: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    5314: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    5318: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    5328: 03 00                                            // ..

Index (LTRV, 0x03))

    532A: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP06.LTRV */
                                    }

    5332: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    5337: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    5339: A4 00                                            // ..

                            Case
    533B: A1 43 04                                         // .C.

 (0x08)
                            {

    533E: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    5347: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    534F: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    5352: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    5356: A4 01                                            // ..

                            Case
    5358: A1 26                                            // .&

 (0x09)
                            {

    535A: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    5363: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    536B: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    536E: 95 69 0A 03                                      // .i..

                                        Return (
    5372: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    5373: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    537F: A5                                               // .

                    Return (
    5380: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    5381: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    5385: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    538C: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    5392: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP06.HPCE */
                    }
                }


    5399: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    539E: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    53A5: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP06.PMSX */

    53AF: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    53B8: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    53BE: 76 60                                            // v`

                            Else
                            {

    53C0: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    53C2: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    53C5: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    53CC: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    53DC: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    53EC: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    53EE: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    53F7: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    53FE: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR09) /* \_SB_.AR09 */
                    }


    5404: A4 41 52 30 39                                   // .AR09

                    Return (PR09) /* \_SB_.PR09 */
                }
            }


    5409: A4 50 52 30 39                                   // .PR09

            Device (RP07)
            {

    540E: 5B 82 40 36 52 50 30 37                          // [.@6RP07

                Name (_ADR, 0x001C0006)  // _ADR: Address

    5416: 08 5F 41 44 52 0C 06 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    5420: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    542B: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    543B: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    544B: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    545B: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    546B: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    547B: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    548B: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    549B: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    54AB: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    54B9: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    54C9: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    54D0: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    54D5: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    54DC: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    54E4: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    54EA: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    54EF: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    54FF: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    5503: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    550F: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    5518: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    551D: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    5523: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    552D: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    5538: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    5543: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    554E: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    5559: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP07._DSM.FUN0 */

    555C: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    5566: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP07._DSM.FUN6 */
                                    }


    556C: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    5572: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP07._DSM.FUN4 */
                                    }


    5578: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    557E: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    5586: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP07._DSM.FUN8 */

    5589: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP07._DSM.FUN9 */
                                        }
                                    }
                                }


    5593: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP07._DSM.OPTS */
                            }

    5599: A4 4F 50 54 53                                   // .OPTS

                            Case
    559E: A1 42 14                                         // .B.

 (0x04)
                            {

    55A1: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    55AB: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    55AE: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    55B2: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    55B8: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    55B9: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    55C9: 00 00 00 00                                      // ....

                                    Else
                                    {

    55CD: A1 16                                            // ..

                                        Return (
    55CF: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    55D0: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    55E0: 00 00 00 00                                      // ....

                            Case
    55E4: A1 4C 0F                                         // .L.

 (0x06)
                            {

    55E7: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    55F1: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    55F5: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    55F9: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    5600: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    560A: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    5610: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    5620: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    5623: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    562B: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    562D: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    563D: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    5640: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    5650: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    5655: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    5665: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    5666: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    5676: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    567A: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    568A: 03 00                                            // ..

Index (LTRV, 0x03))

    568C: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP07.LTRV */
                                    }

    5694: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    5699: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    569B: A4 00                                            // ..

                            Case
    569D: A1 43 04                                         // .C.

 (0x08)
                            {

    56A0: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    56A9: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    56B1: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    56B4: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    56B8: A4 01                                            // ..

                            Case
    56BA: A1 26                                            // .&

 (0x09)
                            {

    56BC: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    56C5: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    56CD: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    56D0: 95 69 0A 03                                      // .i..

                                        Return (
    56D4: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    56D5: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    56E1: A5                                               // .

                    Return (
    56E2: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    56E3: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    56E7: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    56EE: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    56F4: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP07.HPCE */
                    }
                }


    56FB: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    5700: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    5707: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP07.PMSX */

    5711: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    571A: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    5720: 76 60                                            // v`

                            Else
                            {

    5722: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    5724: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    5727: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    572E: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    573E: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    574E: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    5750: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    5759: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    5760: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0A) /* \_SB_.AR0A */
                    }


    5766: A4 41 52 30 41                                   // .AR0A

                    Return (PR0A) /* \_SB_.PR0A */
                }
            }


    576B: A4 50 52 30 41                                   // .PR0A

            Device (RP08)
            {

    5770: 5B 82 40 36 52 50 30 38                          // [.@6RP08

                Name (_ADR, 0x001C0007)  // _ADR: Address

    5778: 08 5F 41 44 52 0C 07 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    5782: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    578D: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    579D: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    57AD: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    57BD: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    57CD: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    57DD: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    57ED: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    57FD: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    580D: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    581B: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    582B: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    5832: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    5837: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    583E: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    5846: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    584C: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    5851: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    5861: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    5865: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    5871: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    587A: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    587F: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    5885: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    588F: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    589A: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    58A5: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    58B0: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    58BB: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP08._DSM.FUN0 */

    58BE: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    58C8: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP08._DSM.FUN6 */
                                    }


    58CE: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    58D4: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP08._DSM.FUN4 */
                                    }


    58DA: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    58E0: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    58E8: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP08._DSM.FUN8 */

    58EB: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP08._DSM.FUN9 */
                                        }
                                    }
                                }


    58F5: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP08._DSM.OPTS */
                            }

    58FB: A4 4F 50 54 53                                   // .OPTS

                            Case
    5900: A1 42 14                                         // .B.

 (0x04)
                            {

    5903: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    590D: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    5910: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    5914: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    591A: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    591B: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    592B: 00 00 00 00                                      // ....

                                    Else
                                    {

    592F: A1 16                                            // ..

                                        Return (
    5931: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    5932: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5942: 00 00 00 00                                      // ....

                            Case
    5946: A1 4C 0F                                         // .L.

 (0x06)
                            {

    5949: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    5953: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    5957: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    595B: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    5962: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    596C: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    5972: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    5982: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    5985: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    598D: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    598F: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    599F: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    59A2: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    59B2: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    59B7: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    59C7: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    59C8: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    59D8: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    59DC: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    59EC: 03 00                                            // ..

Index (LTRV, 0x03))

    59EE: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP08.LTRV */
                                    }

    59F6: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    59FB: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    59FD: A4 00                                            // ..

                            Case
    59FF: A1 43 04                                         // .C.

 (0x08)
                            {

    5A02: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    5A0B: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    5A13: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    5A16: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    5A1A: A4 01                                            // ..

                            Case
    5A1C: A1 26                                            // .&

 (0x09)
                            {

    5A1E: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    5A27: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    5A2F: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    5A32: 95 69 0A 03                                      // .i..

                                        Return (
    5A36: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    5A37: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    5A43: A5                                               // .

                    Return (
    5A44: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    5A45: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    5A49: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    5A50: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    5A56: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP08.HPCE */
                    }
                }


    5A5D: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    5A62: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    5A69: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP08.PMSX */

    5A73: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    5A7C: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    5A82: 76 60                                            // v`

                            Else
                            {

    5A84: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    5A86: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    5A89: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    5A90: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    5AA0: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    5AB0: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    5AB2: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    5ABB: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    5AC2: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0B) /* \_SB_.AR0B */
                    }


    5AC8: A4 41 52 30 42                                   // .AR0B

                    Return (PR0B) /* \_SB_.PR0B */
                }
            }


    5ACD: A4 50 52 30 42                                   // .PR0B

            Device (RP17)
            {

    5AD2: 5B 82 40 36 52 50 31 37                          // [.@6RP17

                Name (_ADR, 0x001B0000)  // _ADR: Address

    5ADA: 08 5F 41 44 52 0C 00 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    5AE4: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    5AEF: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    5AFF: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    5B0F: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    5B1F: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    5B2F: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    5B3F: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    5B4F: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    5B5F: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    5B6F: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    5B7D: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    5B8D: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    5B94: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    5B99: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    5BA0: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    5BA8: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    5BAE: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    5BB3: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    5BC3: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    5BC7: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    5BD3: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    5BDC: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    5BE1: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    5BE7: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    5BF1: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    5BFC: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    5C07: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    5C12: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    5C1D: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP17._DSM.FUN0 */

    5C20: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    5C2A: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP17._DSM.FUN6 */
                                    }


    5C30: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    5C36: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP17._DSM.FUN4 */
                                    }


    5C3C: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    5C42: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    5C4A: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP17._DSM.FUN8 */

    5C4D: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP17._DSM.FUN9 */
                                        }
                                    }
                                }


    5C57: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP17._DSM.OPTS */
                            }

    5C5D: A4 4F 50 54 53                                   // .OPTS

                            Case
    5C62: A1 42 14                                         // .B.

 (0x04)
                            {

    5C65: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    5C6F: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    5C72: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    5C76: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    5C7C: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    5C7D: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    5C8D: 00 00 00 00                                      // ....

                                    Else
                                    {

    5C91: A1 16                                            // ..

                                        Return (
    5C93: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    5C94: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5CA4: 00 00 00 00                                      // ....

                            Case
    5CA8: A1 4C 0F                                         // .L.

 (0x06)
                            {

    5CAB: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    5CB5: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    5CB9: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    5CBD: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    5CC4: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    5CCE: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    5CD4: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    5CE4: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    5CE7: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    5CEF: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    5CF1: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    5D01: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    5D04: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    5D14: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    5D19: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    5D29: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    5D2A: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    5D3A: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    5D3E: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    5D4E: 03 00                                            // ..

Index (LTRV, 0x03))

    5D50: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP17.LTRV */
                                    }

    5D58: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    5D5D: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    5D5F: A4 00                                            // ..

                            Case
    5D61: A1 43 04                                         // .C.

 (0x08)
                            {

    5D64: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    5D6D: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    5D75: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    5D78: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    5D7C: A4 01                                            // ..

                            Case
    5D7E: A1 26                                            // .&

 (0x09)
                            {

    5D80: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    5D89: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    5D91: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    5D94: 95 69 0A 03                                      // .i..

                                        Return (
    5D98: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    5D99: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    5DA5: A5                                               // .

                    Return (
    5DA6: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    5DA7: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    5DAB: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    5DB2: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    5DB8: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP17.HPCE */
                    }
                }


    5DBF: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    5DC4: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    5DCB: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP17.PMSX */

    5DD5: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    5DDE: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    5DE4: 76 60                                            // v`

                            Else
                            {

    5DE6: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    5DE8: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    5DEB: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    5DF2: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    5E02: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    5E12: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    5E14: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    5E1D: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    5E24: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR14) /* \_SB_.AR14 */
                    }


    5E2A: A4 41 52 31 34                                   // .AR14

                    Return (PR14) /* \_SB_.PR14 */
                }
            }


    5E2F: A4 50 52 31 34                                   // .PR14

            Device (RP18)
            {

    5E34: 5B 82 40 36 52 50 31 38                          // [.@6RP18

                Name (_ADR, 0x001B0001)  // _ADR: Address

    5E3C: 08 5F 41 44 52 0C 01 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    5E46: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    5E51: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    5E61: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    5E71: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    5E81: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    5E91: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    5EA1: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    5EB1: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    5EC1: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    5ED1: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    5EDF: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    5EEF: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    5EF6: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    5EFB: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    5F02: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    5F0A: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    5F10: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    5F15: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    5F25: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    5F29: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    5F35: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    5F3E: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    5F43: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    5F49: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    5F53: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    5F5E: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    5F69: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    5F74: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    5F7F: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP18._DSM.FUN0 */

    5F82: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    5F8C: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP18._DSM.FUN6 */
                                    }


    5F92: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    5F98: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP18._DSM.FUN4 */
                                    }


    5F9E: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    5FA4: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    5FAC: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP18._DSM.FUN8 */

    5FAF: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP18._DSM.FUN9 */
                                        }
                                    }
                                }


    5FB9: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP18._DSM.OPTS */
                            }

    5FBF: A4 4F 50 54 53                                   // .OPTS

                            Case
    5FC4: A1 42 14                                         // .B.

 (0x04)
                            {

    5FC7: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    5FD1: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    5FD4: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    5FD8: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    5FDE: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    5FDF: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    5FEF: 00 00 00 00                                      // ....

                                    Else
                                    {

    5FF3: A1 16                                            // ..

                                        Return (
    5FF5: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    5FF6: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6006: 00 00 00 00                                      // ....

                            Case
    600A: A1 4C 0F                                         // .L.

 (0x06)
                            {

    600D: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    6017: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    601B: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    601F: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    6026: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    6030: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    6036: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    6046: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    6049: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    6051: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    6053: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    6063: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    6066: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    6076: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    607B: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    608B: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    608C: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    609C: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    60A0: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    60B0: 03 00                                            // ..

Index (LTRV, 0x03))

    60B2: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP18.LTRV */
                                    }

    60BA: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    60BF: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    60C1: A4 00                                            // ..

                            Case
    60C3: A1 43 04                                         // .C.

 (0x08)
                            {

    60C6: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    60CF: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    60D7: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    60DA: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    60DE: A4 01                                            // ..

                            Case
    60E0: A1 26                                            // .&

 (0x09)
                            {

    60E2: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    60EB: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    60F3: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    60F6: 95 69 0A 03                                      // .i..

                                        Return (
    60FA: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    60FB: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    6107: A5                                               // .

                    Return (
    6108: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    6109: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    610D: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    6114: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    611A: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP18.HPCE */
                    }
                }


    6121: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    6126: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    612D: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP18.PMSX */

    6137: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    6140: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    6146: 76 60                                            // v`

                            Else
                            {

    6148: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    614A: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    614D: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    6154: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    6164: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    6174: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    6176: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    617F: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    6186: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR15) /* \_SB_.AR15 */
                    }


    618C: A4 41 52 31 35                                   // .AR15

                    Return (PR15) /* \_SB_.PR15 */
                }
            }


    6191: A4 50 52 31 35                                   // .PR15

            Device (RP19)
            {

    6196: 5B 82 40 36 52 50 31 39                          // [.@6RP19

                Name (_ADR, 0x001B0002)  // _ADR: Address

    619E: 08 5F 41 44 52 0C 02 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    61A8: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    61B3: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    61C3: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    61D3: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    61E3: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    61F3: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    6203: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    6213: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    6223: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    6233: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    6241: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    6251: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    6258: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    625D: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    6264: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    626C: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    6272: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    6277: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    6287: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    628B: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    6297: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    62A0: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    62A5: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    62AB: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    62B5: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    62C0: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    62CB: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    62D6: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    62E1: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP19._DSM.FUN0 */

    62E4: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    62EE: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP19._DSM.FUN6 */
                                    }


    62F4: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    62FA: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP19._DSM.FUN4 */
                                    }


    6300: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    6306: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    630E: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP19._DSM.FUN8 */

    6311: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP19._DSM.FUN9 */
                                        }
                                    }
                                }


    631B: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP19._DSM.OPTS */
                            }

    6321: A4 4F 50 54 53                                   // .OPTS

                            Case
    6326: A1 42 14                                         // .B.

 (0x04)
                            {

    6329: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    6333: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    6336: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    633A: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    6340: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    6341: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    6351: 00 00 00 00                                      // ....

                                    Else
                                    {

    6355: A1 16                                            // ..

                                        Return (
    6357: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    6358: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6368: 00 00 00 00                                      // ....

                            Case
    636C: A1 4C 0F                                         // .L.

 (0x06)
                            {

    636F: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    6379: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    637D: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    6381: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    6388: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    6392: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    6398: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    63A8: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    63AB: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    63B3: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    63B5: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    63C5: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    63C8: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    63D8: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    63DD: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    63ED: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    63EE: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    63FE: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    6402: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    6412: 03 00                                            // ..

Index (LTRV, 0x03))

    6414: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP19.LTRV */
                                    }

    641C: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    6421: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    6423: A4 00                                            // ..

                            Case
    6425: A1 43 04                                         // .C.

 (0x08)
                            {

    6428: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    6431: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    6439: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    643C: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    6440: A4 01                                            // ..

                            Case
    6442: A1 26                                            // .&

 (0x09)
                            {

    6444: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    644D: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    6455: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    6458: 95 69 0A 03                                      // .i..

                                        Return (
    645C: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    645D: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    6469: A5                                               // .

                    Return (
    646A: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    646B: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    646F: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    6476: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    647C: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP19.HPCE */
                    }
                }


    6483: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    6488: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    648F: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP19.PMSX */

    6499: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    64A2: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    64A8: 76 60                                            // v`

                            Else
                            {

    64AA: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    64AC: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    64AF: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    64B6: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    64C6: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    64D6: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    64D8: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    64E1: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    64E8: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR16) /* \_SB_.AR16 */
                    }


    64EE: A4 41 52 31 36                                   // .AR16

                    Return (PR16) /* \_SB_.PR16 */
                }
            }


    64F3: A4 50 52 31 36                                   // .PR16

            Device (RP20)
            {

    64F8: 5B 82 40 36 52 50 32 30                          // [.@6RP20

                Name (_ADR, 0x001B0003)  // _ADR: Address

    6500: 08 5F 41 44 52 0C 03 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    650A: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    6515: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    6525: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    6535: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    6545: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    6555: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    6565: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    6575: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    6585: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    6595: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    65A3: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    65B3: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    65BA: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    65BF: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    65C6: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    65CE: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    65D4: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    65D9: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    65E9: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    65ED: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    65F9: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    6602: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    6607: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    660D: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    6617: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    6622: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    662D: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    6638: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    6643: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP20._DSM.FUN0 */

    6646: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    6650: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP20._DSM.FUN6 */
                                    }


    6656: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    665C: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP20._DSM.FUN4 */
                                    }


    6662: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    6668: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    6670: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP20._DSM.FUN8 */

    6673: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP20._DSM.FUN9 */
                                        }
                                    }
                                }


    667D: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP20._DSM.OPTS */
                            }

    6683: A4 4F 50 54 53                                   // .OPTS

                            Case
    6688: A1 42 14                                         // .B.

 (0x04)
                            {

    668B: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    6695: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    6698: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    669C: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    66A2: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    66A3: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    66B3: 00 00 00 00                                      // ....

                                    Else
                                    {

    66B7: A1 16                                            // ..

                                        Return (
    66B9: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    66BA: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    66CA: 00 00 00 00                                      // ....

                            Case
    66CE: A1 4C 0F                                         // .L.

 (0x06)
                            {

    66D1: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    66DB: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    66DF: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    66E3: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    66EA: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    66F4: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    66FA: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    670A: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    670D: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    6715: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    6717: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    6727: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    672A: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    673A: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    673F: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    674F: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    6750: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    6760: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    6764: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    6774: 03 00                                            // ..

Index (LTRV, 0x03))

    6776: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP20.LTRV */
                                    }

    677E: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    6783: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    6785: A4 00                                            // ..

                            Case
    6787: A1 43 04                                         // .C.

 (0x08)
                            {

    678A: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    6793: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    679B: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    679E: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    67A2: A4 01                                            // ..

                            Case
    67A4: A1 26                                            // .&

 (0x09)
                            {

    67A6: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    67AF: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    67B7: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    67BA: 95 69 0A 03                                      // .i..

                                        Return (
    67BE: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    67BF: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    67CB: A5                                               // .

                    Return (
    67CC: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    67CD: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    67D1: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    67D8: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    67DE: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP20.HPCE */
                    }
                }


    67E5: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    67EA: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    67F1: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP20.PMSX */

    67FB: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    6804: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    680A: 76 60                                            // v`

                            Else
                            {

    680C: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    680E: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    6811: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    6818: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    6828: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    6838: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    683A: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    6843: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    684A: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR17) /* \_SB_.AR17 */
                    }


    6850: A4 41 52 31 37                                   // .AR17

                    Return (PR17) /* \_SB_.PR17 */
                }
            }


    6855: A4 50 52 31 37                                   // .PR17

            Device (RP14)
            {

    685A: 5B 82 40 36 52 50 31 34                          // [.@6RP14

                Name (_ADR, 0x001D0005)  // _ADR: Address

    6862: 08 5F 41 44 52 0C 05 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    686C: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    6877: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    6887: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    6897: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    68A7: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    68B7: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    68C7: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    68D7: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    68E7: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    68F7: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    6905: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    6915: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    691C: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    6921: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    6928: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    6930: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    6936: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    693B: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    694B: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    694F: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    695B: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    6964: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    6969: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    696F: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    6979: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    6984: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    698F: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    699A: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    69A5: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP14._DSM.FUN0 */

    69A8: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    69B2: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP14._DSM.FUN6 */
                                    }


    69B8: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    69BE: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP14._DSM.FUN4 */
                                    }


    69C4: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    69CA: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    69D2: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP14._DSM.FUN8 */

    69D5: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP14._DSM.FUN9 */
                                        }
                                    }
                                }


    69DF: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP14._DSM.OPTS */
                            }

    69E5: A4 4F 50 54 53                                   // .OPTS

                            Case
    69EA: A1 42 14                                         // .B.

 (0x04)
                            {

    69ED: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    69F7: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    69FA: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    69FE: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    6A04: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    6A05: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    6A15: 00 00 00 00                                      // ....

                                    Else
                                    {

    6A19: A1 16                                            // ..

                                        Return (
    6A1B: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    6A1C: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6A2C: 00 00 00 00                                      // ....

                            Case
    6A30: A1 4C 0F                                         // .L.

 (0x06)
                            {

    6A33: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    6A3D: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    6A41: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    6A45: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    6A4C: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    6A56: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    6A5C: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    6A6C: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    6A6F: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    6A77: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    6A79: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    6A89: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    6A8C: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    6A9C: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    6AA1: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    6AB1: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    6AB2: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    6AC2: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    6AC6: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    6AD6: 03 00                                            // ..

Index (LTRV, 0x03))

    6AD8: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP14.LTRV */
                                    }

    6AE0: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    6AE5: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    6AE7: A4 00                                            // ..

                            Case
    6AE9: A1 43 04                                         // .C.

 (0x08)
                            {

    6AEC: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    6AF5: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    6AFD: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    6B00: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    6B04: A4 01                                            // ..

                            Case
    6B06: A1 26                                            // .&

 (0x09)
                            {

    6B08: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    6B11: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    6B19: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    6B1C: 95 69 0A 03                                      // .i..

                                        Return (
    6B20: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    6B21: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    6B2D: A5                                               // .

                    Return (
    6B2E: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    6B2F: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    6B33: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    6B3A: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    6B40: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP14.HPCE */
                    }
                }


    6B47: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    6B4C: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    6B53: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP14.PMSX */

    6B5D: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    6B66: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    6B6C: 76 60                                            // v`

                            Else
                            {

    6B6E: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    6B70: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    6B73: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    6B7A: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    6B8A: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    6B9A: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    6B9C: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    6BA5: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    6BAC: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR11) /* \_SB_.AR11 */
                    }


    6BB2: A4 41 52 31 31                                   // .AR11

                    Return (PR11) /* \_SB_.PR11 */
                }
            }


    6BB7: A4 50 52 31 31                                   // .PR11

            Device (RP15)
            {

    6BBC: 5B 82 40 36 52 50 31 35                          // [.@6RP15

                Name (_ADR, 0x001D0006)  // _ADR: Address

    6BC4: 08 5F 41 44 52 0C 06 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    6BCE: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    6BD9: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    6BE9: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    6BF9: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    6C09: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    6C19: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    6C29: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    6C39: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    6C49: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    6C59: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    6C67: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    6C77: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    6C7E: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    6C83: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    6C8A: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    6C92: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    6C98: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    6C9D: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    6CAD: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    6CB1: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    6CBD: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    6CC6: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    6CCB: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    6CD1: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    6CDB: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    6CE6: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    6CF1: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    6CFC: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    6D07: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP15._DSM.FUN0 */

    6D0A: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    6D14: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP15._DSM.FUN6 */
                                    }


    6D1A: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    6D20: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP15._DSM.FUN4 */
                                    }


    6D26: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    6D2C: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    6D34: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP15._DSM.FUN8 */

    6D37: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP15._DSM.FUN9 */
                                        }
                                    }
                                }


    6D41: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP15._DSM.OPTS */
                            }

    6D47: A4 4F 50 54 53                                   // .OPTS

                            Case
    6D4C: A1 42 14                                         // .B.

 (0x04)
                            {

    6D4F: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    6D59: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    6D5C: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    6D60: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    6D66: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    6D67: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    6D77: 00 00 00 00                                      // ....

                                    Else
                                    {

    6D7B: A1 16                                            // ..

                                        Return (
    6D7D: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    6D7E: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6D8E: 00 00 00 00                                      // ....

                            Case
    6D92: A1 4C 0F                                         // .L.

 (0x06)
                            {

    6D95: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    6D9F: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    6DA3: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    6DA7: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    6DAE: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    6DB8: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    6DBE: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    6DCE: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    6DD1: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    6DD9: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    6DDB: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    6DEB: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    6DEE: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    6DFE: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    6E03: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    6E13: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    6E14: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    6E24: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    6E28: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    6E38: 03 00                                            // ..

Index (LTRV, 0x03))

    6E3A: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP15.LTRV */
                                    }

    6E42: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    6E47: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    6E49: A4 00                                            // ..

                            Case
    6E4B: A1 43 04                                         // .C.

 (0x08)
                            {

    6E4E: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    6E57: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    6E5F: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    6E62: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    6E66: A4 01                                            // ..

                            Case
    6E68: A1 26                                            // .&

 (0x09)
                            {

    6E6A: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    6E73: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    6E7B: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    6E7E: 95 69 0A 03                                      // .i..

                                        Return (
    6E82: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    6E83: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    6E8F: A5                                               // .

                    Return (
    6E90: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    6E91: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    6E95: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    6E9C: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    6EA2: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP15.HPCE */
                    }
                }


    6EA9: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    6EAE: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    6EB5: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP15.PMSX */

    6EBF: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    6EC8: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    6ECE: 76 60                                            // v`

                            Else
                            {

    6ED0: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    6ED2: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    6ED5: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    6EDC: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    6EEC: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    6EFC: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    6EFE: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    6F07: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    6F0E: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR12) /* \_SB_.AR12 */
                    }


    6F14: A4 41 52 31 32                                   // .AR12

                    Return (PR12) /* \_SB_.PR12 */
                }
            }


    6F19: A4 50 52 31 32                                   // .PR12

            Device (RP16)
            {

    6F1E: 5B 82 40 36 52 50 31 36                          // [.@6RP16

                Name (_ADR, 0x001D0007)  // _ADR: Address

    6F26: 08 5F 41 44 52 0C 07 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    6F30: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


    6F3B: 5B 81 4C 08 50 58 43 53 00 56 44 49 44 20 00 48  // [.L.PXCS.VDID .H
    6F4B: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
    6F5B: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
    6F6B: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
    6F7B: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
    6F8B: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
    6F9B: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
    6FAB: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
    6FBB: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01        // 3R... ...LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


    6FC9: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    6FD9: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
    6FE0: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

    6FE5: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    6FEC: 14 4A 20 5F 44 53 4D 0C                          // .J _DSM.


    6FF4: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
    6FFA: A0 47 1F 93 68                                   // .G..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

    6FFF: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    700F: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    7013: A2 4E 1D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

    701F: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
    7028: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })

    702D: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

    7033: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

    703D: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

    7048: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

    7053: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

    705E: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
    7069: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0) /* \_SB_.PCI0.RP16._DSM.FUN0 */

    706C: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

    7076: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6) /* \_SB_.PCI0.RP16._DSM.FUN6 */
                                    }


    707C: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

    7082: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4) /* \_SB_.PCI0.RP16._DSM.FUN4 */
                                    }


    7088: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

    708E: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
    7096: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8) /* \_SB_.PCI0.RP16._DSM.FUN8 */

    7099: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9) /* \_SB_.PCI0.RP16._DSM.FUN9 */
                                        }
                                    }
                                }


    70A3: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS) /* \_SB_.PCI0.RP16._DSM.OPTS */
                            }

    70A9: A4 4F 50 54 53                                   // .OPTS

                            Case
    70AE: A1 42 14                                         // .B.

 (0x04)
                            {

    70B1: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
    70BB: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

    70BE: 95 69 0A 02                                      // .i..

                                    If (OBFN)
                                    {

    70C2: A0 1A 4F 42 46 4E                                // ..OBFN

                                        Return (
    70C8: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    70C9: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    70D9: 00 00 00 00                                      // ....

                                    Else
                                    {

    70DD: A1 16                                            // ..

                                        Return (
    70DF: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    70E0: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    70F0: 00 00 00 00                                      // ....

                            Case
    70F4: A1 4C 0F                                         // .L.

 (0x06)
                            {

    70F7: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
    7101: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

    7105: 95 69 0A 02                                      // .i..

                                    If (LTRN)
                                    {

    7109: A0 4F 09 4C 54 52 4E                             // .O.LTRN

                                        If (LOr (LEqual (LMSL, Zero), 
    7110: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

    711A: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    7120: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
    7130: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    7133: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    713B: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    713D: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
    714D: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    7150: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    7160: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    7165: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    7175: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    7176: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    7186: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    718A: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    719A: 03 00                                            // ..

Index (LTRV, 0x03))

    719C: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP16.LTRV */
                                    }

    71A4: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    71A9: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

    71AB: A4 00                                            // ..

                            Case
    71AD: A1 43 04                                         // .C.

 (0x08)
                            {

    71B0: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

    71B9: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    71C1: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    71C4: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

    71C8: A4 01                                            // ..

                            Case
    71CA: A1 26                                            // .&

 (0x09)
                            {

    71CC: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

    71D5: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    71DD: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

    71E0: 95 69 0A 03                                      // .i..

                                        Return (
    71E4: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


    71E5: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


    71F1: A5                                               // .

                    Return (
    71F2: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }


    71F3: 11 03 01 00                                      // ....

                Device (PXSX)
                {

    71F7: 5B 82 17 50 58 53 58                             // [..PXSX

                    Name (_ADR, Zero)  // _ADR: Address

    71FE: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    7204: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE) /* \_SB_.PCI0.RP16.HPCE */
                    }
                }


    720B: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

    7210: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

    7217: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX) /* \_SB_.PCI0.RP16.PMSX */

    7221: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

    722A: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

    7230: 76 60                                            // v`

                            Else
                            {

    7232: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


    7234: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02) // Device Wake
                    }
                }


    7237: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRE) /* \LTRE */
                    Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                    Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */

    723E: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 45  // .*_INI.pLTR1LTRE
    724E: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
    725E: 53 4C                                            // SL

                    Store (OBF1, OBFF) /* \OBFF */
                }


    7260: 70 4F 42 46 31 4F 42 46 46                       // pOBF1OBFF

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

    7269: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

    7270: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR13) /* \_SB_.AR13 */
                    }


    7276: A4 41 52 31 33                                   // .AR13

                    Return (PR13) /* \_SB_.PR13 */
                }
            }


    727B: A4 50 52 31 33                                   // .PR13

            Device (LPCB)
            {

    7280: 5B 82 43 10 4C 50 43 42                          // [.C.LPCB

                Name (_ADR, 0x001F0000)  // _ADR: Address

    7288: 08 5F 41 44 52 0C 00 00 1F 00                    // ._ADR.....

                Scope (\_SB.PCI0.LPCB)
                {
                }


    7292: 10 10 5C 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // ..\/._SB_PCI0LPC
    72A2: 42                                               // B

                Method (SPTS, 1, NotSerialized)
                {
                    Store (One, SLPX) /* \_SB_.PCI0.LPCB.SLPX */

    72A3: 14 12 53 50 54 53 01 70 01 53 4C 50 58           // ..SPTS.p.SLPX

                    Store (One, SLPE) /* \_SB_.PCI0.LPCB.SLPE */
                }


    72B0: 70 01 53 4C 50 45                                // p.SLPE

                Method (SWAK, 1, NotSerialized)
                {

    72B6: 14 0C 53 57 41 4B 01                             // ..SWAK.

                    Store (Zero, SLPE) /* \_SB_.PCI0.LPCB.SLPE */
                }


    72BD: 70 00 53 4C 50 45                                // p.SLPE

                OperationRegion (SMIE, SystemIO, PMBA, 0x04)

    72C3: 5B 80 53 4D 49 45 01 50 4D 42 41 0A 04           // [.SMIE.PMBA..

                Field (SMIE, ByteAcc, NoLock, Preserve)
                {
                        ,   10, 
                    RTCS,   1, 
                        ,   3, 
                    PEXS,   1, 
                    WAKS,   1, 
                    Offset (0x03), 
                    PWBT,   1, 
                    Offset (0x04)
                }


    72D0: 5B 81 22 53 4D 49 45 01 00 0A 52 54 43 53 01 00  // [."SMIE...RTCS..
    72E0: 03 50 45 58 53 01 57 41 4B 53 01 00 08 50 57 42  // .PEXS.WAKS...PWB
    72F0: 54 01 00 07                                      // T...

                OperationRegion (SLPR, SystemIO, SMCR, 0x08)

    72F4: 5B 80 53 4C 50 52 01 53 4D 43 52 0A 08           // [.SLPR.SMCR..

                Field (SLPR, ByteAcc, NoLock, Preserve)
                {
                        ,   4, 
                    SLPE,   1, 
                        ,   31, 
                    SLPX,   1, 
                    Offset (0x08)
                }


    7301: 5B 81 16 53 4C 50 52 01 00 04 53 4C 50 45 01 00  // [..SLPR...SLPE..
    7311: 1F 53 4C 50 58 01 00 1B                          // .SLPX...

                OperationRegion (CPSB, SystemMemory, 0x76113F18, 0x10)

    7319: 5B 80 43 50 53 42 00 0C 18 3F 11 76 0A 10        // [.CPSB...?.v..

                Field (CPSB, AnyAcc, NoLock, Preserve)
                {
                    RTCX,   1, 
                    SBB0,   7, 
                    SBB1,   8, 
                    SBB2,   8, 
                    SBB3,   8, 
                    SBB4,   8, 
                    SBB5,   8, 
                    SBB6,   8, 
                    SBB7,   8, 
                    SBB8,   8, 
                    SBB9,   8, 
                    SBBA,   8, 
                    SBBB,   8, 
                    SBBC,   8, 
                    SBBD,   8, 
                    SBBE,   8, 
                    SBBF,   8
                }
            }
        }
    }


    7327: 5B 81 4C 05 43 50 53 42 00 52 54 43 58 01 53 42  // [.L.CPSB.RTCX.SB
    7337: 42 30 07 53 42 42 31 08 53 42 42 32 08 53 42 42  // B0.SBB1.SBB2.SBB
    7347: 33 08 53 42 42 34 08 53 42 42 35 08 53 42 42 36  // 3.SBB4.SBB5.SBB6
    7357: 08 53 42 42 37 08 53 42 42 38 08 53 42 42 39 08  // .SBB7.SBB8.SBB9.
    7367: 53 42 42 41 08 53 42 42 42 08 53 42 42 43 08 53  // SBBA.SBBB.SBBC.S
    7377: 42 42 44 08 53 42 42 45 08 53 42 42 46 08        // BBD.SBBE.SBBF.

    Scope (_GPE)
    {
    }


    7385: 10 05 5F 47 50 45                                // .._GPE

    Name (_S0, 
    738B: 08 5F 53 30 5F                                   // ._S0_

Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })

    7390: 12 06 04 00 00 00 00                             // .......

    Name (_S3, 
    7397: 08 5F 53 33 5F                                   // ._S3_

Package (0x04)  // _S3_: S3 System State
    {
        0x05, 
        Zero, 
        Zero, 
        Zero
    })

    739C: 12 07 04 0A 05 00 00 00                          // ........

    Name (_S4, 
    73A4: 08 5F 53 34 5F                                   // ._S4_

Package (0x04)  // _S4_: S4 System State
    {
        0x06, 
        Zero, 
        Zero, 
        Zero
    })

    73A9: 12 07 04 0A 06 00 00 00                          // ........

    Name (_S5, 
    73B1: 08 5F 53 35 5F                                   // ._S5_

Package (0x04)  // _S5_: S5 System State
    {
        0x07, 
        Zero, 
        Zero, 
        Zero
    })

    73B6: 12 07 04 0A 07 00 00 00                          // ........

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {

    73BE: 14 37 5F 50 54 53 01                             // .7_PTS.

        If (Arg0)
        {
            \_SB.PCI0.LPCB.SPTS (Arg0)
            \_SB.PCI0.NPTS (Arg0)
            RPTS (Arg0)
            OEMS (Arg0)
        }
    }


    73C5: A0 30 68 5C 2F 04 5F 53 42 5F 50 43 49 30 4C 50  // .0h\/._SB_PCI0LP
    73D5: 43 42 53 50 54 53 68 5C 2F 03 5F 53 42 5F 50 43  // CBSPTSh\/._SB_PC
    73E5: 49 30 4E 50 54 53 68 52 50 54 53 68 4F 45 4D 53  // I0NPTShRPTShOEMS
    73F5: 68                                               // h

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        RWAK (Arg0)
        \_SB.PCI0.NWAK (Arg0)
        \_SB.PCI0.LPCB.SWAK (Arg0)
        OEMW (Arg0)

    73F6: 14 39 5F 57 41 4B 01 52 57 41 4B 68 5C 2F 03 5F  // .9_WAK.RWAKh\/._
    7406: 53 42 5F 50 43 49 30 4E 57 41 4B 68 5C 2F 04 5F  // SB_PCI0NWAKh\/._
    7416: 53 42 5F 50 43 49 30 4C 50 43 42 53 57 41 4B 68  // SB_PCI0LPCBSWAKh
    7426: 4F 45 4D 57 68                                   // OEMWh

        Return (WAKP) /* \WAKP */
    }


    742B: A4 57 41 4B 50                                   // .WAKP

    Scope (_PR)
    {

    7430: 10 4E 06 5F 50 52 5F                             // .N._PR_

        Processor (CPU0, 0x01, 0x00001810, 0x06){}

    7437: 5B 83 0B 43 50 55 30 01 10 18 00 00 06           // [..CPU0......

        Processor (CPU1, 0x02, 0x00001810, 0x06){}

    7444: 5B 83 0B 43 50 55 31 02 10 18 00 00 06           // [..CPU1......

        Processor (CPU2, 0x03, 0x00001810, 0x06){}

    7451: 5B 83 0B 43 50 55 32 03 10 18 00 00 06           // [..CPU2......

        Processor (CPU3, 0x04, 0x00001810, 0x06){}

    745E: 5B 83 0B 43 50 55 33 04 10 18 00 00 06           // [..CPU3......

        Processor (CPU4, 0x05, 0x00001810, 0x06){}

    746B: 5B 83 0B 43 50 55 34 05 10 18 00 00 06           // [..CPU4......

        Processor (CPU5, 0x06, 0x00001810, 0x06){}

    7478: 5B 83 0B 43 50 55 35 06 10 18 00 00 06           // [..CPU5......

        Processor (CPU6, 0x07, 0x00001810, 0x06){}

    7485: 5B 83 0B 43 50 55 36 07 10 18 00 00 06           // [..CPU6......

        Processor (CPU7, 0x08, 0x00001810, 0x06){}
    }


    7492: 5B 83 0B 43 50 55 37 08 10 18 00 00 06           // [..CPU7......

    Scope (_PR.CPU0)
    {

    749F: 10 4B 28 2E 5F 50 52 5F 43 50 55 30              // .K(._PR_CPU0

        Name (CPC1, 
    74AB: 08 43 50 43 31                                   // .CPC1

Package (0x11)
        {
            0x11, 
            One, 

    74B0: 12 46 10 11 0A 11 01                             // .F.....

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 

            0x10, 
            Zero, 
            Zero, 

    74B7: 11 14 0A 11 82 0C 00 7F 08 00 04 71 07 00 00 00  // ...........q....
    74C7: 00 00 00 79 00 0A 10 00 00                       // ...y.....

            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001234, // Address
                    0x02,               // Access Size
                    )
            }, 


    74D0: 11 14 0A 11 82 0C 00 01 08 00 02 34 12 00 00 00  // ...........4....
    74E0: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


    74E5: 11 14 0A 11 82 0C 00 7F 08 10 04 74 07 00 00 00  // ...........t....
    74F5: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


    74FA: 11 14 0A 11 82 0C 00 7F 08 00 04 74 07 00 00 00  // ...........t....
    750A: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


    750F: 11 14 0A 11 82 0C 00 7F 08 08 04 74 07 00 00 00  // ...........t....
    751F: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


    7524: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
    7534: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


    7539: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
    7549: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


    754E: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
    755E: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 


    7563: 11 14 0A 11 82 0C 00 7F 40 00 04 E7 00 00 00 00  // ........@.......
    7573: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 


    7578: 11 14 0A 11 82 0C 00 7F 40 00 04 E8 00 00 00 00  // ........@.......
    7588: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x01,               // Bit Offset
                    0x0000000000000777, // Address
                    0x04,               // Access Size
                    )
            }, 


    758D: 11 14 0A 11 82 0C 00 7F 01 01 04 77 07 00 00 00  // ...........w....
    759D: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000770, // Address
                    0x04,               // Access Size
                    )
            }
        })

    75A2: 11 14 0A 11 82 0C 00 7F 01 00 04 70 07 00 00 00  // ...........p....
    75B2: 00 00 00 79 00                                   // ...y.

        Name (CPC2, 
    75B7: 08 43 50 43 32                                   // .CPC2

Package (0x15)
        {
            0x15, 
            0x02, 

    75BC: 12 4E 16 15 0A 15 0A 02                          // .N......

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


    75C4: 11 14 0A 11 82 0C 00 7F 08 00 04 71 07 00 00 00  // ...........q....
    75D4: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000000000CE, // Address
                    0x04,               // Access Size
                    )
            }, 


    75D9: 11 14 0A 11 82 0C 00 7F 08 08 04 CE 00 00 00 00  // ................
    75E9: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


    75EE: 11 14 0A 11 82 0C 00 7F 08 10 04 71 07 00 00 00  // ...........q....
    75FE: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


    7603: 11 14 0A 11 82 0C 00 7F 08 18 04 71 07 00 00 00  // ...........q....
    7613: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


    7618: 11 14 0A 11 82 0C 00 7F 08 08 04 71 07 00 00 00  // ...........q....
    7628: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


    762D: 11 14 0A 11 82 0C 00 7F 08 10 04 74 07 00 00 00  // ...........t....
    763D: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


    7642: 11 14 0A 11 82 0C 00 7F 08 00 04 74 07 00 00 00  // ...........t....
    7652: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


    7657: 11 14 0A 11 82 0C 00 7F 08 08 04 74 07 00 00 00  // ...........t....
    7667: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


    766C: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
    767C: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


    7681: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
    7691: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


    7696: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
    76A6: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 


    76AB: 11 14 0A 11 82 0C 00 7F 40 00 04 E7 00 00 00 00  // ........@.......
    76BB: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 


    76C0: 11 14 0A 11 82 0C 00 7F 40 00 04 E8 00 00 00 00  // ........@.......
    76D0: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x01,               // Bit Offset
                    0x0000000000000777, // Address
                    0x04,               // Access Size
                    )
            }, 


    76D5: 11 14 0A 11 82 0C 00 7F 02 01 04 77 07 00 00 00  // ...........w....
    76E5: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000770, // Address
                    0x04,               // Access Size
                    )
            }, 

            One, 

    76EA: 11 14 0A 11 82 0C 00 7F 01 00 04 70 07 00 00 00  // ...........p....
    76FA: 00 00 00 79 00 01                                // ...y..

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x0A,               // Bit Width
                    0x20,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


    7700: 11 14 0A 11 82 0C 00 7F 0A 20 04 74 07 00 00 00  // ......... .t....
    7710: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            Zero
        })
    }


    7715: 11 14 0A 11 82 0C 00 7F 08 18 04 74 07 00 00 00  // ...........t....
    7725: 00 00 00 79 00 00                                // ...y..

    Scope (_SB)
    {

    772B: 10 48 05 5F 53 42 5F                             // .H._SB_

        Device (PAGD)
        {

    7732: 5B 82 40 05 50 41 47 44                          // [.@.PAGD

            Name (_HID, "ACPI000C" /* Processor Aggregator Device */)  // _HID: Hardware ID

    773A: 08 5F 48 49 44 0D 41 43 50 49 30 30 30 43 00     // ._HID.ACPI000C.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    7749: 14 30 5F 53 54 41 00                             // .0_STA.

                If (_OSI ("Processor Aggregator Device"))
                {

    7750: A0 25 5F 4F 53 49 0D 50 72 6F 63 65 73 73 6F 72  // .%_OSI.Processor
    7760: 20 41 67 67 72 65 67 61 74 6F 72 20 44 65 76 69  //  Aggregator Devi
    7770: 63 65 00                                         // ce.

                    Return (0x0F)
                }

    7773: A4 0A 0F                                         // ...

                Else
                {

    7776: A1 03                                            // ..

                    Return (Zero)
                }
            }


    7778: A4 00                                            // ..

            Name (_PUR, 
    777A: 08 5F 50 55 52                                   // ._PUR

Package (0x02)  // _PUR: Processor Utilization Request
            {
                One, 
                Zero
            })
        }
    }


    777F: 12 04 02 01 00                                   // .....

    Scope (_SB.PCI0)
    {

    7784: 10 4A 17 2E 5F 53 42 5F 50 43 49 30              // .J.._SB_PCI0

        Device (PDRC)
        {

    7790: 5B 82 4D 16 50 44 52 43                          // [.M.PDRC

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

    7798: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

    77A2: 08 5F 55 49 44 01                                // ._UID.

            Name (BUF0, 
    77A8: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00008000,         // Address Length
                    _Y10)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y11)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y12)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y13)
                Memory32Fixed (ReadWrite,
                    0xFED20000,         // Address Base
                    0x00020000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFED90000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFED45000,         // Address Base
                    0x0004B000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFEE00000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y14)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y15)
            })

    77AD: 11 4A 08 0A 86 86 09 00 01 00 00 00 00 00 80 00  // .J..............
    77BD: 00 86 09 00 01 00 00 00 00 00 10 00 00 86 09 00  // ................
    77CD: 01 00 00 00 00 00 10 00 00 86 09 00 01 00 00 00  // ................
    77DD: 00 00 00 00 00 86 09 00 01 00 00 D2 FE 00 00 02  // ................
    77ED: 00 86 09 00 00 00 00 D9 FE 00 40 00 00 86 09 00  // ..........@.....
    77FD: 01 00 50 D4 FE 00 B0 04 00 86 09 00 00 00 00 00  // ..P.............
    780D: FF 00 00 00 01 86 09 00 00 00 00 E0 FE 00 00 10  // ................
    781D: 00 86 09 00 01 00 00 00 00 00 00 00 00 86 09 00  // ................
    782D: 01 00 00 00 00 00 00 00 00 79 00                 // .........y.

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    7838: 14 46 0C 5F 43 52 53 08                          // .F._CRS.

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y10._BAS, MBR0)  // _BAS: Base Address
                Store (GMHB (), MBR0) /* \_SB_.PCI0.PDRC._CRS.MBR0 */

    7840: 8A 42 55 46 30 0A 04 4D 42 52 30 70 47 4D 48 42  // .BUF0..MBR0pGMHB
    7850: 4D 42 52 30                                      // MBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y11._BAS, DBR0)  // _BAS: Base Address
                Store (GDMB (), DBR0) /* \_SB_.PCI0.PDRC._CRS.DBR0 */

    7854: 8A 42 55 46 30 0A 10 44 42 52 30 70 47 44 4D 42  // .BUF0..DBR0pGDMB
    7864: 44 42 52 30                                      // DBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y12._BAS, EBR0)  // _BAS: Base Address
                Store (GEPB (), EBR0) /* \_SB_.PCI0.PDRC._CRS.EBR0 */

    7868: 8A 42 55 46 30 0A 1C 45 42 52 30 70 47 45 50 42  // .BUF0..EBR0pGEPB
    7878: 45 42 52 30                                      // EBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._BAS, XBR0)  // _BAS: Base Address
                Store (GPCB (), XBR0) /* \_SB_.PCI0.PDRC._CRS.XBR0 */

    787C: 8A 42 55 46 30 0A 28 58 42 52 30 70 47 50 43 42  // .BUF0.(XBR0pGPCB
    788C: 58 42 52 30                                      // XBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._LEN, XSZ0)  // _LEN: Length
                Store (GPCL (), XSZ0) /* \_SB_.PCI0.PDRC._CRS.XSZ0 */

    7890: 8A 42 55 46 30 0A 2C 58 53 5A 30 70 47 50 43 4C  // .BUF0.,XSZ0pGPCL
    78A0: 58 53 5A 30                                      // XSZ0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._BAS, SXRA)  // _BAS: Base Address
                Store (SXRB, SXRA) /* \_SB_.PCI0.PDRC._CRS.SXRA */

    78A4: 8A 42 55 46 30 0A 70 53 58 52 41 70 53 58 52 42  // .BUF0.pSXRApSXRB
    78B4: 53 58 52 41                                      // SXRA

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._LEN, SXRL)  // _LEN: Length
                Store (SXRS, SXRL) /* \_SB_.PCI0.PDRC._CRS.SXRL */

    78B8: 8A 42 55 46 30 0A 74 53 58 52 4C 70 53 58 52 53  // .BUF0.tSXRLpSXRS
    78C8: 53 58 52 4C                                      // SXRL

                If (LNot (HPTE))
                {

    78CC: A0 2D 92 48 50 54 45                             // .-.HPTE

                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y15._BAS, HBAS)  // _BAS: Base Address

    78D3: 8A 42 55 46 30 0A 7C 48 42 41 53                 // .BUF0.|HBAS

                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y15._LEN, HLEN)  // _LEN: Length
                    Store (HPTB, HBAS) /* \_SB_.PCI0.PDRC._CRS.HBAS */

    78DE: 8A 42 55 46 30 0A 80 48 4C 45 4E 70 48 50 54 42  // .BUF0..HLENpHPTB
    78EE: 48 42 41 53                                      // HBAS

                    Store (0x0400, HLEN) /* \_SB_.PCI0.PDRC._CRS.HLEN */
                }


    78F2: 70 0B 00 04 48 4C 45 4E                          // p...HLEN

                Return (BUF0) /* \_SB_.PCI0.PDRC.BUF0 */
            }
        }
    }


    78FA: A4 42 55 46 30                                   // .BUF0

    Name (PNVB, 0x77325C98)

    78FF: 08 50 4E 56 42 0C 98 5C 32 77                    // .PNVB..\2w

    Name (PNVL, 0x0204)

    7909: 08 50 4E 56 4C 0B 04 02                          // .PNVL...

    If (LEqual (ECR1, One))
    {

    7911: A0 40 07 93 45 43 52 31 01                       // .@..ECR1.

        Scope (_SB.PCI0)
        {

    791A: 10 47 06 2E 5F 53 42 5F 50 43 49 30              // .G.._SB_PCI0

            Name (PCIG, 
    7926: 08 50 43 49 47                                   // .PCIG

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */)

    792B: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    793B: 19 C3 43 4D                                      // ..CM

            Method (PCID, 4, Serialized)
            {

    793F: 14 42 04 50 43 49 44 0C                          // .B.PCID.

                If (LEqual (Arg0, PCIG))
                {

    7947: A0 35 93 68 50 43 49 47                          // .5.hPCIG

                    If (
    794F: A0 2D 92                                         // .-.

LGreaterEqual (Arg1, 0x03))
                    {

    7952: 95 69 0A 03                                      // .i..

                        If (LEqual (Arg2, Zero))
                        {

    7956: A0 0B 93 6A 00                                   // ...j.

                            Return (
    795B: A4                                               // .

Buffer (0x02)
                            {
                                 0x01, 0x03                                       // ..
                            })
                        }


    795C: 11 05 0A 02 01 03                                // ......

                        If (LEqual (Arg2, 0x08))
                        {

    7962: A0 07 93 6A 0A 08                                // ...j..

                            Return (One)
                        }


    7968: A4 01                                            // ..

                        If (LEqual (Arg2, 0x09))
                        {

    796A: A0 12 93 6A 0A 09                                // ...j..

                            Return (
    7970: A4                                               // .

Package (0x05)
                            {
                                0xC350, 
                                Ones, 
                                Ones, 
                                0xC350, 
                                Ones
                            })
                        }
                    }
                }


    7971: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                Return (
    797D: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }


    797E: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

    7982: 10 25 2E 5F 53 42 5F 50 43 49 30                 // .%._SB_PCI0

        Method (PCIC, 1, Serialized)
        {

    798D: 14 1A 50 43 49 43 09                             // ..PCIC.

            If (LEqual (ECR1, One))
            {

    7994: A0 11 93 45 43 52 31 01                          // ...ECR1.

                If (LEqual (Arg0, PCIG))
                {

    799C: A0 09 93 68 50 43 49 47                          // ...hPCIG

                    Return (One)
                }
            }


    79A4: A4 01                                            // ..

            Return (Zero)
        }
    }


    79A6: A4 00                                            // ..

    OperationRegion (PNVA, SystemMemory, PNVB, PNVL)

    79A8: 5B 80 50 4E 56 41 00 50 4E 56 42 50 4E 56 4C     // [.PNVA.PNVBPNVL

    Field (PNVA, AnyAcc, Lock, Preserve)
    {
        RCRV,   32, 
        PCHS,   16, 
        PCHG,   16, 
        RPA1,   32, 
        RPA2,   32, 
        RPA3,   32, 
        RPA4,   32, 
        RPA5,   32, 
        RPA6,   32, 
        RPA7,   32, 
        RPA8,   32, 
        RPA9,   32, 
        RPAA,   32, 
        RPAB,   32, 
        RPAC,   32, 
        RPAD,   32, 
        RPAE,   32, 
        RPAF,   32, 
        RPAG,   32, 
        RPAH,   32, 
        RPAI,   32, 
        RPAJ,   32, 
        RPAK,   32, 
        NHLA,   64, 
        NHLL,   32, 
        ADFM,   32, 
        SBRG,   32, 
        GPEM,   32, 
        G2L0,   32, 
        G2L1,   32, 
        G2L2,   32, 
        G2L3,   32, 
        G2L4,   32, 
        G2L5,   32, 
        G2L6,   32, 
        G2L7,   32, 
        G2L8,   32, 
        G2L9,   32, 
        PML1,   16, 
        PML2,   16, 
        PML3,   16, 
        PML4,   16, 
        PML5,   16, 
        PML6,   16, 
        PML7,   16, 
        PML8,   16, 
        PML9,   16, 
        PMLA,   16, 
        PMLB,   16, 
        PMLC,   16, 
        PMLD,   16, 
        PMLE,   16, 
        PMLF,   16, 
        PMLG,   16, 
        PMLH,   16, 
        PMLI,   16, 
        PMLJ,   16, 
        PMLK,   16, 
        PNL1,   16, 
        PNL2,   16, 
        PNL3,   16, 
        PNL4,   16, 
        PNL5,   16, 
        PNL6,   16, 
        PNL7,   16, 
        PNL8,   16, 
        PNL9,   16, 
        PNLA,   16, 
        PNLB,   16, 
        PNLC,   16, 
        PNLD,   16, 
        PNLE,   16, 
        PNLF,   16, 
        PNLG,   16, 
        PNLH,   16, 
        PNLI,   16, 
        PNLJ,   16, 
        PNLK,   16, 
        U0C0,   32, 
        U1C0,   32, 
        ADPM,   32, 
        XHPC,   8, 
        XRPC,   8, 
        XSPC,   8, 
        XSPA,   8, 
        HPTB,   32, 
        HPTE,   8, 
        SMD0,   8, 
        SMD1,   8, 
        SMD2,   8, 
        SMD3,   8, 
        SMD4,   8, 
        SMD5,   8, 
        SMD6,   8, 
        SMD7,   8, 
        SMD8,   8, 
        SMD9,   8, 
        SMDA,   8, 
        SIR0,   8, 
        SIR1,   8, 
        SIR2,   8, 
        SIR3,   8, 
        SIR4,   8, 
        SIR5,   8, 
        SIR6,   8, 
        SIR7,   8, 
        SIR8,   8, 
        SIR9,   8, 
        SIRA,   8, 
        SB00,   32, 
        SB01,   32, 
        SB02,   32, 
        SB03,   32, 
        SB04,   32, 
        SB05,   32, 
        SB06,   32, 
        SB07,   32, 
        SB08,   32, 
        SB09,   32, 
        SB0A,   32, 
        SB10,   32, 
        SB11,   32, 
        SB12,   32, 
        SB13,   32, 
        SB14,   32, 
        SB15,   32, 
        SB16,   32, 
        SB17,   32, 
        SB18,   32, 
        SB19,   32, 
        SB1A,   32, 
        GPEN,   8, 
        SGIR,   8, 
        NIT1,   8, 
        NIT2,   8, 
        NIT3,   8, 
        NPM1,   8, 
        NPM2,   8, 
        NPM3,   8, 
        NPC1,   8, 
        NPC2,   8, 
        NPC3,   8, 
        NL11,   16, 
        NL12,   16, 
        NL13,   16, 
        ND21,   8, 
        ND22,   8, 
        ND23,   8, 
        ND11,   32, 
        ND12,   32, 
        ND13,   32, 
        NLR1,   16, 
        NLR2,   16, 
        NLR3,   16, 
        NLD1,   32, 
        NLD2,   32, 
        NLD3,   32, 
        NEA1,   16, 
        NEA2,   16, 
        NEA3,   16, 
        NEB1,   16, 
        NEB2,   16, 
        NEB3,   16, 
        NEC1,   16, 
        NEC2,   16, 
        NEC3,   16, 
        NRA1,   16, 
        NRA2,   16, 
        NRA3,   16, 
        NMB1,   32, 
        NMB2,   32, 
        NMB3,   32, 
        NMV1,   32, 
        NMV2,   32, 
        NMV3,   32, 
        NPB1,   32, 
        NPB2,   32, 
        NPB3,   32, 
        NPV1,   32, 
        NPV2,   32, 
        NPV3,   32, 
        Offset (0x1E6), 
        SXRB,   32, 
        SXRS,   32, 
        CIOE,   8, 
        CIOI,   8, 
        TAEN,   8, 
        TIRQ,   8, 
        XWMB,   32, 
        EMH4,   8, 
        CSKU,   8, 
        ITA0,   16, 
        ITA1,   16, 
        ITA2,   16, 
        ITA3,   16, 
        ITS0,   8, 
        ITS1,   8, 
        ITS2,   8, 
        ITS3,   8
    }


    79B7: 5B 81 48 3E 50 4E 56 41 10 52 43 52 56 20 50 43  // [.H>PNVA.RCRV PC
    79C7: 48 53 10 50 43 48 47 10 52 50 41 31 20 52 50 41  // HS.PCHG.RPA1 RPA
    79D7: 32 20 52 50 41 33 20 52 50 41 34 20 52 50 41 35  // 2 RPA3 RPA4 RPA5
    79E7: 20 52 50 41 36 20 52 50 41 37 20 52 50 41 38 20  //  RPA6 RPA7 RPA8 
    79F7: 52 50 41 39 20 52 50 41 41 20 52 50 41 42 20 52  // RPA9 RPAA RPAB R
    7A07: 50 41 43 20 52 50 41 44 20 52 50 41 45 20 52 50  // PAC RPAD RPAE RP
    7A17: 41 46 20 52 50 41 47 20 52 50 41 48 20 52 50 41  // AF RPAG RPAH RPA
    7A27: 49 20 52 50 41 4A 20 52 50 41 4B 20 4E 48 4C 41  // I RPAJ RPAK NHLA
    7A37: 40 04 4E 48 4C 4C 20 41 44 46 4D 20 53 42 52 47  // @.NHLL ADFM SBRG
    7A47: 20 47 50 45 4D 20 47 32 4C 30 20 47 32 4C 31 20  //  GPEM G2L0 G2L1 
    7A57: 47 32 4C 32 20 47 32 4C 33 20 47 32 4C 34 20 47  // G2L2 G2L3 G2L4 G
    7A67: 32 4C 35 20 47 32 4C 36 20 47 32 4C 37 20 47 32  // 2L5 G2L6 G2L7 G2
    7A77: 4C 38 20 47 32 4C 39 20 50 4D 4C 31 10 50 4D 4C  // L8 G2L9 PML1.PML
    7A87: 32 10 50 4D 4C 33 10 50 4D 4C 34 10 50 4D 4C 35  // 2.PML3.PML4.PML5
    7A97: 10 50 4D 4C 36 10 50 4D 4C 37 10 50 4D 4C 38 10  // .PML6.PML7.PML8.
    7AA7: 50 4D 4C 39 10 50 4D 4C 41 10 50 4D 4C 42 10 50  // PML9.PMLA.PMLB.P
    7AB7: 4D 4C 43 10 50 4D 4C 44 10 50 4D 4C 45 10 50 4D  // MLC.PMLD.PMLE.PM
    7AC7: 4C 46 10 50 4D 4C 47 10 50 4D 4C 48 10 50 4D 4C  // LF.PMLG.PMLH.PML
    7AD7: 49 10 50 4D 4C 4A 10 50 4D 4C 4B 10 50 4E 4C 31  // I.PMLJ.PMLK.PNL1
    7AE7: 10 50 4E 4C 32 10 50 4E 4C 33 10 50 4E 4C 34 10  // .PNL2.PNL3.PNL4.
    7AF7: 50 4E 4C 35 10 50 4E 4C 36 10 50 4E 4C 37 10 50  // PNL5.PNL6.PNL7.P
    7B07: 4E 4C 38 10 50 4E 4C 39 10 50 4E 4C 41 10 50 4E  // NL8.PNL9.PNLA.PN
    7B17: 4C 42 10 50 4E 4C 43 10 50 4E 4C 44 10 50 4E 4C  // LB.PNLC.PNLD.PNL
    7B27: 45 10 50 4E 4C 46 10 50 4E 4C 47 10 50 4E 4C 48  // E.PNLF.PNLG.PNLH
    7B37: 10 50 4E 4C 49 10 50 4E 4C 4A 10 50 4E 4C 4B 10  // .PNLI.PNLJ.PNLK.
    7B47: 55 30 43 30 20 55 31 43 30 20 41 44 50 4D 20 58  // U0C0 U1C0 ADPM X
    7B57: 48 50 43 08 58 52 50 43 08 58 53 50 43 08 58 53  // HPC.XRPC.XSPC.XS
    7B67: 50 41 08 48 50 54 42 20 48 50 54 45 08 53 4D 44  // PA.HPTB HPTE.SMD
    7B77: 30 08 53 4D 44 31 08 53 4D 44 32 08 53 4D 44 33  // 0.SMD1.SMD2.SMD3
    7B87: 08 53 4D 44 34 08 53 4D 44 35 08 53 4D 44 36 08  // .SMD4.SMD5.SMD6.
    7B97: 53 4D 44 37 08 53 4D 44 38 08 53 4D 44 39 08 53  // SMD7.SMD8.SMD9.S
    7BA7: 4D 44 41 08 53 49 52 30 08 53 49 52 31 08 53 49  // MDA.SIR0.SIR1.SI
    7BB7: 52 32 08 53 49 52 33 08 53 49 52 34 08 53 49 52  // R2.SIR3.SIR4.SIR
    7BC7: 35 08 53 49 52 36 08 53 49 52 37 08 53 49 52 38  // 5.SIR6.SIR7.SIR8
    7BD7: 08 53 49 52 39 08 53 49 52 41 08 53 42 30 30 20  // .SIR9.SIRA.SB00 
    7BE7: 53 42 30 31 20 53 42 30 32 20 53 42 30 33 20 53  // SB01 SB02 SB03 S
    7BF7: 42 30 34 20 53 42 30 35 20 53 42 30 36 20 53 42  // B04 SB05 SB06 SB
    7C07: 30 37 20 53 42 30 38 20 53 42 30 39 20 53 42 30  // 07 SB08 SB09 SB0
    7C17: 41 20 53 42 31 30 20 53 42 31 31 20 53 42 31 32  // A SB10 SB11 SB12
    7C27: 20 53 42 31 33 20 53 42 31 34 20 53 42 31 35 20  //  SB13 SB14 SB15 
    7C37: 53 42 31 36 20 53 42 31 37 20 53 42 31 38 20 53  // SB16 SB17 SB18 S
    7C47: 42 31 39 20 53 42 31 41 20 47 50 45 4E 08 53 47  // B19 SB1A GPEN.SG
    7C57: 49 52 08 4E 49 54 31 08 4E 49 54 32 08 4E 49 54  // IR.NIT1.NIT2.NIT
    7C67: 33 08 4E 50 4D 31 08 4E 50 4D 32 08 4E 50 4D 33  // 3.NPM1.NPM2.NPM3
    7C77: 08 4E 50 43 31 08 4E 50 43 32 08 4E 50 43 33 08  // .NPC1.NPC2.NPC3.
    7C87: 4E 4C 31 31 10 4E 4C 31 32 10 4E 4C 31 33 10 4E  // NL11.NL12.NL13.N
    7C97: 44 32 31 08 4E 44 32 32 08 4E 44 32 33 08 4E 44  // D21.ND22.ND23.ND
    7CA7: 31 31 20 4E 44 31 32 20 4E 44 31 33 20 4E 4C 52  // 11 ND12 ND13 NLR
    7CB7: 31 10 4E 4C 52 32 10 4E 4C 52 33 10 4E 4C 44 31  // 1.NLR2.NLR3.NLD1
    7CC7: 20 4E 4C 44 32 20 4E 4C 44 33 20 4E 45 41 31 10  //  NLD2 NLD3 NEA1.
    7CD7: 4E 45 41 32 10 4E 45 41 33 10 4E 45 42 31 10 4E  // NEA2.NEA3.NEB1.N
    7CE7: 45 42 32 10 4E 45 42 33 10 4E 45 43 31 10 4E 45  // EB2.NEB3.NEC1.NE
    7CF7: 43 32 10 4E 45 43 33 10 4E 52 41 31 10 4E 52 41  // C2.NEC3.NRA1.NRA
    7D07: 32 10 4E 52 41 33 10 4E 4D 42 31 20 4E 4D 42 32  // 2.NRA3.NMB1 NMB2
    7D17: 20 4E 4D 42 33 20 4E 4D 56 31 20 4E 4D 56 32 20  //  NMB3 NMV1 NMV2 
    7D27: 4E 4D 56 33 20 4E 50 42 31 20 4E 50 42 32 20 4E  // NMV3 NPB1 NPB2 N
    7D37: 50 42 33 20 4E 50 56 31 20 4E 50 56 32 20 4E 50  // PB3 NPV1 NPV2 NP
    7D47: 56 33 20 00 08 53 58 52 42 20 53 58 52 53 20 43  // V3 ..SXRB SXRS C
    7D57: 49 4F 45 08 43 49 4F 49 08 54 41 45 4E 08 54 49  // IOE.CIOI.TAEN.TI
    7D67: 52 51 08 58 57 4D 42 20 45 4D 48 34 08 43 53 4B  // RQ.XWMB EMH4.CSK
    7D77: 55 08 49 54 41 30 10 49 54 41 31 10 49 54 41 32  // U.ITA0.ITA1.ITA2
    7D87: 10 49 54 41 33 10 49 54 53 30 08 49 54 53 31 08  // .ITA3.ITS0.ITS1.
    7D97: 49 54 53 32 08 49 54 53 33 08                    // ITS2.ITS3.

    Scope (_SB)
    {

    7DA1: 10 44 AA 5F 53 42 5F                             // .D._SB_

        Name (GCOM, 
    7DA8: 08 47 43 4F 4D                                   // .GCOM

Package (0x02)
        {

    7DAD: 12 43 06 02                                      // .C..

            Package (0x08)
            {
                0x00AF0000, 
                0x00AF0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AC0000, 
                0x00AC0000, 
                0x00AD0000
            }, 


    7DB1: 12 2A 08 0C 00 00 AF 00 0C 00 00 AF 00 0C 00 00  // .*..............
    7DC1: AE 00 0C 00 00 AE 00 0C 00 00 AE 00 0C 00 00 AC  // ................
    7DD1: 00 0C 00 00 AC 00 0C 00 00 AD 00                 // ...........

            Package (0x0A)
            {
                0x00AF0000, 
                0x00AF0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AC0000, 
                0x00AD0000
            }
        })

    7DDC: 12 34 0A 0C 00 00 AF 00 0C 00 00 AF 00 0C 00 00  // .4..............
    7DEC: AE 00 0C 00 00 AE 00 0C 00 00 AE 00 0C 00 00 AE  // ................
    7DFC: 00 0C 00 00 AE 00 0C 00 00 AE 00 0C 00 00 AC 00  // ................
    7E0C: 0C 00 00 AD 00                                   // .....

        Name (GPPG, 
    7E11: 08 47 50 50 47                                   // .GPPG

Package (0x02)
        {

    7E16: 12 2C 02                                         // .,.

            Package (0x08)
            {
                0x18, 
                0x18, 
                0x18, 
                0x18, 
                0x18, 
                0x18, 
                0x08, 
                0x0C
            }, 


    7E19: 12 12 08 0A 18 0A 18 0A 18 0A 18 0A 18 0A 18 0A  // ................
    7E29: 08 0A 0C                                         // ...

            Package (0x0A)
            {
                0x18, 
                0x18, 
                0x18, 
                0x18, 
                0x0D, 
                0x18, 
                0x18, 
                0x18, 
                0x0B, 
                0x0C
            }
        })

    7E2C: 12 16 0A 0A 18 0A 18 0A 18 0A 18 0A 0D 0A 18 0A  // ................
    7E3C: 18 0A 18 0A 0B 0A 0C                             // .......

        Name (PCFG, 
    7E43: 08 50 43 46 47                                   // .PCFG

Package (0x02)
        {

    7E48: 12 3E 02                                         // .>.

            Package (0x08)
            {
                0x0400, 
                0x04C0, 
                0x0400, 
                0x04C0, 
                0x0580, 
                0x0400, 
                0x04C0, 
                0x0400
            }, 


    7E4B: 12 1A 08 0B 00 04 0B C0 04 0B 00 04 0B C0 04 0B  // ................
    7E5B: 80 05 0B 00 04 0B C0 04 0B 00 04                 // ...........

            Package (0x0A)
            {
                0x0400, 
                0x04C0, 
                0x0400, 
                0x04C0, 
                0x0580, 
                0x05E8, 
                0x06A8, 
                0x0768, 
                0x0400, 
                0x0400
            }
        })

    7E66: 12 20 0A 0B 00 04 0B C0 04 0B 00 04 0B C0 04 0B  // . ..............
    7E76: 80 05 0B E8 05 0B A8 06 0B 68 07 0B 00 04 0B 00  // .........h......
    7E86: 04                                               // .

        Name (HOWN, 
    7E87: 08 48 4F 57 4E                                   // .HOWN

Package (0x02)
        {

    7E8C: 12 2C 02                                         // .,.

            Package (0x08)
            {
                0xD0, 
                0xD4, 
                0xD0, 
                0xD4, 
                0xD8, 
                0xD0, 
                0xD4, 
                0xD0
            }, 


    7E8F: 12 12 08 0A D0 0A D4 0A D0 0A D4 0A D8 0A D0 0A  // ................
    7E9F: D4 0A D0                                         // ...

            Package (0x0A)
            {
                0xD0, 
                0xD4, 
                0xD0, 
                0xD4, 
                0xD8, 
                0xDC, 
                0xE0, 
                0xE4, 
                0xD0, 
                0xD0
            }
        })

    7EA2: 12 16 0A 0A D0 0A D4 0A D0 0A D4 0A D8 0A DC 0A  // ................
    7EB2: E0 0A E4 0A D0 0A D0                             // .......

        Name (POWN, 
    7EB9: 08 50 4F 57 4E                                   // .POWN

Package (0x02)
        {

    7EBE: 12 2C 02                                         // .,.

            Package (0x08)
            {
                0x20, 
                0x30, 
                0x20, 
                0x30, 
                0x40, 
                0x20, 
                0x30, 
                0x20
            }, 


    7EC1: 12 12 08 0A 20 0A 30 0A 20 0A 30 0A 40 0A 20 0A  // .... .0. .0.@. .
    7ED1: 30 0A 20                                         // 0. 

            Package (0x0A)
            {
                0x20, 
                0x2C, 
                0x20, 
                0x2C, 
                0x38, 
                0x40, 
                0x4C, 
                0x58, 
                0x20, 
                0x20
            }
        })

    7ED4: 12 16 0A 0A 20 0A 2C 0A 20 0A 2C 0A 38 0A 40 0A  // .... .,. .,.8.@.
    7EE4: 4C 0A 58 0A 20 0A 20                             // L.X. . 

        Name (GPEO, 
    7EEB: 08 47 50 45 4F                                   // .GPEO

Package (0x02)
        {

    7EF0: 12 3E 02                                         // .>.

            Package (0x08)
            {
                0x0140, 
                0x0144, 
                0x0140, 
                0x0144, 
                0x0148, 
                0x0140, 
                0x0144, 
                0x0140
            }, 


    7EF3: 12 1A 08 0B 40 01 0B 44 01 0B 40 01 0B 44 01 0B  // ....@..D..@..D..
    7F03: 48 01 0B 40 01 0B 44 01 0B 40 01                 // H..@..D..@.

            Package (0x0A)
            {
                0x0140, 
                0x0144, 
                0x0140, 
                0x0144, 
                0x0148, 
                0x014C, 
                0x0150, 
                0x0154, 
                0x0140, 
                0x0140
            }
        })

    7F0E: 12 20 0A 0B 40 01 0B 44 01 0B 40 01 0B 44 01 0B  // . ..@..D..@..D..
    7F1E: 48 01 0B 4C 01 0B 50 01 0B 54 01 0B 40 01 0B 40  // H..L..P..T..@..@
    7F2E: 01                                               // .

        Name (GPES, 
    7F2F: 08 47 50 45 53                                   // .GPES

Package (0x0A)
        {
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero
        })

    7F34: 12 0C 0A 00 00 00 00 00 00 00 00 00 00           // .............

        Name (RXEV, 
    7F41: 08 52 58 45 56                                   // .RXEV

Package (0x0A)
        {
            Ones, 
            Ones, 
            Ones, 
            Ones, 
            Ones, 
            Ones, 
            Ones, 
            Ones, 
            Ones, 
            Ones
        })

    7F46: 12 0C 0A FF FF FF FF FF FF FF FF FF FF           // .............

        Method (GNUM, 1, NotSerialized)
        {
            Store (GNMB (Arg0), Local1)
            Store (GGRP (Arg0), Local2)

    7F53: 14 1D 47 4E 55 4D 01 70 47 4E 4D 42 68 61 70 47  // ..GNUM.pGNMBhapG
    7F63: 47 52 50 68 62                                   // GRPhb

            Return (
    7F68: A4                                               // .

Add (Local1, Multiply (Local2, 0x18)))
        }


    7F69: 72 61 77 62 0A 18 00 00                          // rawb....

        Method (INUM, 1, NotSerialized)
        {

    7F71: 14 49 04 49 4E 55 4D 01                          // .I.INUM.

            If (LEqual (PCHS, 0x02))
            {

    7F79: A0 0B 93 50 43 48 53 0A 02                       // ...PCHS..

                Store (Zero, Local0)
            }

    7F82: 70 00 60                                         // p.`

            Else
            {

    7F85: A1 04                                            // ..

                Store (One, Local0)
            }

            Store (GNMB (Arg0), Local1)
            Store (GGRP (Arg0), Local2)
            Store (Zero, Local3)

    7F87: 70 01 60 70 47 4E 4D 42 68 61 70 47 47 52 50 68  // p.`pGNMBhapGGRPh
    7F97: 62 70 00 63                                      // bp.c

            While (LLess (Local3, Local2))
            {
                Add (DerefOf (
    7F9B: A2 15 95 63 62 72 83                             // ...cbr.

Index (DerefOf (
    7FA2: 88 83                                            // ..

Index (GPPG, Local0)), Local3)), Local1, Local1)

    7FA4: 88 47 50 50 47 60 00 63 00 61 61                 // .GPPG`.c.aa

                Increment (Local3)
            }


    7FAF: 75 63                                            // uc

            Return (
    7FB1: A4                                               // .

Add (0x18, Mod (Local1, 0x60)))
        }


    7FB2: 72 0A 18 85 61 0A 60 00 00                       // r...a.`..

        Method (GGRP, 1, Serialized)
        {
            ShiftRight (And (Arg0, 0x00FF0000), 0x10, Local0)

    7FBB: 14 14 47 47 52 50 09 7A 7B 68 0C 00 00 FF 00 00  // ..GGRP.z{h......
    7FCB: 0A 10 60                                         // ..`

            Return (Local0)
        }


    7FCE: A4 60                                            // .`

        Method (GNMB, 1, Serialized)
        {

    7FD0: 14 0D 47 4E 4D 42 09                             // ..GNMB.

            Return (
    7FD7: A4                                               // .

And (Arg0, 0xFFFF))
        }


    7FD8: 7B 68 0B FF FF 00                                // {h....

        Method (GGPE, 1, NotSerialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (And (ShiftRight (GPEM, Multiply (Local0, 0x02)), 0x03), Local2)

    7FDE: 14 3B 47 47 50 45 01 70 47 47 52 50 68 60 70 47  // .;GGPE.pGGRPh`pG
    7FEE: 4E 4D 42 68 61 70 7B 7A 47 50 45 4D 77 60 0A 02  // NMBhap{zGPEMw`..
    7FFE: 00 00 0A 03 00 62                                // .....b

            If (LEqual (Local2, Zero))
            {

    8004: A0 07 93 62 00                                   // ...b.

                Return (0x6F)
            }

    8009: A4 0A 6F                                         // ..o

            Else
            {

    800C: A1 0D                                            // ..

                Return (
    800E: A4                                               // .

Add (Multiply (Subtract (Local2, One), 0x20), Local1))
            }
        }


    800F: 72 77 74 62 01 00 0A 20 00 61 00                 // rwtb... .a.

        Method (GADR, 2, NotSerialized)
        {

    801A: 14 3B 47 41 44 52 02                             // .;GADR.

            If (LEqual (PCHS, 0x02))
            {

    8021: A0 0B 93 50 43 48 53 0A 02                       // ...PCHS..

                Store (Zero, Local0)
            }

    802A: 70 00 60                                         // p.`

            Else
            {

    802D: A1 04                                            // ..

                Store (One, Local0)
            }

            Store (Add (DerefOf (
    802F: 70 01 60 70 72 83                                // p.`pr.

Index (DerefOf (
    8035: 88 83                                            // ..

Index (GCOM, Local0)), Arg0)), SBRG
                ), Local1)
            Store (DerefOf (
    8037: 88 47 43 4F 4D 60 00 68 00 53 42 52 47 00 61 70  // .GCOM`.h.SBRG.ap
    8047: 83                                               // .

Index (DerefOf (
    8048: 88 83                                            // ..

Index (Arg1, Local0)), Arg0)), Local2)

    804A: 88 69 60 00 68 00 62                             // .i`.h.b

            Return (
    8051: A4                                               // .

Add (Local1, Local2))
        }


    8052: 72 61 62 00                                      // rab.

        Method (GPC0, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    8056: 14 43 04 47 50 43 30 09 70 47 47 52 50 68 60 70  // .C.GPC0.pGGRPh`p
    8066: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    8076: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    807E: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


    8088: 5B 81 0B 50 44 57 30 00 54 45 4D 50 20           // [..PDW0.TEMP 

            Return (TEMP) /* \_SB_.GPC0.TEMP */
        }


    8095: A4 54 45 4D 50                                   // .TEMP

        Method (SPC0, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    809A: 14 44 04 53 50 43 30 0A 70 47 47 52 50 68 60 70  // .D.SPC0.pGGRPh`p
    80AA: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    80BA: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    80C2: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


    80CC: 5B 81 0B 50 44 57 30 00 54 45 4D 50 20           // [..PDW0.TEMP 

            Store (Arg1, TEMP) /* \_SB_.SPC0.TEMP */
        }


    80D9: 70 69 54 45 4D 50                                // piTEMP

        Method (GPC1, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), 0x04
                ), Local2)

    80DF: 14 47 04 47 50 43 31 09 70 47 47 52 50 68 60 70  // .G.GPC1.pGGRPh`p
    80EF: 47 4E 4D 42 68 61 70 72 72 47 41 44 52 60 50 43  // GNMBhaprrGADR`PC
    80FF: 46 47 77 61 0A 08 00 00 0A 04 00 62              // FGwa.......b

            OperationRegion (PDW1, SystemMemory, Local2, 0x04)

    810B: 5B 80 50 44 57 31 00 62 0A 04                    // [.PDW1.b..

            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


    8115: 5B 81 0B 50 44 57 31 00 54 45 4D 50 20           // [..PDW1.TEMP 

            Return (TEMP) /* \_SB_.GPC1.TEMP */
        }


    8122: A4 54 45 4D 50                                   // .TEMP

        Method (SPC1, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), 0x04
                ), Local2)

    8127: 14 48 04 53 50 43 31 0A 70 47 47 52 50 68 60 70  // .H.SPC1.pGGRPh`p
    8137: 47 4E 4D 42 68 61 70 72 72 47 41 44 52 60 50 43  // GNMBhaprrGADR`PC
    8147: 46 47 77 61 0A 08 00 00 0A 04 00 62              // FGwa.......b

            OperationRegion (PDW1, SystemMemory, Local2, 0x04)

    8153: 5B 80 50 44 57 31 00 62 0A 04                    // [.PDW1.b..

            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


    815D: 5B 81 0B 50 44 57 31 00 54 45 4D 50 20           // [..PDW1.TEMP 

            Store (Arg1, TEMP) /* \_SB_.SPC1.TEMP */
        }


    816A: 70 69 54 45 4D 50                                // piTEMP

        Method (SRXO, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    8170: 14 48 04 53 52 58 4F 0A 70 47 47 52 50 68 60 70  // .H.SRXO.pGGRPh`p
    8180: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    8190: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    8198: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   28, 
                TEMP,   1, 
                Offset (0x04)
            }


    81A2: 5B 81 0F 50 44 57 30 00 00 1C 54 45 4D 50 01 00  // [..PDW0...TEMP..
    81B2: 03                                               // .

            Store (Arg1, TEMP) /* \_SB_.SRXO.TEMP */
        }


    81B3: 70 69 54 45 4D 50                                // piTEMP

        Method (GGIV, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    81B9: 14 47 04 47 47 49 56 09 70 47 47 52 50 68 60 70  // .G.GGIV.pGGRPh`p
    81C9: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    81D9: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    81E1: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   1, 
                TEMP,   1, 
                Offset (0x04)
            }


    81EB: 5B 81 0F 50 44 57 30 00 00 01 54 45 4D 50 01 00  // [..PDW0...TEMP..
    81FB: 1E                                               // .

            Return (TEMP) /* \_SB_.GGIV.TEMP */
        }


    81FC: A4 54 45 4D 50                                   // .TEMP

        Method (GGOV, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    8201: 14 45 04 47 47 4F 56 09 70 47 47 52 50 68 60 70  // .E.GGOV.pGGRPh`p
    8211: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    8221: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    8229: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }


    8233: 5B 81 0D 50 44 57 30 00 54 45 4D 50 01 00 1F     // [..PDW0.TEMP...

            Return (TEMP) /* \_SB_.GGOV.TEMP */
        }


    8242: A4 54 45 4D 50                                   // .TEMP

        Method (SGOV, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    8247: 14 46 04 53 47 4F 56 0A 70 47 47 52 50 68 60 70  // .F.SGOV.pGGRPh`p
    8257: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    8267: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    826F: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }


    8279: 5B 81 0D 50 44 57 30 00 54 45 4D 50 01 00 1F     // [..PDW0.TEMP...

            Store (Arg1, TEMP) /* \_SB_.SGOV.TEMP */
        }


    8288: 70 69 54 45 4D 50                                // piTEMP

        Method (GGII, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    828E: 14 47 04 47 47 49 49 09 70 47 47 52 50 68 60 70  // .G.GGII.pGGRPh`p
    829E: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    82AE: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    82B6: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }


    82C0: 5B 81 0F 50 44 57 30 00 00 17 54 45 4D 50 01 00  // [..PDW0...TEMP..
    82D0: 08                                               // .

            Return (TEMP) /* \_SB_.GGII.TEMP */
        }


    82D1: A4 54 45 4D 50                                   // .TEMP

        Method (SGII, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    82D6: 14 48 04 53 47 49 49 0A 70 47 47 52 50 68 60 70  // .H.SGII.pGGRPh`p
    82E6: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    82F6: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    82FE: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }


    8308: 5B 81 0F 50 44 57 30 00 00 17 54 45 4D 50 01 00  // [..PDW0...TEMP..
    8318: 08                                               // .

            Store (Arg1, TEMP) /* \_SB_.SGII.TEMP */
        }


    8319: 70 69 54 45 4D 50                                // piTEMP

        Method (GPMV, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    831F: 14 47 04 47 50 4D 56 09 70 47 47 52 50 68 60 70  // .G.GPMV.pGGRPh`p
    832F: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    833F: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    8347: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   3, 
                Offset (0x04)
            }


    8351: 5B 81 0F 50 44 57 30 00 00 0A 54 45 4D 50 03 00  // [..PDW0...TEMP..
    8361: 13                                               // .

            Return (TEMP) /* \_SB_.GPMV.TEMP */
        }


    8362: A4 54 45 4D 50                                   // .TEMP

        Method (SPMV, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    8367: 14 48 04 53 50 4D 56 0A 70 47 47 52 50 68 60 70  // .H.SPMV.pGGRPh`p
    8377: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    8387: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    838F: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   3, 
                Offset (0x04)
            }


    8399: 5B 81 0F 50 44 57 30 00 00 0A 54 45 4D 50 03 00  // [..PDW0...TEMP..
    83A9: 13                                               // .

            Store (Arg1, TEMP) /* \_SB_.SPMV.TEMP */
        }


    83AA: 70 69 54 45 4D 50                                // piTEMP

        Method (GHPO, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)

    83B0: 14 3E 47 48 50 4F 09 70 47 47 52 50 68 60 70 47  // .>GHPO.pGGRPh`pG
    83C0: 4E 4D 42 68 61                                   // NMBha

            OperationRegion (PREG, SystemMemory, GADR (Local0, HOWN), 0x04)

    83C5: 5B 80 50 52 45 47 00 47 41 44 52 60 48 4F 57 4E  // [.PREG.GADR`HOWN
    83D5: 0A 04                                            // ..

            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


    83D7: 5B 81 0B 50 52 45 47 00 54 45 4D 50 20           // [..PREG.TEMP 

            Return (
    83E4: A4                                               // .

And (ShiftRight (TEMP, Local1), One))
        }


    83E5: 7B 7A 54 45 4D 50 61 00 01 00                    // {zTEMPa...

        Method (SHPO, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)

    83EF: 14 49 04 53 48 50 4F 0A 70 47 47 52 50 68 60 70  // .I.SHPO.pGGRPh`p
    83FF: 47 4E 4D 42 68 61                                // GNMBha

            OperationRegion (PREG, SystemMemory, GADR (Local0, HOWN), 0x04)

    8405: 5B 80 50 52 45 47 00 47 41 44 52 60 48 4F 57 4E  // [.PREG.GADR`HOWN
    8415: 0A 04                                            // ..

            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


    8417: 5B 81 0B 50 52 45 47 00 54 45 4D 50 20           // [..PREG.TEMP 

            Or (And (TEMP, Not (ShiftLeft (One, Local1))), ShiftLeft (Arg1, 
                Local1), TEMP) /* \_SB_.SHPO.TEMP */
        }


    8424: 7D 7B 54 45 4D 50 80 79 01 61 00 00 00 79 69 61  // }{TEMP.y.a...yia
    8434: 00 54 45 4D 50                                   // .TEMP

        Method (GGPO, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, POWN), Multiply (ShiftRight (Local1, 0x03), 0x04)
                ), Local2)

    8439: 14 46 05 47 47 50 4F 09 70 47 47 52 50 68 60 70  // .F.GGPO.pGGRPh`p
    8449: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 4F 57  // GNMBhaprGADR`POW
    8459: 4E 77 7A 61 0A 03 00 0A 04 00 00 62              // Nwza.......b

            OperationRegion (PREG, SystemMemory, Local2, 0x04)

    8465: 5B 80 50 52 45 47 00 62 0A 04                    // [.PREG.b..

            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


    846F: 5B 81 0B 50 52 45 47 00 54 45 4D 50 20           // [..PREG.TEMP 

            Return (
    847C: A4                                               // .

And (ShiftRight (TEMP, Multiply (And (Local1, 0x07), 0x04)), 
                0x03))
        }


    847D: 7B 7A 54 45 4D 50 77 7B 61 0A 07 00 0A 04 00 00  // {zTEMPw{a.......
    848D: 0A 03 00                                         // ...

        Method (SGRA, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    8490: 14 48 04 53 47 52 41 0A 70 47 47 52 50 68 60 70  // .H.SGRA.pGGRPh`p
    84A0: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    84B0: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    84B8: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   20, 
                TEMP,   1, 
                Offset (0x04)
            }


    84C2: 5B 81 0F 50 44 57 30 00 00 14 54 45 4D 50 01 00  // [..PDW0...TEMP..
    84D2: 0B                                               // .

            Store (Arg1, TEMP) /* \_SB_.SGRA.TEMP */
        }


    84D3: 70 69 54 45 4D 50                                // piTEMP

        Method (SGWP, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), 0x04
                ), Local2)

    84D9: 14 4C 04 53 47 57 50 0A 70 47 47 52 50 68 60 70  // .L.SGWP.pGGRPh`p
    84E9: 47 4E 4D 42 68 61 70 72 72 47 41 44 52 60 50 43  // GNMBhaprrGADR`PC
    84F9: 46 47 77 61 0A 08 00 00 0A 04 00 62              // FGwa.......b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    8505: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   4, 
                Offset (0x04)
            }


    850F: 5B 81 0F 50 44 57 30 00 00 0A 54 45 4D 50 04 00  // [..PDW0...TEMP..
    851F: 12                                               // .

            Store (Arg1, TEMP) /* \_SB_.SGWP.TEMP */
        }


    8520: 70 69 54 45 4D 50                                // piTEMP

        Method (UGP1, 1, Serialized)
        {

    8526: 14 4E 05 55 47 50 31 09                          // .N.UGP1.

            OperationRegion (GPPX, SystemMemory, GADR (Arg0, GPEO), 0x24)

    852E: 5B 80 47 50 50 58 00 47 41 44 52 68 47 50 45 4F  // [.GPPX.GADRhGPEO
    853E: 0A 24                                            // .$

            Field (GPPX, AnyAcc, NoLock, Preserve)
            {
                STSX,   32, 
                Offset (0x20), 
                GENX,   32
            }


    8540: 5B 81 13 47 50 50 58 00 53 54 53 58 20 00 40 0E  // [..GPPX.STSX .@.
    8550: 47 45 4E 58 20                                   // GENX 

            If (LEqual (And (ShiftRight (GPEM, Multiply (Arg0, 0x02)), 0x03), 
                Zero))
            {

    8555: A0 24 93 7B 7A 47 50 45 4D 77 68 0A 02 00 00 0A  // .$.{zGPEMwh.....
    8565: 03 00 00                                         // ...

                Store (And (STSX, GENX), 
    8568: 70 7B 53 54 53 58 47 45 4E 58 00                 // p{STSXGENX.

Index (GPES, Arg0))
            }

    8573: 88 47 50 45 53 68 00                             // .GPESh.

            Else
            {

    857A: A1 0A                                            // ..

                Store (Zero, 
    857C: 70 00                                            // p.

Index (GPES, Arg0))
            }
        }


    857E: 88 47 50 45 53 68 00                             // .GPESh.

        Method (UGPS, 0, Serialized)
        {

    8585: 14 22 55 47 50 53 08                             // ."UGPS.

            If (LEqual (PCHS, One))
            {

    858C: A0 0B 93 50 43 48 53 01                          // ...PCHS.

                Store (0x0A, Local0)
            }

    8594: 70 0A 0A 60                                      // p..`

            Else
            {

    8598: A1 05                                            // ..

                Store (0x08, Local0)
            }


    859A: 70 0A 08 60                                      // p..`

            While (Local0)
            {
                Decrement (Local0)
                UGP1 (Local0)
            }
        }


    859E: A2 09 60 76 60 55 47 50 31 60                    // ..`v`UGP1`

        Method (CGP1, 2, Serialized)
        {

    85A8: 14 3E 43 47 50 31 0A                             // .>CGP1.

            If (LEqual (And (ShiftRight (GPEM, Multiply (Arg0, 0x02)), 0x03), 
                Zero))
            {

    85AF: A0 37 93 7B 7A 47 50 45 4D 77 68 0A 02 00 00 0A  // .7.{zGPEMwh.....
    85BF: 03 00 00                                         // ...

                OperationRegion (GPPX, SystemMemory, GADR (Arg0, GPEO), 0x04)

    85C2: 5B 80 47 50 50 58 00 47 41 44 52 68 47 50 45 4F  // [.GPPX.GADRhGPEO
    85D2: 0A 04                                            // ..

                Field (GPPX, AnyAcc, NoLock, Preserve)
                {
                    STSX,   32
                }


    85D4: 5B 81 0B 47 50 50 58 00 53 54 53 58 20           // [..GPPX.STSX 

                Store (Arg1, STSX) /* \_SB_.CGP1.STSX */
            }
        }


    85E1: 70 69 53 54 53 58                                // piSTSX

        Method (CGPS, 0, Serialized)
        {

    85E7: 14 27 43 47 50 53 08                             // .'CGPS.

            If (LEqual (PCHS, One))
            {

    85EE: A0 0B 93 50 43 48 53 01                          // ...PCHS.

                Store (0x0A, Local0)
            }

    85F6: 70 0A 0A 60                                      // p..`

            Else
            {

    85FA: A1 05                                            // ..

                Store (0x08, Local0)
            }


    85FC: 70 0A 08 60                                      // p..`

            While (Local0)
            {
                Decrement (Local0)
                CGP1 (Local0, 0xFFFFFFFF)
            }
        }


    8600: A2 0E 60 76 60 43 47 50 31 60 0C FF FF FF FF     // ..`v`CGP1`.....

        Method (CGLS, 0, Serialized)
        {

    860F: 14 45 0B 43 47 4C 53 08                          // .E.CGLS.

            If (LEqual (PCHS, One))
            {

    8617: A0 0B 93 50 43 48 53 01                          // ...PCHS.

                Store (0x0A, Local0)
            }

    861F: 70 0A 0A 60                                      // p..`

            Else
            {

    8623: A1 05                                            // ..

                Store (0x08, Local0)
            }


    8625: 70 0A 08 60                                      // p..`

            While (Local0)
            {
                Decrement (Local0)

    8629: A2 4B 09 60 76 60                                // .K.`v`

                If (LEqual (Local0, 0x09))
                {

    862F: A0 0B 93 60 0A 09                                // ...`..

                    Store (G2L9, Local1)
                }

    8635: 70 47 32 4C 39 61                                // pG2L9a

                ElseIf
    863B: A1 43 08                                         // .C.

 (LEqual (Local0, 0x08))
                {

    863E: A0 0B 93 60 0A 08                                // ...`..

                    Store (G2L8, Local1)
                }

    8644: 70 47 32 4C 38 61                                // pG2L8a

                ElseIf
    864A: A1 44 07                                         // .D.

 (LEqual (Local0, 0x07))
                {

    864D: A0 0B 93 60 0A 07                                // ...`..

                    Store (G2L7, Local1)
                }

    8653: 70 47 32 4C 37 61                                // pG2L7a

                ElseIf
    8659: A1 45 06                                         // .E.

 (LEqual (Local0, 0x06))
                {

    865C: A0 0B 93 60 0A 06                                // ...`..

                    Store (G2L6, Local1)
                }

    8662: 70 47 32 4C 36 61                                // pG2L6a

                ElseIf
    8668: A1 46 05                                         // .F.

 (LEqual (Local0, 0x05))
                {

    866B: A0 0B 93 60 0A 05                                // ...`..

                    Store (G2L5, Local1)
                }

    8671: 70 47 32 4C 35 61                                // pG2L5a

                ElseIf
    8677: A1 47 04                                         // .G.

 (LEqual (Local0, 0x04))
                {

    867A: A0 0B 93 60 0A 04                                // ...`..

                    Store (G2L4, Local1)
                }

    8680: 70 47 32 4C 34 61                                // pG2L4a

                ElseIf
    8686: A1 38                                            // .8

 (LEqual (Local0, 0x03))
                {

    8688: A0 0B 93 60 0A 03                                // ...`..

                    Store (G2L3, Local1)
                }

    868E: 70 47 32 4C 33 61                                // pG2L3a

                ElseIf
    8694: A1 2A                                            // .*

 (LEqual (Local0, 0x02))
                {

    8696: A0 0B 93 60 0A 02                                // ...`..

                    Store (G2L2, Local1)
                }

    869C: 70 47 32 4C 32 61                                // pG2L2a

                ElseIf
    86A2: A1 1C                                            // ..

 (LEqual (Local0, One))
                {

    86A4: A0 0A 93 60 01                                   // ...`.

                    Store (G2L1, Local1)
                }

    86A9: 70 47 32 4C 31 61                                // pG2L1a

                ElseIf
    86AF: A1 0F                                            // ..

 (LEqual (Local0, Zero))
                {

    86B1: A0 0A 93 60 00                                   // ...`.

                    Store (G2L0, Local1)
                }

    86B6: 70 47 32 4C 30 61                                // pG2L0a

                Else
                {

    86BC: A1 02                                            // ..

                    Continue
                }

                CGP1 (Local0, Local1)
            }
        }


    86BE: 9F 43 47 50 31 60 61                             // .CGP1`a

        Method (CAGS, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)

    86C5: 14 4C 05 43 41 47 53 09 70 47 47 52 50 68 60 70  // .L.CAGS.pGGRPh`p
    86D5: 47 4E 4D 42 68 61                                // GNMBha

            If (LEqual (And (ShiftRight (GPEM, Multiply (Local0, 0x02)), 0x03), 
                Zero))
            {

    86DB: A0 46 04 93 7B 7A 47 50 45 4D 77 60 0A 02 00 00  // .F..{zGPEMw`....
    86EB: 0A 03 00 00                                      // ....

                OperationRegion (GPPX, SystemMemory, GADR (Local0, GPEO), 0x04)

    86EF: 5B 80 47 50 50 58 00 47 41 44 52 60 47 50 45 4F  // [.GPPX.GADR`GPEO
    86FF: 0A 04                                            // ..

                Field (GPPX, AnyAcc, NoLock, Preserve)
                {
                    STSX,   32
                }

                Store (STSX, Local3)
                ShiftLeft (One, Local1, Local2)

    8701: 5B 81 0B 47 50 50 58 00 53 54 53 58 20 70 53 54  // [..GPPX.STSX pST
    8711: 53 58 63 79 01 61 62                             // SXcy.ab

                Or (STSX, Local2, STSX) /* \_SB_.CAGS.STSX */
            }
        }


    8718: 7D 53 54 53 58 62 53 54 53 58                    // }STSXbSTSX

        Method (ISME, 1, NotSerialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)

    8722: 14 23 49 53 4D 45 01 70 47 47 52 50 68 60 70 47  // .#ISME.pGGRPh`pG
    8732: 4E 4D 42 68 61                                   // NMBha

            Return (
    8737: A4                                               // .

And (ShiftRight (DerefOf (
    8738: 7B 7A 83                                         // {z.

Index (GPES, Local0)), Local1), One))
        }


    873B: 88 47 50 45 53 60 00 61 00 01 00                 // .GPES`.a...

        Method (DIPI, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    8746: 14 4D 08 44 49 50 49 09 70 47 47 52 50 68 60 70  // .M.DIPI.pGGRPh`p
    8756: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    8766: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    876E: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   9, 
                RDIS,   1, 
                    ,   15, 
                RCFG,   2, 
                Offset (0x04)
            }


    8778: 5B 81 16 50 44 57 30 00 00 09 52 44 49 53 01 00  // [..PDW0...RDIS..
    8788: 0F 52 43 46 47 02 00 05                          // .RCFG...

            If (
    8790: A0 43 04 92                                      // .C..

LNotEqual (RCFG, 0x02))
            {
                Store (DerefOf (
    8794: 93 52 43 46 47 0A 02 70 83                       // .RCFG..p.

Index (RXEV, Local0)), Local3)
                And (Local3, Not (ShiftLeft (0x03, Multiply (Local1, 0x02))), Local3)
                Or (Local3, ShiftLeft (RCFG, Multiply (Local1, 0x02)), 
    879D: 88 52 58 45 56 60 00 63 7B 63 80 79 0A 03 77 61  // .RXEV`.c{c.y..wa
    87AD: 0A 02 00 00 00 63 7D 63 79 52 43 46 47 77 61 0A  // .....c}cyRCFGwa.
    87BD: 02 00 00                                         // ...

Index (RXEV, Local0
                    ))
                Store (0x02, RCFG) /* \_SB_.DIPI.RCFG */

    87C0: 88 52 58 45 56 60 00 70 0A 02 52 43 46 47        // .RXEV`.p..RCFG

                Store (One, RDIS) /* \_SB_.DIPI.RDIS */
            }
        }


    87CE: 70 01 52 44 49 53                                // p.RDIS

        Method (UIPI, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, PCFG), Multiply (Local1, 0x08)), Local2)

    87D4: 14 41 07 55 49 50 49 09 70 47 47 52 50 68 60 70  // .A.UIPI.pGGRPh`p
    87E4: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 50 43 46  // GNMBhaprGADR`PCF
    87F4: 47 77 61 0A 08 00 00 62                          // Gwa....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

    87FC: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   9, 
                RDIS,   1, 
                    ,   15, 
                RCFG,   2, 
                Offset (0x04)
            }

            Store (And (ShiftRight (DerefOf (
    8806: 5B 81 16 50 44 57 30 00 00 09 52 44 49 53 01 00  // [..PDW0...RDIS..
    8816: 0F 52 43 46 47 02 00 05 70 7B 7A 83              // .RCFG...p{z.

Index (RXEV, Local0)), Multiply (Local1, 0x02)
                ), 0x03), Local3)

    8822: 88 52 58 45 56 60 00 77 61 0A 02 00 00 0A 03 00  // .RXEV`.wa.......
    8832: 63                                               // c

            If (
    8833: A0 12 92                                         // ...

LNotEqual (Local3, 0x02))
            {
                Store (Zero, RDIS) /* \_SB_.UIPI.RDIS */

    8836: 93 63 0A 02 70 00 52 44 49 53                    // .c..p.RDIS

                Store (Local3, RCFG) /* \_SB_.UIPI.RCFG */
            }
        }
    }


    8840: 70 63 52 43 46 47                                // pcRCFG

    Scope (\)
    {

    8846: 10 4D 1A 5C 00                                   // .M.\.

        Method (THEN, 0, Serialized)
        {

    884B: 14 2D 54 48 45 4E 08                             // .-THEN.

            OperationRegion (THBA, SystemMemory, 0xFE200000, 0x10)

    8852: 5B 80 54 48 42 41 00 0C 00 00 20 FE 0A 10        // [.THBA.... ...

            Field (THBA, DWordAcc, NoLock, Preserve)
            {
                DO00,   32
            }


    8860: 5B 81 0B 54 48 42 41 03 44 4F 30 30 20           // [..THBA.DO00 

            Return (
    886D: A4                                               // .


    886E: 92                                               // .

LNotEqual (DO00, 0xFFFFFFFF))
        }


    886F: 93 44 4F 30 30 0C FF FF FF FF                    // .DO00.....

        Method (THDA, 2, Serialized)
        {
            Store (0xFE200000, Local0)
            Add (Local0, Multiply (0x40, Multiply (0x80, Subtract (Arg0, 0x20))), 
                Local0)
            Add (Local0, Multiply (0x40, Arg1), Local0)

    8879: 14 27 54 48 44 41 0A 70 0C 00 00 20 FE 60 72 60  // .'THDA.p... .`r`
    8889: 77 0A 40 77 0A 80 74 68 0A 20 00 00 00 60 72 60  // w.@w..th. ...`r`
    8899: 77 0A 40 69 00 60                                // w.@i.`

            Return (Local0)
        }


    889F: A4 60                                            // .`

        Method (STRD, 3, Serialized)
        {

    88A1: 14 38 53 54 52 44 0B                             // .8STRD.

            If (LGreater (Add (Arg1, Arg2), 
    88A8: A0 0A 94 72 69 6A 00                             // ...rij.

SizeOf (Arg0)))
            {

    88AF: 87 68                                            // .h

                Return (Zero)
            }

            ToBuffer (Arg0, Local3)
            Store (Zero, Local0)
            Store (Zero, Local1)

    88B1: A4 00 96 68 63 70 00 60 70 00 61                 // ...hcp.`p.a

            While (LLess (Local1, Arg2))
            {
                Store (DerefOf (
    88BC: A2 1B 95 61 6A 70 83                             // ...ajp.

Index (Local3, Add (Arg1, Local1))), Local2)
                Add (Local0, ShiftLeft (Local2, Multiply (0x08, Local1)), Local0)

    88C3: 88 63 72 69 61 00 00 62 72 60 79 62 77 0A 08 61  // .cria..br`ybw..a
    88D3: 00 00 60                                         // ..`

                Increment (Local1)
            }


    88D6: 75 61                                            // ua

            Return (Local0)
        }


    88D8: A4 60                                            // .`

        Method (THDS, 1, Serialized)
        {

    88DA: 14 4D 0F 54 48 44 53 09                          // .M.THDS.

            If (LNot (THEN ()))
            {

    88E2: A0 08 92 54 48 45 4E                             // ...THEN

                Return (Zero)
            }

            Store (SizeOf (Arg0), Local0)
            Store (THDA (0x20, 0x16), Local1)

    88E9: A4 00 70 87 68 60 70 54 48 44 41 0A 20 0A 16 61  // ..p.h`pTHDA. ..a

            OperationRegion (THBA, SystemMemory, Local1, 0x40)

    88F9: 5B 80 54 48 42 41 00 61 0A 40                    // [.THBA.a.@

            Field (THBA, QWordAcc, NoLock, Preserve)
            {
                QO00,   64
            }


    8903: 5B 81 0C 54 48 42 41 04 51 4F 30 30 40 04        // [..THBA.QO00@.

            Field (THBA, DWordAcc, NoLock, Preserve)
            {
                DO00,   32, 
                Offset (0x10), 
                DO10,   32, 
                Offset (0x30), 
                DO30,   32
            }


    8911: 5B 81 1B 54 48 42 41 03 44 4F 30 30 20 00 40 06  // [..THBA.DO00 .@.
    8921: 44 4F 31 30 20 00 40 0E 44 4F 33 30 20           // DO10 .@.DO30 

            Field (THBA, WordAcc, NoLock, Preserve)
            {
                WO00,   16
            }


    892E: 5B 81 0B 54 48 42 41 02 57 4F 30 30 10           // [..THBA.WO00.

            Field (THBA, ByteAcc, NoLock, Preserve)
            {
                BO00,   8
            }

            Store (0x01000242, DO10) /* \THDS.DO10 */
            Store (Local0, WO00) /* \THDS.WO00 */
            Store (Zero, Local6)
            Store (Local0, Local7)

    893B: 5B 81 0B 54 48 42 41 01 42 4F 30 30 08 70 0C 42  // [..THBA.BO00.p.B
    894B: 02 00 01 44 4F 31 30 70 60 57 4F 30 30 70 00 66  // ...DO10p`WO00p.f
    895B: 70 60 67                                         // p`g

            While (
    895E: A2 1D 92                                         // ...

LGreaterEqual (Local7, 0x08))
            {
                Store (STRD (Arg0, Local6, 0x08), QO00) /* \THDS.QO00 */
                Add (Local6, 0x08, Local6)

    8961: 95 67 0A 08 70 53 54 52 44 68 66 0A 08 51 4F 30  // .g..pSTRDhf..QO0
    8971: 30 72 66 0A 08 66                                // 0rf..f

                Subtract (Local7, 0x08, Local7)
            }


    8977: 74 67 0A 08 67                                   // tg..g

            If (
    897C: A0 1D 92                                         // ...

LGreaterEqual (Local7, 0x04))
            {
                Store (STRD (Arg0, Local6, 0x04), DO00) /* \THDS.DO00 */
                Add (Local6, 0x04, Local6)

    897F: 95 67 0A 04 70 53 54 52 44 68 66 0A 04 44 4F 30  // .g..pSTRDhf..DO0
    898F: 30 72 66 0A 04 66                                // 0rf..f

                Subtract (Local7, 0x04, Local7)
            }


    8995: 74 67 0A 04 67                                   // tg..g

            If (
    899A: A0 1D 92                                         // ...

LGreaterEqual (Local7, 0x02))
            {
                Store (STRD (Arg0, Local6, 0x02), WO00) /* \THDS.WO00 */
                Add (Local6, 0x02, Local6)

    899D: 95 67 0A 02 70 53 54 52 44 68 66 0A 02 57 4F 30  // .g..pSTRDhf..WO0
    89AD: 30 72 66 0A 02 66                                // 0rf..f

                Subtract (Local7, 0x02, Local7)
            }


    89B3: 74 67 0A 02 67                                   // tg..g

            If (
    89B8: A0 19 92                                         // ...

LGreaterEqual (Local7, One))
            {
                Store (STRD (Arg0, Local6, One), BO00) /* \THDS.BO00 */
                Add (Local6, One, Local6)

    89BB: 95 67 01 70 53 54 52 44 68 66 01 42 4F 30 30 72  // .g.pSTRDhf.BO00r
    89CB: 66 01 66                                         // f.f

                Subtract (Local7, One, Local7)
            }


    89CE: 74 67 01 67                                      // tg.g

            Store (Zero, DO30) /* \THDS.DO30 */
        }


    89D2: 70 00 44 4F 33 30                                // p.DO30

        Method (THDH, 1, Serialized)
        {
            THDS (
    89D8: 14 0D 54 48 44 48 09 54 48 44 53                 // ..THDH.THDS

ToHexString (Arg0))
        }


    89E3: 98 68 00                                         // .h.

        Method (THDD, 1, Serialized)
        {
            THDS (
    89E6: 14 0D 54 48 44 44 09 54 48 44 53                 // ..THDD.THDS

ToDecimalString (Arg0))
        }
    }


    89F1: 97 68 00                                         // .h.

    Name (SPTH, One)

    89F4: 08 53 50 54 48 01                                // .SPTH.

    Name (SPTL, 0x02)

    89FA: 08 53 50 54 4C 0A 02                             // .SPTL..

    Method (PCHV, 0, NotSerialized)
    {

    8A01: 14 23 50 43 48 56 00                             // .#PCHV.

        If (LEqual (PCHS, One))
        {

    8A08: A0 0C 93 50 43 48 53 01                          // ...PCHS.

            Return (SPTH) /* \SPTH */
        }


    8A10: A4 53 50 54 48                                   // .SPTH

        If (LEqual (PCHS, 0x02))
        {

    8A15: A0 0D 93 50 43 48 53 0A 02                       // ...PCHS..

            Return (SPTL) /* \SPTL */
        }


    8A1E: A4 53 50 54 4C                                   // .SPTL

        Return (Zero)
    }


    8A23: A4 00                                            // ..

    Scope (_GPE)
    {

    8A25: 10 46 04 5F 47 50 45                             // .F._GPE

        Method (_L6D, 0, Serialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            \_SB.PCI0.XHC.GPEH ()
            \_SB.PCI0.HDAS.GPEH ()
            \_SB.PCI0.XDCI.GPEH ()
        }
    }


    8A2C: 14 3F 5F 4C 36 44 08 5C 2F 04 5F 53 42 5F 50 43  // .?_L6D.\/._SB_PC
    8A3C: 49 30 58 48 43 5F 47 50 45 48 5C 2F 04 5F 53 42  // I0XHC_GPEH\/._SB
    8A4C: 5F 50 43 49 30 48 44 41 53 47 50 45 48 5C 2F 04  // _PCI0HDASGPEH\/.
    8A5C: 5F 53 42 5F 50 43 49 30 58 44 43 49 47 50 45 48  // _SB_PCI0XDCIGPEH

    Scope (_SB.PCI0)
    {

    8A6C: 10 49 1F 2E 5F 53 42 5F 50 43 49 30              // .I.._SB_PCI0

        Device (PRRE)
        {

    8A78: 5B 82 42 09 50 52 52 45                          // [.B.PRRE

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

    8A80: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, "PCHRESV")  // _UID: Unique ID

    8A8A: 08 5F 55 49 44 0D 50 43 48 52 45 53 56 00        // ._UID.PCHRESV.

            Name (_STA, 0x03)  // _STA: Status

    8A98: 08 5F 53 54 41 0A 03                             // ._STA..

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    8A9F: 14 4C 06 5F 43 52 53 08                          // .L._CRS.

                Name (BUF0, 
    8AA7: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFD000000,         // Address Base
                        0x00AC0000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFDAD0000,         // Address Base
                        0x00010000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFDB00000,         // Address Base
                        0x00500000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE000000,         // Address Base
                        0x00020000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE036000,         // Address Base
                        0x00006000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE03D000,         // Address Base
                        0x003C3000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE410000,         // Address Base
                        0x003F0000,         // Address Length
                        )
                })

    8AAC: 11 4A 05 0A 56 86 09 00 01 00 00 00 FD 00 00 AC  // .J..V...........
    8ABC: 00 86 09 00 01 00 00 AD FD 00 00 01 00 86 09 00  // ................
    8ACC: 01 00 00 B0 FD 00 00 50 00 86 09 00 01 00 00 00  // .......P........
    8ADC: FE 00 00 02 00 86 09 00 01 00 60 03 FE 00 60 00  // ..........`...`.
    8AEC: 00 86 09 00 01 00 D0 03 FE 00 30 3C 00 86 09 00  // ..........0<....
    8AFC: 01 00 00 41 FE 00 00 3F 00 79 00                 // ...A...?.y.

                Return (BUF0) /* \_SB_.PCI0.PRRE._CRS.BUF0 */
            }
        }


    8B07: A4 42 55 46 30                                   // .BUF0

        Device (IOTR)
        {

    8B0C: 5B 82 48 15 49 4F 54 52                          // [.H.IOTR

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

    8B14: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, "IoTraps")  // _UID: Unique ID

    8B1E: 08 5F 55 49 44 0D 49 6F 54 72 61 70 73 00        // ._UID.IoTraps.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Store (
    8B2C: 14 49 13 5F 43 52 53 00 70                       // .I._CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)

    8B35: 11 05 0A 02 79 00 60                             // ....y.`

                Name (BUF0, 
    8B3C: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y16)
                })

    8B41: 11 0D 0A 0A 47 01 00 00 00 00 01 FF 79 00        // ....G.......y.

                Name (BUF1, 
    8B4F: 08 42 55 46 31                                   // .BUF1

ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y17)
                })

    8B54: 11 0D 0A 0A 47 01 00 00 00 00 01 FF 79 00        // ....G.......y.

                Name (BUF2, 
    8B62: 08 42 55 46 32                                   // .BUF2

ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y18)
                })

    8B67: 11 0D 0A 0A 47 01 00 00 00 00 01 FF 79 00        // ....G.......y.

                Name (BUF3, 
    8B75: 08 42 55 46 33                                   // .BUF3

ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y19)
                })

    8B7A: 11 0D 0A 0A 47 01 00 00 00 00 01 FF 79 00        // ....G.......y.

                CreateWordField (BUF0, \_SB.PCI0.IOTR._CRS._Y16._MIN, AMI0)  // _MIN: Minimum Base Address

    8B88: 8B 42 55 46 30 0A 02 41 4D 49 30                 // .BUF0..AMI0

                CreateWordField (BUF0, \_SB.PCI0.IOTR._CRS._Y16._MAX, AMA0)  // _MAX: Maximum Base Address

    8B93: 8B 42 55 46 30 0A 04 41 4D 41 30                 // .BUF0..AMA0

                CreateWordField (BUF1, \_SB.PCI0.IOTR._CRS._Y17._MIN, AMI1)  // _MIN: Minimum Base Address

    8B9E: 8B 42 55 46 31 0A 02 41 4D 49 31                 // .BUF1..AMI1

                CreateWordField (BUF1, \_SB.PCI0.IOTR._CRS._Y17._MAX, AMA1)  // _MAX: Maximum Base Address

    8BA9: 8B 42 55 46 31 0A 04 41 4D 41 31                 // .BUF1..AMA1

                CreateWordField (BUF2, \_SB.PCI0.IOTR._CRS._Y18._MIN, AMI2)  // _MIN: Minimum Base Address

    8BB4: 8B 42 55 46 32 0A 02 41 4D 49 32                 // .BUF2..AMI2

                CreateWordField (BUF2, \_SB.PCI0.IOTR._CRS._Y18._MAX, AMA2)  // _MAX: Maximum Base Address

    8BBF: 8B 42 55 46 32 0A 04 41 4D 41 32                 // .BUF2..AMA2

                CreateWordField (BUF3, \_SB.PCI0.IOTR._CRS._Y19._MIN, AMI3)  // _MIN: Minimum Base Address

    8BCA: 8B 42 55 46 33 0A 02 41 4D 49 33                 // .BUF3..AMI3

                CreateWordField (BUF3, \_SB.PCI0.IOTR._CRS._Y19._MAX, AMA3)  // _MAX: Maximum Base Address
                Store (ITA0, AMI0) /* \_SB_.PCI0.IOTR._CRS.AMI0 */
                Store (ITA0, AMA0) /* \_SB_.PCI0.IOTR._CRS.AMA0 */
                Store (ITA1, AMI1) /* \_SB_.PCI0.IOTR._CRS.AMI1 */
                Store (ITA1, AMA1) /* \_SB_.PCI0.IOTR._CRS.AMA1 */
                Store (ITA2, AMI2) /* \_SB_.PCI0.IOTR._CRS.AMI2 */
                Store (ITA2, AMA2) /* \_SB_.PCI0.IOTR._CRS.AMA2 */
                Store (ITA3, AMI3) /* \_SB_.PCI0.IOTR._CRS.AMI3 */
                Store (ITA3, AMA3) /* \_SB_.PCI0.IOTR._CRS.AMA3 */

    8BD5: 8B 42 55 46 33 0A 04 41 4D 41 33 70 49 54 41 30  // .BUF3..AMA3pITA0
    8BE5: 41 4D 49 30 70 49 54 41 30 41 4D 41 30 70 49 54  // AMI0pITA0AMA0pIT
    8BF5: 41 31 41 4D 49 31 70 49 54 41 31 41 4D 41 31 70  // A1AMI1pITA1AMA1p
    8C05: 49 54 41 32 41 4D 49 32 70 49 54 41 32 41 4D 41  // ITA2AMI2pITA2AMA
    8C15: 32 70 49 54 41 33 41 4D 49 33 70 49 54 41 33 41  // 2pITA3AMI3pITA3A
    8C25: 4D 41 33                                         // MA3

                If (LEqual (ITS0, One))
                {

    8C28: A0 0E 93 49 54 53 30 01                          // ...ITS0.

                    ConcatenateResTemplate (Local0, BUF0, Local0)
                }


    8C30: 84 60 42 55 46 30 60                             // .`BUF0`

                If (LEqual (ITS1, One))
                {

    8C37: A0 0E 93 49 54 53 31 01                          // ...ITS1.

                    ConcatenateResTemplate (Local0, BUF1, Local0)
                }


    8C3F: 84 60 42 55 46 31 60                             // .`BUF1`

                If (LEqual (ITS2, One))
                {

    8C46: A0 0E 93 49 54 53 32 01                          // ...ITS2.

                    ConcatenateResTemplate (Local0, BUF2, Local0)
                }


    8C4E: 84 60 42 55 46 32 60                             // .`BUF2`

                If (LEqual (ITS3, One))
                {

    8C55: A0 0E 93 49 54 53 33 01                          // ...ITS3.

                    ConcatenateResTemplate (Local0, BUF3, Local0)
                }


    8C5D: 84 60 42 55 46 33 60                             // .`BUF3`

                Return (Local0)
            }
        }
    }


    8C64: A4 60                                            // .`

    Scope (_SB.PCI0.LPCB)
    {

    8C66: 10 4D 08 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .M./._SB_PCI0LPC
    8C76: 42                                               // B

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

    8C77: 14 18 5F 44 53 4D 0C                             // .._DSM.

            If (PCIC (Arg0))
            {

    8C7E: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


    8C85: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            Return (Zero)
        }


    8C8E: A4 00                                            // ..

        OperationRegion (LPC, PCI_Config, Zero, 0x0100)

    8C90: 5B 80 4C 50 43 5F 02 00 0B 00 01                 // [.LPC_.....

        Field (LPC, AnyAcc, NoLock, Preserve)
        {
            Offset (0x02), 
            CDID,   16, 
            Offset (0x08), 
            CRID,   8, 
            Offset (0x80), 
            IOD0,   8, 
            IOD1,   8, 
            Offset (0xA0), 
                ,   9, 
            PRBL,   1, 
            Offset (0xAC), 
            Offset (0xAD), 
            Offset (0xAE), 
            XUSB,   1, 
            Offset (0xB8), 
                ,   22, 
            GR0B,   2, 
            Offset (0xBC), 
                ,   2, 
            GR19,   2, 
            Offset (0xC0), 
            Offset (0xDC), 
                ,   2, 
            ESPI,   1
        }
    }


    8C9B: 5B 81 47 05 4C 50 43 5F 00 00 10 43 44 49 44 10  // [.G.LPC_...CDID.
    8CAB: 00 20 43 52 49 44 08 00 48 3B 49 4F 44 30 08 49  // . CRID..H;IOD0.I
    8CBB: 4F 44 31 08 00 40 0F 00 09 50 52 42 4C 01 00 46  // OD1..@...PRBL..F
    8CCB: 05 00 08 00 08 58 55 53 42 01 00 4F 04 00 16 47  // .....XUSB..O...G
    8CDB: 52 30 42 02 00 08 00 02 47 52 31 39 02 00 1C 00  // R0B.....GR19....
    8CEB: 40 0E 00 02 45 53 50 49 01                       // @...ESPI.

    Scope (_SB.PCI0)
    {

    8CF4: 10 4C 4E 2E 5F 53 42 5F 50 43 49 30              // .LN._SB_PCI0

        Device (PPMC)
        {

    8D00: 5B 82 44 05 50 50 4D 43                          // [.D.PPMC

            Name (_ADR, 0x001F0002)  // _ADR: Address

    8D08: 08 5F 41 44 52 0C 02 00 1F 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    8D12: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    8D19: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    8D20: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }


    8D29: A4 00                                            // ..

            OperationRegion (PMCB, PCI_Config, Zero, 0x0100)

    8D2B: 5B 80 50 4D 43 42 02 00 0B 00 01                 // [.PMCB.....

            Field (PMCB, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x40), 
                Offset (0x41), 
                ACBA,   8, 
                Offset (0x48), 
                    ,   12, 
                PWBA,   20
            }
        }


    8D36: 5B 81 1E 50 4D 43 42 00 56 44 49 44 20 00 40 1E  // [..PMCB.VDID .@.
    8D46: 00 08 41 43 42 41 08 00 30 00 0C 50 57 42 41 14  // ..ACBA..0..PWBA.

        Device (SBUS)
        {

    8D56: 5B 82 49 48 53 42 55 53                          // [.IHSBUS

            Name (_ADR, 0x001F0004)  // _ADR: Address

    8D5E: 08 5F 41 44 52 0C 04 00 1F 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    8D68: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    8D6F: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    8D76: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }


    8D7F: A4 00                                            // ..

            OperationRegion (SMBP, PCI_Config, Zero, 0xC0)

    8D81: 5B 80 53 4D 42 50 02 00 0A C0                    // [.SMBP....

            Field (SMBP, DWordAcc, NoLock, Preserve)
            {
                Offset (0x20), 
                    ,   5, 
                SBAR,   11, 
                Offset (0x40), 
                    ,   2, 
                I2CE,   1, 
                Offset (0x50), 
                    ,   5, 
                TCOB,   11
            }


    8D8B: 5B 81 24 53 4D 42 50 03 00 40 10 00 05 53 42 41  // [.$SMBP..@...SBA
    8D9B: 52 0B 00 40 0F 00 02 49 32 43 45 01 00 4D 07 00  // R..@...I2CE..M..
    8DAB: 05 54 43 4F 42 0B                                // .TCOB.

            OperationRegion (SMBI, SystemIO, ShiftLeft (SBAR, 0x05), 0x10)

    8DB1: 5B 80 53 4D 42 49 01 79 53 42 41 52 0A 05 00 0A  // [.SMBI.ySBAR....
    8DC1: 10                                               // .

            Field (SMBI, ByteAcc, NoLock, Preserve)
            {
                HSTS,   8, 
                Offset (0x02), 
                HCON,   8, 
                HCOM,   8, 
                TXSA,   8, 
                DAT0,   8, 
                DAT1,   8, 
                HBDR,   8, 
                PECR,   8, 
                RXSA,   8, 
                SDAT,   16
            }


    8DC2: 5B 81 3A 53 4D 42 49 01 48 53 54 53 08 00 08 48  // [.:SMBI.HSTS...H
    8DD2: 43 4F 4E 08 48 43 4F 4D 08 54 58 53 41 08 44 41  // CON.HCOM.TXSA.DA
    8DE2: 54 30 08 44 41 54 31 08 48 42 44 52 08 50 45 43  // T0.DAT1.HBDR.PEC
    8DF2: 52 08 52 58 53 41 08 53 44 41 54 10              // R.RXSA.SDAT.

            Method (SSXB, 2, Serialized)
            {

    8DFE: 14 44 04 53 53 58 42 0A                          // .D.SSXB.

                If (STRT ())
                {

    8E06: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (0x48, HCON) /* \_SB_.PCI0.SBUS.HCON */

    8E0C: A4 00 70 00 49 32 43 45 70 0A BF 48 53 54 53 70  // ..p.I2CEp..HSTSp
    8E1C: 68 54 58 53 41 70 69 48 43 4F 4D 70 0A 48 48 43  // hTXSApiHCOMp.HHC
    8E2C: 4F 4E                                            // ON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    8E2E: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    8E3E: 53                                               // S

                    Return (One)
                }


    8E3F: A4 01                                            // ..

                Return (Zero)
            }


    8E41: A4 00                                            // ..

            Method (SRXB, 1, Serialized)
            {

    8E43: 14 48 04 53 52 58 42 09                          // .H.SRXB.

                If (STRT ())
                {

    8E4B: A0 09 53 54 52 54                                // ..STRT

                    Return (0xFFFF)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Or (Arg0, One), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (0x44, HCON) /* \_SB_.PCI0.SBUS.HCON */

    8E51: A4 0B FF FF 70 00 49 32 43 45 70 0A BF 48 53 54  // ....p.I2CEp..HST
    8E61: 53 70 7D 68 01 00 54 58 53 41 70 0A 44 48 43 4F  // Sp}h..TXSAp.DHCO
    8E71: 4E                                               // N

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    8E72: A0 15 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    8E82: 53                                               // S

                    Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                }


    8E83: A4 44 41 54 30                                   // .DAT0

                Return (0xFFFF)
            }


    8E88: A4 0B FF FF                                      // ....

            Method (SWRB, 3, Serialized)
            {

    8E8C: 14 4A 04 53 57 52 42 0B                          // .J.SWRB.

                If (STRT ())
                {

    8E94: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (Arg2, DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                Store (0x48, HCON) /* \_SB_.PCI0.SBUS.HCON */

    8E9A: A4 00 70 00 49 32 43 45 70 0A BF 48 53 54 53 70  // ..p.I2CEp..HSTSp
    8EAA: 68 54 58 53 41 70 69 48 43 4F 4D 70 6A 44 41 54  // hTXSApiHCOMpjDAT
    8EBA: 30 70 0A 48 48 43 4F 4E                          // 0p.HHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    8EC2: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    8ED2: 53                                               // S

                    Return (One)
                }


    8ED3: A4 01                                            // ..

                Return (Zero)
            }


    8ED5: A4 00                                            // ..

            Method (SRDB, 2, Serialized)
            {

    8ED7: 14 4E 04 53 52 44 42 0A                          // .N.SRDB.

                If (STRT ())
                {

    8EDF: A0 09 53 54 52 54                                // ..STRT

                    Return (0xFFFF)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Or (Arg0, One), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (0x48, HCON) /* \_SB_.PCI0.SBUS.HCON */

    8EE5: A4 0B FF FF 70 00 49 32 43 45 70 0A BF 48 53 54  // ....p.I2CEp..HST
    8EF5: 53 70 7D 68 01 00 54 58 53 41 70 69 48 43 4F 4D  // Sp}h..TXSApiHCOM
    8F05: 70 0A 48 48 43 4F 4E                             // p.HHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    8F0C: A0 15 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    8F1C: 53                                               // S

                    Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                }


    8F1D: A4 44 41 54 30                                   // .DAT0

                Return (0xFFFF)
            }


    8F22: A4 0B FF FF                                      // ....

            Method (SWRW, 3, Serialized)
            {

    8F26: 14 48 05 53 57 52 57 0B                          // .H.SWRW.

                If (STRT ())
                {

    8F2E: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                And (Arg2, 0xFF, DAT1) /* \_SB_.PCI0.SBUS.DAT1 */
                And (ShiftRight (Arg2, 0x08), 0xFF, DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                Store (0x4C, HCON) /* \_SB_.PCI0.SBUS.HCON */

    8F34: A4 00 70 00 49 32 43 45 70 0A BF 48 53 54 53 70  // ..p.I2CEp..HSTSp
    8F44: 68 54 58 53 41 70 69 48 43 4F 4D 7B 6A 0A FF 44  // hTXSApiHCOM{j..D
    8F54: 41 54 31 7B 7A 6A 0A 08 00 0A FF 44 41 54 30 70  // AT1{zj.....DAT0p
    8F64: 0A 4C 48 43 4F 4E                                // .LHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    8F6A: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    8F7A: 53                                               // S

                    Return (One)
                }


    8F7B: A4 01                                            // ..

                Return (Zero)
            }


    8F7D: A4 00                                            // ..

            Method (SRDW, 2, Serialized)
            {

    8F7F: 14 4A 05 53 52 44 57 0A                          // .J.SRDW.

                If (STRT ())
                {

    8F87: A0 09 53 54 52 54                                // ..STRT

                    Return (0xFFFF)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Or (Arg0, One), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (0x4C, HCON) /* \_SB_.PCI0.SBUS.HCON */

    8F8D: A4 0B FF FF 70 00 49 32 43 45 70 0A BF 48 53 54  // ....p.I2CEp..HST
    8F9D: 53 70 7D 68 01 00 54 58 53 41 70 69 48 43 4F 4D  // Sp}h..TXSApiHCOM
    8FAD: 70 0A 4C 48 43 4F 4E                             // p.LHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    8FB4: A0 1F 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    8FC4: 53                                               // S

                    Return (
    8FC5: A4                                               // .

Or (ShiftLeft (DAT0, 0x08), DAT1))
                }


    8FC6: 7D 79 44 41 54 30 0A 08 00 44 41 54 31 00        // }yDAT0...DAT1.

                Return (0xFFFFFFFF)
            }


    8FD4: A4 0C FF FF FF FF                                // ......

            Method (SBLW, 4, Serialized)
            {

    8FDA: 14 4A 09 53 42 4C 57 0C                          // .J.SBLW.

                If (STRT ())
                {

    8FE2: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Arg3, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (SizeOf (Arg2), DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                Store (Zero, Local1)
                Store (DerefOf (
    8FE8: A4 00 70 6B 49 32 43 45 70 0A BF 48 53 54 53 70  // ..pkI2CEp..HSTSp
    8FF8: 68 54 58 53 41 70 69 48 43 4F 4D 70 87 6A 44 41  // hTXSApiHCOMp.jDA
    9008: 54 30 70 00 61 70 83                             // T0p.ap.

Index (Arg2, Zero)), HBDR) /* \_SB_.PCI0.SBUS.HBDR */
                Store (0x54, HCON) /* \_SB_.PCI0.SBUS.HCON */

    900F: 88 6A 00 00 48 42 44 52 70 0A 54 48 43 4F 4E     // .j..HBDRp.THCON

                While (LGreater (SizeOf (Arg2), Local1))
                {
                    Store (0x0FA0, Local0)

    901E: A2 41 04 94 87 6A 61 70 0B A0 0F 60              // .A...jap...`

                    While (LAnd (LNot (
    902A: A2 12 90 92                                      // ....

And (HSTS, 0x80)), Local0))
                    {
                        Decrement (Local0)

    902E: 7B 48 53 54 53 0A 80 00 60 76 60                 // {HSTS...`v`

                        Stall (0x32)
                    }


    9039: 5B 21 0A 32                                      // [!.2

                    If (LNot (Local0))
                    {
                        KILL ()

    903D: A0 09 92 60 4B 49 4C 4C                          // ...`KILL

                        Return (Zero)
                    }

                    Store (0x80, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                    Increment (Local1)

    9045: A4 00 70 0A 80 48 53 54 53 75 61                 // ..p..HSTSua

                    If (LGreater (SizeOf (Arg2), Local1))
                    {

    9050: A0 0F 94 87 6A 61                                // ....ja

                        Store (DerefOf (
    9056: 70 83                                            // p.

Index (Arg2, Local1)), HBDR) /* \_SB_.PCI0.SBUS.HBDR */
                    }
                }


    9058: 88 6A 61 00 48 42 44 52                          // .ja.HBDR

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    9060: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    9070: 53                                               // S

                    Return (One)
                }


    9071: A4 01                                            // ..

                Return (Zero)
            }


    9073: A4 00                                            // ..

            Method (SBLR, 3, Serialized)
            {

    9075: 14 40 0D 53 42 4C 52 0B                          // .@.SBLR.

                Name (TBUF, 
    907D: 08 54 42 55 46                                   // .TBUF

Buffer (0x0100){})

    9082: 11 04 0B 00 01                                   // .....

                If (STRT ())
                {

    9087: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Arg2, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Or (Arg0, One), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (0x54, HCON) /* \_SB_.PCI0.SBUS.HCON */
                Store (0x0FA0, Local0)

    908D: A4 00 70 6A 49 32 43 45 70 0A BF 48 53 54 53 70  // ..pjI2CEp..HSTSp
    909D: 7D 68 01 00 54 58 53 41 70 69 48 43 4F 4D 70 0A  // }h..TXSApiHCOMp.
    90AD: 54 48 43 4F 4E 70 0B A0 0F 60                    // THCONp...`

                While (LAnd (LNot (
    90B7: A2 12 90 92                                      // ....

And (HSTS, 0x80)), Local0))
                {
                    Decrement (Local0)

    90BB: 7B 48 53 54 53 0A 80 00 60 76 60                 // {HSTS...`v`

                    Stall (0x32)
                }


    90C6: 5B 21 0A 32                                      // [!.2

                If (LNot (Local0))
                {
                    KILL ()

    90CA: A0 09 92 60 4B 49 4C 4C                          // ...`KILL

                    Return (Zero)
                }

                Store (DAT0, 
    90D2: A4 00 70 44 41 54 30                             // ..pDAT0

Index (TBUF, Zero))
                Store (0x80, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (One, Local1)

    90D9: 88 54 42 55 46 00 00 70 0A 80 48 53 54 53 70 01  // .TBUF..p..HSTSp.
    90E9: 61                                               // a

                While (LLess (Local1, 
    90EA: A2 43 04 95 61                                   // .C..a

DerefOf (
    90EF: 83                                               // .

Index (TBUF, Zero))))
                {
                    Store (0x0FA0, Local0)

    90F0: 88 54 42 55 46 00 00 70 0B A0 0F 60              // .TBUF..p...`

                    While (LAnd (LNot (
    90FC: A2 12 90 92                                      // ....

And (HSTS, 0x80)), Local0))
                    {
                        Decrement (Local0)

    9100: 7B 48 53 54 53 0A 80 00 60 76 60                 // {HSTS...`v`

                        Stall (0x32)
                    }


    910B: 5B 21 0A 32                                      // [!.2

                    If (LNot (Local0))
                    {
                        KILL ()

    910F: A0 09 92 60 4B 49 4C 4C                          // ...`KILL

                        Return (Zero)
                    }

                    Store (HBDR, 
    9117: A4 00 70 48 42 44 52                             // ..pHBDR

Index (TBUF, Local1))
                    Store (0x80, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    911E: 88 54 42 55 46 61 00 70 0A 80 48 53 54 53        // .TBUFa.p..HSTS

                    Increment (Local1)
                }


    912C: 75 61                                            // ua

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    912E: A0 15 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    913E: 53                                               // S

                    Return (TBUF) /* \_SB_.PCI0.SBUS.SBLR.TBUF */
                }


    913F: A4 54 42 55 46                                   // .TBUF

                Return (Zero)
            }


    9144: A4 00                                            // ..

            Method (STRT, 0, Serialized)
            {
                Store (0xC8, Local0)

    9146: 14 4F 04 53 54 52 54 08 70 0A C8 60              // .O.STRT.p..`

                While (Local0)
                {

    9152: A2 1D 60                                         // ..`

                    If (And (HSTS, 0x40))
                    {
                        Decrement (Local0)
                        Sleep (One)

    9155: A0 15 7B 48 53 54 53 0A 40 00 76 60 5B 22 01     // ..{HSTS.@.v`[".

                        If (LEqual (Local0, Zero))
                        {

    9164: A0 06 93 60 00                                   // ...`.

                            Return (One)
                        }
                    }

    9169: A4 01                                            // ..

                    Else
                    {

    916B: A1 04                                            // ..

                        Store (Zero, Local0)
                    }
                }

                Store (0x0FA0, Local0)

    916D: 70 00 60 70 0B A0 0F 60                          // p.`p...`

                While (Local0)
                {

    9175: A2 1E 60                                         // ..`

                    If (And (HSTS, One))
                    {
                        Decrement (Local0)
                        Stall (0x32)

    9178: A0 17 7B 48 53 54 53 01 00 76 60 5B 21 0A 32     // ..{HSTS..v`[!.2

                        If (LEqual (Local0, Zero))
                        {
                            KILL ()
                        }
                    }

    9187: A0 08 93 60 00 4B 49 4C 4C                       // ...`.KILL

                    Else
                    {

    9190: A1 03                                            // ..

                        Return (Zero)
                    }
                }


    9192: A4 00                                            // ..

                Return (One)
            }


    9194: A4 01                                            // ..

            Method (COMP, 0, Serialized)
            {
                Store (0x0FA0, Local0)

    9196: 14 2D 43 4F 4D 50 08 70 0B A0 0F 60              // .-COMP.p...`

                While (Local0)
                {

    91A2: A2 1F 60                                         // ..`

                    If (And (HSTS, 0x02))
                    {

    91A5: A0 0B 7B 48 53 54 53 0A 02 00                    // ..{HSTS...

                        Return (One)
                    }

    91AF: A4 01                                            // ..

                    Else
                    {
                        Decrement (Local0)
                        Stall (0x32)

    91B1: A1 10 76 60 5B 21 0A 32                          // ..v`[!.2

                        If (LEqual (Local0, Zero))
                        {
                            KILL ()
                        }
                    }
                }


    91B9: A0 08 93 60 00 4B 49 4C 4C                       // ...`.KILL

                Return (Zero)
            }


    91C2: A4 00                                            // ..

            Method (KILL, 0, Serialized)
            {
                Or (HCON, 0x02, HCON) /* \_SB_.PCI0.SBUS.HCON */

    91C4: 14 1C 4B 49 4C 4C 08 7D 48 43 4F 4E 0A 02 48 43  // ..KILL.}HCON..HC
    91D4: 4F 4E                                            // ON

                Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
            }
        }
    }


    91D6: 7D 48 53 54 53 0A FF 48 53 54 53                 // }HSTS..HSTS

    Scope (_SB)
    {

    91E1: 10 4D 52 5F 53 42 5F                             // .MR_SB_

        Device (LNKA)
        {

    91E8: 5B 82 42 0A 4C 4E 4B 41                          // [.B.LNKA

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    91F0: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

    91FA: 08 5F 55 49 44 01                                // ._UID.

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    9200: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PARC, 0x80, PARC) /* \_SB_.PARC */
            }


    9207: 7D 50 41 52 43 0A 80 50 41 52 43                 // }PARC..PARC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    9212: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSA) /* \_SB_.PRSA */
            }


    9219: A4 50 52 53 41                                   // .PRSA

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    921E: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLA, 
    9225: 08 52 54 4C 41                                   // .RTLA

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    922A: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLA, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKA._CRS.IRQ0 */
                ShiftLeft (One, And (PARC, 0x0F), IRQ0) /* \_SB_.LNKA._CRS.IRQ0 */

    9234: 8B 52 54 4C 41 01 49 52 51 30 70 00 49 52 51 30  // .RTLA.IRQ0p.IRQ0
    9244: 79 01 7B 50 41 52 43 0A 0F 00 49 52 51 30        // y.{PARC...IRQ0

                Return (RTLA) /* \_SB_.LNKA._CRS.RTLA */
            }


    9252: A4 52 54 4C 41                                   // .RTLA

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    9257: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    925E: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PARC) /* \_SB_.PARC */
            }


    926D: 70 60 50 41 52 43                                // p`PARC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    9273: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PARC, 0x80))
                {

    927A: A0 0C 7B 50 41 52 43 0A 80 00                    // ..{PARC...

                    Return (0x09)
                }

    9284: A4 0A 09                                         // ...

                Else
                {

    9287: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    9289: A4 0A 0B                                         // ...

        Device (LNKB)
        {

    928C: 5B 82 43 0A 4C 4E 4B 42                          // [.C.LNKB

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    9294: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x02)  // _UID: Unique ID

    929E: 08 5F 55 49 44 0A 02                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    92A5: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PBRC, 0x80, PBRC) /* \_SB_.PBRC */
            }


    92AC: 7D 50 42 52 43 0A 80 50 42 52 43                 // }PBRC..PBRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    92B7: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSB) /* \_SB_.PRSB */
            }


    92BE: A4 50 52 53 42                                   // .PRSB

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    92C3: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLB, 
    92CA: 08 52 54 4C 42                                   // .RTLB

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    92CF: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLB, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKB._CRS.IRQ0 */
                ShiftLeft (One, And (PBRC, 0x0F), IRQ0) /* \_SB_.LNKB._CRS.IRQ0 */

    92D9: 8B 52 54 4C 42 01 49 52 51 30 70 00 49 52 51 30  // .RTLB.IRQ0p.IRQ0
    92E9: 79 01 7B 50 42 52 43 0A 0F 00 49 52 51 30        // y.{PBRC...IRQ0

                Return (RTLB) /* \_SB_.LNKB._CRS.RTLB */
            }


    92F7: A4 52 54 4C 42                                   // .RTLB

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    92FC: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    9303: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PBRC) /* \_SB_.PBRC */
            }


    9312: 70 60 50 42 52 43                                // p`PBRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    9318: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PBRC, 0x80))
                {

    931F: A0 0C 7B 50 42 52 43 0A 80 00                    // ..{PBRC...

                    Return (0x09)
                }

    9329: A4 0A 09                                         // ...

                Else
                {

    932C: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    932E: A4 0A 0B                                         // ...

        Device (LNKC)
        {

    9331: 5B 82 43 0A 4C 4E 4B 43                          // [.C.LNKC

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    9339: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x03)  // _UID: Unique ID

    9343: 08 5F 55 49 44 0A 03                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    934A: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PCRC, 0x80, PCRC) /* \_SB_.PCRC */
            }


    9351: 7D 50 43 52 43 0A 80 50 43 52 43                 // }PCRC..PCRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    935C: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSC) /* \_SB_.PRSC */
            }


    9363: A4 50 52 53 43                                   // .PRSC

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    9368: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLC, 
    936F: 08 52 54 4C 43                                   // .RTLC

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    9374: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLC, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKC._CRS.IRQ0 */
                ShiftLeft (One, And (PCRC, 0x0F), IRQ0) /* \_SB_.LNKC._CRS.IRQ0 */

    937E: 8B 52 54 4C 43 01 49 52 51 30 70 00 49 52 51 30  // .RTLC.IRQ0p.IRQ0
    938E: 79 01 7B 50 43 52 43 0A 0F 00 49 52 51 30        // y.{PCRC...IRQ0

                Return (RTLC) /* \_SB_.LNKC._CRS.RTLC */
            }


    939C: A4 52 54 4C 43                                   // .RTLC

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    93A1: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    93A8: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PCRC) /* \_SB_.PCRC */
            }


    93B7: 70 60 50 43 52 43                                // p`PCRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    93BD: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PCRC, 0x80))
                {

    93C4: A0 0C 7B 50 43 52 43 0A 80 00                    // ..{PCRC...

                    Return (0x09)
                }

    93CE: A4 0A 09                                         // ...

                Else
                {

    93D1: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    93D3: A4 0A 0B                                         // ...

        Device (LNKD)
        {

    93D6: 5B 82 43 0A 4C 4E 4B 44                          // [.C.LNKD

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    93DE: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x04)  // _UID: Unique ID

    93E8: 08 5F 55 49 44 0A 04                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    93EF: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PDRC, 0x80, PDRC) /* \_SB_.PDRC */
            }


    93F6: 7D 50 44 52 43 0A 80 50 44 52 43                 // }PDRC..PDRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    9401: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSD) /* \_SB_.PRSD */
            }


    9408: A4 50 52 53 44                                   // .PRSD

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    940D: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLD, 
    9414: 08 52 54 4C 44                                   // .RTLD

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    9419: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLD, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKD._CRS.IRQ0 */
                ShiftLeft (One, And (PDRC, 0x0F), IRQ0) /* \_SB_.LNKD._CRS.IRQ0 */

    9423: 8B 52 54 4C 44 01 49 52 51 30 70 00 49 52 51 30  // .RTLD.IRQ0p.IRQ0
    9433: 79 01 7B 50 44 52 43 0A 0F 00 49 52 51 30        // y.{PDRC...IRQ0

                Return (RTLD) /* \_SB_.LNKD._CRS.RTLD */
            }


    9441: A4 52 54 4C 44                                   // .RTLD

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    9446: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    944D: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PDRC) /* \_SB_.PDRC */
            }


    945C: 70 60 50 44 52 43                                // p`PDRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    9462: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PDRC, 0x80))
                {

    9469: A0 0C 7B 50 44 52 43 0A 80 00                    // ..{PDRC...

                    Return (0x09)
                }

    9473: A4 0A 09                                         // ...

                Else
                {

    9476: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    9478: A4 0A 0B                                         // ...

        Device (LNKE)
        {

    947B: 5B 82 43 0A 4C 4E 4B 45                          // [.C.LNKE

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    9483: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x05)  // _UID: Unique ID

    948D: 08 5F 55 49 44 0A 05                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    9494: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PERC, 0x80, PERC) /* \_SB_.PERC */
            }


    949B: 7D 50 45 52 43 0A 80 50 45 52 43                 // }PERC..PERC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    94A6: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSE) /* \_SB_.PRSE */
            }


    94AD: A4 50 52 53 45                                   // .PRSE

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    94B2: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLE, 
    94B9: 08 52 54 4C 45                                   // .RTLE

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    94BE: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLE, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKE._CRS.IRQ0 */
                ShiftLeft (One, And (PERC, 0x0F), IRQ0) /* \_SB_.LNKE._CRS.IRQ0 */

    94C8: 8B 52 54 4C 45 01 49 52 51 30 70 00 49 52 51 30  // .RTLE.IRQ0p.IRQ0
    94D8: 79 01 7B 50 45 52 43 0A 0F 00 49 52 51 30        // y.{PERC...IRQ0

                Return (RTLE) /* \_SB_.LNKE._CRS.RTLE */
            }


    94E6: A4 52 54 4C 45                                   // .RTLE

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    94EB: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    94F2: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PERC) /* \_SB_.PERC */
            }


    9501: 70 60 50 45 52 43                                // p`PERC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    9507: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PERC, 0x80))
                {

    950E: A0 0C 7B 50 45 52 43 0A 80 00                    // ..{PERC...

                    Return (0x09)
                }

    9518: A4 0A 09                                         // ...

                Else
                {

    951B: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    951D: A4 0A 0B                                         // ...

        Device (LNKF)
        {

    9520: 5B 82 43 0A 4C 4E 4B 46                          // [.C.LNKF

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    9528: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x06)  // _UID: Unique ID

    9532: 08 5F 55 49 44 0A 06                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    9539: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PFRC, 0x80, PFRC) /* \_SB_.PFRC */
            }


    9540: 7D 50 46 52 43 0A 80 50 46 52 43                 // }PFRC..PFRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    954B: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSF) /* \_SB_.PRSF */
            }


    9552: A4 50 52 53 46                                   // .PRSF

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    9557: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLF, 
    955E: 08 52 54 4C 46                                   // .RTLF

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    9563: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLF, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKF._CRS.IRQ0 */
                ShiftLeft (One, And (PFRC, 0x0F), IRQ0) /* \_SB_.LNKF._CRS.IRQ0 */

    956D: 8B 52 54 4C 46 01 49 52 51 30 70 00 49 52 51 30  // .RTLF.IRQ0p.IRQ0
    957D: 79 01 7B 50 46 52 43 0A 0F 00 49 52 51 30        // y.{PFRC...IRQ0

                Return (RTLF) /* \_SB_.LNKF._CRS.RTLF */
            }


    958B: A4 52 54 4C 46                                   // .RTLF

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    9590: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    9597: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PFRC) /* \_SB_.PFRC */
            }


    95A6: 70 60 50 46 52 43                                // p`PFRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    95AC: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PFRC, 0x80))
                {

    95B3: A0 0C 7B 50 46 52 43 0A 80 00                    // ..{PFRC...

                    Return (0x09)
                }

    95BD: A4 0A 09                                         // ...

                Else
                {

    95C0: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    95C2: A4 0A 0B                                         // ...

        Device (LNKG)
        {

    95C5: 5B 82 43 0A 4C 4E 4B 47                          // [.C.LNKG

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    95CD: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x07)  // _UID: Unique ID

    95D7: 08 5F 55 49 44 0A 07                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    95DE: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PGRC, 0x80, PGRC) /* \_SB_.PGRC */
            }


    95E5: 7D 50 47 52 43 0A 80 50 47 52 43                 // }PGRC..PGRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    95F0: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSG) /* \_SB_.PRSG */
            }


    95F7: A4 50 52 53 47                                   // .PRSG

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    95FC: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLG, 
    9603: 08 52 54 4C 47                                   // .RTLG

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    9608: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLG, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKG._CRS.IRQ0 */
                ShiftLeft (One, And (PGRC, 0x0F), IRQ0) /* \_SB_.LNKG._CRS.IRQ0 */

    9612: 8B 52 54 4C 47 01 49 52 51 30 70 00 49 52 51 30  // .RTLG.IRQ0p.IRQ0
    9622: 79 01 7B 50 47 52 43 0A 0F 00 49 52 51 30        // y.{PGRC...IRQ0

                Return (RTLG) /* \_SB_.LNKG._CRS.RTLG */
            }


    9630: A4 52 54 4C 47                                   // .RTLG

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    9635: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    963C: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PGRC) /* \_SB_.PGRC */
            }


    964B: 70 60 50 47 52 43                                // p`PGRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    9651: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PGRC, 0x80))
                {

    9658: A0 0C 7B 50 47 52 43 0A 80 00                    // ..{PGRC...

                    Return (0x09)
                }

    9662: A4 0A 09                                         // ...

                Else
                {

    9665: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    9667: A4 0A 0B                                         // ...

        Device (LNKH)
        {

    966A: 5B 82 43 0A 4C 4E 4B 48                          // [.C.LNKH

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    9672: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x08)  // _UID: Unique ID

    967C: 08 5F 55 49 44 0A 08                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    9683: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PHRC, 0x80, PHRC) /* \_SB_.PHRC */
            }


    968A: 7D 50 48 52 43 0A 80 50 48 52 43                 // }PHRC..PHRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    9695: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSH) /* \_SB_.PRSH */
            }


    969C: A4 50 52 53 48                                   // .PRSH

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    96A1: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLH, 
    96A8: 08 52 54 4C 48                                   // .RTLH

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    96AD: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLH, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKH._CRS.IRQ0 */
                ShiftLeft (One, And (PHRC, 0x0F), IRQ0) /* \_SB_.LNKH._CRS.IRQ0 */

    96B7: 8B 52 54 4C 48 01 49 52 51 30 70 00 49 52 51 30  // .RTLH.IRQ0p.IRQ0
    96C7: 79 01 7B 50 48 52 43 0A 0F 00 49 52 51 30        // y.{PHRC...IRQ0

                Return (RTLH) /* \_SB_.LNKH._CRS.RTLH */
            }


    96D5: A4 52 54 4C 48                                   // .RTLH

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    96DA: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    96E1: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PHRC) /* \_SB_.PHRC */
            }


    96F0: 70 60 50 48 52 43                                // p`PHRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    96F6: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PHRC, 0x80))
                {

    96FD: A0 0C 7B 50 48 52 43 0A 80 00                    // ..{PHRC...

                    Return (0x09)
                }

    9707: A4 0A 09                                         // ...

                Else
                {

    970A: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }
    }


    970C: A4 0A 0B                                         // ...

    Scope (\)
    {

    970F: 10 47 38 5C 00                                   // .G8\.

        Name (PMBV, Zero)

    9714: 08 50 4D 42 56 00                                // .PMBV.

        Method (PMBS, 0, NotSerialized)
        {

    971A: 14 2F 50 4D 42 53 00                             // ./PMBS.

            If (LEqual (PMBV, Zero))
            {

    9721: A0 23 93 50 4D 42 56 00                          // .#.PMBV.

                Store (ShiftLeft (\_SB.PCI0.PPMC.ACBA, 0x08), PMBV) /* \PMBV */
            }


    9729: 70 79 5C 2F 04 5F 53 42 5F 50 43 49 30 50 50 4D  // py\/._SB_PCI0PPM
    9739: 43 41 43 42 41 0A 08 00 50 4D 42 56              // CACBA...PMBV

            Return (PMBV) /* \PMBV */
        }


    9745: A4 50 4D 42 56                                   // .PMBV

        Name (PWRV, Zero)

    974A: 08 50 57 52 56 00                                // .PWRV.

        Method (PWRM, 0, NotSerialized)
        {

    9750: 14 2F 50 57 52 4D 00                             // ./PWRM.

            If (LEqual (PWRV, Zero))
            {

    9757: A0 23 93 50 57 52 56 00                          // .#.PWRV.

                Store (ShiftLeft (\_SB.PCI0.PPMC.PWBA, 0x0C), PWRV) /* \PWRV */
            }


    975F: 70 79 5C 2F 04 5F 53 42 5F 50 43 49 30 50 50 4D  // py\/._SB_PCI0PPM
    976F: 43 50 57 42 41 0A 0C 00 50 57 52 56              // CPWBA...PWRV

            Return (PWRV) /* \PWRV */
        }


    977B: A4 50 57 52 56                                   // .PWRV

        Name (TCBV, Zero)

    9780: 08 54 43 42 56 00                                // .TCBV.

        Method (TCBS, 0, NotSerialized)
        {

    9786: 14 2F 54 43 42 53 00                             // ./TCBS.

            If (LEqual (TCBV, Zero))
            {

    978D: A0 23 93 54 43 42 56 00                          // .#.TCBV.

                Store (ShiftLeft (\_SB.PCI0.SBUS.TCOB, 0x05), TCBV) /* \TCBV */
            }


    9795: 70 79 5C 2F 04 5F 53 42 5F 50 43 49 30 53 42 55  // py\/._SB_PCI0SBU
    97A5: 53 54 43 4F 42 0A 05 00 54 43 42 56              // STCOB...TCBV

            Return (TCBV) /* \TCBV */
        }


    97B1: A4 54 43 42 56                                   // .TCBV

        OperationRegion (PMIO, SystemIO, PMBS (), 0x80)

    97B6: 5B 80 50 4D 49 4F 01 50 4D 42 53 0A 80           // [.PMIO.PMBS..

        Field (PMIO, ByteAcc, NoLock, Preserve)
        {
            Offset (0x01), 
            PBSS,   1, 
            Offset (0x10), 
                ,   1, 
            TDTY,   3, 
            TENA,   1, 
            TTDT,   3, 
            FRCT,   1, 
                ,   8, 
            THLS,   1, 
            Offset (0x13), 
            Offset (0x20), 
                ,   1, 
            PEHS,   1, 
                ,   7, 
            PEPS,   1, 
            BLST,   1, 
            SBPS,   1, 
            Offset (0x22), 
            G00S,   1, 
            G01S,   1, 
            G02S,   1, 
                ,   1, 
            G04S,   1, 
            G05S,   1, 
            G06S,   1, 
            G07S,   1, 
            G08S,   1, 
            G09S,   1, 
            G0AS,   1, 
            G0BS,   1, 
            G0CS,   1, 
            G0DS,   1, 
            G0ES,   1, 
            G0FS,   1, 
            Offset (0x30), 
                ,   4, 
            SLPE,   1, 
            APME,   1, 
                ,   5, 
            MCSE,   1, 
                ,   1, 
            TCOE,   1, 
            PESE,   1, 
            Offset (0x32), 
            Offset (0x34), 
                ,   4, 
            SLPS,   1, 
            APMS,   1, 
                ,   5, 
            MCSS,   1, 
                ,   1, 
            TCOS,   1, 
            PERS,   1, 
            Offset (0x36), 
            Offset (0x40), 
                ,   17, 
            GPEC,   1
        }


    97C3: 5B 81 4B 0E 50 4D 49 4F 01 00 08 50 42 53 53 01  // [.K.PMIO...PBSS.
    97D3: 00 47 07 00 01 54 44 54 59 03 54 45 4E 41 01 54  // .G...TDTY.TENA.T
    97E3: 54 44 54 03 46 52 43 54 01 00 08 54 48 4C 53 01  // TDT.FRCT...THLS.
    97F3: 00 06 00 48 06 00 01 50 45 48 53 01 00 07 50 45  // ...H...PEHS...PE
    9803: 50 53 01 42 4C 53 54 01 53 42 50 53 01 00 04 47  // PS.BLST.SBPS...G
    9813: 30 30 53 01 47 30 31 53 01 47 30 32 53 01 00 01  // 00S.G01S.G02S...
    9823: 47 30 34 53 01 47 30 35 53 01 47 30 36 53 01 47  // G04S.G05S.G06S.G
    9833: 30 37 53 01 47 30 38 53 01 47 30 39 53 01 47 30  // 07S.G08S.G09S.G0
    9843: 41 53 01 47 30 42 53 01 47 30 43 53 01 47 30 44  // AS.G0BS.G0CS.G0D
    9853: 53 01 47 30 45 53 01 47 30 46 53 01 00 40 06 00  // S.G0ES.G0FS..@..
    9863: 04 53 4C 50 45 01 41 50 4D 45 01 00 05 4D 43 53  // .SLPE.APME...MCS
    9873: 45 01 00 01 54 43 4F 45 01 50 45 53 45 01 00 01  // E...TCOE.PESE...
    9883: 00 10 00 04 53 4C 50 53 01 41 50 4D 53 01 00 05  // ....SLPS.APMS...
    9893: 4D 43 53 53 01 00 01 54 43 4F 53 01 50 45 52 53  // MCSS...TCOS.PERS
    98A3: 01 00 01 00 40 05 00 11 47 50 45 43 01           // ....@...GPEC.

        OperationRegion (PMLP, SystemIO, Add (PMBS (), 0x80), 0x20)

    98B0: 5B 80 50 4D 4C 50 01 72 50 4D 42 53 0A 80 00 0A  // [.PMLP.rPMBS....
    98C0: 20                                               //  

        Field (PMLP, ByteAcc, NoLock, Preserve)
        {
            Offset (0x10), 
            Offset (0x11), 
            GE08,   1, 
                ,   8, 
            GE17,   1, 
                ,   17, 
            GE35,   1, 
                ,   9, 
            GE45,   1, 
            Offset (0x16), 
            GE48,   1, 
                ,   2, 
            GE51,   1, 
            Offset (0x20)
        }


    98C1: 5B 81 36 50 4D 4C 50 01 00 40 08 00 08 47 45 30  // [.6PMLP..@...GE0
    98D1: 38 01 00 08 47 45 31 37 01 00 11 47 45 33 35 01  // 8...GE17...GE35.
    98E1: 00 09 47 45 34 35 01 00 02 47 45 34 38 01 00 02  // ..GE45...GE48...
    98F1: 47 45 35 31 01 00 4C 04                          // GE51..L.

        Field (PMLP, ByteAcc, NoLock, WriteAsZeros)
        {
            Offset (0x01), 
            GS08,   1, 
                ,   8, 
            GS17,   1, 
                ,   17, 
            GS35,   1, 
                ,   9, 
            GS45,   1, 
            Offset (0x06), 
            GS48,   1, 
                ,   2, 
            GS51,   1, 
                ,   2, 
            GS54,   1, 
            GS55,   1, 
            Offset (0x10)
        }


    98F9: 5B 81 3F 50 4D 4C 50 41 00 08 47 53 30 38 01 00  // [.?PMLPA..GS08..
    9909: 08 47 53 31 37 01 00 11 47 53 33 35 01 00 09 47  // .GS17...GS35...G
    9919: 53 34 35 01 00 02 47 53 34 38 01 00 02 47 53 35  // S45...GS48...GS5
    9929: 31 01 00 02 47 53 35 34 01 47 53 35 35 01 00 48  // 1...GS54.GS55..H
    9939: 04                                               // .

        OperationRegion (TCBA, SystemIO, TCBS (), 0x10)

    993A: 5B 80 54 43 42 41 01 54 43 42 53 0A 10           // [.TCBA.TCBS..

        Field (TCBA, ByteAcc, NoLock, Preserve)
        {
            Offset (0x04), 
                ,   9, 
            CPSC,   1
        }


    9947: 5B 81 0F 54 43 42 41 01 00 20 00 09 43 50 53 43  // [..TCBA.. ..CPSC
    9957: 01                                               // .

        OperationRegion (PWMR, SystemMemory, PWRM (), 0x0800)

    9958: 5B 80 50 57 4D 52 00 50 57 52 4D 0B 00 08        // [.PWMR.PWRM...

        Field (PWMR, AnyAcc, NoLock, Preserve)
        {
            Offset (0xE0), 
            Offset (0xE2), 
            DWLE,   1, 
            HWLE,   1
        }


    9966: 5B 81 15 50 57 4D 52 00 00 40 70 00 10 44 57 4C  // [..PWMR..@p..DWL
    9976: 45 01 48 57 4C 45 01                             // E.HWLE.

        OperationRegion (PMST, SystemMemory, PWRV, 0x80)

    997D: 5B 80 50 4D 53 54 00 50 57 52 56 0A 80           // [.PMST.PWRV..

        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            Offset (0x18), 
                ,   25, 
            USBP,   1, 
            Offset (0x1C), 
            Offset (0x1F), 
            PMFS,   1, 
            Offset (0x20), 
            MPMC,   32, 
                ,   20, 
            UWAB,   1
        }


    998A: 5B 81 27 50 4D 53 54 03 00 40 0C 00 19 55 53 42  // [.'PMST..@...USB
    999A: 50 01 00 06 00 18 50 4D 46 53 01 00 07 4D 50 4D  // P.....PMFS...MPM
    99AA: 43 20 00 14 55 57 41 42 01                       // C ..UWAB.

        Method (PCRR, 2, Serialized)
        {
            Add (ShiftLeft (Arg0, 0x10), Arg1, Local0)
            Add (SBRG, Local0, Local0)

    99B3: 14 31 50 43 52 52 0A 72 79 68 0A 10 00 69 60 72  // .1PCRR.ryh...i`r
    99C3: 53 42 52 47 60 60                                // SBRG``

            OperationRegion (PCR0, SystemMemory, Local0, 0x04)

    99C9: 5B 80 50 43 52 30 00 60 0A 04                    // [.PCR0.`..

            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }


    99D3: 5B 81 0B 50 43 52 30 13 44 41 54 30 20           // [..PCR0.DAT0 

            Return (DAT0) /* \PCRR.DAT0 */
        }


    99E0: A4 44 41 54 30                                   // .DAT0

        Method (PCRW, 3, Serialized)
        {
            Add (ShiftLeft (Arg0, 0x10), Arg1, Local0)
            Add (SBRG, Local0, Local0)

    99E5: 14 4A 05 50 43 52 57 0B 72 79 68 0A 10 00 69 60  // .J.PCRW.ryh...i`
    99F5: 72 53 42 52 47 60 60                             // rSBRG``

            OperationRegion (PCR0, SystemMemory, Local0, 0x04)

    99FC: 5B 80 50 43 52 30 00 60 0A 04                    // [.PCR0.`..

            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }

            Store (Arg2, DAT0) /* \PCRW.DAT0 */

    9A06: 5B 81 0B 50 43 52 30 13 44 41 54 30 20 70 6A 44  // [..PCR0.DAT0 pjD
    9A16: 41 54 30                                         // AT0

            OperationRegion (PCR1, SystemMemory, Add (SBRG, 0x00C73418), 0x04)

    9A19: 5B 80 50 43 52 31 00 72 53 42 52 47 0C 18 34 C7  // [.PCR1.rSBRG..4.
    9A29: 00 00 0A 04                                      // ....

            Field (PCR1, DWordAcc, Lock, Preserve)
            {
                DAT1,   32
            }


    9A2D: 5B 81 0B 50 43 52 31 13 44 41 54 31 20           // [..PCR1.DAT1 

            Store (DAT1, Local1)
        }


    9A3A: 70 44 41 54 31 61                                // pDAT1a

        Method (PCRO, 3, Serialized)
        {
            Store (PCRR (Arg0, Arg1), Local0)
            Store (Or (Local0, Arg2), Local1)
            PCRW (Arg0, Arg1, Local1)
        }


    9A40: 14 1B 50 43 52 4F 0B 70 50 43 52 52 68 69 60 70  // ..PCRO.pPCRRhi`p
    9A50: 7D 60 6A 00 61 50 43 52 57 68 69 61              // }`j.aPCRWhia

        Method (PCRA, 3, Serialized)
        {
            Store (PCRR (Arg0, Arg1), Local0)
            Store (And (Local0, Arg2), Local1)
            PCRW (Arg0, Arg1, Local1)
        }


    9A5C: 14 1B 50 43 52 41 0B 70 50 43 52 52 68 69 60 70  // ..PCRA.pPCRRhi`p
    9A6C: 7B 60 6A 00 61 50 43 52 57 68 69 61              // {`j.aPCRWhia

        Method (PCAO, 4, Serialized)
        {
            Store (PCRR (Arg0, Arg1), Local0)
            Store (Or (And (Local0, Arg2), Arg3), Local1)
            PCRW (Arg0, Arg1, Local1)
        }
    }


    9A78: 14 1E 50 43 41 4F 0C 70 50 43 52 52 68 69 60 70  // ..PCAO.pPCRRhi`p
    9A88: 7D 7B 60 6A 00 6B 00 61 50 43 52 57 68 69 61     // }{`j.k.aPCRWhia

    Scope (_SB.PCI0)
    {

    9A97: 10 22 2E 5F 53 42 5F 50 43 49 30                 // ."._SB_PCI0

        Name (LTRN, Zero)

    9AA2: 08 4C 54 52 4E 00                                // .LTRN.

        Name (OBFN, Zero)

    9AA8: 08 4F 42 46 4E 00                                // .OBFN.

        Name (LMSL, Zero)

    9AAE: 08 4C 4D 53 4C 00                                // .LMSL.

        Name (LNSL, Zero)
    }


    9AB4: 08 4C 4E 53 4C 00                                // .LNSL.

    Scope (_SB.PCI0)
    {

    9ABA: 10 4A 4F 2E 5F 53 42 5F 50 43 49 30              // .JO._SB_PCI0

        Device (XHC)
        {

    9AC6: 5B 82 4D 4E 58 48 43 5F                          // [.MNXHC_

            Name (_ADR, 0x00140000)  // _ADR: Address

    9ACE: 08 5F 41 44 52 0C 00 00 14 00                    // ._ADR.....

            OperationRegion (XPRT, PCI_Config, Zero, 0x0100)

    9AD8: 5B 80 58 50 52 54 02 00 0B 00 01                 // [.XPRT.....

            Field (XPRT, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x74), 
                D0D3,   2, 
                Offset (0x75), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1, 
                Offset (0xA8), 
                    ,   13, 
                MW13,   1, 
                MW14,   1, 
                Offset (0xAC), 
                Offset (0xB0), 
                    ,   13, 
                MB13,   1, 
                MB14,   1, 
                Offset (0xB4), 
                Offset (0xD0), 
                PR2,    32, 
                PR2M,   32, 
                PR3,    32, 
                PR3M,   32
            }


    9AE3: 5B 81 4A 05 58 50 52 54 00 44 56 49 44 10 00 40  // [.J.XPRT.DVID..@
    9AF3: 39 44 30 44 33 02 00 06 50 4D 45 45 01 00 06 50  // 9D0D3...PMEE...P
    9B03: 4D 45 53 01 00 40 19 00 0D 4D 57 31 33 01 4D 57  // MES..@...MW13.MW
    9B13: 31 34 01 00 11 00 20 00 0D 4D 42 31 33 01 4D 42  // 14.... ..MB13.MB
    9B23: 31 34 01 00 11 00 40 0E 50 52 32 5F 20 50 52 32  // 14....@.PR2_ PR2
    9B33: 4D 20 50 52 33 5F 20 50 52 33 4D 20              // M PR3_ PR3M 

            Name (XFLT, Zero)

    9B3F: 08 58 46 4C 54 00                                // .XFLT.

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    9B45: 14 3C 5F 44 53 4D 0C                             // .<_DSM.

                If (PCIC (Arg0))
                {

    9B4C: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    9B53: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
    9B5C: A0 23 93 68                                      // .#.h

ToUUID ("ac340cb7-e901-45bf-b7e6-2b34ec931e23") /* Unknown UUID */))
                {

    9B60: 11 13 0A 10 B7 0C 34 AC 01 E9 BF 45 B7 E6 2B 34  // ......4....E..+4
    9B70: EC 93 1E 23                                      // ...#

                    If (LEqual (Arg1, 0x03))
                    {

    9B74: A0 0B 93 69 0A 03                                // ...i..

                        Store (Arg1, XFLT) /* \_SB_.PCI0.XHC_.XFLT */
                    }
                }


    9B7A: 70 69 58 46 4C 54                                // piXFLT

                Return (Zero)
            }


    9B80: A4 00                                            // ..

            Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
            {

    9B82: 14 09 5F 53 33 44 00                             // .._S3D.

                Return (0x03)
            }


    9B89: A4 0A 03                                         // ...

            Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
            {

    9B8C: 14 09 5F 53 34 44 00                             // .._S4D.

                Return (0x03)
            }


    9B93: A4 0A 03                                         // ...

            Method (_S3W, 0, NotSerialized)  // _S3W: S3 Device Wake State
            {

    9B96: 14 09 5F 53 33 57 00                             // .._S3W.

                Return (0x03)
            }


    9B9D: A4 0A 03                                         // ...

            Method (_S4W, 0, NotSerialized)  // _S4W: S4 Device Wake State
            {

    9BA0: 14 09 5F 53 34 57 00                             // .._S4W.

                Return (0x03)
            }


    9BA7: A4 0A 03                                         // ...

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {

    9BAA: 14 15 5F 53 30 57 00                             // .._S0W.

                If (LEqual (XFLT, Zero))
                {

    9BB1: A0 09 93 58 46 4C 54 00                          // ...XFLT.

                    Return (Zero)
                }

    9BB9: A4 00                                            // ..

                Else
                {

    9BBB: A1 04                                            // ..

                    Return (0x03)
                }
            }


    9BBD: A4 0A 03                                         // ...

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    9BC0: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x03))
            }


    9BC7: A4 47 50 52 57 0A 6D 0A 03                       // .GPRW.m..

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

    9BD0: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE) /* \_SB_.PCI0.XHC_.PMEE */
            }


    9BD7: 70 68 50 4D 45 45                                // phPMEE

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

    9BDD: 14 2C 5F 49 4E 49 00                             // .,_INI.

                If (CondRefOf (\_SB.PCI0.XHC.RHUB.INIR))
                {
                    ^RHUB.INIR ()
                }
            }


    9BE4: A0 25 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // .%[.\/._SB_PCI0X
    9BF4: 48 43 5F 52 48 55 42 49 4E 49 52 00 5E 2E 52 48  // HC_RHUBINIR.^.RH
    9C04: 55 42 49 4E 49 52                                // UBINIR

            Method (GPEH, 0, NotSerialized)
            {

    9C0A: 14 2D 47 50 45 48 00                             // .-GPEH.

                If (LEqual (DVID, 0xFFFF))
                {

    9C11: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (PMES, Local0)
                Store (One, PMES) /* \_SB_.PCI0.XHC_.PMES */

    9C1B: A4 00 70 50 4D 45 53 60 70 01 50 4D 45 53        // ..pPMES`p.PMES

                If (LAnd (PMEE, Local0))
                {

    9C29: A0 0E 90 50 4D 45 45 60                          // ...PMEE`

                    Notify (XHC, 0x02) // Device Wake
                }
            }


    9C31: 86 58 48 43 5F 0A 02                             // .XHC_..

            OperationRegion (XHCP, SystemMemory, Add (GPCB (), 0x000A0000), 0x0100)

    9C38: 5B 80 58 48 43 50 00 72 47 50 43 42 0C 00 00 0A  // [.XHCP.rGPCB....
    9C48: 00 00 0B 00 01                                   // .....

            Field (XHCP, AnyAcc, Lock, Preserve)
            {
                Offset (0x04), 
                PDBM,   16, 
                Offset (0x10), 
                MEMB,   64
            }


    9C4D: 5B 81 16 58 48 43 50 10 00 20 50 44 42 4D 10 00  // [..XHCP.. PDBM..
    9C5D: 40 05 4D 45 4D 42 40 04                          // @.MEMB@.

            Method (USRA, 0, Serialized)
            {

    9C65: 14 19 55 53 52 41 08                             // ..USRA.

                If (LEqual (PCHV (), SPTH))
                {

    9C6C: A0 0D 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

                    Return (0x0F)
                }

    9C77: A4 0A 0F                                         // ...

                Else
                {

    9C7A: A1 04                                            // ..

                    Return (0x0B)
                }
            }


    9C7C: A4 0A 0B                                         // ...

            Method (SSPA, 0, Serialized)
            {

    9C7F: 14 19 53 53 50 41 08                             // ..SSPA.

                If (LEqual (PCHV (), SPTH))
                {

    9C86: A0 0D 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

                    Return (0x11)
                }

    9C91: A4 0A 11                                         // ...

                Else
                {

    9C94: A1 04                                            // ..

                    Return (0x0D)
                }
            }


    9C96: A4 0A 0D                                         // ...

            Name (XRST, Zero)

    9C99: 08 58 52 53 54 00                                // .XRST.

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {

    9C9F: 14 4A 0D 5F 50 53 30 08                          // .J._PS0.

                If (LEqual (DVID, 0xFFFF))
                {

    9CA7: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (MEMB, Local2)
                Store (PDBM, Local1)
                And (PDBM, 0xFFFFFFFFFFFFFFF9, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
                Store (D0D3, Local3)
                Store (Zero, D0D3) /* \_SB_.PCI0.XHC_.D0D3 */
                Store (XWMB, MEMB) /* \_SB_.PCI0.XHC_.MEMB */
                Or (Local1, 0x02, PDBM) /* \_SB_.PCI0.XHC_.PDBM */

    9CB1: A4 00 70 4D 45 4D 42 62 70 50 44 42 4D 61 7B 50  // ..pMEMBbpPDBMa{P
    9CC1: 44 42 4D 0E F9 FF FF FF FF FF FF FF 50 44 42 4D  // DBM.........PDBM
    9CD1: 70 44 30 44 33 63 70 00 44 30 44 33 70 58 57 4D  // pD0D3cp.D0D3pXWM
    9CE1: 42 4D 45 4D 42 7D 61 0A 02 50 44 42 4D           // BMEMB}a..PDBM

                OperationRegion (MC11, SystemMemory, XWMB, 0x9000)

    9CEE: 5B 80 4D 43 31 31 00 58 57 4D 42 0B 00 90        // [.MC11.XWMB...

                Field (MC11, DWordAcc, Lock, Preserve)
                {
                    Offset (0x81C4), 
                        ,   2, 
                    UPSW,   2
                }

                Store (Zero, UPSW) /* \_SB_.PCI0.XHC_._PS0.UPSW */
                And (PDBM, 0xFFFFFFFFFFFFFFFD, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
                Store (Local2, MEMB) /* \_SB_.PCI0.XHC_.MEMB */
                Store (Local1, PDBM) /* \_SB_.PCI0.XHC_.PDBM */

    9CFC: 5B 81 11 4D 43 31 31 13 00 80 E2 40 00 02 55 50  // [..MC11....@..UP
    9D0C: 53 57 02 70 00 55 50 53 57 7B 50 44 42 4D 0E FD  // SW.p.UPSW{PDBM..
    9D1C: FF FF FF FF FF FF FF 50 44 42 4D 70 62 4D 45 4D  // .......PDBMpbMEM
    9D2C: 42 70 61 50 44 42 4D                             // BpaPDBM

                If (CondRefOf (\_SB.PCI0.XHC.PS0X))
                {
                    PS0X ()
                }


    9D33: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    9D43: 48 43 5F 50 53 30 58 00 50 53 30 58              // HC_PS0X.PS0X

                If (LAnd (UWAB, 
    9D4F: A0 2A 90 55 57 41 42                             // .*.UWAB

LOr (LEqual (D0D3, Zero), 
    9D56: 91 93 44 30 44 33 00                             // ..D0D3.

LEqual (^^XDCI.D0I3, Zero))))
                {
                    Store (One, MPMC) /* \MPMC */

    9D5D: 93 5E 5E 2E 58 44 43 49 44 30 49 33 00 70 01 4D  // .^^.XDCID0I3.p.M
    9D6D: 50 4D 43                                         // PMC

                    While (PMFS)
                    {

    9D70: A2 09 50 4D 46 53                                // ..PMFS

                        Sleep (0x0A)
                    }
                }
            }


    9D76: 5B 22 0A 0A                                      // ["..

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {

    9D7A: 14 4F 0E 5F 50 53 33 08                          // .O._PS3.

                If (LEqual (DVID, 0xFFFF))
                {

    9D82: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (MEMB, Local2)
                Store (PDBM, Local1)
                And (PDBM, 0xFFFFFFFFFFFFFFF9, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
                Store (Zero, D0D3) /* \_SB_.PCI0.XHC_.D0D3 */
                Store (XWMB, MEMB) /* \_SB_.PCI0.XHC_.MEMB */
                Or (Local1, 0x02, PDBM) /* \_SB_.PCI0.XHC_.PDBM */

    9D8C: A4 00 70 4D 45 4D 42 62 70 50 44 42 4D 61 7B 50  // ..pMEMBbpPDBMa{P
    9D9C: 44 42 4D 0E F9 FF FF FF FF FF FF FF 50 44 42 4D  // DBM.........PDBM
    9DAC: 70 00 44 30 44 33 70 58 57 4D 42 4D 45 4D 42 7D  // p.D0D3pXWMBMEMB}
    9DBC: 61 0A 02 50 44 42 4D                             // a..PDBM

                OperationRegion (MC11, SystemMemory, XWMB, 0x9000)

    9DC3: 5B 80 4D 43 31 31 00 58 57 4D 42 0B 00 90        // [.MC11.XWMB...

                Field (MC11, DWordAcc, Lock, Preserve)
                {
                    Offset (0x81C4), 
                        ,   2, 
                    UPSW,   2
                }

                Store (0x03, UPSW) /* \_SB_.PCI0.XHC_._PS3.UPSW */
                And (PDBM, 0xFFFFFFFFFFFFFFFD, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
                Store (0x03, D0D3) /* \_SB_.PCI0.XHC_.D0D3 */
                Store (Local2, MEMB) /* \_SB_.PCI0.XHC_.MEMB */
                Store (Local1, PDBM) /* \_SB_.PCI0.XHC_.PDBM */

    9DD1: 5B 81 11 4D 43 31 31 13 00 80 E2 40 00 02 55 50  // [..MC11....@..UP
    9DE1: 53 57 02 70 0A 03 55 50 53 57 7B 50 44 42 4D 0E  // SW.p..UPSW{PDBM.
    9DF1: FD FF FF FF FF FF FF FF 50 44 42 4D 70 0A 03 44  // ........PDBMp..D
    9E01: 30 44 33 70 62 4D 45 4D 42 70 61 50 44 42 4D     // 0D3pbMEMBpaPDBM

                If (CondRefOf (\_SB.PCI0.XHC.PS3X))
                {
                    PS3X ()
                }


    9E10: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    9E20: 48 43 5F 50 53 33 58 00 50 53 33 58              // HC_PS3X.PS3X

                If (LAnd (UWAB, 
    9E2C: A0 3D 90 55 57 41 42                             // .=.UWAB

LAnd (LEqual (D0D3, 0x03), 
    9E33: 90 93 44 30 44 33 0A 03                          // ..D0D3..

LOr (LEqual (^^XDCI.D0I3, 0x03), 
    9E3B: 91 93 5E 5E 2E 58 44 43 49 44 30 49 33 0A 03     // ..^^.XDCID0I3..

LEqual (
                    ^^XDCI.DVID, 0xFFFF)))))
                {
                    Store (0x03, MPMC) /* \MPMC */

    9E4A: 93 5E 5E 2E 58 44 43 49 44 56 49 44 0B FF FF 70  // .^^.XDCIDVID...p
    9E5A: 0A 03 4D 50 4D 43                                // ..MPMC

                    While (PMFS)
                    {

    9E60: A2 09 50 4D 46 53                                // ..PMFS

                        Sleep (0x0A)
                    }
                }
            }


    9E66: 5B 22 0A 0A                                      // ["..

            Method (CUID, 1, Serialized)
            {

    9E6A: 14 22 43 55 49 44 09                             // ."CUID.

                If (LEqual (Arg0, 
    9E71: A0 19 93 68                                      // ...h

ToUUID ("7c9512a9-1705-4cb4-af7d-506a2423ab71") /* Unknown UUID */))
                {

    9E75: 11 13 0A 10 A9 12 95 7C 05 17 B4 4C AF 7D 50 6A  // .......|...L.}Pj
    9E85: 24 23 AB 71                                      // $#.q

                    Return (One)
                }


    9E89: A4 01                                            // ..

                Return (Zero)
            }


    9E8B: A4 00                                            // ..

            Device (RHUB)
            {

    9E8D: 5B 82 46 12 52 48 55 42                          // [.F.RHUB

                Method (GPLD, 2, Serialized)
                {

    9E95: 14 4E 05 47 50 4C 44 0A                          // .N.GPLD.

                    Name (PCKG, 
    9E9D: 08 50 43 4B 47                                   // .PCKG

Package (0x01)
                    {

    9EA2: 12 06 01                                         // ...

                        Buffer (0x10){}
                    })

    9EA5: 11 03 0A 10                                      // ....

                    CreateField (DerefOf (
    9EA9: 5B 13 83                                         // [..

Index (PCKG, Zero)), Zero, 0x07, REV)
                    Store (One, REV) /* \_SB_.PCI0.XHC_.RHUB.GPLD.REV_ */

    9EAC: 88 50 43 4B 47 00 00 00 0A 07 52 45 56 5F 70 01  // .PCKG.....REV_p.
    9EBC: 52 45 56 5F                                      // REV_

                    CreateField (DerefOf (
    9EC0: 5B 13 83                                         // [..

Index (PCKG, Zero)), 0x40, One, VISI)
                    Store (Arg0, VISI) /* \_SB_.PCI0.XHC_.RHUB.GPLD.VISI */

    9EC3: 88 50 43 4B 47 00 00 0A 40 01 56 49 53 49 70 68  // .PCKG...@.VISIph
    9ED3: 56 49 53 49                                      // VISI

                    CreateField (DerefOf (
    9ED7: 5B 13 83                                         // [..

Index (PCKG, Zero)), 0x57, 0x08, GPOS)
                    Store (Arg1, GPOS) /* \_SB_.PCI0.XHC_.RHUB.GPLD.GPOS */

    9EDA: 88 50 43 4B 47 00 00 0A 57 0A 08 47 50 4F 53 70  // .PCKG...W..GPOSp
    9EEA: 69 47 50 4F 53                                   // iGPOS

                    Return (PCKG) /* \_SB_.PCI0.XHC_.RHUB.GPLD.PCKG */
                }


    9EEF: A4 50 43 4B 47                                   // .PCKG

                Method (GUPC, 1, Serialized)
                {

    9EF4: 14 21 47 55 50 43 09                             // .!GUPC.

                    Name (PCKG, 
    9EFB: 08 50 43 4B 47                                   // .PCKG

Package (0x04)
                    {
                        Zero, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Store (Arg0, 
    9F00: 12 07 04 00 0A FF 00 00 70 68                    // ........ph

Index (PCKG, Zero))

    9F0A: 88 50 43 4B 47 00 00                             // .PCKG..

                    Return (PCKG) /* \_SB_.PCI0.XHC_.RHUB.GUPC.PCKG */
                }


    9F11: A4 50 43 4B 47                                   // .PCKG

                Name (_ADR, Zero)  // _ADR: Address

    9F16: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {

    9F1C: 14 32 5F 50 53 30 08                             // .2_PS0.

                    If (LEqual (DVID, 0xFFFF))
                    {

    9F23: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                        Return (Zero)
                    }


    9F2D: A4 00                                            // ..

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS0X))
                    {
                        PS0X ()
                    }
                }


    9F2F: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    9F3F: 48 43 5F 52 48 55 42 50 53 30 58 00 50 53 30 58  // HC_RHUBPS0X.PS0X

                Method (_PS2, 0, Serialized)  // _PS2: Power State 2
                {

    9F4F: 14 32 5F 50 53 32 08                             // .2_PS2.

                    If (LEqual (DVID, 0xFFFF))
                    {

    9F56: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                        Return (Zero)
                    }


    9F60: A4 00                                            // ..

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS2X))
                    {
                        PS2X ()
                    }
                }


    9F62: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    9F72: 48 43 5F 52 48 55 42 50 53 32 58 00 50 53 32 58  // HC_RHUBPS2X.PS2X

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {

    9F82: 14 32 5F 50 53 33 08                             // .2_PS3.

                    If (LEqual (DVID, 0xFFFF))
                    {

    9F89: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                        Return (Zero)
                    }


    9F93: A4 00                                            // ..

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS3X))
                    {
                        PS3X ()
                    }
                }
            }
        }
    }


    9F95: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    9FA5: 48 43 5F 52 48 55 42 50 53 33 58 00 50 53 33 58  // HC_RHUBPS3X.PS3X

    If (LEqual (PCHV (), SPTH))
    {

    9FB5: A0 1E 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

        Scope (_SB.PCI0.XHC.RHUB)
        {
        }
    }


    9FC0: 10 13 2F 04 5F 53 42 5F 50 43 49 30 58 48 43 5F  // ../._SB_PCI0XHC_
    9FD0: 52 48 55 42                                      // RHUB

    Scope (_SB.PCI0)
    {

    9FD4: 10 4E 32 2E 5F 53 42 5F 50 43 49 30              // .N2._SB_PCI0

        Device (XDCI)
        {

    9FE0: 5B 82 41 32 58 44 43 49                          // [.A2XDCI

            Name (_ADR, 0x00140001)  // _ADR: Address

    9FE8: 08 5F 41 44 52 0C 01 00 14 00                    // ._ADR.....

            OperationRegion (OTGD, PCI_Config, Zero, 0x0100)

    9FF2: 5B 80 4F 54 47 44 02 00 0B 00 01                 // [.OTGD.....

            Field (OTGD, DWordAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x10), 
                XDCB,   64, 
                Offset (0x74), 
                D0I3,   2, 
                Offset (0x84), 
                Offset (0x85), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


    9FFD: 5B 81 2D 4F 54 47 44 03 44 56 49 44 10 00 40 07  // [.-OTGD.DVID..@.
    A00D: 58 44 43 42 40 04 00 40 2E 44 30 49 33 02 00 4E  // XDCB@..@.D0I3..N
    A01D: 07 00 08 50 4D 45 45 01 00 06 50 4D 45 53 01     // ...PMEE...PMES.

            Method (XDBA, 0, NotSerialized)
            {

    A02C: 14 16 58 44 42 41 00                             // ..XDBA.

                Return (
    A033: A4                                               // .

And (XDCB, 0xFFFFFFFFFFFFFF00))
            }


    A034: 7B 58 44 43 42 0E 00 FF FF FF FF FF FF FF 00     // {XDCB..........

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    A043: 14 44 20 5F 44 53 4D 0C                          // .D _DSM.


    A04B: 08 5F 54 5F 30 00                                // ._T_0.

                If (PCIC (Arg0))
                {

    A051: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    A058: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
    A061: A0 44 1E 93 68                                   // .D..h

ToUUID ("732b85d5-b7a7-4a1b-9ba0-4bbd00ffd511") /* Unknown UUID */))
                {

    A066: 11 13 0A 10 D5 85 2B 73 A7 B7 1B 4A 9B A0 4B BD  // ......+s...J..K.
    A076: 00 FF D5 11                                      // ....

                    If (LEqual (Arg1, One))
                    {

    A07A: A0 4B 1C 93 69 01                                // .K..i.

                        Switch (Arg2)
                        {

    A080: A2 45 1C 01 70 6A 5F 54 5F 30                    // .E..pj_T_0

                            Case (Zero)
                            {

    A08A: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                                Return (
    A092: A4                                               // .

Buffer (One)
                                {
                                     0x73                                             // s
                                })
                            }

    A093: 11 03 01 73                                      // ...s

                            Case
    A097: A1 4D 1A                                         // .M.

 (One)
                            {

    A09A: A0 09 93 5F 54 5F 30 01                          // ..._T_0.

                                Return (One)
                            }

    A0A2: A4 01                                            // ..

                            Case
    A0A4: A1 40 1A                                         // .@.

 (0x04)
                            {

    A0A7: A0 44 11 93 5F 54 5F 30 0A 04                    // .D.._T_0..

                                OperationRegion (XDBW, SystemMemory, XDBA (), 0x00110000)

    A0B1: 5B 80 58 44 42 57 00 58 44 42 41 0C 00 00 11 00  // [.XDBW.XDBA.....

                                Field (XDBW, WordAcc, NoLock, Preserve)
                                {
                                    Offset (0x10F810), 
                                    Offset (0x10F811), 
                                    U2CP,   2, 
                                    U3CP,   2, 
                                    Offset (0x10F818), 
                                    PUPS,   2, 
                                        ,   1, 
                                    PURC,   1, 
                                    Offset (0x10F81A), 
                                    Offset (0x10F81C), 
                                        ,   3, 
                                    UXPE,   2, 
                                    Offset (0x10F81E)
                                }

                                Store (DerefOf (
    A0C1: 5B 81 32 58 44 42 57 02 00 C0 08 7C 08 00 08 55  // [.2XDBW....|...U
    A0D1: 32 43 50 02 55 33 43 50 02 00 34 50 55 50 53 02  // 2CP.U3CP..4PUPS.
    A0E1: 00 01 50 55 52 43 01 00 0C 00 10 00 03 55 58 50  // ..PURC.......UXP
    A0F1: 45 02 00 0B 70 83                                // E...p.

Index (Arg3, Zero)), Local1)

    A0F7: 88 6B 00 00 61                                   // .k..a

                                If (LEqual (Local1, Zero))
                                {
                                    Store (Zero, UXPE) /* \_SB_.PCI0.XDCI._DSM.UXPE */
                                    Store (Zero, PURC) /* \_SB_.PCI0.XDCI._DSM.PURC */
                                    Store (Zero, Local0)

    A0FC: A0 4A 05 93 61 00 70 00 55 58 50 45 70 00 50 55  // .J..a.p.UXPEp.PU
    A10C: 52 43 70 00 60                                   // RCp.`

                                    While (LLess (Local0, 0x0A))
                                    {
                                        Stall (0x64)

    A111: A2 0B 95 60 0A 0A 5B 21 0A 64                    // ...`..[!.d

                                        Increment (Local0)
                                    }

                                    Store (Zero, PUPS) /* \_SB_.PCI0.XDCI._DSM.PUPS */
                                    Store (Zero, Local0)

    A11B: 75 60 70 00 50 55 50 53 70 00 60                 // u`p.PUPSp.`

                                    While (LLess (Local0, 0x07D0))
                                    {
                                        Stall (0x64)

    A126: A2 1C 95 60 0B D0 07 5B 21 0A 64                 // ...`...[!.d

                                        If (LAnd (LEqual (U2CP, Zero), 
    A131: A0 0F 90 93 55 32 43 50 00                       // ....U2CP.

LEqual (U3CP, Zero)))
                                        {

    A13A: 93 55 33 43 50 00                                // .U3CP.

                                            Break
                                        }


    A140: A5                                               // .

                                        Increment (Local0)
                                    }


    A141: 75 60                                            // u`

                                    If (
    A143: A0 08                                            // ..


    A145: 92                                               // .

LNotEqual (U2CP, Zero)){}

    A146: 93 55 32 43 50 00                                // .U2CP.

                                    If (
    A14C: A0 08                                            // ..


    A14E: 92                                               // .

LNotEqual (U3CP, Zero)){}

    A14F: 93 55 33 43 50 00                                // .U3CP.

                                    Return (Zero)
                                }


    A155: A4 00                                            // ..

                                If (LEqual (Local1, 0x03))
                                {

    A157: A0 44 06 93 61 0A 03                             // .D..a..

                                    If (
    A15E: A0 08                                            // ..


    A160: 92                                               // .

LNotEqual (U2CP, Zero)){}

    A161: 93 55 32 43 50 00                                // .U2CP.

                                    If (
    A167: A0 08                                            // ..


    A169: 92                                               // .

LNotEqual (U3CP, Zero)){}
                                    Store (0x03, PUPS) /* \_SB_.PCI0.XDCI._DSM.PUPS */
                                    Store (Zero, Local0)

    A16A: 93 55 33 43 50 00 70 0A 03 50 55 50 53 70 00 60  // .U3CP.p..PUPSp.`

                                    While (LLess (Local0, 0x07D0))
                                    {
                                        Stall (0x64)

    A17A: A2 1E 95 60 0B D0 07 5B 21 0A 64                 // ...`...[!.d

                                        If (LAnd (LEqual (U2CP, 0x03), 
    A185: A0 11 90 93 55 32 43 50 0A 03                    // ....U2CP..

LEqual (U3CP, 0x03)))
                                        {

    A18F: 93 55 33 43 50 0A 03                             // .U3CP..

                                            Break
                                        }


    A196: A5                                               // .

                                        Increment (Local0)
                                    }


    A197: 75 60                                            // u`

                                    If (
    A199: A0 09                                            // ..


    A19B: 92                                               // .

LNotEqual (U2CP, 0x03)){}

    A19C: 93 55 32 43 50 0A 03                             // .U2CP..

                                    If (
    A1A3: A0 09                                            // ..


    A1A5: 92                                               // .

LNotEqual (U3CP, 0x03)){}
                                    Store (One, PURC) /* \_SB_.PCI0.XDCI._DSM.PURC */
                                    Store (0x03, UXPE) /* \_SB_.PCI0.XDCI._DSM.UXPE */

    A1A6: 93 55 33 43 50 0A 03 70 01 50 55 52 43 70 0A 03  // .U3CP..p.PURCp..
    A1B6: 55 58 50 45                                      // UXPE

                                    Return (Zero)
                                }
                            }

    A1BA: A4 00                                            // ..

                            Case
    A1BC: A1 48 08                                         // .H.

 (0x05)
                            {

    A1BF: A0 0A 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                Return (Zero)
                            }

    A1C8: A4 00                                            // ..

                            Case
    A1CA: A1 4A 07                                         // .J.

 (0x06)
                            {

    A1CD: A0 47 07 93 5F 54 5F 30 0A 06                    // .G.._T_0..

                                OperationRegion (XDBD, SystemMemory, XDBA (), 0x00110000)

    A1D7: 5B 80 58 44 42 44 00 58 44 42 41 0C 00 00 11 00  // [.XDBD.XDBA.....

                                Field (XDBD, DWordAcc, NoLock, Preserve)
                                {
                                    Offset (0xC704), 
                                        ,   30, 
                                    CSFR,   1, 
                                    Offset (0xC708)
                                }


    A1E7: 5B 81 13 58 44 42 44 03 00 80 82 63 00 1E 43 53  // [..XDBD....c..CS
    A1F7: 46 52 01 00 01                                   // FR...

                                OperationRegion (XDW2, SystemMemory, XDBA (), 0x00110000)

    A1FC: 5B 80 58 44 57 32 00 58 44 42 41 0C 00 00 11 00  // [.XDW2.XDBA.....

                                Field (XDW2, WordAcc, NoLock, Preserve)
                                {
                                    Offset (0x10F820), 
                                        ,   13, 
                                    OTHC,   1
                                }


    A20C: 5B 81 12 58 44 57 32 02 00 C0 10 7C 08 00 0D 4F  // [..XDW2....|...O
    A21C: 54 48 43 01                                      // THC.

                                If (LEqual (OTHC, Zero))
                                {
                                    Store (One, CSFR) /* \_SB_.PCI0.XDCI._DSM.CSFR */
                                    Store (Zero, Local0)

    A220: A0 22 93 4F 54 48 43 00 70 01 43 53 46 52 70 00  // .".OTHC.p.CSFRp.
    A230: 60                                               // `

                                    While (LLess (Local0, 0x64))
                                    {

    A231: A2 11 95 60 0A 64                                // ...`.d

                                        If (LEqual (CSFR, Zero))
                                        {

    A237: A0 08 93 43 53 46 52 00                          // ...CSFR.

                                            Break
                                        }


    A23F: A5                                               // .

                                        Sleep (One)
                                    }
                                }


    A240: 5B 22 01                                         // [".

                                Return (Zero)
                            }


    A243: A4 00                                            // ..

                        }
                    }
                }


    A245: A5                                               // .

                Return (Zero)
            }


    A246: A4 00                                            // ..

            Name (_DDN, "SPT XHCI controller")  // _DDN: DOS Device Name

    A248: 08 5F 44 44 4E 0D 53 50 54 20 58 48 43 49 20 63  // ._DDN.SPT XHCI c
    A258: 6F 6E 74 72 6F 6C 6C 65 72 00                    // ontroller.

            Name (_STR, 
    A262: 08 5F 53 54 52                                   // ._STR

Unicode ("SPT XHCI controller"))  // _STR: Description String

    A267: 11 2B 0A 28 53 00 50 00 54 00 20 00 58 00 48 00  // .+.(S.P.T. .X.H.
    A277: 43 00 49 00 20 00 63 00 6F 00 6E 00 74 00 72 00  // C.I. .c.o.n.t.r.
    A287: 6F 00 6C 00 6C 00 65 00 72 00 00 00              // o.l.l.e.r...

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {

    A293: 14 09 5F 53 30 57 00                             // .._S0W.

                Return (0x03)
            }


    A29A: A4 0A 03                                         // ...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    A29D: 14 1A 5F 53 54 41 00                             // .._STA.

                If (
    A2A4: A0 0F 92                                         // ...

LNotEqual (DVID, 0xFFFFFFFF))
                {

    A2A7: 93 44 56 49 44 0C FF FF FF FF                    // .DVID.....

                    Return (0x0F)
                }

    A2B1: A4 0A 0F                                         // ...

                Else
                {

    A2B4: A1 03                                            // ..

                    Return (Zero)
                }
            }


    A2B6: A4 00                                            // ..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    A2B8: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x04))
            }


    A2BF: A4 47 50 52 57 0A 6D 0A 04                       // .GPRW.m..

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

    A2C8: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE) /* \_SB_.PCI0.XDCI.PMEE */
            }


    A2CF: 70 68 50 4D 45 45                                // phPMEE

            Method (GPEH, 0, NotSerialized)
            {

    A2D5: 14 2D 47 50 45 48 00                             // .-GPEH.

                If (LEqual (DVID, 0xFFFF))
                {

    A2DC: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (PMES, Local0)
                Store (One, PMES) /* \_SB_.PCI0.XDCI.PMES */

    A2E6: A4 00 70 50 4D 45 53 60 70 01 50 4D 45 53        // ..pPMES`p.PMES

                If (LAnd (PMEE, Local0))
                {

    A2F4: A0 0E 90 50 4D 45 45 60                          // ...PMEE`

                    Notify (XDCI, 0x02) // Device Wake
                }
            }
        }
    }


    A2FC: 86 58 44 43 49 0A 02                             // .XDCI..

    Scope (_SB.PCI0)
    {

    A303: 10 8E 1D 01 2E 5F 53 42 5F 50 43 49 30           // ....._SB_PCI0

        Device (HDAS)
        {

    A310: 5B 82 44 29 48 44 41 53                          // [.D)HDAS

            Name (_ADR, 0x001F0003)  // _ADR: Address

    A318: 08 5F 41 44 52 0C 03 00 1F 00                    // ._ADR.....

            OperationRegion (HDAR, PCI_Config, Zero, 0x0100)

    A322: 5B 80 48 44 41 52 02 00 0B 00 01                 // [.HDAR.....

            Field (HDAR, WordAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x48), 
                    ,   6, 
                MBCG,   1, 
                Offset (0x54), 
                Offset (0x55), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


    A32D: 5B 81 26 48 44 41 52 02 56 44 49 44 20 00 40 22  // [.&HDAR.VDID .@"
    A33D: 00 06 4D 42 43 47 01 00 49 05 00 08 50 4D 45 45  // ..MBCG..I...PMEE
    A34D: 01 00 06 50 4D 45 53 01                          // ...PMES.

            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State

    A355: 08 5F 53 30 57 0A 03                             // ._S0W..

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

    A35C: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE) /* \_SB_.PCI0.HDAS.PMEE */
            }


    A363: 70 68 50 4D 45 45                                // phPMEE

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    A369: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x04))
            }


    A370: A4 47 50 52 57 0A 6D 0A 04                       // .GPRW.m..

            Method (GPEH, 0, NotSerialized)
            {

    A379: 14 3B 47 50 45 48 00                             // .;GPEH.

                If (LEqual (VDID, 0xFFFFFFFF))
                {

    A380: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                    Return (Zero)
                }


    A38C: A4 00                                            // ..

                If (LAnd (PMEE, PMES))
                {
                    ADBG ("HDAS GPEH")
                    Store (One, PMES) /* \_SB_.PCI0.HDAS.PMES */

    A38E: A0 26 90 50 4D 45 45 50 4D 45 53 41 44 42 47 0D  // .&.PMEEPMESADBG.
    A39E: 48 44 41 53 20 47 50 45 48 00 70 01 50 4D 45 53  // HDAS GPEH.p.PMES

                    Notify (HDAS, 0x02) // Device Wake
                }
            }


    A3AE: 86 48 44 41 53 0A 02                             // .HDAS..

            Name (NBUF, 
    A3B5: 08 4E 42 55 46                                   // .NBUF

ResourceTemplate ()
            {
                QWordMemory (ResourceConsumer, PosDecode, MinNotFixed, MaxNotFixed, NonCacheable, ReadOnly,
                    0x0000000000000001, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y1A, AddressRangeACPI, TypeStatic)
            })

    A3BA: 11 33 0A 30 8A 2B 00 00 01 10 01 00 00 00 00 00  // .3.0.+..........
    A3CA: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A3DA: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A3EA: 00 00 79 00                                      // ..y.

            Method (AUWA, 0, Serialized)
            {

    A3EE: 14 48 05 41 55 57 41 08                          // .H.AUWA.

                If (LEqual (PCHS, One))
                {

    A3F6: A0 18 93 50 43 48 53 01                          // ...PCHS.

                    If (LEqual (^^LPCB.CRID, Zero))
                    {

    A3FE: A0 10 93 5E 5E 2E 4C 50 43 42 43 52 49 44 00     // ...^^.LPCBCRID.

                        Return (One)
                    }
                }

    A40D: A4 01                                            // ..

                Else
                {

    A40F: A1 35                                            // .5

                    If (LEqual (^^LPCB.CRID, Zero))
                    {

    A411: A0 10 93 5E 5E 2E 4C 50 43 42 43 52 49 44 00     // ...^^.LPCBCRID.

                        Return (One)
                    }


    A420: A4 01                                            // ..

                    If (LEqual (^^LPCB.CRID, One))
                    {

    A422: A0 10 93 5E 5E 2E 4C 50 43 42 43 52 49 44 01     // ...^^.LPCBCRID.

                        Return (One)
                    }


    A431: A4 01                                            // ..

                    If (LEqual (^^LPCB.CRID, 0x09))
                    {

    A433: A0 11 93 5E 5E 2E 4C 50 43 42 43 52 49 44 0A 09  // ...^^.LPCBCRID..

                        Return (One)
                    }
                }


    A443: A4 01                                            // ..

                Return (Zero)
            }


    A445: A4 00                                            // ..

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                ADBG ("HDAS _INI")

    A447: 14 47 06 5F 49 4E 49 00 41 44 42 47 0D 48 44 41  // .G._INI.ADBG.HDA
    A457: 53 20 5F 49 4E 49 00                             // S _INI.

                CreateQWordField (NBUF, \_SB.PCI0.HDAS._Y1A._MIN, NBAS)  // _MIN: Minimum Base Address

    A45E: 8F 4E 42 55 46 0A 0E 4E 42 41 53                 // .NBUF..NBAS

                CreateQWordField (NBUF, \_SB.PCI0.HDAS._Y1A._MAX, NMAS)  // _MAX: Maximum Base Address

    A469: 8F 4E 42 55 46 0A 16 4E 4D 41 53                 // .NBUF..NMAS

                CreateQWordField (NBUF, \_SB.PCI0.HDAS._Y1A._LEN, NLEN)  // _LEN: Length
                Store (NHLA, NBAS) /* \_SB_.PCI0.HDAS._INI.NBAS */
                Add (NHLA, Subtract (NHLL, One), NMAS) /* \_SB_.PCI0.HDAS._INI.NMAS */
                Store (NHLL, NLEN) /* \_SB_.PCI0.HDAS._INI.NLEN */

    A474: 8F 4E 42 55 46 0A 26 4E 4C 45 4E 70 4E 48 4C 41  // .NBUF.&NLENpNHLA
    A484: 4E 42 41 53 72 4E 48 4C 41 74 4E 48 4C 4C 01 00  // NBASrNHLAtNHLL..
    A494: 4E 4D 41 53 70 4E 48 4C 4C 4E 4C 45 4E           // NMASpNHLLNLEN

                If (LEqual (AUWA (), One))
                {

    A4A1: A0 0D 93 41 55 57 41 01                          // ...AUWA.

                    Store (Zero, MBCG) /* \_SB_.PCI0.HDAS.MBCG */
                }
            }


    A4A9: 70 00 4D 42 43 47                                // p.MBCG

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    A4AF: 14 46 0F 5F 44 53 4D 0C                          // .F._DSM.

                ADBG ("HDAS _DSM")

    A4B7: 08 5F 54 5F 30 00 41 44 42 47 0D 48 44 41 53 20  // ._T_0.ADBG.HDAS 
    A4C7: 5F 44 53 4D 00                                   // _DSM.

                If (PCIC (Arg0))
                {

    A4CC: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    A4D3: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
    A4DC: A0 46 0B 93 68                                   // .F..h

ToUUID ("a69f886e-6ceb-4594-a41f-7b5dce24c553") /* Unknown UUID */))
                {

    A4E1: 11 13 0A 10 6E 88 9F A6 EB 6C 94 45 A4 1F 7B 5D  // ....n....l.E..{]
    A4F1: CE 24 C5 53                                      // .$.S

                    Switch (Arg2)
                    {

    A4F5: A2 4D 09 01 70 6A 5F 54 5F 30                    // .M..pj_T_0

                        Case (Zero)
                        {

    A4FF: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                            Return (
    A507: A4                                               // .

Buffer (One)
                            {
                                 0x0F                                             // .
                            })
                        }

    A508: 11 03 01 0F                                      // ....

                        Case
    A50C: A1 45 08                                         // .E.

 (One)
                        {
                            ADBG ("_DSM Fun 1 NHLT")

    A50F: A0 21 93 5F 54 5F 30 01 41 44 42 47 0D 5F 44 53  // .!._T_0.ADBG._DS
    A51F: 4D 20 46 75 6E 20 31 20 4E 48 4C 54 00           // M Fun 1 NHLT.

                            Return (NBUF) /* \_SB_.PCI0.HDAS.NBUF */
                        }

    A52C: A4 4E 42 55 46                                   // .NBUF

                        Case
    A531: A1 40 06                                         // .@.

 (0x02)
                        {
                            ADBG ("_DSM Fun 2 FMSK")

    A534: A0 22 93 5F 54 5F 30 0A 02 41 44 42 47 0D 5F 44  // ."._T_0..ADBG._D
    A544: 53 4D 20 46 75 6E 20 32 20 46 4D 53 4B 00        // SM Fun 2 FMSK.

                            Return (ADFM) /* \ADFM */
                        }

    A552: A4 41 44 46 4D                                   // .ADFM

                        Case
    A557: A1 3A                                            // .:

 (0x03)
                        {
                            ADBG ("_DSM Fun 3 PPMS")

    A559: A0 1F 93 5F 54 5F 30 0A 03 41 44 42 47 0D 5F 44  // ..._T_0..ADBG._D
    A569: 53 4D 20 46 75 6E 20 33 20 50 50 4D 53 00        // SM Fun 3 PPMS.

                            Return (Zero)
                        }

    A577: A4 00                                            // ..

                        Default
                        {
                            ADBG ("_DSM Fun NOK")

    A579: A1 18 41 44 42 47 0D 5F 44 53 4D 20 46 75 6E 20  // ..ADBG._DSM Fun 
    A589: 4E 4F 4B 00                                      // NOK.

                            Return (
    A58D: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }


    A58E: 11 03 01 00                                      // ....

                    }
                }

                ADBG ("_DSM UUID NOK")
            }
        }


    A592: A5 41 44 42 47 0D 5F 44 53 4D 20 55 55 49 44 20  // .ADBG._DSM UUID 
    A5A2: 4E 4F 4B 00                                      // NOK.

        Device (SAT0)
        {

    A5A6: 5B 82 44 E5 53 41 54 30                          // [.D.SAT0

            Name (_ADR, 0x00170000)  // _ADR: Address

    A5AE: 08 5F 41 44 52 0C 00 00 17 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    A5B8: 14 39 5F 44 53 4D 0C                             // .9_DSM.

                If (PCIC (Arg0))
                {

    A5BF: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    A5C6: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (CondRefOf (\_SB.PCI0.SAT0.SDSM))
                {

    A5CF: A0 20 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 53  // . [.\/._SB_PCI0S
    A5DF: 41 54 30 53 44 53 4D 00                          // AT0SDSM.

                    Return (SDSM) /* External reference */
                    Arg0
                    Arg1
                    Arg2
                    Arg3
                }


    A5E7: A4 53 44 53 4D 68 69 6A 6B                       // .SDSMhijk

                Return (Zero)
            }


    A5F0: A4 00                                            // ..

            Device (PRT0)
            {

    A5F2: 5B 82 0D 50 52 54 30                             // [..PRT0

                Name (_ADR, 0xFFFF)  // _ADR: Address
            }


    A5F9: 08 5F 41 44 52 0B FF FF                          // ._ADR...

            Device (PRT1)
            {

    A601: 5B 82 0F 50 52 54 31                             // [..PRT1

                Name (_ADR, 0x0001FFFF)  // _ADR: Address
            }


    A608: 08 5F 41 44 52 0C FF FF 01 00                    // ._ADR.....

            Device (PRT2)
            {

    A612: 5B 82 0F 50 52 54 32                             // [..PRT2

                Name (_ADR, 0x0002FFFF)  // _ADR: Address
            }


    A619: 08 5F 41 44 52 0C FF FF 02 00                    // ._ADR.....

            Device (PRT3)
            {

    A623: 5B 82 0F 50 52 54 33                             // [..PRT3

                Name (_ADR, 0x0003FFFF)  // _ADR: Address
            }


    A62A: 08 5F 41 44 52 0C FF FF 03 00                    // ._ADR.....

            Device (PRT4)
            {

    A634: 5B 82 0F 50 52 54 34                             // [..PRT4

                Name (_ADR, 0x0004FFFF)  // _ADR: Address
            }


    A63B: 08 5F 41 44 52 0C FF FF 04 00                    // ._ADR.....

            Device (PRT5)
            {

    A645: 5B 82 0F 50 52 54 35                             // [..PRT5

                Name (_ADR, 0x0005FFFF)  // _ADR: Address
            }


    A64C: 08 5F 41 44 52 0C FF FF 05 00                    // ._ADR.....

            Method (RDCA, 5, Serialized)
            {

    A656: 14 4B 0F 52 44 43 41 0D                          // .K.RDCA.


    A65E: 08 5F 54 5F 30 00                                // ._T_0.

                OperationRegion (RPAL, SystemMemory, Add (GPCB (), Add (0x000B8100, Arg1)), 0x04)

    A664: 5B 80 52 50 41 4C 00 72 47 50 43 42 72 0C 00 81  // [.RPAL.rGPCBr...
    A674: 0B 00 69 00 00 0A 04                             // ..i....

                Field (RPAL, DWordAcc, Lock, Preserve)
                {
                    RPCD,   32
                }


    A67B: 5B 81 0B 52 50 41 4C 13 52 50 43 44 20           // [..RPAL.RPCD 

                OperationRegion (EPAC, SystemMemory, Add (GPCB (), 0x000B8308), 0x08)

    A688: 5B 80 45 50 41 43 00 72 47 50 43 42 0C 08 83 0B  // [.EPAC.rGPCB....
    A698: 00 00 0A 08                                      // ....

                Field (EPAC, DWordAcc, Lock, Preserve)
                {
                    CAIR,   32, 
                    CADR,   32
                }


    A69C: 5B 81 10 45 50 41 43 13 43 41 49 52 20 43 41 44  // [..EPAC.CAIR CAD
    A6AC: 52 20                                            // R 

                OperationRegion (NCRG, SystemMemory, Add (GPCB (), 0x000B8FC0), 0x04)

    A6AE: 5B 80 4E 43 52 47 00 72 47 50 43 42 0C C0 8F 0B  // [.NCRG.rGPCB....
    A6BE: 00 00 0A 04                                      // ....

                Field (NCRG, DWordAcc, Lock, Preserve)
                {
                    CRGC,   32
                }


    A6C2: 5B 81 0B 4E 43 52 47 13 43 52 47 43 20           // [..NCRG.CRGC 

                If (LGreater (Arg0, 0x02))
                {

    A6CF: A0 07 94 68 0A 02                                // ...h..

                    Return (Zero)
                }

    A6D5: A4 00                                            // ..

                Else
                {

    A6D7: A1 07                                            // ..

                    Store (Arg0, CRGC) /* \_SB_.PCI0.SAT0.RDCA.CRGC */
                }


    A6D9: 70 68 43 52 47 43                                // phCRGC

                Switch (ToInteger (Arg4))
                {

    A6DF: A2 42 07 01 70 99 6C 00 5F 54 5F 30              // .B..p.l._T_0

                    Case (Zero)
                    {

    A6EB: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                        Return (RPCD) /* \_SB_.PCI0.SAT0.RDCA.RPCD */
                    }

    A6F3: A4 52 50 43 44                                   // .RPCD

                    Case
    A6F8: A1 48 05                                         // .H.

 (0x02)
                    {
                        Store (Arg1, CAIR) /* \_SB_.PCI0.SAT0.RDCA.CAIR */

    A6FB: A0 13 93 5F 54 5F 30 0A 02 70 69 43 41 49 52     // ..._T_0..piCAIR

                        Return (CADR) /* \_SB_.PCI0.SAT0.RDCA.CADR */
                    }

    A70A: A4 43 41 44 52                                   // .CADR

                    Case
    A70F: A1 41 04                                         // .A.

 (One)
                    {
                        And (Arg2, RPCD, Local0)
                        Or (Arg3, Local0, Local0)

    A712: A0 18 93 5F 54 5F 30 01 7B 6A 52 50 43 44 60 7D  // ..._T_0.{jRPCD`}
    A722: 6B 60 60                                         // k``

                        Store (Local0, RPCD) /* \_SB_.PCI0.SAT0.RDCA.RPCD */
                    }

    A725: 70 60 52 50 43 44                                // p`RPCD

                    Case
    A72B: A1 25                                            // .%

 (0x03)
                    {
                        Store (Arg1, CAIR) /* \_SB_.PCI0.SAT0.RDCA.CAIR */
                        And (Arg2, CADR, Local0)
                        Or (Arg3, Local0, Local0)

    A72D: A0 1F 93 5F 54 5F 30 0A 03 70 69 43 41 49 52 7B  // ..._T_0..piCAIR{
    A73D: 6A 43 41 44 52 60 7D 6B 60 60                    // jCADR`}k``

                        Store (Local0, CADR) /* \_SB_.PCI0.SAT0.RDCA.CADR */
                    }

    A747: 70 60 43 41 44 52                                // p`CADR

                    Default
                    {

    A74D: A1 03                                            // ..

                        Return (Zero)
                    }


    A74F: A4 00                                            // ..

                }
            }


    A751: A5                                               // .

            Method (RPD0, 1, Serialized)
            {
                RDCA (Arg0, 0xA4, 0xFFFFFFFC, Zero, One)
            }


    A752: 14 14 52 50 44 30 09 52 44 43 41 68 0A A4 0C FC  // ..RPD0.RDCAh....
    A762: FF FF FF 00 01                                   // .....

            Method (RPD3, 1, Serialized)
            {
                RDCA (Arg0, 0xA4, 0xFFFFFFFC, 0x03, One)
            }


    A767: 14 15 52 50 44 33 09 52 44 43 41 68 0A A4 0C FC  // ..RPD3.RDCAh....
    A777: FF FF FF 0A 03 01                                // ......

            Device (NVM1)
            {

    A77D: 5B 82 48 42 4E 56 4D 31                          // [.HBNVM1

                Name (_ADR, 0x00C1FFFF)  // _ADR: Address

    A785: 08 5F 41 44 52 0C FF FF C1 00                    // ._ADR.....

                Name (PRBI, Zero)

    A78F: 08 50 52 42 49 00                                // .PRBI.

                Name (PRBD, Zero)

    A795: 08 50 52 42 44 00                                // .PRBD.

                Name (PCMD, Zero)

    A79B: 08 50 43 4D 44 00                                // .PCMD.

                Name (NCRN, Zero)

    A7A1: 08 4E 43 52 4E 00                                // .NCRN.

                Name (NITV, Zero)

    A7A7: 08 4E 49 54 56 00                                // .NITV.

                Name (NPMV, Zero)

    A7AD: 08 4E 50 4D 56 00                                // .NPMV.

                Name (NPCV, Zero)

    A7B3: 08 4E 50 43 56 00                                // .NPCV.

                Name (NL1V, Zero)

    A7B9: 08 4E 4C 31 56 00                                // .NL1V.

                Name (ND2V, Zero)

    A7BF: 08 4E 44 32 56 00                                // .ND2V.

                Name (ND1V, Zero)

    A7C5: 08 4E 44 31 56 00                                // .ND1V.

                Name (NLRV, Zero)

    A7CB: 08 4E 4C 52 56 00                                // .NLRV.

                Name (NLDV, Zero)

    A7D1: 08 4E 4C 44 56 00                                // .NLDV.

                Name (NEAV, Zero)

    A7D7: 08 4E 45 41 56 00                                // .NEAV.

                Name (NEBV, Zero)

    A7DD: 08 4E 45 42 56 00                                // .NEBV.

                Name (NECV, Zero)

    A7E3: 08 4E 45 43 56 00                                // .NECV.

                Name (NRAV, Zero)

    A7E9: 08 4E 52 41 56 00                                // .NRAV.

                Name (NMBV, Zero)

    A7EF: 08 4E 4D 42 56 00                                // .NMBV.

                Name (NMVV, Zero)

    A7F5: 08 4E 4D 56 56 00                                // .NMVV.

                Name (NPBV, Zero)

    A7FB: 08 4E 50 42 56 00                                // .NPBV.

                Name (NPVV, Zero)

    A801: 08 4E 50 56 56 00                                // .NPVV.

                Method (EPD0, 0, Serialized)
                {
                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, Zero, 0x03)
                }


    A807: 14 1E 45 50 44 30 08 52 44 43 41 4E 43 52 4E 72  // ..EPD0.RDCANCRNr
    A817: 4E 50 4D 56 0A 04 00 0C FC FF FF FF 00 0A 03     // NPMV...........

                Method (EPD3, 0, Serialized)
                {
                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, 0x03, 0x03)
                }


    A826: 14 1F 45 50 44 33 08 52 44 43 41 4E 43 52 4E 72  // ..EPD3.RDCANCRNr
    A836: 4E 50 4D 56 0A 04 00 0C FC FF FF FF 0A 03 0A 03  // NPMV............

                Method (CNRS, 0, Serialized)
                {

    A846: 14 4A 20 43 4E 52 53 08                          // .J CNRS.

                    If (LEqual (NITV, Zero))
                    {

    A84E: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RDCA (NCRN, 0x10, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x14, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x18, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x1C, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x20, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x24, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x04, 0xFFFFFFF8, PCMD, 0x03)
                    RDCA (NCRN, PRBI, Zero, PRBD, 0x03)

    A856: A4 00 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 03  // ..RDCANCRN......
    A866: 52 44 43 41 4E 43 52 4E 0A 14 00 00 0A 03 52 44  // RDCANCRN......RD
    A876: 43 41 4E 43 52 4E 0A 18 00 00 0A 03 52 44 43 41  // CANCRN......RDCA
    A886: 4E 43 52 4E 0A 1C 00 00 0A 03 52 44 43 41 4E 43  // NCRN......RDCANC
    A896: 52 4E 0A 20 00 00 0A 03 52 44 43 41 4E 43 52 4E  // RN. ....RDCANCRN
    A8A6: 0A 24 00 00 0A 03 52 44 43 41 4E 43 52 4E 0A 04  // .$....RDCANCRN..
    A8B6: 0C F8 FF FF FF 50 43 4D 44 0A 03 52 44 43 41 4E  // .....PCMD..RDCAN
    A8C6: 43 52 4E 50 52 42 49 00 50 52 42 44 0A 03        // CRNPRBI.PRBD..

                    If (
    A8D4: A0 4E 05 92                                      // .N..

LNotEqual (NL1V, Zero))
                    {
                        RDCA (NCRN, Add (NL1V, 0x0C), 0xFFFFFF00, ND2V, 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0x0F, And (ND1V, 0xFFFFFFF0), 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0xFFFFFFFF, ND1V, 0x03)
                    }


    A8D8: 93 4E 4C 31 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NL1V.RDCANCRNrN
    A8E8: 4C 31 56 0A 0C 00 0C 00 FF FF FF 4E 44 32 56 0A  // L1V........ND2V.
    A8F8: 03 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08  // .RDCANCRNrNL1V..
    A908: 00 0A 0F 7B 4E 44 31 56 0C F0 FF FF FF 00 0A 03  // ...{ND1V........
    A918: 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08 00  // RDCANCRNrNL1V...
    A928: 0C FF FF FF FF 4E 44 31 56 0A 03                 // .....ND1V..

                    If (
    A933: A0 23 92                                         // .#.

LNotEqual (NLRV, Zero))
                    {
                        RDCA (NCRN, Add (NLRV, 0x04), 0xFFFFFFFF, NLDV, 0x03)
                    }

                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFEBF, And (NEAV, 0xFFFC), 0x03)
                    RDCA (NCRN, Add (NPCV, 0x28), 0xFFFFFBFF, NECV, 0x03)
                    RDCA (NCRN, Add (NPCV, 0x08), 0xFFFFFF1F, NEBV, 0x03)
                    RDCA (NCRN, 0x68, 0xFFFFFBFF, NRAV, One)

    A936: 93 4E 4C 52 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NLRV.RDCANCRNrN
    A946: 4C 52 56 0A 04 00 0C FF FF FF FF 4E 4C 44 56 0A  // LRV........NLDV.
    A956: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 10  // .RDCANCRNrNPCV..
    A966: 00 0C BF FE FF FF 7B 4E 45 41 56 0B FC FF 00 0A  // ......{NEAV.....
    A976: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 28  // .RDCANCRNrNPCV.(
    A986: 00 0C FF FB FF FF 4E 45 43 56 0A 03 52 44 43 41  // ......NECV..RDCA
    A996: 4E 43 52 4E 72 4E 50 43 56 0A 08 00 0C 1F FF FF  // NCRNrNPCV.......
    A9A6: FF 4E 45 42 56 0A 03 52 44 43 41 4E 43 52 4E 0A  // .NEBV..RDCANCRN.
    A9B6: 68 0C FF FB FF FF 4E 52 41 56 01                 // h.....NRAV.

                    If (LEqual (And (NEAV, 0x40), 0x40))
                    {
                        RDCA (NCRN, 0x50, 0xFFFFFFDF, 0x20, One)

    A9C1: A0 38 93 7B 4E 45 41 56 0A 40 00 0A 40 52 44 43  // .8.{NEAV.@..@RDC
    A9D1: 41 4E 43 52 4E 0A 50 0C DF FF FF FF 0A 20 01     // ANCRN.P...... .

                        While (LEqual (And (RDCA (NCRN, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                        {

    A9E0: A2 19 93 7B 52 44 43 41 4E 43 52 4E 0A 52 00 00  // ...{RDCANCRN.R..
    A9F0: 00 0B 00 20 00 00                                // ... ..

                            Stall (0x0A)
                        }
                    }

                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFFFC, And (NEAV, 0x03), 0x03)

    A9F6: 5B 21 0A 0A 52 44 43 41 4E 43 52 4E 72 4E 50 43  // [!..RDCANCRNrNPC
    AA06: 56 0A 10 00 0C FC FF FF FF 7B 4E 45 41 56 0A 03  // V........{NEAV..
    AA16: 00 0A 03                                         // ...

                    If (
    AA19: A0 1B 92                                         // ...

LNotEqual (NMVV, Zero))
                    {
                        RDCA (NCRN, NMBV, Zero, NMVV, 0x03)
                    }


    AA1C: 93 4E 4D 56 56 00 52 44 43 41 4E 43 52 4E 4E 4D  // .NMVV.RDCANCRNNM
    AA2C: 42 56 00 4E 4D 56 56 0A 03                       // BV.NMVV..

                    If (
    AA35: A0 1B 92                                         // ...

LNotEqual (NPVV, Zero))
                    {
                        RDCA (NCRN, NPBV, Zero, NPVV, 0x03)
                    }
                }


    AA38: 93 4E 50 56 56 00 52 44 43 41 4E 43 52 4E 4E 50  // .NPVV.RDCANCRNNP
    AA48: 42 56 00 4E 50 56 56 0A 03                       // BV.NPVV..

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {

    AA51: 14 47 07 5F 50 53 33 08                          // .G._PS3.

                    If (LEqual (NITV, Zero))
                    {

    AA59: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    Store (RDCA (NCRN, 0x04, Zero, Zero, 0x02), PCMD) /* \_SB_.PCI0.SAT0.NVM1.PCMD */

    AA61: A4 00 70 52 44 43 41 4E 43 52 4E 0A 04 00 00 0A  // ..pRDCANCRN.....
    AA71: 02 50 43 4D 44                                   // .PCMD

                    If (LEqual (NITV, One))
                    {
                        Store (0x24, PRBI) /* \_SB_.PCI0.SAT0.NVM1.PRBI */

    AA76: A0 21 93 4E 49 54 56 01 70 0A 24 50 52 42 49     // .!.NITV.p.$PRBI

                        Store (RDCA (NCRN, 0x24, Zero, Zero, 0x02), PRBD) /* \_SB_.PCI0.SAT0.NVM1.PRBD */
                    }

    AA85: 70 52 44 43 41 4E 43 52 4E 0A 24 00 00 0A 02 50  // pRDCANCRN.$....P
    AA95: 52 42 44                                         // RBD

                    ElseIf
    AA98: A1 24                                            // .$

 (LEqual (NITV, 0x02))
                    {
                        Store (0x10, PRBI) /* \_SB_.PCI0.SAT0.NVM1.PRBI */

    AA9A: A0 22 93 4E 49 54 56 0A 02 70 0A 10 50 52 42 49  // .".NITV..p..PRBI

                        Store (RDCA (NCRN, 0x10, Zero, Zero, 0x02), PRBD) /* \_SB_.PCI0.SAT0.NVM1.PRBD */
                    }

                    EPD3 ()
                    RPD3 (NCRN)
                }


    AAAA: 70 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 02 50  // pRDCANCRN......P
    AABA: 52 42 44 45 50 44 33 52 50 44 33 4E 43 52 4E     // RBDEPD3RPD3NCRN

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {

    AAC9: 14 3F 5F 50 53 30 08                             // .?_PS0.

                    If (LEqual (NITV, Zero))
                    {

    AAD0: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RPD0 (NCRN)
                    EPD0 ()
                    Store (RDCA (NCRN, Add (NPMV, 0x04), Zero, Zero, 0x02), Local0)

    AAD8: A4 00 52 50 44 30 4E 43 52 4E 45 50 44 30 70 52  // ..RPD0NCRNEPD0pR
    AAE8: 44 43 41 4E 43 52 4E 72 4E 50 4D 56 0A 04 00 00  // DCANCRNrNPMV....
    AAF8: 00 0A 02 60                                      // ...`

                    If (LEqual (And (Local0, 0x08), Zero))
                    {
                        CNRS ()
                    }
                }


    AAFC: A0 0C 93 7B 60 0A 08 00 00 43 4E 52 53           // ...{`....CNRS

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (NIT1, NITV) /* \_SB_.PCI0.SAT0.NVM1.NITV */
                    Store (NPM1, NPMV) /* \_SB_.PCI0.SAT0.NVM1.NPMV */
                    Store (NPC1, NPCV) /* \_SB_.PCI0.SAT0.NVM1.NPCV */
                    Store (NL11, NL1V) /* \_SB_.PCI0.SAT0.NVM1.NL1V */
                    Store (ND21, ND2V) /* \_SB_.PCI0.SAT0.NVM1.ND2V */
                    Store (ND11, ND1V) /* \_SB_.PCI0.SAT0.NVM1.ND1V */
                    Store (NLR1, NLRV) /* \_SB_.PCI0.SAT0.NVM1.NLRV */
                    Store (NLD1, NLDV) /* \_SB_.PCI0.SAT0.NVM1.NLDV */
                    Store (NEA1, NEAV) /* \_SB_.PCI0.SAT0.NVM1.NEAV */
                    Store (NEB1, NEBV) /* \_SB_.PCI0.SAT0.NVM1.NEBV */
                    Store (NEC1, NECV) /* \_SB_.PCI0.SAT0.NVM1.NECV */
                    Store (NRA1, NRAV) /* \_SB_.PCI0.SAT0.NVM1.NRAV */
                    Store (NMB1, NMBV) /* \_SB_.PCI0.SAT0.NVM1.NMBV */
                    Store (NMV1, NMVV) /* \_SB_.PCI0.SAT0.NVM1.NMVV */
                    Store (NPB1, NPBV) /* \_SB_.PCI0.SAT0.NVM1.NPBV */
                    Store (NPV1, NPVV) /* \_SB_.PCI0.SAT0.NVM1.NPVV */

    AB09: 14 4D 09 5F 49 4E 49 00 70 4E 49 54 31 4E 49 54  // .M._INI.pNIT1NIT
    AB19: 56 70 4E 50 4D 31 4E 50 4D 56 70 4E 50 43 31 4E  // VpNPM1NPMVpNPC1N
    AB29: 50 43 56 70 4E 4C 31 31 4E 4C 31 56 70 4E 44 32  // PCVpNL11NL1VpND2
    AB39: 31 4E 44 32 56 70 4E 44 31 31 4E 44 31 56 70 4E  // 1ND2VpND11ND1VpN
    AB49: 4C 52 31 4E 4C 52 56 70 4E 4C 44 31 4E 4C 44 56  // LR1NLRVpNLD1NLDV
    AB59: 70 4E 45 41 31 4E 45 41 56 70 4E 45 42 31 4E 45  // pNEA1NEAVpNEB1NE
    AB69: 42 56 70 4E 45 43 31 4E 45 43 56 70 4E 52 41 31  // BVpNEC1NECVpNRA1
    AB79: 4E 52 41 56 70 4E 4D 42 31 4E 4D 42 56 70 4E 4D  // NRAVpNMB1NMBVpNM
    AB89: 56 31 4E 4D 56 56 70 4E 50 42 31 4E 50 42 56 70  // V1NMVVpNPB1NPBVp
    AB99: 4E 50 56 31 4E 50 56 56                          // NPV1NPVV

                    Store (Zero, NCRN) /* \_SB_.PCI0.SAT0.NVM1.NCRN */
                }
            }


    ABA1: 70 00 4E 43 52 4E                                // p.NCRN

            Device (NVM2)
            {

    ABA7: 5B 82 48 42 4E 56 4D 32                          // [.HBNVM2

                Name (_ADR, 0x00C2FFFF)  // _ADR: Address

    ABAF: 08 5F 41 44 52 0C FF FF C2 00                    // ._ADR.....

                Name (PRBI, Zero)

    ABB9: 08 50 52 42 49 00                                // .PRBI.

                Name (PRBD, Zero)

    ABBF: 08 50 52 42 44 00                                // .PRBD.

                Name (PCMD, Zero)

    ABC5: 08 50 43 4D 44 00                                // .PCMD.

                Name (NCRN, Zero)

    ABCB: 08 4E 43 52 4E 00                                // .NCRN.

                Name (NITV, Zero)

    ABD1: 08 4E 49 54 56 00                                // .NITV.

                Name (NPMV, Zero)

    ABD7: 08 4E 50 4D 56 00                                // .NPMV.

                Name (NPCV, Zero)

    ABDD: 08 4E 50 43 56 00                                // .NPCV.

                Name (NL1V, Zero)

    ABE3: 08 4E 4C 31 56 00                                // .NL1V.

                Name (ND2V, Zero)

    ABE9: 08 4E 44 32 56 00                                // .ND2V.

                Name (ND1V, Zero)

    ABEF: 08 4E 44 31 56 00                                // .ND1V.

                Name (NLRV, Zero)

    ABF5: 08 4E 4C 52 56 00                                // .NLRV.

                Name (NLDV, Zero)

    ABFB: 08 4E 4C 44 56 00                                // .NLDV.

                Name (NEAV, Zero)

    AC01: 08 4E 45 41 56 00                                // .NEAV.

                Name (NEBV, Zero)

    AC07: 08 4E 45 42 56 00                                // .NEBV.

                Name (NECV, Zero)

    AC0D: 08 4E 45 43 56 00                                // .NECV.

                Name (NRAV, Zero)

    AC13: 08 4E 52 41 56 00                                // .NRAV.

                Name (NMBV, Zero)

    AC19: 08 4E 4D 42 56 00                                // .NMBV.

                Name (NMVV, Zero)

    AC1F: 08 4E 4D 56 56 00                                // .NMVV.

                Name (NPBV, Zero)

    AC25: 08 4E 50 42 56 00                                // .NPBV.

                Name (NPVV, Zero)

    AC2B: 08 4E 50 56 56 00                                // .NPVV.

                Method (EPD0, 0, Serialized)
                {
                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, Zero, 0x03)
                }


    AC31: 14 1E 45 50 44 30 08 52 44 43 41 4E 43 52 4E 72  // ..EPD0.RDCANCRNr
    AC41: 4E 50 4D 56 0A 04 00 0C FC FF FF FF 00 0A 03     // NPMV...........

                Method (EPD3, 0, Serialized)
                {
                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, 0x03, 0x03)
                }


    AC50: 14 1F 45 50 44 33 08 52 44 43 41 4E 43 52 4E 72  // ..EPD3.RDCANCRNr
    AC60: 4E 50 4D 56 0A 04 00 0C FC FF FF FF 0A 03 0A 03  // NPMV............

                Method (CNRS, 0, Serialized)
                {

    AC70: 14 4A 20 43 4E 52 53 08                          // .J CNRS.

                    If (LEqual (NITV, Zero))
                    {

    AC78: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RDCA (NCRN, 0x10, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x14, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x18, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x1C, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x20, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x24, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x04, 0xFFFFFFF8, PCMD, 0x03)
                    RDCA (NCRN, PRBI, Zero, PRBD, 0x03)

    AC80: A4 00 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 03  // ..RDCANCRN......
    AC90: 52 44 43 41 4E 43 52 4E 0A 14 00 00 0A 03 52 44  // RDCANCRN......RD
    ACA0: 43 41 4E 43 52 4E 0A 18 00 00 0A 03 52 44 43 41  // CANCRN......RDCA
    ACB0: 4E 43 52 4E 0A 1C 00 00 0A 03 52 44 43 41 4E 43  // NCRN......RDCANC
    ACC0: 52 4E 0A 20 00 00 0A 03 52 44 43 41 4E 43 52 4E  // RN. ....RDCANCRN
    ACD0: 0A 24 00 00 0A 03 52 44 43 41 4E 43 52 4E 0A 04  // .$....RDCANCRN..
    ACE0: 0C F8 FF FF FF 50 43 4D 44 0A 03 52 44 43 41 4E  // .....PCMD..RDCAN
    ACF0: 43 52 4E 50 52 42 49 00 50 52 42 44 0A 03        // CRNPRBI.PRBD..

                    If (
    ACFE: A0 4E 05 92                                      // .N..

LNotEqual (NL1V, Zero))
                    {
                        RDCA (NCRN, Add (NL1V, 0x0C), 0xFFFFFF00, ND2V, 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0x0F, And (ND1V, 0xFFFFFFF0), 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0xFFFFFFFF, ND1V, 0x03)
                    }


    AD02: 93 4E 4C 31 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NL1V.RDCANCRNrN
    AD12: 4C 31 56 0A 0C 00 0C 00 FF FF FF 4E 44 32 56 0A  // L1V........ND2V.
    AD22: 03 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08  // .RDCANCRNrNL1V..
    AD32: 00 0A 0F 7B 4E 44 31 56 0C F0 FF FF FF 00 0A 03  // ...{ND1V........
    AD42: 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08 00  // RDCANCRNrNL1V...
    AD52: 0C FF FF FF FF 4E 44 31 56 0A 03                 // .....ND1V..

                    If (
    AD5D: A0 23 92                                         // .#.

LNotEqual (NLRV, Zero))
                    {
                        RDCA (NCRN, Add (NLRV, 0x04), 0xFFFFFFFF, NLDV, 0x03)
                    }

                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFEBF, And (NEAV, 0xFFFC), 0x03)
                    RDCA (NCRN, Add (NPCV, 0x28), 0xFFFFFBFF, NECV, 0x03)
                    RDCA (NCRN, Add (NPCV, 0x08), 0xFFFFFF1F, NEBV, 0x03)
                    RDCA (NCRN, 0x68, 0xFFFFFBFF, NRAV, One)

    AD60: 93 4E 4C 52 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NLRV.RDCANCRNrN
    AD70: 4C 52 56 0A 04 00 0C FF FF FF FF 4E 4C 44 56 0A  // LRV........NLDV.
    AD80: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 10  // .RDCANCRNrNPCV..
    AD90: 00 0C BF FE FF FF 7B 4E 45 41 56 0B FC FF 00 0A  // ......{NEAV.....
    ADA0: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 28  // .RDCANCRNrNPCV.(
    ADB0: 00 0C FF FB FF FF 4E 45 43 56 0A 03 52 44 43 41  // ......NECV..RDCA
    ADC0: 4E 43 52 4E 72 4E 50 43 56 0A 08 00 0C 1F FF FF  // NCRNrNPCV.......
    ADD0: FF 4E 45 42 56 0A 03 52 44 43 41 4E 43 52 4E 0A  // .NEBV..RDCANCRN.
    ADE0: 68 0C FF FB FF FF 4E 52 41 56 01                 // h.....NRAV.

                    If (LEqual (And (NEAV, 0x40), 0x40))
                    {
                        RDCA (NCRN, 0x50, 0xFFFFFFDF, 0x20, One)

    ADEB: A0 38 93 7B 4E 45 41 56 0A 40 00 0A 40 52 44 43  // .8.{NEAV.@..@RDC
    ADFB: 41 4E 43 52 4E 0A 50 0C DF FF FF FF 0A 20 01     // ANCRN.P...... .

                        While (LEqual (And (RDCA (NCRN, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                        {

    AE0A: A2 19 93 7B 52 44 43 41 4E 43 52 4E 0A 52 00 00  // ...{RDCANCRN.R..
    AE1A: 00 0B 00 20 00 00                                // ... ..

                            Stall (0x0A)
                        }
                    }

                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFFFC, And (NEAV, 0x03), 0x03)

    AE20: 5B 21 0A 0A 52 44 43 41 4E 43 52 4E 72 4E 50 43  // [!..RDCANCRNrNPC
    AE30: 56 0A 10 00 0C FC FF FF FF 7B 4E 45 41 56 0A 03  // V........{NEAV..
    AE40: 00 0A 03                                         // ...

                    If (
    AE43: A0 1B 92                                         // ...

LNotEqual (NMVV, Zero))
                    {
                        RDCA (NCRN, NMBV, Zero, NMVV, 0x03)
                    }


    AE46: 93 4E 4D 56 56 00 52 44 43 41 4E 43 52 4E 4E 4D  // .NMVV.RDCANCRNNM
    AE56: 42 56 00 4E 4D 56 56 0A 03                       // BV.NMVV..

                    If (
    AE5F: A0 1B 92                                         // ...

LNotEqual (NPVV, Zero))
                    {
                        RDCA (NCRN, NPBV, Zero, NPVV, 0x03)
                    }
                }


    AE62: 93 4E 50 56 56 00 52 44 43 41 4E 43 52 4E 4E 50  // .NPVV.RDCANCRNNP
    AE72: 42 56 00 4E 50 56 56 0A 03                       // BV.NPVV..

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {

    AE7B: 14 47 07 5F 50 53 33 08                          // .G._PS3.

                    If (LEqual (NITV, Zero))
                    {

    AE83: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    Store (RDCA (NCRN, 0x04, Zero, Zero, 0x02), PCMD) /* \_SB_.PCI0.SAT0.NVM2.PCMD */

    AE8B: A4 00 70 52 44 43 41 4E 43 52 4E 0A 04 00 00 0A  // ..pRDCANCRN.....
    AE9B: 02 50 43 4D 44                                   // .PCMD

                    If (LEqual (NITV, One))
                    {
                        Store (0x24, PRBI) /* \_SB_.PCI0.SAT0.NVM2.PRBI */

    AEA0: A0 21 93 4E 49 54 56 01 70 0A 24 50 52 42 49     // .!.NITV.p.$PRBI

                        Store (RDCA (NCRN, 0x24, Zero, Zero, 0x02), PRBD) /* \_SB_.PCI0.SAT0.NVM2.PRBD */
                    }

    AEAF: 70 52 44 43 41 4E 43 52 4E 0A 24 00 00 0A 02 50  // pRDCANCRN.$....P
    AEBF: 52 42 44                                         // RBD

                    ElseIf
    AEC2: A1 24                                            // .$

 (LEqual (NITV, 0x02))
                    {
                        Store (0x10, PRBI) /* \_SB_.PCI0.SAT0.NVM2.PRBI */

    AEC4: A0 22 93 4E 49 54 56 0A 02 70 0A 10 50 52 42 49  // .".NITV..p..PRBI

                        Store (RDCA (NCRN, 0x10, Zero, Zero, 0x02), PRBD) /* \_SB_.PCI0.SAT0.NVM2.PRBD */
                    }

                    EPD3 ()
                    RPD3 (NCRN)
                }


    AED4: 70 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 02 50  // pRDCANCRN......P
    AEE4: 52 42 44 45 50 44 33 52 50 44 33 4E 43 52 4E     // RBDEPD3RPD3NCRN

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {

    AEF3: 14 3F 5F 50 53 30 08                             // .?_PS0.

                    If (LEqual (NITV, Zero))
                    {

    AEFA: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RPD0 (NCRN)
                    EPD0 ()
                    Store (RDCA (NCRN, Add (NPMV, 0x04), Zero, Zero, 0x02), Local0)

    AF02: A4 00 52 50 44 30 4E 43 52 4E 45 50 44 30 70 52  // ..RPD0NCRNEPD0pR
    AF12: 44 43 41 4E 43 52 4E 72 4E 50 4D 56 0A 04 00 00  // DCANCRNrNPMV....
    AF22: 00 0A 02 60                                      // ...`

                    If (LEqual (And (Local0, 0x08), Zero))
                    {
                        CNRS ()
                    }
                }


    AF26: A0 0C 93 7B 60 0A 08 00 00 43 4E 52 53           // ...{`....CNRS

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (NIT2, NITV) /* \_SB_.PCI0.SAT0.NVM2.NITV */
                    Store (NPM2, NPMV) /* \_SB_.PCI0.SAT0.NVM2.NPMV */
                    Store (NPC2, NPCV) /* \_SB_.PCI0.SAT0.NVM2.NPCV */
                    Store (NL12, NL1V) /* \_SB_.PCI0.SAT0.NVM2.NL1V */
                    Store (ND22, ND2V) /* \_SB_.PCI0.SAT0.NVM2.ND2V */
                    Store (ND12, ND1V) /* \_SB_.PCI0.SAT0.NVM2.ND1V */
                    Store (NLR2, NLRV) /* \_SB_.PCI0.SAT0.NVM2.NLRV */
                    Store (NLD2, NLDV) /* \_SB_.PCI0.SAT0.NVM2.NLDV */
                    Store (NEA2, NEAV) /* \_SB_.PCI0.SAT0.NVM2.NEAV */
                    Store (NEB2, NEBV) /* \_SB_.PCI0.SAT0.NVM2.NEBV */
                    Store (NEC2, NECV) /* \_SB_.PCI0.SAT0.NVM2.NECV */
                    Store (NRA2, NRAV) /* \_SB_.PCI0.SAT0.NVM2.NRAV */
                    Store (NMB2, NMBV) /* \_SB_.PCI0.SAT0.NVM2.NMBV */
                    Store (NMV2, NMVV) /* \_SB_.PCI0.SAT0.NVM2.NMVV */
                    Store (NPB2, NPBV) /* \_SB_.PCI0.SAT0.NVM2.NPBV */
                    Store (NPV2, NPVV) /* \_SB_.PCI0.SAT0.NVM2.NPVV */

    AF33: 14 4D 09 5F 49 4E 49 00 70 4E 49 54 32 4E 49 54  // .M._INI.pNIT2NIT
    AF43: 56 70 4E 50 4D 32 4E 50 4D 56 70 4E 50 43 32 4E  // VpNPM2NPMVpNPC2N
    AF53: 50 43 56 70 4E 4C 31 32 4E 4C 31 56 70 4E 44 32  // PCVpNL12NL1VpND2
    AF63: 32 4E 44 32 56 70 4E 44 31 32 4E 44 31 56 70 4E  // 2ND2VpND12ND1VpN
    AF73: 4C 52 32 4E 4C 52 56 70 4E 4C 44 32 4E 4C 44 56  // LR2NLRVpNLD2NLDV
    AF83: 70 4E 45 41 32 4E 45 41 56 70 4E 45 42 32 4E 45  // pNEA2NEAVpNEB2NE
    AF93: 42 56 70 4E 45 43 32 4E 45 43 56 70 4E 52 41 32  // BVpNEC2NECVpNRA2
    AFA3: 4E 52 41 56 70 4E 4D 42 32 4E 4D 42 56 70 4E 4D  // NRAVpNMB2NMBVpNM
    AFB3: 56 32 4E 4D 56 56 70 4E 50 42 32 4E 50 42 56 70  // V2NMVVpNPB2NPBVp
    AFC3: 4E 50 56 32 4E 50 56 56                          // NPV2NPVV

                    Store (One, NCRN) /* \_SB_.PCI0.SAT0.NVM2.NCRN */
                }
            }


    AFCB: 70 01 4E 43 52 4E                                // p.NCRN

            Device (NVM3)
            {

    AFD1: 5B 82 49 42 4E 56 4D 33                          // [.IBNVM3

                Name (_ADR, 0x00C3FFFF)  // _ADR: Address

    AFD9: 08 5F 41 44 52 0C FF FF C3 00                    // ._ADR.....

                Name (PRBI, Zero)

    AFE3: 08 50 52 42 49 00                                // .PRBI.

                Name (PRBD, Zero)

    AFE9: 08 50 52 42 44 00                                // .PRBD.

                Name (PCMD, Zero)

    AFEF: 08 50 43 4D 44 00                                // .PCMD.

                Name (NCRN, Zero)

    AFF5: 08 4E 43 52 4E 00                                // .NCRN.

                Name (NITV, Zero)

    AFFB: 08 4E 49 54 56 00                                // .NITV.

                Name (NPMV, Zero)

    B001: 08 4E 50 4D 56 00                                // .NPMV.

                Name (NPCV, Zero)

    B007: 08 4E 50 43 56 00                                // .NPCV.

                Name (NL1V, Zero)

    B00D: 08 4E 4C 31 56 00                                // .NL1V.

                Name (ND2V, Zero)

    B013: 08 4E 44 32 56 00                                // .ND2V.

                Name (ND1V, Zero)

    B019: 08 4E 44 31 56 00                                // .ND1V.

                Name (NLRV, Zero)

    B01F: 08 4E 4C 52 56 00                                // .NLRV.

                Name (NLDV, Zero)

    B025: 08 4E 4C 44 56 00                                // .NLDV.

                Name (NEAV, Zero)

    B02B: 08 4E 45 41 56 00                                // .NEAV.

                Name (NEBV, Zero)

    B031: 08 4E 45 42 56 00                                // .NEBV.

                Name (NECV, Zero)

    B037: 08 4E 45 43 56 00                                // .NECV.

                Name (NRAV, Zero)

    B03D: 08 4E 52 41 56 00                                // .NRAV.

                Name (NMBV, Zero)

    B043: 08 4E 4D 42 56 00                                // .NMBV.

                Name (NMVV, Zero)

    B049: 08 4E 4D 56 56 00                                // .NMVV.

                Name (NPBV, Zero)

    B04F: 08 4E 50 42 56 00                                // .NPBV.

                Name (NPVV, Zero)

    B055: 08 4E 50 56 56 00                                // .NPVV.

                Method (EPD0, 0, Serialized)
                {
                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, Zero, 0x03)
                }


    B05B: 14 1E 45 50 44 30 08 52 44 43 41 4E 43 52 4E 72  // ..EPD0.RDCANCRNr
    B06B: 4E 50 4D 56 0A 04 00 0C FC FF FF FF 00 0A 03     // NPMV...........

                Method (EPD3, 0, Serialized)
                {
                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, 0x03, 0x03)
                }


    B07A: 14 1F 45 50 44 33 08 52 44 43 41 4E 43 52 4E 72  // ..EPD3.RDCANCRNr
    B08A: 4E 50 4D 56 0A 04 00 0C FC FF FF FF 0A 03 0A 03  // NPMV............

                Method (CNRS, 0, Serialized)
                {

    B09A: 14 4A 20 43 4E 52 53 08                          // .J CNRS.

                    If (LEqual (NITV, Zero))
                    {

    B0A2: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RDCA (NCRN, 0x10, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x14, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x18, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x1C, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x20, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x24, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x04, 0xFFFFFFF8, PCMD, 0x03)
                    RDCA (NCRN, PRBI, Zero, PRBD, 0x03)

    B0AA: A4 00 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 03  // ..RDCANCRN......
    B0BA: 52 44 43 41 4E 43 52 4E 0A 14 00 00 0A 03 52 44  // RDCANCRN......RD
    B0CA: 43 41 4E 43 52 4E 0A 18 00 00 0A 03 52 44 43 41  // CANCRN......RDCA
    B0DA: 4E 43 52 4E 0A 1C 00 00 0A 03 52 44 43 41 4E 43  // NCRN......RDCANC
    B0EA: 52 4E 0A 20 00 00 0A 03 52 44 43 41 4E 43 52 4E  // RN. ....RDCANCRN
    B0FA: 0A 24 00 00 0A 03 52 44 43 41 4E 43 52 4E 0A 04  // .$....RDCANCRN..
    B10A: 0C F8 FF FF FF 50 43 4D 44 0A 03 52 44 43 41 4E  // .....PCMD..RDCAN
    B11A: 43 52 4E 50 52 42 49 00 50 52 42 44 0A 03        // CRNPRBI.PRBD..

                    If (
    B128: A0 4E 05 92                                      // .N..

LNotEqual (NL1V, Zero))
                    {
                        RDCA (NCRN, Add (NL1V, 0x0C), 0xFFFFFF00, ND2V, 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0x0F, And (ND1V, 0xFFFFFFF0), 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0xFFFFFFFF, ND1V, 0x03)
                    }


    B12C: 93 4E 4C 31 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NL1V.RDCANCRNrN
    B13C: 4C 31 56 0A 0C 00 0C 00 FF FF FF 4E 44 32 56 0A  // L1V........ND2V.
    B14C: 03 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08  // .RDCANCRNrNL1V..
    B15C: 00 0A 0F 7B 4E 44 31 56 0C F0 FF FF FF 00 0A 03  // ...{ND1V........
    B16C: 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08 00  // RDCANCRNrNL1V...
    B17C: 0C FF FF FF FF 4E 44 31 56 0A 03                 // .....ND1V..

                    If (
    B187: A0 23 92                                         // .#.

LNotEqual (NLRV, Zero))
                    {
                        RDCA (NCRN, Add (NLRV, 0x04), 0xFFFFFFFF, NLDV, 0x03)
                    }

                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFEBF, And (NEAV, 0xFFFC), 0x03)
                    RDCA (NCRN, Add (NPCV, 0x28), 0xFFFFFBFF, NECV, 0x03)
                    RDCA (NCRN, Add (NPCV, 0x08), 0xFFFFFF1F, NEBV, 0x03)
                    RDCA (NCRN, 0x68, 0xFFFFFBFF, NRAV, One)

    B18A: 93 4E 4C 52 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NLRV.RDCANCRNrN
    B19A: 4C 52 56 0A 04 00 0C FF FF FF FF 4E 4C 44 56 0A  // LRV........NLDV.
    B1AA: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 10  // .RDCANCRNrNPCV..
    B1BA: 00 0C BF FE FF FF 7B 4E 45 41 56 0B FC FF 00 0A  // ......{NEAV.....
    B1CA: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 28  // .RDCANCRNrNPCV.(
    B1DA: 00 0C FF FB FF FF 4E 45 43 56 0A 03 52 44 43 41  // ......NECV..RDCA
    B1EA: 4E 43 52 4E 72 4E 50 43 56 0A 08 00 0C 1F FF FF  // NCRNrNPCV.......
    B1FA: FF 4E 45 42 56 0A 03 52 44 43 41 4E 43 52 4E 0A  // .NEBV..RDCANCRN.
    B20A: 68 0C FF FB FF FF 4E 52 41 56 01                 // h.....NRAV.

                    If (LEqual (And (NEAV, 0x40), 0x40))
                    {
                        RDCA (NCRN, 0x50, 0xFFFFFFDF, 0x20, One)

    B215: A0 38 93 7B 4E 45 41 56 0A 40 00 0A 40 52 44 43  // .8.{NEAV.@..@RDC
    B225: 41 4E 43 52 4E 0A 50 0C DF FF FF FF 0A 20 01     // ANCRN.P...... .

                        While (LEqual (And (RDCA (NCRN, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                        {

    B234: A2 19 93 7B 52 44 43 41 4E 43 52 4E 0A 52 00 00  // ...{RDCANCRN.R..
    B244: 00 0B 00 20 00 00                                // ... ..

                            Stall (0x0A)
                        }
                    }

                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFFFC, And (NEAV, 0x03), 0x03)

    B24A: 5B 21 0A 0A 52 44 43 41 4E 43 52 4E 72 4E 50 43  // [!..RDCANCRNrNPC
    B25A: 56 0A 10 00 0C FC FF FF FF 7B 4E 45 41 56 0A 03  // V........{NEAV..
    B26A: 00 0A 03                                         // ...

                    If (
    B26D: A0 1B 92                                         // ...

LNotEqual (NMVV, Zero))
                    {
                        RDCA (NCRN, NMBV, Zero, NMVV, 0x03)
                    }


    B270: 93 4E 4D 56 56 00 52 44 43 41 4E 43 52 4E 4E 4D  // .NMVV.RDCANCRNNM
    B280: 42 56 00 4E 4D 56 56 0A 03                       // BV.NMVV..

                    If (
    B289: A0 1B 92                                         // ...

LNotEqual (NPVV, Zero))
                    {
                        RDCA (NCRN, NPBV, Zero, NPVV, 0x03)
                    }
                }


    B28C: 93 4E 50 56 56 00 52 44 43 41 4E 43 52 4E 4E 50  // .NPVV.RDCANCRNNP
    B29C: 42 56 00 4E 50 56 56 0A 03                       // BV.NPVV..

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {

    B2A5: 14 47 07 5F 50 53 33 08                          // .G._PS3.

                    If (LEqual (NITV, Zero))
                    {

    B2AD: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    Store (RDCA (NCRN, 0x04, Zero, Zero, 0x02), PCMD) /* \_SB_.PCI0.SAT0.NVM3.PCMD */

    B2B5: A4 00 70 52 44 43 41 4E 43 52 4E 0A 04 00 00 0A  // ..pRDCANCRN.....
    B2C5: 02 50 43 4D 44                                   // .PCMD

                    If (LEqual (NITV, One))
                    {
                        Store (0x24, PRBI) /* \_SB_.PCI0.SAT0.NVM3.PRBI */

    B2CA: A0 21 93 4E 49 54 56 01 70 0A 24 50 52 42 49     // .!.NITV.p.$PRBI

                        Store (RDCA (NCRN, 0x24, Zero, Zero, 0x02), PRBD) /* \_SB_.PCI0.SAT0.NVM3.PRBD */
                    }

    B2D9: 70 52 44 43 41 4E 43 52 4E 0A 24 00 00 0A 02 50  // pRDCANCRN.$....P
    B2E9: 52 42 44                                         // RBD

                    ElseIf
    B2EC: A1 24                                            // .$

 (LEqual (NITV, 0x02))
                    {
                        Store (0x10, PRBI) /* \_SB_.PCI0.SAT0.NVM3.PRBI */

    B2EE: A0 22 93 4E 49 54 56 0A 02 70 0A 10 50 52 42 49  // .".NITV..p..PRBI

                        Store (RDCA (NCRN, 0x10, Zero, Zero, 0x02), PRBD) /* \_SB_.PCI0.SAT0.NVM3.PRBD */
                    }

                    EPD3 ()
                    RPD3 (NCRN)
                }


    B2FE: 70 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 02 50  // pRDCANCRN......P
    B30E: 52 42 44 45 50 44 33 52 50 44 33 4E 43 52 4E     // RBDEPD3RPD3NCRN

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {

    B31D: 14 3F 5F 50 53 30 08                             // .?_PS0.

                    If (LEqual (NITV, Zero))
                    {

    B324: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RPD0 (NCRN)
                    EPD0 ()
                    Store (RDCA (NCRN, Add (NPMV, 0x04), Zero, Zero, 0x02), Local0)

    B32C: A4 00 52 50 44 30 4E 43 52 4E 45 50 44 30 70 52  // ..RPD0NCRNEPD0pR
    B33C: 44 43 41 4E 43 52 4E 72 4E 50 4D 56 0A 04 00 00  // DCANCRNrNPMV....
    B34C: 00 0A 02 60                                      // ...`

                    If (LEqual (And (Local0, 0x08), Zero))
                    {
                        CNRS ()
                    }
                }


    B350: A0 0C 93 7B 60 0A 08 00 00 43 4E 52 53           // ...{`....CNRS

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (NIT3, NITV) /* \_SB_.PCI0.SAT0.NVM3.NITV */
                    Store (NPM3, NPMV) /* \_SB_.PCI0.SAT0.NVM3.NPMV */
                    Store (NPC3, NPCV) /* \_SB_.PCI0.SAT0.NVM3.NPCV */
                    Store (NL13, NL1V) /* \_SB_.PCI0.SAT0.NVM3.NL1V */
                    Store (ND23, ND2V) /* \_SB_.PCI0.SAT0.NVM3.ND2V */
                    Store (ND13, ND1V) /* \_SB_.PCI0.SAT0.NVM3.ND1V */
                    Store (NLR3, NLRV) /* \_SB_.PCI0.SAT0.NVM3.NLRV */
                    Store (NLD3, NLDV) /* \_SB_.PCI0.SAT0.NVM3.NLDV */
                    Store (NEA3, NEAV) /* \_SB_.PCI0.SAT0.NVM3.NEAV */
                    Store (NEB3, NEBV) /* \_SB_.PCI0.SAT0.NVM3.NEBV */
                    Store (NEC3, NECV) /* \_SB_.PCI0.SAT0.NVM3.NECV */
                    Store (NRA3, NRAV) /* \_SB_.PCI0.SAT0.NVM3.NRAV */
                    Store (NMB3, NMBV) /* \_SB_.PCI0.SAT0.NVM3.NMBV */
                    Store (NMV3, NMVV) /* \_SB_.PCI0.SAT0.NVM3.NMVV */
                    Store (NPB3, NPBV) /* \_SB_.PCI0.SAT0.NVM3.NPBV */
                    Store (NPV3, NPVV) /* \_SB_.PCI0.SAT0.NVM3.NPVV */

    B35D: 14 4E 09 5F 49 4E 49 00 70 4E 49 54 33 4E 49 54  // .N._INI.pNIT3NIT
    B36D: 56 70 4E 50 4D 33 4E 50 4D 56 70 4E 50 43 33 4E  // VpNPM3NPMVpNPC3N
    B37D: 50 43 56 70 4E 4C 31 33 4E 4C 31 56 70 4E 44 32  // PCVpNL13NL1VpND2
    B38D: 33 4E 44 32 56 70 4E 44 31 33 4E 44 31 56 70 4E  // 3ND2VpND13ND1VpN
    B39D: 4C 52 33 4E 4C 52 56 70 4E 4C 44 33 4E 4C 44 56  // LR3NLRVpNLD3NLDV
    B3AD: 70 4E 45 41 33 4E 45 41 56 70 4E 45 42 33 4E 45  // pNEA3NEAVpNEB3NE
    B3BD: 42 56 70 4E 45 43 33 4E 45 43 56 70 4E 52 41 33  // BVpNEC3NECVpNRA3
    B3CD: 4E 52 41 56 70 4E 4D 42 33 4E 4D 42 56 70 4E 4D  // NRAVpNMB3NMBVpNM
    B3DD: 56 33 4E 4D 56 56 70 4E 50 42 33 4E 50 42 56 70  // V3NMVVpNPB3NPBVp
    B3ED: 4E 50 56 33 4E 50 56 56                          // NPV3NPVV

                    Store (0x02, NCRN) /* \_SB_.PCI0.SAT0.NVM3.NCRN */
                }
            }
        }


    B3F5: 70 0A 02 4E 43 52 4E                             // p..NCRN

        Device (CIO2)
        {

    B3FC: 5B 82 4A 06 43 49 4F 32                          // [.J.CIO2

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    B404: 14 15 5F 53 54 41 00                             // .._STA.

                If (LEqual (CIOE, One))
                {

    B40B: A0 0A 93 43 49 4F 45 01                          // ...CIOE.

                    Return (0x0F)
                }

    B413: A4 0A 0F                                         // ...

                Else
                {

    B416: A1 03                                            // ..

                    Return (Zero)
                }
            }


    B418: A4 00                                            // ..

            Name (_HID, "INT343E")  // _HID: Hardware ID

    B41A: 08 5F 48 49 44 0D 49 4E 54 33 34 33 45 00        // ._HID.INT343E.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    B428: 14 3F 5F 43 52 53 00                             // .?_CRS.

                Name (CBUF, 
    B42F: 08 43 42 55 46                                   // .CBUF

ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y1B)
                    {
                        0x00000010,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFE400000,         // Address Base
                        0x00010000,         // Address Length
                        )
                })

    B434: 11 1A 0A 17 89 06 00 0D 01 10 00 00 00 86 09 00  // ................
    B444: 01 00 00 40 FE 00 00 01 00 79 00                 // ...@.....y.

                CreateDWordField (CBUF, \_SB.PCI0.CIO2._CRS._Y1B._INT, CIOV)  // _INT: Interrupts
                Store (CIOI, CIOV) /* \_SB_.PCI0.CIO2._CRS.CIOV */

    B44F: 8A 43 42 55 46 0A 05 43 49 4F 56 70 43 49 4F 49  // .CBUF..CIOVpCIOI
    B45F: 43 49 4F 56                                      // CIOV

                Return (CBUF) /* \_SB_.PCI0.CIO2._CRS.CBUF */
            }
        }


    B463: A4 43 42 55 46                                   // .CBUF

        Device (TERM)
        {

    B468: 5B 82 48 07 54 45 52 4D                          // [.H.TERM

            Name (_HID, "INT343D")  // _HID: Hardware ID

    B470: 08 5F 48 49 44 0D 49 4E 54 33 34 33 44 00        // ._HID.INT343D.

            Name (_UID, One)  // _UID: Unique ID

    B47E: 08 5F 55 49 44 01                                // ._UID.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    B484: 14 3F 5F 43 52 53 00                             // .?_CRS.

                Name (RBUF, 
    B48B: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFE03C000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y1C)
                    {
                        0x00000012,
                    }
                })

    B490: 11 1A 0A 17 86 09 00 01 00 C0 03 FE 00 10 00 00  // ................
    B4A0: 89 06 00 0D 01 12 00 00 00 79 00                 // .........y.

                CreateDWordField (RBUF, \_SB.PCI0.TERM._CRS._Y1C._INT, IRQN)  // _INT: Interrupts
                Store (TIRQ, IRQN) /* \_SB_.PCI0.TERM._CRS.IRQN */

    B4AB: 8A 52 42 55 46 0A 11 49 52 51 4E 70 54 49 52 51  // .RBUF..IRQNpTIRQ
    B4BB: 49 52 51 4E                                      // IRQN

                Return (RBUF) /* \_SB_.PCI0.TERM._CRS.RBUF */
            }


    B4BF: A4 52 42 55 46                                   // .RBUF

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    B4C4: 14 1D 5F 53 54 41 00                             // .._STA.

                If (LEqual (TAEN, Zero))
                {

    B4CB: A0 09 93 54 41 45 4E 00                          // ...TAEN.

                    Return (Zero)
                }


    B4D3: A4 00                                            // ..

                If (LEqual (TIRQ, Zero))
                {

    B4D5: A0 09 93 54 49 52 51 00                          // ...TIRQ.

                    Return (Zero)
                }


    B4DD: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    B4DF: A4 0A 0F                                         // ...

    Scope (_SB.PCI0)
    {

    B4E2: 10 40 16 2E 5F 53 42 5F 50 43 49 30              // .@.._SB_PCI0

        Method (LPD3, 1, Serialized)
        {

    B4EE: 14 32 4C 50 44 33 09                             // .2LPD3.

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x84), 0x04)

    B4F5: 5B 80 49 43 42 31 00 72 68 0A 84 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Or (TEMP, 0x03, TEMP) /* \_SB_.PCI0.LPD3.TEMP */

    B503: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7D 54 45  // [..ICB1.TEMP }TE
    B513: 4D 50 0A 03 54 45 4D 50                          // MP..TEMP

            Store (TEMP, Local0)
        }


    B51B: 70 54 45 4D 50 60                                // pTEMP`

        Method (LHRV, 1, Serialized)
        {

    B521: 14 26 4C 48 52 56 09                             // .&LHRV.

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x08), 0x04)

    B528: 5B 80 49 43 42 31 00 72 68 0A 08 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                HRV,    8
            }


    B536: 5B 81 0B 49 43 42 31 03 48 52 56 5F 08           // [..ICB1.HRV_.

            Return (HRV) /* \_SB_.PCI0.LHRV.HRV_ */
        }


    B543: A4 48 52 56 5F                                   // .HRV_

        Method (LPD0, 1, Serialized)
        {

    B548: 14 35 4C 50 44 30 09                             // .5LPD0.

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x84), 0x04)

    B54F: 5B 80 49 43 42 31 00 72 68 0A 84 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            And (TEMP, 0xFFFFFFFC, TEMP) /* \_SB_.PCI0.LPD0.TEMP */

    B55D: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7B 54 45  // [..ICB1.TEMP {TE
    B56D: 4D 50 0C FC FF FF FF 54 45 4D 50                 // MP.....TEMP

            Store (TEMP, Local0)
        }


    B578: 70 54 45 4D 50 60                                // pTEMP`

        Method (GETD, 1, Serialized)
        {

    B57E: 14 2A 47 45 54 44 09                             // .*GETD.

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x84), 0x04)

    B585: 5B 80 49 43 42 31 00 72 68 0A 84 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


    B593: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20           // [..ICB1.TEMP 

            Return (
    B5A0: A4                                               // .

And (TEMP, 0x03))
        }


    B5A1: 7B 54 45 4D 50 0A 03 00                          // {TEMP...

        Method (LCRS, 3, Serialized)
        {

    B5A9: 14 46 06 4C 43 52 53 0B                          // .F.LCRS.

            Name (RBUF, 
    B5B1: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y1D)
                Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y1E)
                {
                    0x00000014,
                }
            })

    B5B6: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
    B5C6: 89 06 00 0D 01 14 00 00 00 79 00                 // .........y.

            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y1D._BAS, BVAL)  // _BAS: Base Address

    B5D1: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y1D._LEN, BLEN)  // _LEN: Length

    B5DC: 8A 52 42 55 46 0A 08 42 4C 45 4E                 // .RBUF..BLEN

            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y1E._INT, IRQN)  // _INT: Interrupts
            Store (Arg1, BVAL) /* \_SB_.PCI0.LCRS.BVAL */
            Store (Arg2, IRQN) /* \_SB_.PCI0.LCRS.IRQN */

    B5E7: 8A 52 42 55 46 0A 11 49 52 51 4E 70 69 42 56 41  // .RBUF..IRQNpiBVA
    B5F7: 4C 70 6A 49 52 51 4E                             // LpjIRQN

            If (LEqual (Arg0, 0x04))
            {

    B5FE: A0 0C 93 68 0A 04                                // ...h..

                Store (0x08, BLEN) /* \_SB_.PCI0.LCRS.BLEN */
            }


    B604: 70 0A 08 42 4C 45 4E                             // p..BLEN

            Return (RBUF) /* \_SB_.PCI0.LCRS.RBUF */
        }


    B60B: A4 52 42 55 46                                   // .RBUF

        Method (LSTA, 1, Serialized)
        {

    B610: 14 21 4C 53 54 41 09                             // .!LSTA.

            If (LOr (LEqual (Arg0, Zero), 
    B617: A0 0B 91 93 68 00                                // ....h.

LEqual (Arg0, 0x03)))
            {

    B61D: 93 68 0A 03                                      // .h..

                Return (Zero)
            }


    B621: A4 00                                            // ..

            If (LLess (OSYS, 0x07DC))
            {

    B623: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                Return (Zero)
            }


    B62D: A4 00                                            // ..

            Return (0x0F)
        }


    B62F: A4 0A 0F                                         // ...

        Method (GIRQ, 1, Serialized)
        {

    B632: 14 10 47 49 52 51 09                             // ..GIRQ.

            Return (
    B639: A4                                               // .

Add (0x18, Mod (Arg0, 0x60)))
        }
    }


    B63A: 72 0A 18 85 68 0A 60 00 00                       // r...h.`..

    Scope (_SB.PCI0)
    {

    B643: 10 43 2C 2E 5F 53 42 5F 50 43 49 30              // .C,._SB_PCI0

        Device (SIRC)
        {

    B64F: 5B 82 4B 1A 53 49 52 43                          // [.K.SIRC

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

    B657: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_STA, 0x03)  // _STA: Status

    B661: 08 5F 53 54 41 0A 03                             // ._STA..

            Name (_UID, 0x05)  // _UID: Unique ID

    B668: 08 5F 55 49 44 0A 05                             // ._UID..

            Method (ADDB, 3, Serialized)
            {

    B66F: 14 4C 08 41 44 44 42 0B                          // .L.ADDB.

                Name (BUFF, 
    B677: 08 42 55 46 46                                   // .BUFF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y1F)
                })

    B67C: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
    B68C: 79 00                                            // y.

                CreateDWordField (BUFF, \_SB.PCI0.SIRC.ADDB._Y1F._BAS, ADDR)  // _BAS: Base Address

    B68E: 8A 42 55 46 46 0A 04 41 44 44 52                 // .BUFF..ADDR

                CreateDWordField (BUFF, \_SB.PCI0.SIRC.ADDB._Y1F._LEN, LENG)  // _LEN: Length
                Store (
    B699: 8A 42 55 46 46 0A 08 4C 45 4E 47 70              // .BUFF..LENGp

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)

    B6A5: 11 05 0A 02 79 00 60                             // ....y.`

                If (LOr (LOr (LEqual (Arg0, One), 
    B6AC: A0 1B 91 91 93 68 01                             // .....h.

LEqual (Arg0, 0x03)), 
    B6B3: 93 68 0A 03                                      // .h..

LEqual (Arg0, 0x04)))
                {
                    Store (Arg2, ADDR) /* \_SB_.PCI0.SIRC.ADDB.ADDR */

    B6B7: 93 68 0A 04 70 6A 41 44 44 52                    // .h..pjADDR

                    ConcatenateResTemplate (Local0, BUFF, Local0)
                }


    B6C1: 84 60 42 55 46 46 60                             // .`BUFF`

                If (LEqual (Arg0, 0x03))
                {
                    Store (Arg1, ADDR) /* \_SB_.PCI0.SIRC.ADDB.ADDR */

    B6C8: A0 12 93 68 0A 03 70 69 41 44 44 52              // ...h..piADDR

                    ConcatenateResTemplate (Local0, BUFF, Local0)
                }


    B6D4: 84 60 42 55 46 46 60                             // .`BUFF`

                If (LEqual (Arg0, 0x04))
                {
                    Store (Add (0x08, Arg1), ADDR) /* \_SB_.PCI0.SIRC.ADDB.ADDR */
                    Store (0x0FF8, LENG) /* \_SB_.PCI0.SIRC.ADDB.LENG */

    B6DB: A0 1E 93 68 0A 04 70 72 0A 08 69 00 41 44 44 52  // ...h..pr..i.ADDR
    B6EB: 70 0B F8 0F 4C 45 4E 47                          // p...LENG

                    ConcatenateResTemplate (Local0, BUFF, Local0)
                }


    B6F3: 84 60 42 55 46 46 60                             // .`BUFF`

                Return (Local0)
            }


    B6FA: A4 60                                            // .`

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (
    B6FC: 14 4F 0F 5F 43 52 53 08 70                       // .O._CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD0, SB00, SB10), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD1, SB01, SB11), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD2, SB02, SB12), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD3, SB03, SB13), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD4, SB04, SB14), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD5, SB05, SB15), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD6, SB06, SB16), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD7, SB07, SB17), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD8, SB08, SB18), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD9, SB09, SB19), Local0)
                ConcatenateResTemplate (Local0, ADDB (SMDA, SB0A, SB1A), Local0)

    B705: 11 05 0A 02 79 00 60 84 60 41 44 44 42 53 4D 44  // ....y.`.`ADDBSMD
    B715: 30 53 42 30 30 53 42 31 30 60 84 60 41 44 44 42  // 0SB00SB10`.`ADDB
    B725: 53 4D 44 31 53 42 30 31 53 42 31 31 60 84 60 41  // SMD1SB01SB11`.`A
    B735: 44 44 42 53 4D 44 32 53 42 30 32 53 42 31 32 60  // DDBSMD2SB02SB12`
    B745: 84 60 41 44 44 42 53 4D 44 33 53 42 30 33 53 42  // .`ADDBSMD3SB03SB
    B755: 31 33 60 84 60 41 44 44 42 53 4D 44 34 53 42 30  // 13`.`ADDBSMD4SB0
    B765: 34 53 42 31 34 60 84 60 41 44 44 42 53 4D 44 35  // 4SB14`.`ADDBSMD5
    B775: 53 42 30 35 53 42 31 35 60 84 60 41 44 44 42 53  // SB05SB15`.`ADDBS
    B785: 4D 44 36 53 42 30 36 53 42 31 36 60 84 60 41 44  // MD6SB06SB16`.`AD
    B795: 44 42 53 4D 44 37 53 42 30 37 53 42 31 37 60 84  // DBSMD7SB07SB17`.
    B7A5: 60 41 44 44 42 53 4D 44 38 53 42 30 38 53 42 31  // `ADDBSMD8SB08SB1
    B7B5: 38 60 84 60 41 44 44 42 53 4D 44 39 53 42 30 39  // 8`.`ADDBSMD9SB09
    B7C5: 53 42 31 39 60 84 60 41 44 44 42 53 4D 44 41 53  // SB19`.`ADDBSMDAS
    B7D5: 42 30 41 53 42 31 41 60                          // B0ASB1A`

                If (LEqual (^^GPI0._STA (), Zero))
                {

    B7DD: A0 1C 93 5E 5E 2E 47 50 49 30 5F 53 54 41 00     // ...^^.GPI0_STA.

                    ConcatenateResTemplate (Local0, ^^GPI0._CRS (), Local0)
                }


    B7EC: 84 60 5E 5E 2E 47 50 49 30 5F 43 52 53 60        // .`^^.GPI0_CRS`

                Return (Local0)
            }
        }


    B7FA: A4 60                                            // .`

        Device (GPI0)
        {

    B7FC: 5B 82 49 10 47 50 49 30                          // [.I.GPI0

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    B804: 14 25 5F 48 49 44 00                             // .%_HID.

                If (LEqual (PCHV (), SPTH))
                {

    B80B: A0 14 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

                    Return ("INT345D")
                }


    B816: A4 0D 49 4E 54 33 34 35 44 00                    // ..INT345D.

                Return ("INT344B")
            }


    B820: A4 0D 49 4E 54 33 34 34 42 00                    // ..INT344B.

            Name (LINK, "\\_SB.PCI0.GPI0")

    B82A: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
    B83A: 47 50 49 30 00                                   // GPI0.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    B83F: 14 49 0A 5F 43 52 53 00                          // .I._CRS.

                Name (RBUF, 
    B847: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00010000,         // Address Length
                        _Y20)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00010000,         // Address Length
                        _Y21)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00010000,         // Address Length
                        _Y22)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y23)
                    {
                        0x0000000E,
                    }
                })

    B84C: 11 32 0A 2F 86 09 00 01 00 00 00 00 00 00 01 00  // .2./............
    B85C: 86 09 00 01 00 00 00 00 00 00 01 00 86 09 00 01  // ................
    B86C: 00 00 00 00 00 00 01 00 89 06 00 0D 01 0E 00 00  // ................
    B87C: 00 79 00                                         // .y.

                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y20._BAS, COM0)  // _BAS: Base Address

    B87F: 8A 52 42 55 46 0A 04 43 4F 4D 30                 // .RBUF..COM0

                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y21._BAS, COM1)  // _BAS: Base Address

    B88A: 8A 52 42 55 46 0A 10 43 4F 4D 31                 // .RBUF..COM1

                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y22._BAS, COM3)  // _BAS: Base Address

    B895: 8A 52 42 55 46 0A 1C 43 4F 4D 33                 // .RBUF..COM3

                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y23._INT, IRQN)  // _INT: Interrupts
                Store (Add (SBRG, 0x00AF0000), COM0) /* \_SB_.PCI0.GPI0._CRS.COM0 */
                Store (Add (SBRG, 0x00AE0000), COM1) /* \_SB_.PCI0.GPI0._CRS.COM1 */
                Store (Add (SBRG, 0x00AC0000), COM3) /* \_SB_.PCI0.GPI0._CRS.COM3 */
                Store (SGIR, IRQN) /* \_SB_.PCI0.GPI0._CRS.IRQN */

    B8A0: 8A 52 42 55 46 0A 29 49 52 51 4E 70 72 53 42 52  // .RBUF.)IRQNprSBR
    B8B0: 47 0C 00 00 AF 00 00 43 4F 4D 30 70 72 53 42 52  // G......COM0prSBR
    B8C0: 47 0C 00 00 AE 00 00 43 4F 4D 31 70 72 53 42 52  // G......COM1prSBR
    B8D0: 47 0C 00 00 AC 00 00 43 4F 4D 33 70 53 47 49 52  // G......COM3pSGIR
    B8E0: 49 52 51 4E                                      // IRQN

                Return (RBUF) /* \_SB_.PCI0.GPI0._CRS.RBUF */
            }


    B8E4: A4 52 42 55 46                                   // .RBUF

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    B8E9: 14 1D 5F 53 54 41 00                             // .._STA.

                If (LEqual (SBRG, Zero))
                {

    B8F0: A0 09 93 53 42 52 47 00                          // ...SBRG.

                    Return (Zero)
                }


    B8F8: A4 00                                            // ..

                If (LEqual (GPEN, Zero))
                {

    B8FA: A0 09 93 47 50 45 4E 00                          // ...GPEN.

                    Return (Zero)
                }


    B902: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    B904: A4 0A 0F                                         // ...

    Scope (_SB.PCI0)
    {

    B907: 10 26 2E 5F 53 42 5F 50 43 49 30                 // .&._SB_PCI0

        Device (I2C0)
        {

    B912: 5B 82 1A 49 32 43 30                             // [..I2C0

            Name (LINK, "\\_SB.PCI0.I2C0")
        }
    }


    B919: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
    B929: 49 32 43 30 00                                   // I2C0.

    If (
    B92E: A0 4E 08 92                                      // .N..

LNotEqual (SMD0, 0x02))
    {

    B932: 93 53 4D 44 30 0A 02                             // .SMD0..

        Scope (_SB.PCI0.I2C0)
        {

    B939: 10 43 08 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .C./._SB_PCI0I2C
    B949: 30                                               // 0

            Name (_HID, "INT3442")  // _HID: Hardware ID

    B94A: 08 5F 48 49 44 0D 49 4E 54 33 34 34 32 00        // ._HID.INT3442.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    B958: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB10))
            }


    B95F: A4 4C 48 52 56 53 42 31 30                       // .LHRVSB10

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    B968: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD0, SB00, SIR0))
            }


    B96F: A4 4C 43 52 53 53 4D 44 30 53 42 30 30 53 49 52  // .LCRSSMD0SB00SIR
    B97F: 30                                               // 0

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB10)
            }


    B980: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 30     // .._PSC.GETDSB10

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB10)
            }


    B98F: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 30     // .._PS0.LPD0SB10

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB10)
            }


    B99E: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 30     // .._PS3.LPD3SB10

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    B9AD: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD0))
            }
        }
    }


    B9B4: A4 4C 53 54 41 53 4D 44 30                       // .LSTASMD0

    If (LEqual (SMD0, 0x02))
    {

    B9BD: A0 3B 93 53 4D 44 30 0A 02                       // .;.SMD0..

        Scope (_SB.PCI0.I2C0)
        {

    B9C6: 10 32 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 30  // .2/._SB_PCI0I2C0

            Name (_ADR, 0x00150000)  // _ADR: Address

    B9D6: 08 5F 41 44 52 0C 00 00 15 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    B9E0: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    B9E7: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    B9EE: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    B9F7: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    B9F9: 10 26 2E 5F 53 42 5F 50 43 49 30                 // .&._SB_PCI0

        Device (I2C1)
        {

    BA04: 5B 82 1A 49 32 43 31                             // [..I2C1

            Name (LINK, "\\_SB.PCI0.I2C1")
        }
    }


    BA0B: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
    BA1B: 49 32 43 31 00                                   // I2C1.

    If (
    BA20: A0 4E 08 92                                      // .N..

LNotEqual (SMD1, 0x02))
    {

    BA24: 93 53 4D 44 31 0A 02                             // .SMD1..

        Scope (_SB.PCI0.I2C1)
        {

    BA2B: 10 43 08 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .C./._SB_PCI0I2C
    BA3B: 31                                               // 1

            Name (_HID, "INT3443")  // _HID: Hardware ID

    BA3C: 08 5F 48 49 44 0D 49 4E 54 33 34 34 33 00        // ._HID.INT3443.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    BA4A: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB11))
            }


    BA51: A4 4C 48 52 56 53 42 31 31                       // .LHRVSB11

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    BA5A: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD1, SB01, SIR1))
            }


    BA61: A4 4C 43 52 53 53 4D 44 31 53 42 30 31 53 49 52  // .LCRSSMD1SB01SIR
    BA71: 31                                               // 1

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB11)
            }


    BA72: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 31     // .._PSC.GETDSB11

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB11)
            }


    BA81: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 31     // .._PS0.LPD0SB11

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB11)
            }


    BA90: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 31     // .._PS3.LPD3SB11

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    BA9F: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD1))
            }
        }
    }


    BAA6: A4 4C 53 54 41 53 4D 44 31                       // .LSTASMD1

    If (LEqual (SMD1, 0x02))
    {

    BAAF: A0 3B 93 53 4D 44 31 0A 02                       // .;.SMD1..

        Scope (_SB.PCI0.I2C1)
        {

    BAB8: 10 32 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 31  // .2/._SB_PCI0I2C1

            Name (_ADR, 0x00150001)  // _ADR: Address

    BAC8: 08 5F 41 44 52 0C 01 00 15 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    BAD2: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    BAD9: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    BAE0: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    BAE9: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    BAEB: 10 26 2E 5F 53 42 5F 50 43 49 30                 // .&._SB_PCI0

        Device (I2C2)
        {

    BAF6: 5B 82 1A 49 32 43 32                             // [..I2C2

            Name (LINK, "\\_SB.PCI0.I2C2")
        }
    }


    BAFD: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
    BB0D: 49 32 43 32 00                                   // I2C2.

    If (
    BB12: A0 4E 08 92                                      // .N..

LNotEqual (SMD2, 0x02))
    {

    BB16: 93 53 4D 44 32 0A 02                             // .SMD2..

        Scope (_SB.PCI0.I2C2)
        {

    BB1D: 10 43 08 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .C./._SB_PCI0I2C
    BB2D: 32                                               // 2

            Name (_HID, "INT3444")  // _HID: Hardware ID

    BB2E: 08 5F 48 49 44 0D 49 4E 54 33 34 34 34 00        // ._HID.INT3444.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    BB3C: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB12))
            }


    BB43: A4 4C 48 52 56 53 42 31 32                       // .LHRVSB12

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    BB4C: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD2, SB02, SIR2))
            }


    BB53: A4 4C 43 52 53 53 4D 44 32 53 42 30 32 53 49 52  // .LCRSSMD2SB02SIR
    BB63: 32                                               // 2

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB12)
            }


    BB64: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 32     // .._PSC.GETDSB12

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB12)
            }


    BB73: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 32     // .._PS0.LPD0SB12

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB12)
            }


    BB82: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 32     // .._PS3.LPD3SB12

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    BB91: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD2))
            }
        }
    }


    BB98: A4 4C 53 54 41 53 4D 44 32                       // .LSTASMD2

    If (LEqual (SMD2, 0x02))
    {

    BBA1: A0 3B 93 53 4D 44 32 0A 02                       // .;.SMD2..

        Scope (_SB.PCI0.I2C2)
        {

    BBAA: 10 32 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 32  // .2/._SB_PCI0I2C2

            Name (_ADR, 0x00150002)  // _ADR: Address

    BBBA: 08 5F 41 44 52 0C 02 00 15 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    BBC4: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    BBCB: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    BBD2: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    BBDB: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    BBDD: 10 26 2E 5F 53 42 5F 50 43 49 30                 // .&._SB_PCI0

        Device (I2C3)
        {

    BBE8: 5B 82 1A 49 32 43 33                             // [..I2C3

            Name (LINK, "\\_SB.PCI0.I2C3")
        }
    }


    BBEF: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
    BBFF: 49 32 43 33 00                                   // I2C3.

    If (
    BC04: A0 4E 08 92                                      // .N..

LNotEqual (SMD3, 0x02))
    {

    BC08: 93 53 4D 44 33 0A 02                             // .SMD3..

        Scope (_SB.PCI0.I2C3)
        {

    BC0F: 10 43 08 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .C./._SB_PCI0I2C
    BC1F: 33                                               // 3

            Name (_HID, "INT3445")  // _HID: Hardware ID

    BC20: 08 5F 48 49 44 0D 49 4E 54 33 34 34 35 00        // ._HID.INT3445.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    BC2E: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB13))
            }


    BC35: A4 4C 48 52 56 53 42 31 33                       // .LHRVSB13

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    BC3E: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD3, SB03, SIR3))
            }


    BC45: A4 4C 43 52 53 53 4D 44 33 53 42 30 33 53 49 52  // .LCRSSMD3SB03SIR
    BC55: 33                                               // 3

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB13)
            }


    BC56: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 33     // .._PSC.GETDSB13

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB13)
            }


    BC65: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 33     // .._PS0.LPD0SB13

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB13)
            }


    BC74: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 33     // .._PS3.LPD3SB13

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    BC83: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD3))
            }
        }
    }


    BC8A: A4 4C 53 54 41 53 4D 44 33                       // .LSTASMD3

    If (LEqual (SMD3, 0x02))
    {

    BC93: A0 3B 93 53 4D 44 33 0A 02                       // .;.SMD3..

        Scope (_SB.PCI0.I2C3)
        {

    BC9C: 10 32 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 33  // .2/._SB_PCI0I2C3

            Name (_ADR, 0x00150003)  // _ADR: Address

    BCAC: 08 5F 41 44 52 0C 03 00 15 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    BCB6: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    BCBD: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    BCC4: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    BCCD: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    BCCF: 10 26 2E 5F 53 42 5F 50 43 49 30                 // .&._SB_PCI0

        Device (I2C4)
        {

    BCDA: 5B 82 1A 49 32 43 34                             // [..I2C4

            Name (LINK, "\\_SB.PCI0.I2C4")
        }
    }


    BCE1: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
    BCF1: 49 32 43 34 00                                   // I2C4.

    If (
    BCF6: A0 4E 08 92                                      // .N..

LNotEqual (SMD4, 0x02))
    {

    BCFA: 93 53 4D 44 34 0A 02                             // .SMD4..

        Scope (_SB.PCI0.I2C4)
        {

    BD01: 10 43 08 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .C./._SB_PCI0I2C
    BD11: 34                                               // 4

            Name (_HID, "INT3446")  // _HID: Hardware ID

    BD12: 08 5F 48 49 44 0D 49 4E 54 33 34 34 36 00        // ._HID.INT3446.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    BD20: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB14))
            }


    BD27: A4 4C 48 52 56 53 42 31 34                       // .LHRVSB14

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    BD30: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD4, SB04, SIR4))
            }


    BD37: A4 4C 43 52 53 53 4D 44 34 53 42 30 34 53 49 52  // .LCRSSMD4SB04SIR
    BD47: 34                                               // 4

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB14)
            }


    BD48: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 34     // .._PSC.GETDSB14

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB14)
            }


    BD57: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 34     // .._PS0.LPD0SB14

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB14)
            }


    BD66: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 34     // .._PS3.LPD3SB14

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    BD75: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD4))
            }
        }
    }


    BD7C: A4 4C 53 54 41 53 4D 44 34                       // .LSTASMD4

    If (LEqual (SMD4, 0x02))
    {

    BD85: A0 3B 93 53 4D 44 34 0A 02                       // .;.SMD4..

        Scope (_SB.PCI0.I2C4)
        {

    BD8E: 10 32 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 34  // .2/._SB_PCI0I2C4

            Name (_ADR, 0x00190002)  // _ADR: Address

    BD9E: 08 5F 41 44 52 0C 02 00 19 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    BDA8: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    BDAF: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    BDB6: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    BDBF: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    BDC1: 10 26 2E 5F 53 42 5F 50 43 49 30                 // .&._SB_PCI0

        Device (I2C5)
        {

    BDCC: 5B 82 1A 49 32 43 35                             // [..I2C5

            Name (LINK, "\\_SB.PCI0.I2C5")
        }
    }


    BDD3: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
    BDE3: 49 32 43 35 00                                   // I2C5.

    If (
    BDE8: A0 4E 08 92                                      // .N..

LNotEqual (SMD5, 0x02))
    {

    BDEC: 93 53 4D 44 35 0A 02                             // .SMD5..

        Scope (_SB.PCI0.I2C5)
        {

    BDF3: 10 43 08 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .C./._SB_PCI0I2C
    BE03: 35                                               // 5

            Name (_HID, "INT3447")  // _HID: Hardware ID

    BE04: 08 5F 48 49 44 0D 49 4E 54 33 34 34 37 00        // ._HID.INT3447.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    BE12: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB15))
            }


    BE19: A4 4C 48 52 56 53 42 31 35                       // .LHRVSB15

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    BE22: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD5, SB05, SIR5))
            }


    BE29: A4 4C 43 52 53 53 4D 44 35 53 42 30 35 53 49 52  // .LCRSSMD5SB05SIR
    BE39: 35                                               // 5

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB15)
            }


    BE3A: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 35     // .._PSC.GETDSB15

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB15)
            }


    BE49: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 35     // .._PS0.LPD0SB15

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB15)
            }


    BE58: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 35     // .._PS3.LPD3SB15

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    BE67: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD5))
            }
        }
    }


    BE6E: A4 4C 53 54 41 53 4D 44 35                       // .LSTASMD5

    If (LEqual (SMD5, 0x02))
    {

    BE77: A0 3B 93 53 4D 44 35 0A 02                       // .;.SMD5..

        Scope (_SB.PCI0.I2C5)
        {

    BE80: 10 32 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 35  // .2/._SB_PCI0I2C5

            Name (_ADR, 0x00190001)  // _ADR: Address

    BE90: 08 5F 41 44 52 0C 01 00 19 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    BE9A: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    BEA1: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    BEA8: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    BEB1: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    BEB3: 10 11 2E 5F 53 42 5F 50 43 49 30                 // ..._SB_PCI0

        Device (SPI0)
        {
        }
    }


    BEBE: 5B 82 05 53 50 49 30                             // [..SPI0

    If (
    BEC5: A0 4E 08 92                                      // .N..

LNotEqual (SMD6, 0x02))
    {

    BEC9: 93 53 4D 44 36 0A 02                             // .SMD6..

        Scope (_SB.PCI0.SPI0)
        {

    BED0: 10 43 08 2F 03 5F 53 42 5F 50 43 49 30 53 50 49  // .C./._SB_PCI0SPI
    BEE0: 30                                               // 0

            Name (_HID, "INT3440")  // _HID: Hardware ID

    BEE1: 08 5F 48 49 44 0D 49 4E 54 33 34 34 30 00        // ._HID.INT3440.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    BEEF: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB16))
            }


    BEF6: A4 4C 48 52 56 53 42 31 36                       // .LHRVSB16

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    BEFF: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD6, SB06, SIR6))
            }


    BF06: A4 4C 43 52 53 53 4D 44 36 53 42 30 36 53 49 52  // .LCRSSMD6SB06SIR
    BF16: 36                                               // 6

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB16)
            }


    BF17: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 36     // .._PSC.GETDSB16

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB16)
            }


    BF26: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 36     // .._PS0.LPD0SB16

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB16)
            }


    BF35: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 36     // .._PS3.LPD3SB16

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    BF44: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD6))
            }
        }
    }


    BF4B: A4 4C 53 54 41 53 4D 44 36                       // .LSTASMD6

    If (LEqual (SMD6, 0x02))
    {

    BF54: A0 3B 93 53 4D 44 36 0A 02                       // .;.SMD6..

        Scope (_SB.PCI0.SPI0)
        {

    BF5D: 10 32 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 30  // .2/._SB_PCI0SPI0

            Name (_ADR, 0x001E0002)  // _ADR: Address

    BF6D: 08 5F 41 44 52 0C 02 00 1E 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    BF77: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    BF7E: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    BF85: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    BF8E: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    BF90: 10 11 2E 5F 53 42 5F 50 43 49 30                 // ..._SB_PCI0

        Device (SPI1)
        {
        }
    }


    BF9B: 5B 82 05 53 50 49 31                             // [..SPI1

    If (
    BFA2: A0 4E 08 92                                      // .N..

LNotEqual (SMD7, 0x02))
    {

    BFA6: 93 53 4D 44 37 0A 02                             // .SMD7..

        Scope (_SB.PCI0.SPI1)
        {

    BFAD: 10 43 08 2F 03 5F 53 42 5F 50 43 49 30 53 50 49  // .C./._SB_PCI0SPI
    BFBD: 31                                               // 1

            Name (_HID, "INT3441")  // _HID: Hardware ID

    BFBE: 08 5F 48 49 44 0D 49 4E 54 33 34 34 31 00        // ._HID.INT3441.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    BFCC: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB17))
            }


    BFD3: A4 4C 48 52 56 53 42 31 37                       // .LHRVSB17

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    BFDC: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD7, SB07, SIR7))
            }


    BFE3: A4 4C 43 52 53 53 4D 44 37 53 42 30 37 53 49 52  // .LCRSSMD7SB07SIR
    BFF3: 37                                               // 7

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB17)
            }


    BFF4: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 37     // .._PSC.GETDSB17

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB17)
            }


    C003: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 37     // .._PS0.LPD0SB17

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB17)
            }


    C012: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 37     // .._PS3.LPD3SB17

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    C021: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD7))
            }
        }
    }


    C028: A4 4C 53 54 41 53 4D 44 37                       // .LSTASMD7

    If (LEqual (SMD7, 0x02))
    {

    C031: A0 3B 93 53 4D 44 37 0A 02                       // .;.SMD7..

        Scope (_SB.PCI0.SPI1)
        {

    C03A: 10 32 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 31  // .2/._SB_PCI0SPI1

            Name (_ADR, 0x001E0003)  // _ADR: Address

    C04A: 08 5F 41 44 52 0C 03 00 1E 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    C054: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    C05B: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    C062: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    C06B: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    C06D: 10 11 2E 5F 53 42 5F 50 43 49 30                 // ..._SB_PCI0

        Device (UA00)
        {
        }
    }


    C078: 5B 82 05 55 41 30 30                             // [..UA00

    If (
    C07F: A0 4F 0D 92                                      // .O..

LNotEqual (SMD8, 0x02))
    {

    C083: 93 53 4D 44 38 0A 02                             // .SMD8..

        Scope (_SB.PCI0.UA00)
        {

    C08A: 10 44 0D 2F 03 5F 53 42 5F 50 43 49 30 55 41 30  // .D./._SB_PCI0UA0
    C09A: 30                                               // 0

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    C09B: 14 22 5F 48 49 44 00                             // ."_HID.

                If (
    C0A2: A0 13 92                                         // ...

LNotEqual (SMD9, 0x04))
                {

    C0A5: 93 53 4D 44 39 0A 04                             // .SMD9..

                    Return ("INT3448")
                }

    C0AC: A4 0D 49 4E 54 33 34 34 38 00                    // ..INT3448.

                Else
                {

    C0B6: A1 07                                            // ..

                    Return (0x020CD041)
                }
            }


    C0B8: A4 0C 41 D0 0C 02                                // ..A...

            Name (_UID, "SerialIoUart0")  // _UID: Unique ID

    C0BE: 08 5F 55 49 44 0D 53 65 72 69 61 6C 49 6F 55 61  // ._UID.SerialIoUa
    C0CE: 72 74 30 00                                      // rt0.

            Name (_DDN, "SerialIoUart0")  // _DDN: DOS Device Name

    C0D2: 08 5F 44 44 4E 0D 53 65 72 69 61 6C 49 6F 55 61  // ._DDN.SerialIoUa
    C0E2: 72 74 30 00                                      // rt0.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    C0E6: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB18))
            }


    C0ED: A4 4C 48 52 56 53 42 31 38                       // .LHRVSB18

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    C0F6: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD8, SB08, SIR8))
            }


    C0FD: A4 4C 43 52 53 53 4D 44 38 53 42 30 38 53 49 52  // .LCRSSMD8SB08SIR
    C10D: 38                                               // 8

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB18)
            }


    C10E: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 38     // .._PSC.GETDSB18

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {

    C11D: 14 18 5F 50 53 30 00                             // .._PS0.

                If (
    C124: A0 11 92                                         // ...

LNotEqual (SMD8, 0x04))
                {
                    LPD0 (SB18)
                }
            }


    C127: 93 53 4D 44 38 0A 04 4C 50 44 30 53 42 31 38     // .SMD8..LPD0SB18

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {

    C136: 14 18 5F 50 53 33 00                             // .._PS3.

                If (
    C13D: A0 11 92                                         // ...

LNotEqual (SMD8, 0x04))
                {
                    LPD3 (SB18)
                }
            }


    C140: 93 53 4D 44 38 0A 04 4C 50 44 33 53 42 31 38     // .SMD8..LPD3SB18

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    C14F: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD8))
            }
        }
    }


    C156: A4 4C 53 54 41 53 4D 44 38                       // .LSTASMD8

    If (LEqual (SMD8, 0x02))
    {

    C15F: A0 3B 93 53 4D 44 38 0A 02                       // .;.SMD8..

        Scope (_SB.PCI0.UA00)
        {

    C168: 10 32 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 30  // .2/._SB_PCI0UA00

            Name (_ADR, 0x001E0000)  // _ADR: Address

    C178: 08 5F 41 44 52 0C 00 00 1E 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    C182: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    C189: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    C190: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    C199: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    C19B: 10 11 2E 5F 53 42 5F 50 43 49 30                 // ..._SB_PCI0

        Device (UA01)
        {
        }
    }


    C1A6: 5B 82 05 55 41 30 31                             // [..UA01

    If (
    C1AD: A0 4F 0D 92                                      // .O..

LNotEqual (SMD9, 0x02))
    {

    C1B1: 93 53 4D 44 39 0A 02                             // .SMD9..

        Scope (_SB.PCI0.UA01)
        {

    C1B8: 10 44 0D 2F 03 5F 53 42 5F 50 43 49 30 55 41 30  // .D./._SB_PCI0UA0
    C1C8: 31                                               // 1

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    C1C9: 14 22 5F 48 49 44 00                             // ."_HID.

                If (
    C1D0: A0 13 92                                         // ...

LNotEqual (SMD9, 0x04))
                {

    C1D3: 93 53 4D 44 39 0A 04                             // .SMD9..

                    Return ("INT3449")
                }

    C1DA: A4 0D 49 4E 54 33 34 34 39 00                    // ..INT3449.

                Else
                {

    C1E4: A1 07                                            // ..

                    Return (0x020CD041)
                }
            }


    C1E6: A4 0C 41 D0 0C 02                                // ..A...

            Name (_UID, "SerialIoUart1")  // _UID: Unique ID

    C1EC: 08 5F 55 49 44 0D 53 65 72 69 61 6C 49 6F 55 61  // ._UID.SerialIoUa
    C1FC: 72 74 31 00                                      // rt1.

            Name (_DDN, "SerialIoUart1")  // _DDN: DOS Device Name

    C200: 08 5F 44 44 4E 0D 53 65 72 69 61 6C 49 6F 55 61  // ._DDN.SerialIoUa
    C210: 72 74 31 00                                      // rt1.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    C214: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB19))
            }


    C21B: A4 4C 48 52 56 53 42 31 39                       // .LHRVSB19

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    C224: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD9, SB09, SIR9))
            }


    C22B: A4 4C 43 52 53 53 4D 44 39 53 42 30 39 53 49 52  // .LCRSSMD9SB09SIR
    C23B: 39                                               // 9

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB19)
            }


    C23C: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 39     // .._PSC.GETDSB19

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {

    C24B: 14 18 5F 50 53 30 00                             // .._PS0.

                If (
    C252: A0 11 92                                         // ...

LNotEqual (SMD9, 0x04))
                {
                    LPD0 (SB19)
                }
            }


    C255: 93 53 4D 44 39 0A 04 4C 50 44 30 53 42 31 39     // .SMD9..LPD0SB19

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {

    C264: 14 18 5F 50 53 33 00                             // .._PS3.

                If (
    C26B: A0 11 92                                         // ...

LNotEqual (SMD9, 0x04))
                {
                    LPD3 (SB19)
                }
            }


    C26E: 93 53 4D 44 39 0A 04 4C 50 44 33 53 42 31 39     // .SMD9..LPD3SB19

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    C27D: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMD9))
            }
        }
    }


    C284: A4 4C 53 54 41 53 4D 44 39                       // .LSTASMD9

    If (LEqual (SMD9, 0x02))
    {

    C28D: A0 3B 93 53 4D 44 39 0A 02                       // .;.SMD9..

        Scope (_SB.PCI0.UA01)
        {

    C296: 10 32 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 31  // .2/._SB_PCI0UA01

            Name (_ADR, 0x001E0001)  // _ADR: Address

    C2A6: 08 5F 41 44 52 0C 01 00 1E 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    C2B0: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    C2B7: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    C2BE: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    C2C7: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    C2C9: 10 11 2E 5F 53 42 5F 50 43 49 30                 // ..._SB_PCI0

        Device (UA02)
        {
        }
    }


    C2D4: 5B 82 05 55 41 30 32                             // [..UA02

    If (
    C2DB: A0 4F 0D 92                                      // .O..

LNotEqual (SMDA, 0x02))
    {

    C2DF: 93 53 4D 44 41 0A 02                             // .SMDA..

        Scope (_SB.PCI0.UA02)
        {

    C2E6: 10 44 0D 2F 03 5F 53 42 5F 50 43 49 30 55 41 30  // .D./._SB_PCI0UA0
    C2F6: 32                                               // 2

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    C2F7: 14 22 5F 48 49 44 00                             // ."_HID.

                If (
    C2FE: A0 13 92                                         // ...

LNotEqual (SMDA, 0x04))
                {

    C301: 93 53 4D 44 41 0A 04                             // .SMDA..

                    Return ("INT344A")
                }

    C308: A4 0D 49 4E 54 33 34 34 41 00                    // ..INT344A.

                Else
                {

    C312: A1 07                                            // ..

                    Return (0x020CD041)
                }
            }


    C314: A4 0C 41 D0 0C 02                                // ..A...

            Name (_UID, "SerialIoUart2")  // _UID: Unique ID

    C31A: 08 5F 55 49 44 0D 53 65 72 69 61 6C 49 6F 55 61  // ._UID.SerialIoUa
    C32A: 72 74 32 00                                      // rt2.

            Name (_DDN, "SerialIoUart2")  // _DDN: DOS Device Name

    C32E: 08 5F 44 44 4E 0D 53 65 72 69 61 6C 49 6F 55 61  // ._DDN.SerialIoUa
    C33E: 72 74 32 00                                      // rt2.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    C342: 14 0F 5F 48 52 56 00                             // .._HRV.

                Return (LHRV (SB1A))
            }


    C349: A4 4C 48 52 56 53 42 31 41                       // .LHRVSB1A

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    C352: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMDA, SB0A, SIRA))
            }


    C359: A4 4C 43 52 53 53 4D 44 41 53 42 30 41 53 49 52  // .LCRSSMDASB0ASIR
    C369: 41                                               // A

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                GETD (SB1A)
            }


    C36A: 14 0E 5F 50 53 43 00 47 45 54 44 53 42 31 41     // .._PSC.GETDSB1A

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {

    C379: 14 18 5F 50 53 30 00                             // .._PS0.

                If (
    C380: A0 11 92                                         // ...

LNotEqual (SMDA, 0x04))
                {
                    LPD0 (SB1A)
                }
            }


    C383: 93 53 4D 44 41 0A 04 4C 50 44 30 53 42 31 41     // .SMDA..LPD0SB1A

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {

    C392: 14 18 5F 50 53 33 00                             // .._PS3.

                If (
    C399: A0 11 92                                         // ...

LNotEqual (SMDA, 0x04))
                {
                    LPD3 (SB1A)
                }
            }


    C39C: 93 53 4D 44 41 0A 04 4C 50 44 33 53 42 31 41     // .SMDA..LPD3SB1A

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    C3AB: 14 0F 5F 53 54 41 00                             // .._STA.

                Return (LSTA (SMDA))
            }
        }
    }


    C3B2: A4 4C 53 54 41 53 4D 44 41                       // .LSTASMDA

    If (LEqual (SMDA, 0x02))
    {

    C3BB: A0 3B 93 53 4D 44 41 0A 02                       // .;.SMDA..

        Scope (_SB.PCI0.UA02)
        {

    C3C4: 10 32 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 32  // .2/._SB_PCI0UA02

            Name (_ADR, 0x00190000)  // _ADR: Address

    C3D4: 08 5F 41 44 52 0C 00 00 19 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    C3DE: 14 18 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

    C3E5: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


    C3EC: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (Zero)
            }
        }
    }


    C3F5: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

    C3F7: 10 44 09 2E 5F 53 42 5F 50 43 49 30              // .D.._SB_PCI0

        Name (HIDG, 
    C403: 08 48 49 44 47                                   // .HIDG

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */)

    C408: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
    C418: 3D 89 38 DE                                      // =.8.

        Name (TP7G, 
    C41C: 08 54 50 37 47                                   // .TP7G

ToUUID ("ef87eb82-f951-46da-84ec-14871ac6f84b") /* Unknown UUID */)

    C421: 11 13 0A 10 82 EB 87 EF 51 F9 DA 46 84 EC 14 87  // ........Q..F....
    C431: 1A C6 F8 4B                                      // ...K

        Method (HIDD, 5, Serialized)
        {

    C435: 14 29 48 49 44 44 0D                             // .)HIDD.

            If (LEqual (Arg0, HIDG))
            {

    C43C: A0 1D 93 68 48 49 44 47                          // ...hHIDG

                If (LEqual (Arg2, Zero))
                {

    C444: A0 0E 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, One))
                    {

    C449: A0 09 93 69 01                                   // ...i.

                        Return (
    C44E: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                }


    C44F: 11 03 01 03                                      // ....

                If (LEqual (Arg2, One))
                {

    C453: A0 06 93 6A 01                                   // ...j.

                    Return (Arg4)
                }
            }


    C458: A4 6C                                            // .l

            Return (
    C45A: A4                                               // .

Buffer (One)
            {
                 0x00                                             // .
            })
        }


    C45B: 11 03 01 00                                      // ....

        Method (TP7D, 6, Serialized)
        {

    C45F: 14 2C 54 50 37 44 0E                             // .,TP7D.

            If (LEqual (Arg0, TP7G))
            {

    C466: A0 20 93 68 54 50 37 47                          // . .hTP7G

                If (LEqual (Arg2, Zero))
                {

    C46E: A0 0E 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, One))
                    {

    C473: A0 09 93 69 01                                   // ...i.

                        Return (
    C478: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                }


    C479: 11 03 01 03                                      // ....

                If (LEqual (Arg2, One))
                {

    C47D: A0 09 93 6A 01                                   // ...j.

                    Return (
    C482: A4                                               // .

ConcatenateResTemplate (Arg4, Arg5))
                }
            }


    C483: 84 6C 6D 00                                      // .lm.

            Return (
    C487: A4                                               // .

Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }


    C488: 11 03 01 00                                      // ....

    Scope (_SB.PCI0.I2C0)
    {

    C48C: 10 44 3F 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .D?/._SB_PCI0I2C
    C49C: 30                                               // 0

        Device (TPD0)
        {

    C49D: 5B 82 4C 24 54 50 44 30                          // [.L$TPD0

            Name (HID2, Zero)

    C4A5: 08 48 49 44 32 00                                // .HID2.

            Name (SBFB, 
    C4AB: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
            {
                I2cSerialBusV2 (0x0020, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                    0x00, ResourceConsumer, _Y24, Exclusive,
                    )
            })

    C4B0: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
    C4C0: 80 1A 06 00 20 00 5C 5F 53 42 2E 50 43 49 30 2E  // .... .\_SB.PCI0.
    C4D0: 49 32 43 30 00 79 00                             // I2C0.y.

            Name (SBFI, 
    C4D7: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y25)
                {
                    0x00000000,
                }
            })

    C4DC: 11 0E 0A 0B 89 06 00 15 01 00 00 00 00 79 00     // .............y.

            Name (SBFG, 
    C4EB: 08 53 42 46 47                                   // .SBFG

ResourceTemplate ()
            {
                GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                    "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })

    C4F0: 11 2D 0A 2A 8C 25 00 01 00 01 00 12 00 00 00 00  // .-.*.%..........
    C500: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
    C510: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

            CreateWordField (SBFB, \_SB.PCI0.I2C0.TPD0._Y24._ADR, BADR)  // _ADR: Address

    C51E: 8B 53 42 46 42 0A 10 42 41 44 52                 // .SBFB..BADR

            CreateDWordField (SBFB, \_SB.PCI0.I2C0.TPD0._Y24._SPE, SPED)  // _SPE: Speed

    C529: 8A 53 42 46 42 0A 0C 53 50 45 44                 // .SBFB..SPED

            CreateWordField (SBFG, 0x17, INT1)

    C534: 8B 53 42 46 47 0A 17 49 4E 54 31                 // .SBFG..INT1

            CreateDWordField (SBFI, \_SB.PCI0.I2C0.TPD0._Y25._INT, INT2)  // _INT: Interrupts

    C53F: 8A 53 42 46 49 0A 05 49 4E 54 32                 // .SBFI..INT2

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

    C54A: 14 4A 0E 5F 49 4E 49 00                          // .J._INI.

                If (LLess (OSYS, 0x07DC))
                {
                    SRXO (GPDI, One)
                }

                Store (GNUM (GPDI), INT1) /* \_SB_.PCI0.I2C0.TPD0.INT1 */
                Store (INUM (GPDI), INT2) /* \_SB_.PCI0.I2C0.TPD0.INT2 */

    C552: A0 12 95 4F 53 59 53 0B DC 07 53 52 58 4F 47 50  // ...OSYS...SRXOGP
    C562: 44 49 01 70 47 4E 55 4D 47 50 44 49 49 4E 54 31  // DI.pGNUMGPDIINT1
    C572: 70 49 4E 55 4D 47 50 44 49 49 4E 54 32           // pINUMGPDIINT2

                If (LEqual (SDM0, Zero))
                {
                    SHPO (GPDI, One)
                }


    C57F: A0 10 93 53 44 4D 30 00 53 48 50 4F 47 50 44 49  // ...SDM0.SHPOGPDI
    C58F: 01                                               // .

                If (LEqual (SDS0, One))
                {
                    Store ("SYNA2393", _HID) /* \_SB_.PCI0.I2C0.TPD0._HID */
                    Store (0x20, HID2) /* \_SB_.PCI0.I2C0.TPD0.HID2 */

    C590: A0 1F 93 53 44 53 30 01 70 0D 53 59 4E 41 32 33  // ...SDS0.p.SYNA23
    C5A0: 39 33 00 5F 48 49 44 70 0A 20 48 49 44 32        // 93._HIDp. HID2

                    Return (Zero)
                }


    C5AE: A4 00                                            // ..

                If (LEqual (SDS0, 0x02))
                {
                    Store ("06CB2846", _HID) /* \_SB_.PCI0.I2C0.TPD0._HID */
                    Store (0x20, HID2) /* \_SB_.PCI0.I2C0.TPD0.HID2 */

    C5B0: A0 20 93 53 44 53 30 0A 02 70 0D 30 36 43 42 32  // . .SDS0..p.06CB2
    C5C0: 38 34 36 00 5F 48 49 44 70 0A 20 48 49 44 32     // 846._HIDp. HID2

                    Return (Zero)
                }


    C5CF: A4 00                                            // ..

                If (LEqual (SDS0, 0x05))
                {
                    Store ("CUST0001", _HID) /* \_SB_.PCI0.I2C0.TPD0._HID */
                    Store (TPDH, HID2) /* \_SB_.PCI0.I2C0.TPD0.HID2 */
                    Store (TPDB, BADR) /* \_SB_.PCI0.I2C0.TPD0.BADR */

    C5D1: A0 43 06 93 53 44 53 30 0A 05 70 0D 43 55 53 54  // .C..SDS0..p.CUST
    C5E1: 30 30 30 31 00 5F 48 49 44 70 54 50 44 48 48 49  // 0001._HIDpTPDHHI
    C5F1: 44 32 70 54 50 44 42 42 41 44 52                 // D2pTPDBBADR

                    If (LEqual (TPDS, Zero))
                    {

    C5FC: A0 11 93 54 50 44 53 00                          // ...TPDS.

                        Store (0x000186A0, SPED) /* \_SB_.PCI0.I2C0.TPD0.SPED */
                    }


    C604: 70 0C A0 86 01 00 53 50 45 44                    // p.....SPED

                    If (LEqual (TPDS, One))
                    {

    C60E: A0 11 93 54 50 44 53 01                          // ...TPDS.

                        Store (0x00061A80, SPED) /* \_SB_.PCI0.I2C0.TPD0.SPED */
                    }


    C616: 70 0C 80 1A 06 00 53 50 45 44                    // p.....SPED

                    If (LEqual (TPDS, 0x02))
                    {

    C620: A0 12 93 54 50 44 53 0A 02                       // ...TPDS..

                        Store (0x000F4240, SPED) /* \_SB_.PCI0.I2C0.TPD0.SPED */
                    }


    C629: 70 0C 40 42 0F 00 53 50 45 44                    // p.@B..SPED

                    Return (Zero)
                }
            }


    C633: A4 00                                            // ..

            Name (_HID, "XXXX0000")  // _HID: Hardware ID

    C635: 08 5F 48 49 44 0D 58 58 58 58 30 30 30 30 00     // ._HID.XXXX0000.

            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID

    C644: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State

    C652: 08 5F 53 30 57 0A 03                             // ._S0W..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    C659: 14 39 5F 44 53 4D 0C                             // .9_DSM.

                If (LEqual (Arg0, HIDG))
                {

    C660: A0 14 93 68 48 49 44 47                          // ...hHIDG

                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }


    C668: A4 48 49 44 44 68 69 6A 6B 48 49 44 32           // .HIDDhijkHID2

                If (LEqual (Arg0, TP7G))
                {

    C675: A0 18 93 68 54 50 37 47                          // ...hTP7G

                    Return (TP7D (Arg0, Arg1, Arg2, Arg3, SBFB, SBFG))
                }


    C67D: A4 54 50 37 44 68 69 6A 6B 53 42 46 42 53 42 46  // .TP7DhijkSBFBSBF
    C68D: 47                                               // G

                Return (
    C68E: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    C68F: 11 03 01 00                                      // ....

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    C693: 14 23 5F 53 54 41 00                             // .#_STA.

                If (LOr (LEqual (SDS0, 0x05), 
    C69A: A0 1A 91 93 53 44 53 30 0A 05                    // ....SDS0..

LOr (LEqual (SDS0, One), 
    C6A4: 91 93 53 44 53 30 01                             // ..SDS0.

LEqual (SDS0, 0x02))))
                {

    C6AB: 93 53 44 53 30 0A 02                             // .SDS0..

                    Return (0x0F)
                }


    C6B2: A4 0A 0F                                         // ...

                Return (Zero)
            }


    C6B5: A4 00                                            // ..

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    C6B7: 14 33 5F 43 52 53 00                             // .3_CRS.

                If (LLess (OSYS, 0x07DC))
                {

    C6BE: A0 0E 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                    Return (SBFI) /* \_SB_.PCI0.I2C0.TPD0.SBFI */
                }


    C6C8: A4 53 42 46 49                                   // .SBFI

                If (LEqual (SDM0, Zero))
                {

    C6CD: A0 12 93 53 44 4D 30 00                          // ...SDM0.

                    Return (
    C6D5: A4                                               // .

ConcatenateResTemplate (SBFB, SBFG))
                }


    C6D6: 84 53 42 46 42 53 42 46 47 00                    // .SBFBSBFG.

                Return (
    C6E0: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }
        }


    C6E1: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

        Device (HDAC)
        {

    C6EB: 5B 82 44 19 48 44 41 43                          // [.D.HDAC

            Name (_HID, "INT0000")  // _HID: Hardware ID

    C6F3: 08 5F 48 49 44 0D 49 4E 54 30 30 30 30 00        // ._HID.INT0000.

            Name (_CID, "INT0000")  // _CID: Compatible ID

    C701: 08 5F 43 49 44 0D 49 4E 54 30 30 30 30 00        // ._CID.INT0000.

            Name (_DDN, "Intel(R) Smart Sound Technology Audio Codec")  // _DDN: DOS Device Name

    C70F: 08 5F 44 44 4E 0D 49 6E 74 65 6C 28 52 29 20 53  // ._DDN.Intel(R) S
    C71F: 6D 61 72 74 20 53 6F 75 6E 64 20 54 65 63 68 6E  // mart Sound Techn
    C72F: 6F 6C 6F 67 79 20 41 75 64 69 6F 20 43 6F 64 65  // ology Audio Code
    C73F: 63 00                                            // c.

            Name (_UID, One)  // _UID: Unique ID

    C741: 08 5F 55 49 44 01                                // ._UID.

            Name (CADR, Zero)

    C747: 08 43 41 44 52 00                                // .CADR.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

    C74D: 14 40 09 5F 49 4E 49 00                          // .@._INI.

                If (LEqual (I2SC, One))
                {
                    Store ("INT3439", _HID) /* \_SB_.PCI0.I2C0.HDAC._HID */
                    Store ("INT3439", _CID) /* \_SB_.PCI0.I2C0.HDAC._CID */
                    Store (0x1A, CADR) /* \_SB_.PCI0.I2C0.HDAC.CADR */

    C755: A0 2C 93 49 32 53 43 01 70 0D 49 4E 54 33 34 33  // .,.I2SC.p.INT343
    C765: 39 00 5F 48 49 44 70 0D 49 4E 54 33 34 33 39 00  // 9._HIDp.INT3439.
    C775: 5F 43 49 44 70 0A 1A 43 41 44 52                 // _CIDp..CADR

                    Return (Zero)
                }


    C780: A4 00                                            // ..

                If (LEqual (I2SC, 0x02))
                {
                    Store ("INT343A", _HID) /* \_SB_.PCI0.I2C0.HDAC._HID */
                    Store ("INT343A", _CID) /* \_SB_.PCI0.I2C0.HDAC._CID */
                    Store (0x1C, CADR) /* \_SB_.PCI0.I2C0.HDAC.CADR */

    C782: A0 2D 93 49 32 53 43 0A 02 70 0D 49 4E 54 33 34  // .-.I2SC..p.INT34
    C792: 33 41 00 5F 48 49 44 70 0D 49 4E 54 33 34 33 41  // 3A._HIDp.INT343A
    C7A2: 00 5F 43 49 44 70 0A 1C 43 41 44 52              // ._CIDp..CADR

                    Return (Zero)
                }


    C7AE: A4 00                                            // ..

                If (LEqual (I2SC, 0x03))
                {
                    Store ("INT343B", _HID) /* \_SB_.PCI0.I2C0.HDAC._HID */
                    Store ("INT343B", _CID) /* \_SB_.PCI0.I2C0.HDAC._CID */
                    Store (0x34, CADR) /* \_SB_.PCI0.I2C0.HDAC.CADR */

    C7B0: A0 2D 93 49 32 53 43 0A 03 70 0D 49 4E 54 33 34  // .-.I2SC..p.INT34
    C7C0: 33 42 00 5F 48 49 44 70 0D 49 4E 54 33 34 33 42  // 3B._HIDp.INT343B
    C7D0: 00 5F 43 49 44 70 0A 34 43 41 44 52              // ._CIDp.4CADR

                    Return (Zero)
                }
            }


    C7DC: A4 00                                            // ..

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    C7DE: 14 4D 08 5F 43 52 53 00                          // .M._CRS.

                Name (SBFB, 
    C7E6: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, _Y26, Exclusive,
                        )
                })

    C7EB: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
    C7FB: 80 1A 06 00 00 00 5C 5F 53 42 2E 50 43 49 30 2E  // ......\_SB.PCI0.
    C80B: 49 32 43 30 00 79 00                             // I2C0.y.

                Name (SBFI, 
    C812: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y27)
                    {
                        0x00000000,
                    }
                })

    C817: 11 0E 0A 0B 89 06 00 15 01 00 00 00 00 79 00     // .............y.

                CreateWordField (SBFB, \_SB.PCI0.I2C0.HDAC._CRS._Y26._ADR, ADR)  // _ADR: Address
                Store (CADR, ADR) /* \_SB_.PCI0.I2C0.HDAC._CRS.ADR_ */

    C826: 8B 53 42 46 42 0A 10 41 44 52 5F 70 43 41 44 52  // .SBFB..ADR_pCADR
    C836: 41 44 52 5F                                      // ADR_

                CreateDWordField (SBFI, \_SB.PCI0.I2C0.HDAC._CRS._Y27._INT, AINT)  // _INT: Interrupts
                Store (INUM (0x02040016), AINT) /* \_SB_.PCI0.I2C0.HDAC._CRS.AINT */

    C83A: 8A 53 42 46 49 0A 05 41 49 4E 54 70 49 4E 55 4D  // .SBFI..AINTpINUM
    C84A: 0C 16 00 04 02 41 49 4E 54                       // .....AINT

                If (LEqual (BID, 0x20))
                {

    C853: A0 0D 93 42 49 44 5F 0A 20                       // ...BID_. 

                    Return (SBFB) /* \_SB_.PCI0.I2C0.HDAC._CRS.SBFB */
                }


    C85C: A4 53 42 46 42                                   // .SBFB

                Return (
    C861: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }


    C862: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    C86C: 14 14 5F 53 54 41 00                             // .._STA.

                If (
    C873: A0 0B 92                                         // ...

LNotEqual (I2SC, Zero))
                {

    C876: 93 49 32 53 43 00                                // .I2SC.

                    Return (0x0F)
                }


    C87C: A4 0A 0F                                         // ...

                Return (Zero)
            }
        }
    }


    C87F: A4 00                                            // ..

    Scope (_SB.PCI0.I2C1)
    {

    C881: 10 45 37 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .E7/._SB_PCI0I2C
    C891: 31                                               // 1

        Device (TPL1)
        {

    C892: 5B 82 44 2E 54 50 4C 31                          // [.D.TPL1

            Name (HID2, Zero)

    C89A: 08 48 49 44 32 00                                // .HID2.

            Name (SBFB, 
    C8A0: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
            {
                I2cSerialBusV2 (0x004C, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                    0x00, ResourceConsumer, _Y28, Exclusive,
                    )
            })

    C8A5: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
    C8B5: 80 1A 06 00 4C 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....L.\_SB.PCI0.
    C8C5: 49 32 43 31 00 79 00                             // I2C1.y.

            Name (SBFG, 
    C8CC: 08 53 42 46 47                                   // .SBFG

ResourceTemplate ()
            {
                GpioInt (Level, ActiveLow, Exclusive, PullDefault, 0x0000,
                    "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })

    C8D1: 11 2D 0A 2A 8C 25 00 01 00 01 00 02 00 00 00 00  // .-.*.%..........
    C8E1: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
    C8F1: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

            Name (SBFI, 
    C8FF: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y29)
                {
                    0x00000000,
                }
            })

    C904: 11 0E 0A 0B 89 06 00 05 01 00 00 00 00 79 00     // .............y.

            CreateWordField (SBFB, \_SB.PCI0.I2C1.TPL1._Y28._ADR, BADR)  // _ADR: Address

    C913: 8B 53 42 46 42 0A 10 42 41 44 52                 // .SBFB..BADR

            CreateDWordField (SBFB, \_SB.PCI0.I2C1.TPL1._Y28._SPE, SPED)  // _SPE: Speed

    C91E: 8A 53 42 46 42 0A 0C 53 50 45 44                 // .SBFB..SPED

            CreateDWordField (SBFI, \_SB.PCI0.I2C1.TPL1._Y29._INT, INT2)  // _INT: Interrupts

    C929: 8A 53 42 46 49 0A 05 49 4E 54 32                 // .SBFI..INT2

            CreateWordField (SBFG, 0x17, INT1)

    C934: 8B 53 42 46 47 0A 17 49 4E 54 31                 // .SBFG..INT1

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

    C93F: 14 4D 19 5F 49 4E 49 00                          // .M._INI.

                If (LLess (OSYS, 0x07DC))
                {
                    SRXO (GPLI, One)
                }

                Store (GNUM (GPLI), INT1) /* \_SB_.PCI0.I2C1.TPL1.INT1 */
                Store (INUM (GPLI), INT2) /* \_SB_.PCI0.I2C1.TPL1.INT2 */

    C947: A0 12 95 4F 53 59 53 0B DC 07 53 52 58 4F 47 50  // ...OSYS...SRXOGP
    C957: 4C 49 01 70 47 4E 55 4D 47 50 4C 49 49 4E 54 31  // LI.pGNUMGPLIINT1
    C967: 70 49 4E 55 4D 47 50 4C 49 49 4E 54 32           // pINUMGPLIINT2

                If (LEqual (SDM1, Zero))
                {
                    SHPO (GPLI, One)
                }


    C974: A0 10 93 53 44 4D 31 00 53 48 50 4F 47 50 4C 49  // ...SDM1.SHPOGPLI
    C984: 01                                               // .

                If (LEqual (SDS1, One))
                {
                    Store ("ATML3432", _HID) /* \_SB_.PCI0.I2C1.TPL1._HID */
                    Store (Zero, HID2) /* \_SB_.PCI0.I2C1.TPL1.HID2 */
                    Store (0x4C, BADR) /* \_SB_.PCI0.I2C1.TPL1.BADR */
                    Store (0x00061A80, SPED) /* \_SB_.PCI0.I2C1.TPL1.SPED */

    C985: A0 2F 93 53 44 53 31 01 70 0D 41 54 4D 4C 33 34  // ./.SDS1.p.ATML34
    C995: 33 32 00 5F 48 49 44 70 00 48 49 44 32 70 0A 4C  // 32._HIDp.HID2p.L
    C9A5: 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44        // BADRp.....SPED

                    Return (Zero)
                }


    C9B3: A4 00                                            // ..

                If (LEqual (SDS1, 0x02))
                {
                    Store ("ATML2952", _HID) /* \_SB_.PCI0.I2C1.TPL1._HID */
                    Store (Zero, HID2) /* \_SB_.PCI0.I2C1.TPL1.HID2 */
                    Store (0x4A, BADR) /* \_SB_.PCI0.I2C1.TPL1.BADR */
                    Store (0x00061A80, SPED) /* \_SB_.PCI0.I2C1.TPL1.SPED */

    C9B5: A0 30 93 53 44 53 31 0A 02 70 0D 41 54 4D 4C 32  // .0.SDS1..p.ATML2
    C9C5: 39 35 32 00 5F 48 49 44 70 00 48 49 44 32 70 0A  // 952._HIDp.HID2p.
    C9D5: 4A 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44     // JBADRp.....SPED

                    Return (Zero)
                }


    C9E4: A4 00                                            // ..

                If (LEqual (SDS1, 0x03))
                {
                    Store ("ELAN2097", _HID) /* \_SB_.PCI0.I2C1.TPL1._HID */
                    Store (One, HID2) /* \_SB_.PCI0.I2C1.TPL1.HID2 */
                    Store (0x10, BADR) /* \_SB_.PCI0.I2C1.TPL1.BADR */
                    Store (0x00061A80, SPED) /* \_SB_.PCI0.I2C1.TPL1.SPED */

    C9E6: A0 30 93 53 44 53 31 0A 03 70 0D 45 4C 41 4E 32  // .0.SDS1..p.ELAN2
    C9F6: 30 39 37 00 5F 48 49 44 70 01 48 49 44 32 70 0A  // 097._HIDp.HID2p.
    CA06: 10 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44     // .BADRp.....SPED

                    Return (Zero)
                }


    CA15: A4 00                                            // ..

                If (LEqual (SDS1, 0x04))
                {
                    Store ("NTRG0001", _HID) /* \_SB_.PCI0.I2C1.TPL1._HID */
                    Store (One, HID2) /* \_SB_.PCI0.I2C1.TPL1.HID2 */
                    Store (0x07, BADR) /* \_SB_.PCI0.I2C1.TPL1.BADR */
                    Store (0x00061A80, SPED) /* \_SB_.PCI0.I2C1.TPL1.SPED */

    CA17: A0 30 93 53 44 53 31 0A 04 70 0D 4E 54 52 47 30  // .0.SDS1..p.NTRG0
    CA27: 30 30 31 00 5F 48 49 44 70 01 48 49 44 32 70 0A  // 001._HIDp.HID2p.
    CA37: 07 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44     // .BADRp.....SPED

                    Return (Zero)
                }


    CA46: A4 00                                            // ..

                If (LEqual (SDS1, 0x05))
                {
                    Store ("NTRG0002", _HID) /* \_SB_.PCI0.I2C1.TPL1._HID */
                    Store (One, HID2) /* \_SB_.PCI0.I2C1.TPL1.HID2 */
                    Store (0x64, BADR) /* \_SB_.PCI0.I2C1.TPL1.BADR */
                    Store (0x00061A80, SPED) /* \_SB_.PCI0.I2C1.TPL1.SPED */

    CA48: A0 30 93 53 44 53 31 0A 05 70 0D 4E 54 52 47 30  // .0.SDS1..p.NTRG0
    CA58: 30 30 32 00 5F 48 49 44 70 01 48 49 44 32 70 0A  // 002._HIDp.HID2p.
    CA68: 64 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44     // dBADRp.....SPED

                    Return (Zero)
                }


    CA77: A4 00                                            // ..

                If (LEqual (SDS1, 0x06))
                {
                    Store ("CUST0000", _HID) /* \_SB_.PCI0.I2C1.TPL1._HID */
                    Store (TPLH, HID2) /* \_SB_.PCI0.I2C1.TPL1.HID2 */
                    Store (TPLB, BADR) /* \_SB_.PCI0.I2C1.TPL1.BADR */

    CA79: A0 43 06 93 53 44 53 31 0A 06 70 0D 43 55 53 54  // .C..SDS1..p.CUST
    CA89: 30 30 30 30 00 5F 48 49 44 70 54 50 4C 48 48 49  // 0000._HIDpTPLHHI
    CA99: 44 32 70 54 50 4C 42 42 41 44 52                 // D2pTPLBBADR

                    If (LEqual (TPLS, Zero))
                    {

    CAA4: A0 11 93 54 50 4C 53 00                          // ...TPLS.

                        Store (0x000186A0, SPED) /* \_SB_.PCI0.I2C1.TPL1.SPED */
                    }


    CAAC: 70 0C A0 86 01 00 53 50 45 44                    // p.....SPED

                    If (LEqual (TPLS, One))
                    {

    CAB6: A0 11 93 54 50 4C 53 01                          // ...TPLS.

                        Store (0x00061A80, SPED) /* \_SB_.PCI0.I2C1.TPL1.SPED */
                    }


    CABE: 70 0C 80 1A 06 00 53 50 45 44                    // p.....SPED

                    If (LEqual (TPLS, 0x02))
                    {

    CAC8: A0 12 93 54 50 4C 53 0A 02                       // ...TPLS..

                        Store (0x000F4240, SPED) /* \_SB_.PCI0.I2C1.TPL1.SPED */
                    }


    CAD1: 70 0C 40 42 0F 00 53 50 45 44                    // p.@B..SPED

                    Return (Zero)
                }
            }


    CADB: A4 00                                            // ..

            Name (_HID, "XXXX0000")  // _HID: Hardware ID

    CADD: 08 5F 48 49 44 0D 58 58 58 58 30 30 30 30 00     // ._HID.XXXX0000.

            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID

    CAEC: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

    CAFA: 08 5F 53 30 57 0A 04                             // ._S0W..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    CB01: 14 39 5F 44 53 4D 0C                             // .9_DSM.

                If (LEqual (Arg0, HIDG))
                {

    CB08: A0 14 93 68 48 49 44 47                          // ...hHIDG

                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }


    CB10: A4 48 49 44 44 68 69 6A 6B 48 49 44 32           // .HIDDhijkHID2

                If (LEqual (Arg0, TP7G))
                {

    CB1D: A0 18 93 68 54 50 37 47                          // ...hTP7G

                    Return (TP7D (Arg0, Arg1, Arg2, Arg3, SBFB, SBFG))
                }


    CB25: A4 54 50 37 44 68 69 6A 6B 53 42 46 42 53 42 46  // .TP7DhijkSBFBSBF
    CB35: 47                                               // G

                Return (
    CB36: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    CB37: 11 03 01 00                                      // ....

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    CB3B: 14 08 5F 53 54 41 00                             // .._STA.

                Return (Zero)
            }


    CB42: A4 00                                            // ..

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    CB44: 14 33 5F 43 52 53 00                             // .3_CRS.

                If (LLess (OSYS, 0x07DC))
                {

    CB4B: A0 0E 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                    Return (SBFI) /* \_SB_.PCI0.I2C1.TPL1.SBFI */
                }


    CB55: A4 53 42 46 49                                   // .SBFI

                If (LEqual (SDM1, Zero))
                {

    CB5A: A0 12 93 53 44 4D 31 00                          // ...SDM1.

                    Return (
    CB62: A4                                               // .

ConcatenateResTemplate (SBFB, SBFG))
                }


    CB63: 84 53 42 46 42 53 42 46 47 00                    // .SBFBSBFG.

                Return (
    CB6D: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }
        }


    CB6E: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

        Device (IMP3)
        {

    CB78: 5B 82 4D 07 49 4D 50 33                          // [.M.IMP3

            Name (_ADR, Zero)  // _ADR: Address

    CB80: 08 5F 41 44 52 00                                // ._ADR.

            Name (_HID, "IMPJ0003")  // _HID: Hardware ID

    CB86: 08 5F 48 49 44 0D 49 4D 50 4A 30 30 30 33 00     // ._HID.IMPJ0003.

            Name (_CID, "IMPJ0003")  // _CID: Compatible ID

    CB95: 08 5F 43 49 44 0D 49 4D 50 4A 30 30 30 33 00     // ._CID.IMPJ0003.

            Name (_UID, One)  // _UID: Unique ID

    CBA4: 08 5F 55 49 44 01                                // ._UID.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    CBAA: 14 14 5F 53 54 41 00                             // .._STA.

                If (LEqual (BID, 0x20))
                {

    CBB1: A0 0B 93 42 49 44 5F 0A 20                       // ...BID_. 

                    Return (0x0F)
                }


    CBBA: A4 0A 0F                                         // ...

                Return (Zero)
            }


    CBBD: A4 00                                            // ..

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    CBBF: 14 37 5F 43 52 53 00                             // .7_CRS.

                Name (SBUF, 
    CBC6: 08 53 42 55 46                                   // .SBUF

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x006E, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })

    CBCB: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
    CBDB: 80 1A 06 00 6E 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....n.\_SB.PCI0.
    CBEB: 49 32 43 31 00 79 00                             // I2C1.y.

                Return (SBUF) /* \_SB_.PCI0.I2C1.IMP3._CRS.SBUF */
            }
        }
    }


    CBF2: A4 53 42 55 46                                   // .SBUF

    Scope (_SB.PCI0.SPI1)
    {

    CBF7: 10 4B 3B 2F 03 5F 53 42 5F 50 43 49 30 53 50 49  // .K;/._SB_PCI0SPI
    CC07: 31                                               // 1

        Device (FPNT)
        {

    CC08: 5B 82 49 3A 46 50 4E 54                          // [.I:FPNT

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    CC10: 14 46 08 5F 48 49 44 00                          // .F._HID.

                If (LEqual (SDS7, One))
                {

    CC18: A0 11 93 53 44 53 37 01                          // ...SDS7.

                    Return ("FPC1011")
                }


    CC20: A4 0D 46 50 43 31 30 31 31 00                    // ..FPC1011.

                If (LEqual (SDS7, 0x02))
                {

    CC2A: A0 12 93 53 44 53 37 0A 02                       // ...SDS7..

                    Return ("FPC1020")
                }


    CC33: A4 0D 46 50 43 31 30 32 30 00                    // ..FPC1020.

                If (LEqual (SDS7, 0x03))
                {

    CC3D: A0 13 93 53 44 53 37 0A 03                       // ...SDS7..

                    Return ("VFSI6101")
                }


    CC46: A4 0D 56 46 53 49 36 31 30 31 00                 // ..VFSI6101.

                If (LEqual (SDS7, 0x04))
                {

    CC51: A0 13 93 53 44 53 37 0A 04                       // ...SDS7..

                    Return ("VFSI7500")
                }


    CC5A: A4 0D 56 46 53 49 37 35 30 30 00                 // ..VFSI7500.

                If (LEqual (SDS7, 0x05))
                {

    CC65: A0 13 93 53 44 53 37 0A 05                       // ...SDS7..

                    Return ("EGIS0300")
                }


    CC6E: A4 0D 45 47 49 53 30 33 30 30 00                 // ..EGIS0300.

                If (LEqual (SDS7, 0x06))
                {

    CC79: A0 12 93 53 44 53 37 0A 06                       // ...SDS7..

                    Return ("FPC1021")
                }


    CC82: A4 0D 46 50 43 31 30 32 31 00                    // ..FPC1021.

                Return ("FPNT_DIS")
            }


    CC8C: A4 0D 46 50 4E 54 5F 44 49 53 00                 // ..FPNT_DIS.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                SHPO (GFPI, One)
                SHPO (GFPS, One)
            }


    CC97: 14 18 5F 49 4E 49 00 53 48 50 4F 47 46 50 49 01  // .._INI.SHPOGFPI.
    CCA7: 53 48 50 4F 47 46 50 53 01                       // SHPOGFPS.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    CCB0: 14 14 5F 53 54 41 00                             // .._STA.

                If (
    CCB7: A0 0B 92                                         // ...

LNotEqual (SDS7, Zero))
                {

    CCBA: 93 53 44 53 37 00                                // .SDS7.

                    Return (0x0F)
                }


    CCC0: A4 0A 0F                                         // ...

                Return (Zero)
            }


    CCC3: A4 00                                            // ..

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    CCC5: 14 4D 2E 5F 43 52 53 08                          // .M._CRS.


    CCCD: 08 5F 54 5F 30 00                                // ._T_0.

                Name (BBUF, 
    CCD3: 08 42 42 55 46                                   // .BBUF

ResourceTemplate ()
                {
                    SpiSerialBusV2 (0x0000, PolarityLow, FourWireMode, 0x08,
                        ControllerInitiated, 0x00989680, ClockPolarityLow,
                        ClockPhaseFirst, "\\_SB.PCI0.SPI1",
                        0x00, ResourceConsumer, _Y2A, Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0008
                        }
                })

    CCD8: 11 42 05 0A 4E 8E 21 00 01 00 02 02 00 00 01 09  // .B..N.!.........
    CCE8: 00 80 96 98 00 08 00 00 00 00 5C 5F 53 42 2E 50  // ..........\_SB.P
    CCF8: 43 49 30 2E 53 50 49 31 00 8C 25 00 01 01 01 00  // CI0.SPI1..%.....
    CD08: 02 00 00 00 00 00 00 17 00 00 19 00 28 00 00 00  // ............(...
    CD18: 08 00 5C 5F 53 42 2E 50 43 49 30 2E 47 50 49 30  // ..\_SB.PCI0.GPI0
    CD28: 00 79 00                                         // .y.

                Name (IBUF, 
    CD2B: 08 49 42 55 46                                   // .IBUF

ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y2B)
                    {
                        0x00000000,
                    }
                })

    CD30: 11 0E 0A 0B 89 06 00 15 01 00 00 00 00 79 00     // .............y.

                Name (GBUF, 
    CD3F: 08 47 42 55 46                                   // .GBUF

ResourceTemplate ()
                {
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, _Y2C,
                        )
                        {   // Pin list
                            0x0000
                        }
                })

    CD44: 11 2D 0A 2A 8C 25 00 01 00 01 00 12 00 00 00 00  // .-.*.%..........
    CD54: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
    CD64: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

                Name (UBUF, 
    CD72: 08 55 42 55 46                                   // .UBUF

ResourceTemplate ()
                {
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionInputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                })

    CD77: 11 2D 0A 2A 8C 25 00 01 01 01 00 01 00 00 00 00  // .-.*.%..........
    CD87: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
    CD97: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

                CreateDWordField (BBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2A._SPE, SPEX)  // _SPE: Speed

    CDA5: 8A 42 42 55 46 0A 0C 53 50 45 58                 // .BBUF..SPEX

                CreateByteField (BBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2A._PHA, PHAX)  // _PHA: Clock Phase

    CDB0: 8C 42 42 55 46 0A 11 50 48 41 58                 // .BBUF..PHAX

                CreateWordField (BBUF, 0x3B, SPIN)

    CDBB: 8B 42 42 55 46 0A 3B 53 50 49 4E                 // .BBUF.;SPIN

                CreateWordField (GBUF, 0x17, GPIN)

    CDC6: 8B 47 42 55 46 0A 17 47 50 49 4E                 // .GBUF..GPIN

                CreateDWordField (IBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2B._INT, IPIN)  // _INT: Interrupts

    CDD1: 8A 49 42 55 46 0A 05 49 50 49 4E                 // .IBUF..IPIN

                CreateBitField (IBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2B._LL, ILVL)  // _LL_: Low Level

    CDDC: 8D 49 42 55 46 0A 1A 49 4C 56 4C                 // .IBUF..ILVL

                CreateBitField (IBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2B._HE, ITRG)  // _HE_: High-Edge

    CDE7: 8D 49 42 55 46 0A 19 49 54 52 47                 // .IBUF..ITRG

                CreateField (GBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2C._POL, 0x02, GLVL)  // _POL: Polarity

    CDF2: 5B 13 47 42 55 46 0A 39 0A 02 47 4C 56 4C        // [.GBUF.9..GLVL

                CreateBitField (GBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2C._MOD, GTRG)  // _MOD: Mode

    CE00: 8D 47 42 55 46 0A 38 47 54 52 47                 // .GBUF.8GTRG

                CreateBitField (BBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2A._DPL, SCSP)  // _DPL: Device Selection Polarity

    CE0B: 8D 42 42 55 46 0A 39 53 43 53 50                 // .BBUF.9SCSP

                CreateWordField (UBUF, 0x17, UPIN)
                Store (GNUM (GFPS), SPIN) /* \_SB_.PCI0.SPI1.FPNT._CRS.SPIN */
                Store (GNUM (GFPI), GPIN) /* \_SB_.PCI0.SPI1.FPNT._CRS.GPIN */
                Store (INUM (GFPI), IPIN) /* \_SB_.PCI0.SPI1.FPNT._CRS.IPIN */
                Store (GNUM (GFPI), UPIN) /* \_SB_.PCI0.SPI1.FPNT._CRS.UPIN */

    CE16: 8B 55 42 55 46 0A 17 55 50 49 4E 70 47 4E 55 4D  // .UBUF..UPINpGNUM
    CE26: 47 46 50 53 53 50 49 4E 70 47 4E 55 4D 47 46 50  // GFPSSPINpGNUMGFP
    CE36: 49 47 50 49 4E 70 49 4E 55 4D 47 46 50 49 49 50  // IGPINpINUMGFPIIP
    CE46: 49 4E 70 47 4E 55 4D 47 46 50 49 55 50 49 4E     // INpGNUMGFPIUPIN

                If (LOr (LEqual (SDS7, 0x02), 
    CE55: A0 28 91 93 53 44 53 37 0A 02                    // .(..SDS7..

LEqual (SDS7, 0x06)))
                {
                    Store (Zero, ILVL) /* \_SB_.PCI0.SPI1.FPNT._CRS.ILVL */
                    Store (One, ITRG) /* \_SB_.PCI0.SPI1.FPNT._CRS.ITRG */
                    Store (Zero, GLVL) /* \_SB_.PCI0.SPI1.FPNT._CRS.GLVL */

    CE5F: 93 53 44 53 37 0A 06 70 00 49 4C 56 4C 70 01 49  // .SDS7..p.ILVLp.I
    CE6F: 54 52 47 70 00 47 4C 56 4C                       // TRGp.GLVL

                    Store (One, GTRG) /* \_SB_.PCI0.SPI1.FPNT._CRS.GTRG */
                }


    CE78: 70 01 47 54 52 47                                // p.GTRG

                If (LEqual (SDS7, 0x04))
                {
                    Store (Zero, ILVL) /* \_SB_.PCI0.SPI1.FPNT._CRS.ILVL */

    CE7E: A0 14 93 53 44 53 37 0A 04 70 00 49 4C 56 4C     // ...SDS7..p.ILVL

                    Store (One, ITRG) /* \_SB_.PCI0.SPI1.FPNT._CRS.ITRG */
                }


    CE8D: 70 01 49 54 52 47                                // p.ITRG

                Switch (SDS7)
                {

    CE93: A2 41 0B 01 70 53 44 53 37 5F 54 5F 30           // .A..pSDS7_T_0

                    Case (One)
                    {
                        Store (0x00989680, SPEX) /* \_SB_.PCI0.SPI1.FPNT._CRS.SPEX */

    CEA0: A0 17 93 5F 54 5F 30 01 70 0C 80 96 98 00 53 50  // ..._T_0.p.....SP
    CEB0: 45 58                                            // EX

                        Store (Zero, PHAX) /* \_SB_.PCI0.SPI1.FPNT._CRS.PHAX */
                    }

    CEB2: 70 00 50 48 41 58                                // p.PHAX

                    Case
    CEB8: A1 4B 08                                         // .K.

 (0x02)
                    {
                        Store (0x002DC6C0, SPEX) /* \_SB_.PCI0.SPI1.FPNT._CRS.SPEX */

    CEBB: A0 18 93 5F 54 5F 30 0A 02 70 0C C0 C6 2D 00 53  // ..._T_0..p...-.S
    CECB: 50 45 58                                         // PEX

                        Store (Zero, PHAX) /* \_SB_.PCI0.SPI1.FPNT._CRS.PHAX */
                    }

    CECE: 70 00 50 48 41 58                                // p.PHAX

                    Case
    CED4: A1 4F 06                                         // .O.

 (0x03)
                    {
                        Store (0x007A1200, SPEX) /* \_SB_.PCI0.SPI1.FPNT._CRS.SPEX */

    CED7: A0 18 93 5F 54 5F 30 0A 03 70 0C 00 12 7A 00 53  // ..._T_0..p...z.S
    CEE7: 50 45 58                                         // PEX

                        Store (One, PHAX) /* \_SB_.PCI0.SPI1.FPNT._CRS.PHAX */
                    }

    CEEA: 70 01 50 48 41 58                                // p.PHAX

                    Case
    CEF0: A1 43 05                                         // .C.

 (0x04)
                    {
                        Store (0x007A1200, SPEX) /* \_SB_.PCI0.SPI1.FPNT._CRS.SPEX */

    CEF3: A0 18 93 5F 54 5F 30 0A 04 70 0C 00 12 7A 00 53  // ..._T_0..p...z.S
    CF03: 50 45 58                                         // PEX

                        Store (Zero, PHAX) /* \_SB_.PCI0.SPI1.FPNT._CRS.PHAX */
                    }

    CF06: 70 00 50 48 41 58                                // p.PHAX

                    Case
    CF0C: A1 37                                            // .7

 (0x05)
                    {
                        Store (0x00F42400, SPEX) /* \_SB_.PCI0.SPI1.FPNT._CRS.SPEX */

    CF0E: A0 18 93 5F 54 5F 30 0A 05 70 0C 00 24 F4 00 53  // ..._T_0..p..$..S
    CF1E: 50 45 58                                         // PEX

                        Store (Zero, PHAX) /* \_SB_.PCI0.SPI1.FPNT._CRS.PHAX */
                    }

    CF21: 70 00 50 48 41 58                                // p.PHAX

                    Case
    CF27: A1 1C                                            // ..

 (0x06)
                    {
                        Store (0x002DC6C0, SPEX) /* \_SB_.PCI0.SPI1.FPNT._CRS.SPEX */

    CF29: A0 18 93 5F 54 5F 30 0A 06 70 0C C0 C6 2D 00 53  // ..._T_0..p...-.S
    CF39: 50 45 58                                         // PEX

                        Store (Zero, PHAX) /* \_SB_.PCI0.SPI1.FPNT._CRS.PHAX */
                    }

    CF3C: 70 00 50 48 41 58                                // p.PHAX

                    Default
                    {
                    }


    CF42: A1 01                                            // ..

                }


    CF44: A5                                               // .

                If (LEqual (SDS7, One))
                {

    CF45: A0 0C 93 53 44 53 37 01                          // ...SDS7.

                    Return (BBUF) /* \_SB_.PCI0.SPI1.FPNT._CRS.BBUF */
                }


    CF4D: A4 42 42 55 46                                   // .BBUF

                If (LAnd (LEqual (SDS7, 0x04), 
    CF52: A0 20 90 93 53 44 53 37 0A 04                    // . ..SDS7..

LEqual (SDM7, Zero)))
                {

    CF5C: 93 53 44 4D 37 00                                // .SDM7.

                    Return (
    CF62: A4                                               // .

ConcatenateResTemplate (BBUF, ConcatenateResTemplate (UBUF, GBUF)))
                }


    CF63: 84 42 42 55 46 84 55 42 55 46 47 42 55 46 00 00  // .BBUF.UBUFGBUF..

                If (LAnd (LEqual (SDS7, 0x04), 
    CF73: A0 21 90 93 53 44 53 37 0A 04                    // .!..SDS7..


    CF7D: 92                                               // .

LNotEqual (SDM7, Zero)))
                {

    CF7E: 93 53 44 4D 37 00                                // .SDM7.

                    Return (
    CF84: A4                                               // .

ConcatenateResTemplate (BBUF, ConcatenateResTemplate (UBUF, IBUF)))
                }


    CF85: 84 42 42 55 46 84 55 42 55 46 49 42 55 46 00 00  // .BBUF.UBUFIBUF..

                If (LEqual (SDM7, Zero))
                {

    CF95: A0 12 93 53 44 4D 37 00                          // ...SDM7.

                    Return (
    CF9D: A4                                               // .

ConcatenateResTemplate (BBUF, GBUF))
                }


    CF9E: 84 42 42 55 46 47 42 55 46 00                    // .BBUFGBUF.

                Return (
    CFA8: A4                                               // .

ConcatenateResTemplate (BBUF, IBUF))
            }
        }
    }


    CFA9: 84 42 42 55 46 49 42 55 46 00                    // .BBUFIBUF.

    Scope (_SB.PCI0.UA00)
    {

    CFB3: 10 4B 26 2F 03 5F 53 42 5F 50 43 49 30 55 41 30  // .K&/._SB_PCI0UA0
    CFC3: 30                                               // 0

        Device (BTH0)
        {

    CFC4: 5B 82 49 25 42 54 48 30                          // [.I%BTH0

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    CFCC: 14 35 5F 48 49 44 00                             // .5_HID.

                If (LEqual (SDS8, One))
                {

    CFD3: A0 11 93 53 44 53 38 01                          // ...SDS8.

                    Return ("INT33E1")
                }


    CFDB: A4 0D 49 4E 54 33 33 45 31 00                    // ..INT33E1.

                If (LEqual (SDS8, 0x02))
                {

    CFE5: A0 12 93 53 44 53 38 0A 02                       // ...SDS8..

                    Return ("BCM2E40")
                }


    CFEE: A4 0D 42 43 4D 32 45 34 30 00                    // ..BCM2E40.

                Return ("INT33E1")
            }


    CFF8: A4 0D 49 4E 54 33 33 45 31 00                    // ..INT33E1.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                SHPO (GBTI, One)
                SHPO (GBTW, One)
                SHPO (GBTK, One)
            }


    D002: 14 21 5F 49 4E 49 00 53 48 50 4F 47 42 54 49 01  // .!_INI.SHPOGBTI.
    D012: 53 48 50 4F 47 42 54 57 01 53 48 50 4F 47 42 54  // SHPOGBTW.SHPOGBT
    D022: 4B 01                                            // K.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    D024: 14 4E 1D 5F 43 52 53 00                          // .N._CRS.

                Name (SBFG, 
    D02C: 08 53 42 46 47                                   // .SBFG

ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0020, 0x0020, "\\_SB.PCI0.UA00",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    GpioInt (Edge, ActiveLow, Exclusive, PullDefault, 0x0000,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                })

    D031: 11 43 0A 0A 9F 8E 22 00 01 00 03 02 35 00 01 0A  // .C....".....5...
    D041: 00 00 C2 01 00 20 00 20 00 00 C0 5C 5F 53 42 2E  // ..... . ...\_SB.
    D051: 50 43 49 30 2E 55 41 30 30 00 8C 25 00 01 01 01  // PCI0.UA00..%....
    D061: 00 02 00 00 00 00 00 00 17 00 00 19 00 28 00 00  // .............(..
    D071: 00 00 00 5C 5F 53 42 2E 50 43 49 30 2E 47 50 49  // ...\_SB.PCI0.GPI
    D081: 30 00 8C 25 00 01 01 01 00 02 00 00 00 00 00 00  // 0..%............
    D091: 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53 42 2E  // .....(.....\_SB.
    D0A1: 50 43 49 30 2E 47 50 49 30 00 8C 25 00 01 00 01  // PCI0.GPI0..%....
    D0B1: 00 03 00 00 00 00 00 00 17 00 00 19 00 28 00 00  // .............(..
    D0C1: 00 00 00 5C 5F 53 42 2E 50 43 49 30 2E 47 50 49  // ...\_SB.PCI0.GPI
    D0D1: 30 00 79 00                                      // 0.y.

                CreateWordField (SBFG, 0x8C, INT3)

    D0D5: 8B 53 42 46 47 0A 8C 49 4E 54 33                 // .SBFG..INT3

                CreateWordField (SBFG, 0x3C, WAK3)

    D0E0: 8B 53 42 46 47 0A 3C 57 41 4B 33                 // .SBFG.<WAK3

                CreateWordField (SBFG, 0x64, KIL3)
                Store (GNUM (GBTI), INT3) /* \_SB_.PCI0.UA00.BTH0._CRS.INT3 */
                Store (GNUM (GBTW), WAK3) /* \_SB_.PCI0.UA00.BTH0._CRS.WAK3 */
                Store (GNUM (GBTK), KIL3) /* \_SB_.PCI0.UA00.BTH0._CRS.KIL3 */

    D0EB: 8B 53 42 46 47 0A 64 4B 49 4C 33 70 47 4E 55 4D  // .SBFG.dKIL3pGNUM
    D0FB: 47 42 54 49 49 4E 54 33 70 47 4E 55 4D 47 42 54  // GBTIINT3pGNUMGBT
    D10B: 57 57 41 4B 33 70 47 4E 55 4D 47 42 54 4B 4B 49  // WWAK3pGNUMGBTKKI
    D11B: 4C 33                                            // L3

                Name (SBFI, 
    D11D: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0020, 0x0020, "\\_SB.PCI0.UA00",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    Interrupt (ResourceConsumer, Edge, ActiveLow, Exclusive, ,, _Y2D)
                    {
                        0x00000000,
                    }
                })

    D122: 11 44 08 0A 80 8E 22 00 01 00 03 02 35 00 01 0A  // .D....".....5...
    D132: 00 00 C2 01 00 20 00 20 00 00 C0 5C 5F 53 42 2E  // ..... . ...\_SB.
    D142: 50 43 49 30 2E 55 41 30 30 00 8C 25 00 01 01 01  // PCI0.UA00..%....
    D152: 00 02 00 00 00 00 00 00 17 00 00 19 00 28 00 00  // .............(..
    D162: 00 00 00 5C 5F 53 42 2E 50 43 49 30 2E 47 50 49  // ...\_SB.PCI0.GPI
    D172: 30 00 8C 25 00 01 01 01 00 02 00 00 00 00 00 00  // 0..%............
    D182: 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53 42 2E  // .....(.....\_SB.
    D192: 50 43 49 30 2E 47 50 49 30 00 89 06 00 07 01 00  // PCI0.GPI0.......
    D1A2: 00 00 00 79 00                                   // ...y.

                CreateDWordField (SBFI, \_SB.PCI0.UA00.BTH0._CRS._Y2D._INT, INT4)  // _INT: Interrupts

    D1A7: 8A 53 42 46 49 0A 7A 49 4E 54 34                 // .SBFI.zINT4

                CreateWordField (SBFI, 0x3C, WAK4)

    D1B2: 8B 53 42 46 49 0A 3C 57 41 4B 34                 // .SBFI.<WAK4

                CreateWordField (SBFI, 0x64, KIL4)
                Store (INUM (GBTI), INT4) /* \_SB_.PCI0.UA00.BTH0._CRS.INT4 */
                Store (GNUM (GBTW), WAK4) /* \_SB_.PCI0.UA00.BTH0._CRS.WAK4 */
                Store (GNUM (GBTK), KIL4) /* \_SB_.PCI0.UA00.BTH0._CRS.KIL4 */

    D1BD: 8B 53 42 46 49 0A 64 4B 49 4C 34 70 49 4E 55 4D  // .SBFI.dKIL4pINUM
    D1CD: 47 42 54 49 49 4E 54 34 70 47 4E 55 4D 47 42 54  // GBTIINT4pGNUMGBT
    D1DD: 57 57 41 4B 34 70 47 4E 55 4D 47 42 54 4B 4B 49  // WWAK4pGNUMGBTKKI
    D1ED: 4C 34                                            // L4

                If (LEqual (SDM8, Zero))
                {

    D1EF: A0 0C 93 53 44 4D 38 00                          // ...SDM8.

                    Return (SBFG) /* \_SB_.PCI0.UA00.BTH0._CRS.SBFG */
                }

    D1F7: A4 53 42 46 47                                   // .SBFG

                Else
                {

    D1FC: A1 06                                            // ..

                    Return (SBFI) /* \_SB_.PCI0.UA00.BTH0._CRS.SBFI */
                }
            }


    D1FE: A4 53 42 46 49                                   // .SBFI

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    D203: 14 14 5F 53 54 41 00                             // .._STA.

                If (
    D20A: A0 0B 92                                         // ...

LNotEqual (SDS8, Zero))
                {

    D20D: 93 53 44 53 38 00                                // .SDS8.

                    Return (0x0F)
                }


    D213: A4 0A 0F                                         // ...

                Return (Zero)
            }


    D216: A4 00                                            // ..

            Name (_S0W, 0x02)  // _S0W: S0 Device Wake State
        }
    }


    D218: 08 5F 53 30 57 0A 02                             // ._S0W..

    Scope (_SB.PCI0)
    {

    D21F: 10 42 0D 2E 5F 53 42 5F 50 43 49 30              // .B.._SB_PCI0

        Device (GNSS)
        {

    D22B: 5B 82 45 0C 47 4E 53 53                          // [.E.GNSS

            Name (_HID, "INT33A2")  // _HID: Hardware ID

    D233: 08 5F 48 49 44 0D 49 4E 54 33 33 41 32 00        // ._HID.INT33A2.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    D241: 14 4C 09 5F 43 52 53 00                          // .L._CRS.

                Name (BUF1, 
    D249: 08 42 55 46 31                                   // .BUF1

ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0040, 0x0040, "\\_SB.PCI0.UA01",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })

    D24E: 11 2A 0A 27 8E 22 00 01 00 03 02 35 00 01 0A 00  // .*.'.".....5....
    D25E: 00 C2 01 00 40 00 40 00 00 C0 5C 5F 53 42 2E 50  // ....@.@...\_SB.P
    D26E: 43 49 30 2E 55 41 30 31 00 79 00                 // CI0.UA01.y.

                Name (BUF2, 
    D279: 08 42 55 46 32                                   // .BUF2

ResourceTemplate ()
                {
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                })

    D27E: 11 2D 0A 2A 8C 25 00 01 01 01 00 02 00 00 00 00  // .-.*.%..........
    D28E: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
    D29E: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

                CreateWordField (BUF2, 0x17, RPIN)
                Store (GNUM (GGNR), RPIN) /* \_SB_.PCI0.GNSS._CRS.RPIN */

    D2AC: 8B 42 55 46 32 0A 17 52 50 49 4E 70 47 4E 55 4D  // .BUF2..RPINpGNUM
    D2BC: 47 47 4E 52 52 50 49 4E                          // GGNRRPIN

                If (LEqual (GNSC, One))
                {

    D2C4: A0 12 93 47 4E 53 43 01                          // ...GNSC.

                    Return (
    D2CC: A4                                               // .

ConcatenateResTemplate (BUF1, BUF2))
                }

    D2CD: 84 42 55 46 31 42 55 46 32 00                    // .BUF1BUF2.

                Else
                {

    D2D7: A1 06                                            // ..

                    Return (BUF2) /* \_SB_.PCI0.GNSS._CRS.BUF2 */
                }
            }


    D2D9: A4 42 55 46 32                                   // .BUF2

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    D2DE: 14 13 5F 53 54 41 00                             // .._STA.

                If (LEqual (GNSC, Zero))
                {

    D2E5: A0 09 93 47 4E 53 43 00                          // ...GNSC.

                    Return (Zero)
                }


    D2ED: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    D2EF: A4 0A 0F                                         // ...

    Scope (_SB.PCI0)
    {

    D2F2: 10 4E 6D 2E 5F 53 42 5F 50 43 49 30              // .Nm._SB_PCI0

        Device (GEXP)
        {

    D2FE: 5B 82 41 6D 47 45 58 50                          // [.AmGEXP

            Name (_ADR, One)  // _ADR: Address

    D306: 08 5F 41 44 52 01                                // ._ADR.

            Name (_STA, 0x0B)  // _STA: Status

    D30C: 08 5F 53 54 41 0A 0B                             // ._STA..

            Method (SGEP, 3, Serialized)
            {
                CSER (GEXN, Arg0, Arg1, Arg2, Zero)
            }


    D313: 14 12 53 47 45 50 0B 43 53 45 52 47 45 58 4E 68  // ..SGEP.CSERGEXNh
    D323: 69 6A 00                                         // ij.

            Method (SGED, 3, Serialized)
            {
                CSER (GEXN, Arg0, Arg1, Arg2, One)
            }


    D326: 14 12 53 47 45 44 0B 43 53 45 52 47 45 58 4E 68  // ..SGED.CSERGEXNh
    D336: 69 6A 01                                         // ij.

            Method (GEPS, 2, Serialized)
            {

    D339: 14 14 47 45 50 53 0A                             // ..GEPS.

                Return (CSER (GEXN, Arg0, Arg1, Zero, 0x02))
            }


    D340: A4 43 53 45 52 47 45 58 4E 68 69 00 0A 02        // .CSERGEXNhi...

            Method (SGEI, 3, Serialized)
            {
                CSER (GEXN, Arg0, Arg1, Arg2, 0x03)
            }


    D34E: 14 13 53 47 45 49 0B 43 53 45 52 47 45 58 4E 68  // ..SGEI.CSERGEXNh
    D35E: 69 6A 0A 03                                      // ij..

            Method (INVC, 0, NotSerialized)
            {
                Store (Zero, Local0)

    D362: 14 3B 49 4E 56 43 00 70 00 60                    // .;INVC.p.`

                While (LLess (Local0, 0x10))
                {

    D36C: A2 31 95 60 0A 10                                // .1.`..

                    If (LEqual (R3DC (Zero, Local0, Zero), 0x02))
                    {
                        W3DC (Zero, Local0, Zero, One)
                    }


    D372: A0 13 93 52 33 44 43 00 60 00 0A 02 57 33 44 43  // ...R3DC.`...W3DC
    D382: 00 60 00 01                                      // .`..

                    If (LEqual (R3DC (One, Local0, Zero), 0x02))
                    {
                        W3DC (One, Local0, Zero, One)
                    }


    D386: A0 13 93 52 33 44 43 01 60 00 0A 02 57 33 44 43  // ...R3DC.`...W3DC
    D396: 01 60 00 01                                      // .`..

                    Add (Local0, One, Local0)
                }
            }


    D39A: 72 60 01 60                                      // r`.`

            Name (PPR, 0x08)

    D39E: 08 50 50 52 5F 0A 08                             // .PPR_..

            Name (INR, 
    D3A5: 08 49 4E 52 5F                                   // .INR_

Package (0x03)
            {
                Zero, 
                One, 
                0x02
            })

    D3AA: 12 06 03 00 01 0A 02                             // .......

            Name (OUTR, 
    D3B1: 08 4F 55 54 52                                   // .OUTR

Package (0x03)
            {
                0x04, 
                0x05, 
                0x06
            })

    D3B6: 12 08 03 0A 04 0A 05 0A 06                       // .........

            Name (CFGR, 
    D3BF: 08 43 46 47 52                                   // .CFGR

Package (0x03)
            {
                0x0C, 
                0x0D, 
                0x0E
            })

    D3C4: 12 08 03 0A 0C 0A 0D 0A 0E                       // .........

            Name (POLR, 
    D3CD: 08 50 4F 4C 52                                   // .POLR

Package (0x03)
            {
                0x08, 
                0x09, 
                0x0A
            })

    D3D2: 12 08 03 0A 08 0A 09 0A 0A                       // .........

            Name (EXPA, 0x22)

    D3DB: 08 45 58 50 41 0A 22                             // .EXPA."

            Name (UCCH, One)

    D3E2: 08 55 43 43 48 01                                // .UCCH.

            Name (END, 0x0200)

    D3E8: 08 45 4E 44 5F 0B 00 02                          // .END_...

            Name (READ, 0x0100)

    D3F0: 08 52 45 41 44 0B 00 01                          // .READ...

            Name (CACH, 
    D3F8: 08 43 41 43 48                                   // .CACH

Package (0x02)
            {

    D3FD: 12 43 0B 02                                      // .C..

                Package (0x10)
                {

    D401: 12 47 05 10                                      // .G..

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


    D405: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


    D40A: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


    D40F: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


    D414: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D41A: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D41F: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D424: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


    D429: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D42F: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D434: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D439: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


    D43E: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D444: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D449: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D44E: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }
                }, 


    D453: 12 05 02 0A 03 00                                // ......

                Package (0x10)
                {

    D459: 12 47 05 10                                      // .G..

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


    D45D: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


    D462: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


    D467: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


    D46C: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D472: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D477: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D47C: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


    D481: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D487: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D48C: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D491: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


    D496: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D49C: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D4A1: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


    D4A6: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }
                }
            })

    D4AB: 12 05 02 0A 03 00                                // ......

            Method (W3DC, 4, NotSerialized)
            {

    D4B1: 14 17 57 33 44 43 04                             // ..W3DC.

                Store (Arg3, 
    D4B8: 70 6B                                            // pk

Index (DerefOf (
    D4BA: 88 83                                            // ..

Index (DerefOf (
    D4BC: 88 83                                            // ..

Index (CACH, Arg0)), Arg1)), 
                    Arg2))
            }


    D4BE: 88 43 41 43 48 68 00 69 00 6A 00                 // .CACHh.i.j.

            Method (R3DC, 3, NotSerialized)
            {

    D4C9: 14 17 52 33 44 43 03                             // ..R3DC.

                Return (
    D4D0: A4                                               // .

DerefOf (
    D4D1: 83                                               // .

Index (DerefOf (
    D4D2: 88 83                                            // ..

Index (DerefOf (
    D4D4: 88 83                                            // ..

Index (CACH, Arg0)), Arg1)), 
                    Arg2)))
            }


    D4D6: 88 43 41 43 48 68 00 69 00 6A 00                 // .CACHh.i.j.

            Method (WREG, 4, Serialized)
            {

    D4E1: 14 42 14 57 52 45 47 0C                          // .B.WREG.

                OperationRegion (BAR0, SystemMemory, Arg0, 0x0208)

    D4E9: 5B 80 42 41 52 30 00 68 0B 08 02                 // [.BAR0.h...

                Field (BAR0, DWordAcc, NoLock, Preserve)
                {
                    ICON,   32, 
                    TAR,    32, 
                    Offset (0x10), 
                    DATA,   32, 
                    HCNT,   32, 
                    LCNT,   32, 
                    Offset (0x2C), 
                        ,   5, 
                    ABRT,   1, 
                    Offset (0x40), 
                    RBCK,   32, 
                    Offset (0x54), 
                    CLR,    32, 
                    Offset (0x6C), 
                    ENB,    1, 
                    Offset (0x70), 
                    ACTV,   1, 
                    TFNF,   1, 
                        ,   1, 
                    RFNE,   1, 
                    Offset (0x7C), 
                    HOLD,   32, 
                    Offset (0x9C), 
                    ENSB,   1, 
                    Offset (0x204), 
                    RST,    32
                }

                Store (Add (Timer, 0xC350), Local1)
                Store (0x07, RST) /* \_SB_.PCI0.GEXP.WREG.RST_ */
                Store (Zero, ENB) /* \_SB_.PCI0.GEXP.WREG.ENB_ */
                Store (RBCK, Local0)
                Store (CLR, Local0)
                Store (0x001C001C, HOLD) /* \_SB_.PCI0.GEXP.WREG.HOLD */
                Store (0x0210, HCNT) /* \_SB_.PCI0.GEXP.WREG.HCNT */
                Store (0x0280, LCNT) /* \_SB_.PCI0.GEXP.WREG.LCNT */
                Store (Add (EXPA, Arg1), TAR) /* \_SB_.PCI0.GEXP.WREG.TAR_ */
                Store (0x65, ICON) /* \_SB_.PCI0.GEXP.WREG.ICON */
                Store (One, ENB) /* \_SB_.PCI0.GEXP.WREG.ENB_ */

    D4F4: 5B 81 40 07 42 41 52 30 03 49 43 4F 4E 20 54 41  // [.@.BAR0.ICON TA
    D504: 52 5F 20 00 40 04 44 41 54 41 20 48 43 4E 54 20  // R_ .@.DATA HCNT 
    D514: 4C 43 4E 54 20 00 40 08 00 05 41 42 52 54 01 00  // LCNT .@...ABRT..
    D524: 4A 09 52 42 43 4B 20 00 40 08 43 4C 52 5F 20 00  // J.RBCK .@.CLR_ .
    D534: 40 0A 45 4E 42 5F 01 00 1F 41 43 54 56 01 54 46  // @.ENB_...ACTV.TF
    D544: 4E 46 01 00 01 52 46 4E 45 01 00 4C 05 48 4F 4C  // NF...RFNE..L.HOL
    D554: 44 20 00 40 0E 45 4E 53 42 01 00 4F B3 52 53 54  // D .@.ENSB..O.RST
    D564: 5F 20 70 72 5B 33 0B 50 C3 00 61 70 0A 07 52 53  // _ pr[3.P..ap..RS
    D574: 54 5F 70 00 45 4E 42 5F 70 52 42 43 4B 60 70 43  // T_p.ENB_pRBCK`pC
    D584: 4C 52 5F 60 70 0C 1C 00 1C 00 48 4F 4C 44 70 0B  // LR_`p.....HOLDp.
    D594: 10 02 48 43 4E 54 70 0B 80 02 4C 43 4E 54 70 72  // ..HCNTp...LCNTpr
    D5A4: 45 58 50 41 69 00 54 41 52 5F 70 0A 65 49 43 4F  // EXPAi.TAR_p.eICO
    D5B4: 4E 70 01 45 4E 42 5F                             // Np.ENB_

                While (
    D5BB: A2 10 92                                         // ...

LNotEqual (ENSB, One))
                {

    D5BE: 93 45 4E 53 42 01                                // .ENSB.

                    If (LGreater (Timer, Local1))
                    {

    D5C4: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                Store (Arg2, DATA) /* \_SB_.PCI0.GEXP.WREG.DATA */
                Store (Add (END, Arg3), DATA) /* \_SB_.PCI0.GEXP.WREG.DATA */

    D5CA: A4 00 70 6A 44 41 54 41 70 72 45 4E 44 5F 6B 00  // ..pjDATAprEND_k.
    D5DA: 44 41 54 41                                      // DATA

                While (
    D5DE: A2 10 92                                         // ...

LNotEqual (ACTV, Zero))
                {

    D5E1: 93 41 43 54 56 00                                // .ACTV.

                    If (LGreater (Timer, Local1))
                    {

    D5E7: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                Store (Zero, ENB) /* \_SB_.PCI0.GEXP.WREG.ENB_ */

    D5ED: A4 00 70 00 45 4E 42 5F                          // ..p.ENB_

                While (
    D5F5: A2 10 92                                         // ...

LNotEqual (ENSB, Zero))
                {

    D5F8: 93 45 4E 53 42 00                                // .ENSB.

                    If (LGreater (Timer, Local1))
                    {

    D5FE: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                W3DC (Arg1, Arg2, One, Arg3)

    D604: A4 00 57 33 44 43 69 6A 01 6B                    // ..W3DCij.k

                If (LEqual (R3DC (Arg1, Arg2, Zero), One))
                {
                    W3DC (Arg1, Arg2, Zero, 0x02)
                }


    D60E: A0 13 93 52 33 44 43 69 6A 00 01 57 33 44 43 69  // ...R3DCij..W3DCi
    D61E: 6A 00 0A 02                                      // j...

                Return (Zero)
            }


    D622: A4 00                                            // ..

            Method (RREG, 3, Serialized)
            {

    D624: 14 4B 14 52 52 45 47 0B                          // .K.RREG.

                If (LEqual (UCCH, One))
                {

    D62C: A0 1B 93 55 43 43 48 01                          // ...UCCH.

                    If (LEqual (R3DC (Arg1, Arg2, Zero), 0x02))
                    {

    D634: A0 13 93 52 33 44 43 69 6A 00 0A 02              // ...R3DCij...

                        Return (R3DC (Arg1, Arg2, One))
                    }
                }


    D640: A4 52 33 44 43 69 6A 01                          // .R3DCij.

                OperationRegion (BAR0, SystemMemory, Arg0, 0x0208)

    D648: 5B 80 42 41 52 30 00 68 0B 08 02                 // [.BAR0.h...

                Field (BAR0, DWordAcc, NoLock, Preserve)
                {
                    ICON,   32, 
                    TAR,    32, 
                    Offset (0x10), 
                    DATA,   32, 
                    HCNT,   32, 
                    LCNT,   32, 
                    Offset (0x2C), 
                        ,   5, 
                    ABRT,   1, 
                    Offset (0x40), 
                    RBCK,   32, 
                    Offset (0x54), 
                    CLR,    32, 
                    Offset (0x6C), 
                    ENB,    1, 
                    Offset (0x70), 
                    ACTV,   1, 
                    TFNF,   1, 
                        ,   1, 
                    RFNE,   1, 
                    Offset (0x7C), 
                    HOLD,   32, 
                    Offset (0x9C), 
                    ENSB,   1, 
                    Offset (0x204), 
                    RST,    32
                }

                Store (Add (Timer, 0xC350), Local1)
                Store (0x07, RST) /* \_SB_.PCI0.GEXP.RREG.RST_ */
                Store (Zero, ENB) /* \_SB_.PCI0.GEXP.RREG.ENB_ */
                Store (RBCK, Local0)
                Store (CLR, Local0)
                Store (0x001C001C, HOLD) /* \_SB_.PCI0.GEXP.RREG.HOLD */
                Store (0x0210, HCNT) /* \_SB_.PCI0.GEXP.RREG.HCNT */
                Store (0x0280, LCNT) /* \_SB_.PCI0.GEXP.RREG.LCNT */
                Store (Add (EXPA, Arg1), TAR) /* \_SB_.PCI0.GEXP.RREG.TAR_ */
                Store (0x65, ICON) /* \_SB_.PCI0.GEXP.RREG.ICON */
                Store (One, ENB) /* \_SB_.PCI0.GEXP.RREG.ENB_ */

    D653: 5B 81 40 07 42 41 52 30 03 49 43 4F 4E 20 54 41  // [.@.BAR0.ICON TA
    D663: 52 5F 20 00 40 04 44 41 54 41 20 48 43 4E 54 20  // R_ .@.DATA HCNT 
    D673: 4C 43 4E 54 20 00 40 08 00 05 41 42 52 54 01 00  // LCNT .@...ABRT..
    D683: 4A 09 52 42 43 4B 20 00 40 08 43 4C 52 5F 20 00  // J.RBCK .@.CLR_ .
    D693: 40 0A 45 4E 42 5F 01 00 1F 41 43 54 56 01 54 46  // @.ENB_...ACTV.TF
    D6A3: 4E 46 01 00 01 52 46 4E 45 01 00 4C 05 48 4F 4C  // NF...RFNE..L.HOL
    D6B3: 44 20 00 40 0E 45 4E 53 42 01 00 4F B3 52 53 54  // D .@.ENSB..O.RST
    D6C3: 5F 20 70 72 5B 33 0B 50 C3 00 61 70 0A 07 52 53  // _ pr[3.P..ap..RS
    D6D3: 54 5F 70 00 45 4E 42 5F 70 52 42 43 4B 60 70 43  // T_p.ENB_pRBCK`pC
    D6E3: 4C 52 5F 60 70 0C 1C 00 1C 00 48 4F 4C 44 70 0B  // LR_`p.....HOLDp.
    D6F3: 10 02 48 43 4E 54 70 0B 80 02 4C 43 4E 54 70 72  // ..HCNTp...LCNTpr
    D703: 45 58 50 41 69 00 54 41 52 5F 70 0A 65 49 43 4F  // EXPAi.TAR_p.eICO
    D713: 4E 70 01 45 4E 42 5F                             // Np.ENB_

                While (
    D71A: A2 10 92                                         // ...

LNotEqual (ENSB, One))
                {

    D71D: 93 45 4E 53 42 01                                // .ENSB.

                    If (LGreater (Timer, Local1))
                    {

    D723: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                Store (Arg2, DATA) /* \_SB_.PCI0.GEXP.RREG.DATA */
                Store (Add (END, READ), DATA) /* \_SB_.PCI0.GEXP.RREG.DATA */

    D729: A4 00 70 6A 44 41 54 41 70 72 45 4E 44 5F 52 45  // ..pjDATAprEND_RE
    D739: 41 44 00 44 41 54 41                             // AD.DATA

                While (
    D740: A2 10 92                                         // ...

LNotEqual (ACTV, Zero))
                {

    D743: 93 41 43 54 56 00                                // .ACTV.

                    If (LGreater (Timer, Local1))
                    {

    D749: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                Store (DATA, Local0)
                Store (Zero, ENB) /* \_SB_.PCI0.GEXP.RREG.ENB_ */

    D74F: A4 00 70 44 41 54 41 60 70 00 45 4E 42 5F        // ..pDATA`p.ENB_

                While (
    D75D: A2 10 92                                         // ...

LNotEqual (ENSB, Zero))
                {

    D760: 93 45 4E 53 42 00                                // .ENSB.

                    If (LGreater (Timer, Local1))
                    {

    D766: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }


    D76C: A4 00                                            // ..

                Return (Local0)
            }


    D76E: A4 60                                            // .`

            Method (PS0, 1, Serialized)
            {

    D770: 14 2C 50 53 30 5F 09                             // .,PS0_.

                OperationRegion (BAR1, SystemMemory, Arg0, 0x88)

    D777: 5B 80 42 41 52 31 00 68 0A 88                    // [.BAR1.h..

                Field (BAR1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    D0D3,   2
                }

                Store (Zero, D0D3) /* \_SB_.PCI0.GEXP.PS0_.D0D3 */

    D781: 5B 81 0E 42 41 52 31 03 00 40 42 44 30 44 33 02  // [..BAR1..@BD0D3.
    D791: 70 00 44 30 44 33                                // p.D0D3

                Store (D0D3, Local0)
            }


    D797: 70 44 30 44 33 60                                // pD0D3`

            Method (PS3, 1, Serialized)
            {

    D79D: 14 2D 50 53 33 5F 09                             // .-PS3_.

                OperationRegion (BAR1, SystemMemory, Arg0, 0x88)

    D7A4: 5B 80 42 41 52 31 00 68 0A 88                    // [.BAR1.h..

                Field (BAR1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    D0D3,   2
                }

                Store (0x03, D0D3) /* \_SB_.PCI0.GEXP.PS3_.D0D3 */

    D7AE: 5B 81 0E 42 41 52 31 03 00 40 42 44 30 44 33 02  // [..BAR1..@BD0D3.
    D7BE: 70 0A 03 44 30 44 33                             // p..D0D3

                Store (D0D3, Local0)
            }


    D7C5: 70 44 30 44 33 60                                // pD0D3`

            Method (CSER, 5, Serialized)
            {

    D7CB: 14 45 20 43 53 45 52 0D                          // .E CSER.

                Name (SB1X, Zero)

    D7D3: 08 53 42 31 58 00                                // .SB1X.

                Name (SB0X, Zero)

    D7D9: 08 53 42 30 58 00                                // .SB0X.

                Name (SMDX, Zero)

    D7DF: 08 53 4D 44 58 00                                // .SMDX.

                Name (PINN, Zero)

    D7E5: 08 50 49 4E 4E 00                                // .PINN.

                Name (REGN, Zero)

    D7EB: 08 52 45 47 4E 00                                // .REGN.

                Name (REGA, Zero)

    D7F1: 08 52 45 47 41 00                                // .REGA.

                Name (OLDV, Zero)

    D7F7: 08 4F 4C 44 56 00                                // .OLDV.

                Name (NEWV, Zero)

    D7FD: 08 4E 45 57 56 00                                // .NEWV.

                Name (RETV, Zero)

    D803: 08 52 45 54 56 00                                // .RETV.

                If (LGreater (Arg0, 0x05))
                {

    D809: A0 07 94 68 0A 05                                // ...h..

                    Return (Zero)
                }


    D80F: A4 00                                            // ..

                If (LEqual (Arg0, Zero))
                {
                    Store (SB10, SB1X) /* \_SB_.PCI0.GEXP.CSER.SB1X */
                    Store (SB00, SB0X) /* \_SB_.PCI0.GEXP.CSER.SB0X */

    D811: A0 1F 93 68 00 70 53 42 31 30 53 42 31 58 70 53  // ...h.pSB10SB1XpS
    D821: 42 30 30 53 42 30 58                             // B00SB0X

                    Store (SMD0, SMDX) /* \_SB_.PCI0.GEXP.CSER.SMDX */
                }


    D828: 70 53 4D 44 30 53 4D 44 58                       // pSMD0SMDX

                If (LEqual (Arg0, One))
                {
                    Store (SB11, SB1X) /* \_SB_.PCI0.GEXP.CSER.SB1X */
                    Store (SB01, SB0X) /* \_SB_.PCI0.GEXP.CSER.SB0X */

    D831: A0 1F 93 68 01 70 53 42 31 31 53 42 31 58 70 53  // ...h.pSB11SB1XpS
    D841: 42 30 31 53 42 30 58                             // B01SB0X

                    Store (SMD1, SMDX) /* \_SB_.PCI0.GEXP.CSER.SMDX */
                }


    D848: 70 53 4D 44 31 53 4D 44 58                       // pSMD1SMDX

                If (LEqual (Arg0, 0x02))
                {
                    Store (SB12, SB1X) /* \_SB_.PCI0.GEXP.CSER.SB1X */
                    Store (SB02, SB0X) /* \_SB_.PCI0.GEXP.CSER.SB0X */

    D851: A0 20 93 68 0A 02 70 53 42 31 32 53 42 31 58 70  // . .h..pSB12SB1Xp
    D861: 53 42 30 32 53 42 30 58                          // SB02SB0X

                    Store (SMD2, SMDX) /* \_SB_.PCI0.GEXP.CSER.SMDX */
                }


    D869: 70 53 4D 44 32 53 4D 44 58                       // pSMD2SMDX

                If (LEqual (Arg0, 0x03))
                {
                    Store (SB13, SB1X) /* \_SB_.PCI0.GEXP.CSER.SB1X */
                    Store (SB03, SB0X) /* \_SB_.PCI0.GEXP.CSER.SB0X */

    D872: A0 20 93 68 0A 03 70 53 42 31 33 53 42 31 58 70  // . .h..pSB13SB1Xp
    D882: 53 42 30 33 53 42 30 58                          // SB03SB0X

                    Store (SMD3, SMDX) /* \_SB_.PCI0.GEXP.CSER.SMDX */
                }


    D88A: 70 53 4D 44 33 53 4D 44 58                       // pSMD3SMDX

                If (LEqual (Arg0, 0x04))
                {
                    Store (SB14, SB1X) /* \_SB_.PCI0.GEXP.CSER.SB1X */
                    Store (SB04, SB0X) /* \_SB_.PCI0.GEXP.CSER.SB0X */

    D893: A0 20 93 68 0A 04 70 53 42 31 34 53 42 31 58 70  // . .h..pSB14SB1Xp
    D8A3: 53 42 30 34 53 42 30 58                          // SB04SB0X

                    Store (SMD4, SMDX) /* \_SB_.PCI0.GEXP.CSER.SMDX */
                }


    D8AB: 70 53 4D 44 34 53 4D 44 58                       // pSMD4SMDX

                If (LEqual (Arg0, 0x05))
                {
                    Store (SB15, SB1X) /* \_SB_.PCI0.GEXP.CSER.SB1X */
                    Store (SB05, SB0X) /* \_SB_.PCI0.GEXP.CSER.SB0X */

    D8B4: A0 20 93 68 0A 05 70 53 42 31 35 53 42 31 58 70  // . .h..pSB15SB1Xp
    D8C4: 53 42 30 35 53 42 30 58                          // SB05SB0X

                    Store (SMD5, SMDX) /* \_SB_.PCI0.GEXP.CSER.SMDX */
                }


    D8CC: 70 53 4D 44 35 53 4D 44 58                       // pSMD5SMDX

                If (LGreater (Arg0, 0x05))
                {

    D8D5: A0 07 94 68 0A 05                                // ...h..

                    Return (Zero)
                }


    D8DB: A4 00                                            // ..

                If (LGreater (Arg1, One))
                {

    D8DD: A0 06 94 69 01                                   // ...i.

                    Return (Zero)
                }


    D8E2: A4 00                                            // ..

                If (LGreater (Arg2, 0x17))
                {

    D8E4: A0 07 94 6A 0A 17                                // ...j..

                    Return (Zero)
                }


    D8EA: A4 00                                            // ..

                If (LGreater (Arg3, One))
                {

    D8EC: A0 06 94 6B 01                                   // ...k.

                    Return (Zero)
                }


    D8F1: A4 00                                            // ..

                If (LGreater (Arg4, 0x02))
                {

    D8F3: A0 07 94 6C 0A 02                                // ...l..

                    Return (Zero)
                }


    D8F9: A4 00                                            // ..

                If (
    D8FB: A0 0B 92                                         // ...

LNotEqual (SMDX, 0x03))
                {

    D8FE: 93 53 4D 44 58 0A 03                             // .SMDX..

                    Return (Zero)
                }


    D905: A4 00                                            // ..

                If (LEqual (Arg4, Zero))
                {

    D907: A0 0A 93 6C 00                                   // ...l.

                    Store (OUTR, Local0)
                }


    D90C: 70 4F 55 54 52 60                                // pOUTR`

                If (LEqual (Arg4, One))
                {

    D912: A0 0A 93 6C 01                                   // ...l.

                    Store (CFGR, Local0)
                }


    D917: 70 43 46 47 52 60                                // pCFGR`

                If (LEqual (Arg4, 0x02))
                {

    D91D: A0 0B 93 6C 0A 02                                // ...l..

                    Store (INR, Local0)
                }


    D923: 70 49 4E 52 5F 60                                // pINR_`

                If (LEqual (Arg4, 0x03))
                {

    D929: A0 0B 93 6C 0A 03                                // ...l..

                    Store (POLR, Local0)
                }

                PS0 (SB1X)
                Divide (Arg2, PPR, PINN, REGN) /* \_SB_.PCI0.GEXP.CSER.REGN */
                Store (DerefOf (
    D92F: 70 50 4F 4C 52 60 50 53 30 5F 53 42 31 58 78 6A  // pPOLR`PS0_SB1Xxj
    D93F: 50 50 52 5F 50 49 4E 4E 52 45 47 4E 70 83        // PPR_PINNREGNp.

Index (Local0, REGN)), REGA) /* \_SB_.PCI0.GEXP.CSER.REGA */
                Store (RREG (SB0X, Arg1, REGA), OLDV) /* \_SB_.PCI0.GEXP.CSER.OLDV */

    D94D: 88 60 52 45 47 4E 00 52 45 47 41 70 52 52 45 47  // .`REGN.REGApRREG
    D95D: 53 42 30 58 69 52 45 47 41 4F 4C 44 56           // SB0XiREGAOLDV

                If (LEqual (Arg4, 0x02))
                {

    D96A: A0 17 93 6C 0A 02                                // ...l..

                    Store (And (One, ShiftRight (OLDV, PINN)), RETV) /* \_SB_.PCI0.GEXP.CSER.RETV */
                }

    D970: 70 7B 01 7A 4F 4C 44 56 50 49 4E 4E 00 00 52 45  // p{.zOLDVPINN..RE
    D980: 54 56                                            // TV

                Else
                {
                    And (OLDV, Not (ShiftLeft (One, PINN)), NEWV) /* \_SB_.PCI0.GEXP.CSER.NEWV */
                    Or (ShiftLeft (Arg3, PINN), NEWV, NEWV) /* \_SB_.PCI0.GEXP.CSER.NEWV */

    D982: A1 41 04 7B 4F 4C 44 56 80 79 01 50 49 4E 4E 00  // .A.{OLDV.y.PINN.
    D992: 00 4E 45 57 56 7D 79 6B 50 49 4E 4E 00 4E 45 57  // .NEWV}ykPINN.NEW
    D9A2: 56 4E 45 57 56                                   // VNEWV

                    If (
    D9A7: A0 1C 92                                         // ...

LNotEqual (NEWV, OLDV))
                    {
                        WREG (SB0X, Arg1, REGA, NEWV)
                    }
                }

                PS3 (SB1X)

    D9AA: 93 4E 45 57 56 4F 4C 44 56 57 52 45 47 53 42 30  // .NEWVOLDVWREGSB0
    D9BA: 58 69 52 45 47 41 4E 45 57 56 50 53 33 5F 53 42  // XiREGANEWVPS3_SB
    D9CA: 31 58                                            // 1X

                Return (RETV) /* \_SB_.PCI0.GEXP.CSER.RETV */
            }
        }
    }


    D9CC: A4 52 45 54 56                                   // .RETV

    Method (PKG1, 1, Serialized)
    {

    D9D1: 14 1D 50 4B 47 31 09                             // ..PKG1.

        Name (PKG, 
    D9D8: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
        {
            Zero
        })
        Store (Arg0, 
    D9DD: 12 03 01 00 70 68                                // ....ph

Index (PKG, Zero))

    D9E3: 88 50 4B 47 5F 00 00                             // .PKG_..

        Return (PKG) /* \PKG1.PKG_ */
    }


    D9EA: A4 50 4B 47 5F                                   // .PKG_

    Method (PKG3, 3, Serialized)
    {

    D9EF: 14 32 50 4B 47 33 0B                             // .2PKG3.

        Name (PKG, 
    D9F6: 08 50 4B 47 5F                                   // .PKG_

Package (0x03)
        {
            Zero, 
            Zero, 
            Zero
        })
        Store (Arg0, 
    D9FB: 12 05 03 00 00 00 70 68                          // ......ph

Index (PKG, Zero))
        Store (Arg1, 
    DA03: 88 50 4B 47 5F 00 00 70 69                       // .PKG_..pi

Index (PKG, One))
        Store (Arg2, 
    DA0C: 88 50 4B 47 5F 01 00 70 6A                       // .PKG_..pj

Index (PKG, 0x02))

    DA15: 88 50 4B 47 5F 0A 02 00                          // .PKG_...

        Return (PKG) /* \PKG3.PKG_ */
    }


    DA1D: A4 50 4B 47 5F                                   // .PKG_

    If (USTP)
    {

    DA22: A0 4F 0D 55 53 54 50                             // .O.USTP

        Scope (_SB.PCI0.I2C1)
        {

    DA29: 10 48 07 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .H./._SB_PCI0I2C
    DA39: 31                                               // 1

            Method (SSCN, 0, NotSerialized)
            {

    DA3A: 14 17 53 53 43 4E 00                             // ..SSCN.

                Return (PKG3 (SSHI, SSLI, SSDI))
            }


    DA41: A4 50 4B 47 33 53 53 48 49 53 53 4C 49 53 53 44  // .PKG3SSHISSLISSD
    DA51: 49                                               // I

            Method (FMCN, 0, NotSerialized)
            {

    DA52: 14 17 46 4D 43 4E 00                             // ..FMCN.

                Return (PKG3 (FMHI, FMLI, FMDI))
            }


    DA59: A4 50 4B 47 33 46 4D 48 49 46 4D 4C 49 46 4D 44  // .PKG3FMHIFMLIFMD
    DA69: 49                                               // I

            Method (FPCN, 0, NotSerialized)
            {

    DA6A: 14 17 46 50 43 4E 00                             // ..FPCN.

                Return (PKG3 (FPHI, FPLI, FPDI))
            }


    DA71: A4 50 4B 47 33 46 50 48 49 46 50 4C 49 46 50 44  // .PKG3FPHIFPLIFPD
    DA81: 49                                               // I

            Method (M0D3, 0, NotSerialized)
            {

    DA82: 14 0F 4D 30 44 33 00                             // ..M0D3.

                Return (PKG1 (M0CI))
            }


    DA89: A4 50 4B 47 31 4D 30 43 49                       // .PKG1M0CI

            Method (M1D3, 0, NotSerialized)
            {

    DA92: 14 0F 4D 31 44 33 00                             // ..M1D3.

                Return (PKG1 (M1CI))
            }
        }


    DA99: A4 50 4B 47 31 4D 31 43 49                       // .PKG1M1CI

        Scope (_SB.PCI0.SPI1)
        {

    DAA2: 10 2F 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 31  // .//._SB_PCI0SPI1

            Method (M0D3, 0, NotSerialized)
            {

    DAB2: 14 0F 4D 30 44 33 00                             // ..M0D3.

                Return (PKG1 (M0CS))
            }


    DAB9: A4 50 4B 47 31 4D 30 43 53                       // .PKG1M0CS

            Method (M1D3, 0, NotSerialized)
            {

    DAC2: 14 0F 4D 31 44 33 00                             // ..M1D3.

                Return (PKG1 (M1CS))
            }
        }


    DAC9: A4 50 4B 47 31 4D 31 43 53                       // .PKG1M1CS

        Scope (_SB.PCI0.UA01)
        {

    DAD2: 10 2F 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 31  // .//._SB_PCI0UA01

            Method (M0D3, 0, NotSerialized)
            {

    DAE2: 14 0F 4D 30 44 33 00                             // ..M0D3.

                Return (PKG1 (M0CU))
            }


    DAE9: A4 50 4B 47 31 4D 30 43 55                       // .PKG1M0CU

            Method (M1D3, 0, NotSerialized)
            {

    DAF2: 14 0F 4D 31 44 33 00                             // ..M1D3.

                Return (PKG1 (M1CU))
            }
        }
    }


    DAF9: A4 50 4B 47 31 4D 31 43 55                       // .PKG1M1CU

    If (LEqual (PCHV (), SPTL))
    {

    DB02: A0 4D 29 93 50 43 48 56 53 50 54 4C              // .M).PCHVSPTL

        Scope (_SB.PCI0)
        {

    DB0E: 10 41 29 2E 5F 53 42 5F 50 43 49 30              // .A)._SB_PCI0

            Device (PEMC)
            {

    DB1A: 5B 82 4F 14 50 45 4D 43                          // [.O.PEMC

                Name (_ADR, 0x001E0004)  // _ADR: Address

    DB22: 08 5F 41 44 52 0C 04 00 1E 00                    // ._ADR.....

                OperationRegion (SCSR, PCI_Config, Zero, 0x0100)

    DB2C: 5B 80 53 43 53 52 02 00 0B 00 01                 // [.SCSR.....

                Field (SCSR, WordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    PSTA,   32, 
                    Offset (0xA2), 
                        ,   2, 
                    PGEN,   1
                }


    DB37: 5B 81 18 53 43 53 52 02 00 40 42 50 53 54 41 20  // [..SCSR..@BPSTA 
    DB47: 00 40 0D 00 02 50 47 45 4E 01                    // .@...PGEN.

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    Store (Zero, PGEN) /* \_SB_.PCI0.PEMC.PGEN */
                    PCRA (0xC0, 0x0600, 0x7FFFFFBA)
                    Sleep (0x02)
                    PCRO (0xC0, 0x0600, 0x80000045)
                    And (PSTA, 0xFFFFFFFC, PSTA) /* \_SB_.PCI0.PEMC.PSTA */

    DB51: 14 41 04 5F 50 53 30 08 70 00 50 47 45 4E 50 43  // .A._PS0.p.PGENPC
    DB61: 52 41 0A C0 0B 00 06 0C BA FF FF 7F 5B 22 0A 02  // RA..........["..
    DB71: 50 43 52 4F 0A C0 0B 00 06 0C 45 00 00 80 7B 50  // PCRO......E...{P
    DB81: 53 54 41 0C FC FF FF FF 50 53 54 41              // STA.....PSTA

                    Store (PSTA, Local0)
                }


    DB8D: 70 50 53 54 41 60                                // pPSTA`

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    Store (One, PGEN) /* \_SB_.PCI0.PEMC.PGEN */
                    Or (PSTA, 0x03, PSTA) /* \_SB_.PCI0.PEMC.PSTA */

    DB93: 14 1D 5F 50 53 33 08 70 01 50 47 45 4E 7D 50 53  // .._PS3.p.PGEN}PS
    DBA3: 54 41 0A 03 50 53 54 41                          // TA..PSTA

                    Store (PSTA, Local0)
                }


    DBAB: 70 50 53 54 41 60                                // pPSTA`

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    DBB1: 14 42 0A 5F 44 53 4D 0C                          // .B._DSM.


    DBB9: 08 5F 54 5F 30 00                                // ._T_0.

                    If (PCIC (Arg0))
                    {

    DBBF: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    ADBG (
    DBC6: A4 50 43 49 44 68 69 6A 6B 41 44 42 47           // .PCIDhijkADBG

Concatenate ("EMH4=", ToDecimalString (EMH4)))

    DBD3: 73 0D 45 4D 48 34 3D 00 97 45 4D 48 34 00 00     // s.EMH4=..EMH4..

                    If (LEqual (Arg0, 
    DBE2: A0 4A 06 93 68                                   // .J..h

ToUUID ("f6c13ea5-65cd-461f-ab7a-29f7e8d5bd61") /* Unknown UUID */))
                    {

    DBE7: 11 13 0A 10 A5 3E C1 F6 CD 65 1F 46 AB 7A 29 F7  // .....>...e.F.z).
    DBF7: E8 D5 BD 61                                      // ...a

                        If (LEqual (Arg1, Zero))
                        {

    DBFB: A0 4A 04 93 69 00                                // .J..i.

                            Switch (Arg2)
                            {

    DC01: A2 44 04 01 70 6A 5F 54 5F 30                    // .D..pj_T_0

                                Case (Zero)
                                {

    DC0B: A0 19 93 5F 54 5F 30 00                          // ..._T_0.

                                    If (LEqual (EMH4, One))
                                    {

    DC13: A0 0C 93 45 4D 48 34 01                          // ...EMH4.

                                        Return (
    DC1B: A4                                               // .

Buffer (One)
                                        {
                                             0x61                                             // a
                                        })
                                    }


    DC1C: 11 03 01 61                                      // ...a

                                    Return (
    DC20: A4                                               // .

Buffer (One)
                                    {
                                         0x21                                             // !
                                    })
                                }

    DC21: 11 03 01 21                                      // ...!

                                Case
    DC25: A1 1F                                            // ..

 (0x05)
                                {

    DC27: A0 0D 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                    Return (
    DC30: A4                                               // .

Buffer (One)
                                    {
                                         0x03                                             // .
                                    })
                                }

    DC31: 11 03 01 03                                      // ....

                                Case
    DC35: A1 0F                                            // ..

 (0x06)
                                {

    DC37: A0 0D 93 5F 54 5F 30 0A 06                       // ..._T_0..

                                    Return (
    DC40: A4                                               // .

Buffer (One)
                                    {
                                         0x05                                             // .
                                    })
                                }


    DC41: 11 03 01 05                                      // ....

                            }
                        }

    DC45: A5                                               // .

                        Else
                        {

    DC46: A1 06                                            // ..

                            Return (
    DC48: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

    DC49: 11 03 01 00                                      // ....

                    Else
                    {

    DC4D: A1 06                                            // ..

                        Return (
    DC4F: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


    DC50: 11 03 01 00                                      // ....

                Device (CARD)
                {

    DC54: 5B 82 15 43 41 52 44                             // [..CARD

                    Name (_ADR, 0x08)  // _ADR: Address

    DC5B: 08 5F 41 44 52 0A 08                             // ._ADR..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    DC62: 14 08 5F 52 4D 56 00                             // .._RMV.

                        Return (Zero)
                    }
                }
            }


    DC69: A4 00                                            // ..

            Device (PSDC)
            {

    DC6B: 5B 82 43 13 50 53 44 43                          // [.C.PSDC

                Name (_ADR, 0x001E0006)  // _ADR: Address

    DC73: 08 5F 41 44 52 0C 06 00 1E 00                    // ._ADR.....

                OperationRegion (SCSR, PCI_Config, Zero, 0x0100)

    DC7D: 5B 80 53 43 53 52 02 00 0B 00 01                 // [.SCSR.....

                Field (SCSR, WordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    PSTA,   32, 
                    Offset (0xA2), 
                        ,   2, 
                    PGEN,   1
                }


    DC88: 5B 81 18 53 43 53 52 02 00 40 42 50 53 54 41 20  // [..SCSR..@BPSTA 
    DC98: 00 40 0D 00 02 50 47 45 4E 01                    // .@...PGEN.

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    Store (Zero, PGEN) /* \_SB_.PCI0.PSDC.PGEN */
                    PCRA (0xC0, 0x0600, 0xFFFFFE7A)
                    Sleep (0x02)
                    PCRO (0xC0, 0x0600, 0x0185)
                    And (PSTA, 0xFFFFFFFC, PSTA) /* \_SB_.PCI0.PSDC.PSTA */

    DCA2: 14 3E 5F 50 53 30 08 70 00 50 47 45 4E 50 43 52  // .>_PS0.p.PGENPCR
    DCB2: 41 0A C0 0B 00 06 0C 7A FE FF FF 5B 22 0A 02 50  // A......z...["..P
    DCC2: 43 52 4F 0A C0 0B 00 06 0B 85 01 7B 50 53 54 41  // CRO........{PSTA
    DCD2: 0C FC FF FF FF 50 53 54 41                       // .....PSTA

                    Store (PSTA, Local0)
                }


    DCDB: 70 50 53 54 41 60                                // pPSTA`

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    Store (One, PGEN) /* \_SB_.PCI0.PSDC.PGEN */
                    Or (PSTA, 0x03, PSTA) /* \_SB_.PCI0.PSDC.PSTA */

    DCE1: 14 1D 5F 50 53 33 08 70 01 50 47 45 4E 7D 50 53  // .._PS3.p.PGEN}PS
    DCF1: 54 41 0A 03 50 53 54 41                          // TA..PSTA

                    Store (PSTA, Local0)
                }


    DCF9: 70 50 53 54 41 60                                // pPSTA`

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

    DCFF: 14 49 08 5F 44 53 4D 0C                          // .I._DSM.


    DD07: 08 5F 54 5F 30 00                                // ._T_0.

                    If (PCIC (Arg0))
                    {

    DD0D: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


    DD14: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    If (LEqual (Arg0, 
    DD1D: A0 44 06 93 68                                   // .D..h

ToUUID ("f6c13ea5-65cd-461f-ab7a-29f7e8d5bd61") /* Unknown UUID */))
                    {

    DD22: 11 13 0A 10 A5 3E C1 F6 CD 65 1F 46 AB 7A 29 F7  // .....>...e.F.z).
    DD32: E8 D5 BD 61                                      // ...a

                        If (LEqual (Arg1, Zero))
                        {

    DD36: A0 44 04 93 69 00                                // .D..i.

                            Switch (Arg2)
                            {

    DD3C: A2 3E 01 70 6A 5F 54 5F 30                       // .>.pj_T_0

                                Case (Zero)
                                {

    DD45: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                                    Return (
    DD4D: A4                                               // .

Buffer (One)
                                    {
                                         0x19                                             // .
                                    })
                                }

    DD4E: 11 03 01 19                                      // ....

                                Case
    DD52: A1 27                                            // .'

 (0x03)
                                {
                                    Sleep (0x64)

    DD54: A0 11 93 5F 54 5F 30 0A 03 5B 22 0A 64           // ..._T_0..[".d

                                    Return (
    DD61: A4                                               // .

Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }

    DD62: 11 03 01 00                                      // ....

                                Case
    DD66: A1 13                                            // ..

 (0x04)
                                {
                                    Sleep (0x64)

    DD68: A0 11 93 5F 54 5F 30 0A 04 5B 22 0A 64           // ..._T_0..[".d

                                    Return (
    DD75: A4                                               // .

Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }


    DD76: 11 03 01 00                                      // ....

                            }
                        }

    DD7A: A5                                               // .

                        Else
                        {

    DD7B: A1 06                                            // ..

                            Return (
    DD7D: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

    DD7E: 11 03 01 00                                      // ....

                    Else
                    {

    DD82: A1 06                                            // ..

                        Return (
    DD84: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


    DD85: 11 03 01 00                                      // ....

                Device (CARD)
                {

    DD89: 5B 82 15 43 41 52 44                             // [..CARD

                    Name (_ADR, 0x08)  // _ADR: Address

    DD90: 08 5F 41 44 52 0A 08                             // ._ADR..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

    DD97: 14 08 5F 52 4D 56 00                             // .._RMV.

                        Return (One)
                    }
                }
            }
        }
    }


    DD9E: A4 01                                            // ..

    Scope (_SB.PCI0)
    {

    DDA0: 10 32 2E 5F 53 42 5F 50 43 49 30                 // .2._SB_PCI0

        Device (ISHD)
        {

    DDAB: 5B 82 26 49 53 48 44                             // [.&ISHD

            Name (_ADR, 0x00130000)  // _ADR: Address

    DDB2: 08 5F 41 44 52 0C 00 00 13 00                    // ._ADR.....

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {

    DDBC: 14 16 5F 44 53 4D 04                             // .._DSM.

                If (PCIC (Arg0))
                {

    DDC3: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }
            }
        }
    }


    DDCA: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

    Scope (_SB.PCI0)
    {

    DDD3: 10 32 2E 5F 53 42 5F 50 43 49 30                 // .2._SB_PCI0

        Device (HECI)
        {

    DDDE: 5B 82 26 48 45 43 49                             // [.&HECI

            Name (_ADR, 0x00160000)  // _ADR: Address

    DDE5: 08 5F 41 44 52 0C 00 00 16 00                    // ._ADR.....

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {

    DDEF: 14 16 5F 44 53 4D 04                             // .._DSM.

                If (PCIC (Arg0))
                {

    DDF6: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }
            }
        }
    }


    DDFD: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

    Name (ECUP, One)

    DE06: 08 45 43 55 50 01                                // .ECUP.

    Mutex (EHLD, 0x00)

    DE0C: 5B 01 45 48 4C 44 00                             // [.EHLD.

    Scope (\)
    {

    DE13: 10 4E 09 5C 00                                   // .N.\.

        Device (CHUB)
        {

    DE18: 5B 82 48 09 43 48 55 42                          // [.H.CHUB

            Name (_HID, EisaId ("INT339B"))  // _HID: Hardware ID

    DE20: 08 5F 48 49 44 0C 25 D4 33 9B                    // ._HID.%.3.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    DE2A: 14 13 5F 53 54 41 00                             // .._STA.

                If (LEqual (CHEN, One))
                {

    DE31: A0 0A 93 43 48 45 4E 01                          // ...CHEN.

                    Return (0x0F)
                }


    DE39: A4 0A 0F                                         // ...

                Return (Zero)
            }


    DE3C: A4 00                                            // ..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    DE3E: 14 43 07 5F 44 53 4D 0C                          // .C._DSM.


    DE46: 08 5F 54 5F 31 00                                // ._T_1.


    DE4C: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
    DE52: A0 4D 05 93 68                                   // .M..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
                {

    DE57: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
    DE67: B6 A2 FE 37                                      // ...7

                    If (LEqual (Zero, 
    DE6B: A0 42 04 93 00                                   // .B...

ToInteger (Arg1)))
                    {

    DE70: 99 69 00                                         // .i.

                        Switch (ToInteger (Arg2))
                        {

    DE73: A2 38 01 70 99 6A 00 5F 54 5F 30                 // .8.p.j._T_0

                            Case (Zero)
                            {

    DE7E: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                                Return (
    DE86: A4                                               // .

Buffer (One)
                                {
                                     0x03                                             // .
                                })
                            }

    DE87: 11 03 01 03                                      // ....

                            Case
    DE8B: A1 1F                                            // ..

 (One)
                            {

    DE8D: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                                Switch (DerefOf (
    DE95: A2 15 01 70 83                                   // ...p.

Index (Arg3, Zero)))
                                {

    DE9A: 88 6B 00 00 5F 54 5F 31                          // .k.._T_1

                                    Case (
    DEA2: A0 07                                            // ..

Zero)
                                    {
                                    }


    DEA4: 93 5F 54 5F 31 00                                // ._T_1.

                                }
                            }


    DEAA: A5                                               // .

                        }


    DEAB: A5                                               // .

                        Return (Zero)
                    }


    DEAC: A4 00                                            // ..

                    Return (Zero)
                }


    DEAE: A4 00                                            // ..

                Return (Zero)
            }
        }
    }


    DEB0: A4 00                                            // ..

    Scope (_SB)
    {

    DEB2: 10 41 05 5F 53 42 5F                             // .A._SB_

        OperationRegion (ITSS, SystemMemory, 0xFDC43100, 0x0208)

    DEB9: 5B 80 49 54 53 53 00 0C 00 31 C4 FD 0B 08 02     // [.ITSS...1.....

        Field (ITSS, ByteAcc, NoLock, Preserve)
        {
            PARC,   8, 
            PBRC,   8, 
            PCRC,   8, 
            PDRC,   8, 
            PERC,   8, 
            PFRC,   8, 
            PGRC,   8, 
            PHRC,   8, 
            Offset (0x200), 
                ,   1, 
                ,   1, 
            SCGE,   1
        }
    }


    DEC8: 5B 81 3A 49 54 53 53 01 50 41 52 43 08 50 42 52  // [.:ITSS.PARC.PBR
    DED8: 43 08 50 43 52 43 08 50 44 52 43 08 50 45 52 43  // C.PCRC.PDRC.PERC
    DEE8: 08 50 46 52 43 08 50 47 52 43 08 50 48 52 43 08  // .PFRC.PGRC.PHRC.
    DEF8: 00 40 FC 00 01 00 01 53 43 47 45 01              // .@.....SCGE.

    Mutex (MUTX, 0x00)

    DF04: 5B 01 4D 55 54 58 00                             // [.MUTX.

    OperationRegion (PRT0, SystemIO, 0x80, 0x04)

    DF0B: 5B 80 50 52 54 30 01 0A 80 0A 04                 // [.PRT0.....

    Field (PRT0, DWordAcc, Lock, Preserve)
    {
        P80H,   32
    }


    DF16: 5B 81 0B 50 52 54 30 13 50 38 30 48 20           // [..PRT0.P80H 

    Method (P8XH, 2, Serialized)
    {

    DF23: 14 4E 07 50 38 58 48 0A                          // .N.P8XH.

        If (LEqual (Arg0, Zero))
        {

    DF2B: A0 17 93 68 00                                   // ...h.

            Store (Or (And (P80D, 0xFFFFFF00), Arg1), P80D) /* \P80D */
        }


    DF30: 70 7D 7B 50 38 30 44 0C 00 FF FF FF 00 69 00 50  // p}{P80D......i.P
    DF40: 38 30 44                                         // 80D

        If (LEqual (Arg0, One))
        {

    DF43: A0 1B 93 68 01                                   // ...h.

            Store (Or (And (P80D, 0xFFFF00FF), ShiftLeft (Arg1, 0x08)), P80D) /* \P80D */
        }


    DF48: 70 7D 7B 50 38 30 44 0C FF 00 FF FF 00 79 69 0A  // p}{P80D......yi.
    DF58: 08 00 00 50 38 30 44                             // ...P80D

        If (LEqual (Arg0, 0x02))
        {

    DF5F: A0 1C 93 68 0A 02                                // ...h..

            Store (Or (And (P80D, 0xFF00FFFF), ShiftLeft (Arg1, 0x10)), P80D) /* \P80D */
        }


    DF65: 70 7D 7B 50 38 30 44 0C FF FF 00 FF 00 79 69 0A  // p}{P80D......yi.
    DF75: 10 00 00 50 38 30 44                             // ...P80D

        If (LEqual (Arg0, 0x03))
        {

    DF7C: A0 1C 93 68 0A 03                                // ...h..

            Store (Or (And (P80D, 0x00FFFFFF), ShiftLeft (Arg1, 0x18)), P80D) /* \P80D */
        }


    DF82: 70 7D 7B 50 38 30 44 0C FF FF FF 00 00 79 69 0A  // p}{P80D......yi.
    DF92: 18 00 00 50 38 30 44                             // ...P80D

        Store (P80D, P80H) /* \P80H */
    }


    DF99: 70 50 38 30 44 50 38 30 48                       // pP80DP80H

    Method (ADBG, 1, Serialized)
    {

    DFA2: 14 17 41 44 42 47 09                             // ..ADBG.

        If (CondRefOf (MDBG))
        {

    DFA9: A0 0E 5B 12 4D 44 42 47 00                       // ..[.MDBG.

            Return (MDBG) /* External reference */
            Arg0
        }


    DFB2: A4 4D 44 42 47 68                                // .MDBGh

        Return (Zero)
    }


    DFB8: A4 00                                            // ..

    OperationRegion (SPRT, SystemIO, 0xB2, 0x02)

    DFBA: 5B 80 53 50 52 54 01 0A B2 0A 02                 // [.SPRT.....

    Field (SPRT, ByteAcc, Lock, Preserve)
    {
        SSMP,   8
    }


    DFC5: 5B 81 0B 53 50 52 54 11 53 53 4D 50 08           // [..SPRT.SSMP.

    Name (WAKP, 
    DFD2: 08 57 41 4B 50                                   // .WAKP

Package (0x02)
    {
        Zero, 
        Zero
    })

    DFD7: 12 04 02 00 00                                   // .....

    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        Store (Arg0, GPIC) /* \GPIC */

    DFDC: 14 12 5F 50 49 43 01 70 68 47 50 49 43           // .._PIC.phGPIC

        Store (Arg0, PICM) /* \PICM */
    }


    DFE9: 70 68 50 49 43 4D                                // phPICM

    Method (RPTS, 1, NotSerialized)
    {
        Store (Zero, P80D) /* \P80D */
        P8XH (Zero, Arg0)
        ADBG (
    DFEF: 14 4B 0A 52 50 54 53 01 70 00 50 38 30 44 50 38  // .K.RPTS.p.P80DP8
    DFFF: 58 48 00 68 41 44 42 47                          // XH.hADBG

Concatenate ("_PTS=", ToHexString (Arg0)))

    E007: 73 0D 5F 50 54 53 3D 00 98 68 00 00              // s._PTS=..h..

        If (LEqual (Arg0, 0x03))
        {

    E013: A0 2F 93 68 0A 03                                // ./.h..

            If (CondRefOf (\_PR.DTSE))
            {

    E019: A0 29 5B 12 5C 2E 5F 50 52 5F 44 54 53 45 00     // .)[.\._PR_DTSE.

                If (LAnd (\_PR.DTSE, 
    E028: A0 1A 90 5C 2E 5F 50 52 5F 44 54 53 45           // ...\._PR_DTSE

LGreater (TCNT, One)))
                {
                    TRAP (0x02, 0x1E)
                }
            }
        }


    E035: 94 54 43 4E 54 01 54 52 41 50 0A 02 0A 1E        // .TCNT.TRAP....

        If (
    E043: A0 0A                                            // ..

LOr (LEqual (Arg0, 0x03), 
    E045: 91 93 68 0A 03                                   // ..h..

LEqual (Arg0, 0x04))){}

    E04A: 93 68 0A 04                                      // .h..

        If (CondRefOf (\_SB.TPM.PTS))
        {
            \_SB.TPM.PTS (Arg0)
        }


    E04E: A0 23 5B 12 5C 2F 03 5F 53 42 5F 54 50 4D 5F 50  // .#[.\/._SB_TPM_P
    E05E: 54 53 5F 00 5C 2F 03 5F 53 42 5F 54 50 4D 5F 50  // TS_.\/._SB_TPM_P
    E06E: 54 53 5F 68                                      // TS_h

        If (LOr (LOr (LEqual (Arg0, 0x03), 
    E072: A0 28 91 91 93 68 0A 03                          // .(...h..

LEqual (Arg0, 0x04)), 
    E07A: 93 68 0A 04                                      // .h..

LEqual (Arg0, 0x05)))
        {

    E07E: 93 68 0A 05                                      // .h..

            If (LEqual (PFLV, 0x02))
            {
                \_SB.SGOV (0x02010003, One)
            }
        }
    }


    E082: A0 18 93 50 46 4C 56 0A 02 5C 2E 5F 53 42 5F 53  // ...PFLV..\._SB_S
    E092: 47 4F 56 0C 03 00 01 02 01                       // GOV......

    Method (RWAK, 1, Serialized)
    {
        P8XH (One, 0xAB)
        ADBG ("_WAK")
        \_SB.PCI0.GEXP.INVC ()

    E09B: 14 48 42 52 57 41 4B 09 50 38 58 48 01 0A AB 41  // .HBRWAK.P8XH...A
    E0AB: 44 42 47 0D 5F 57 41 4B 00 5C 2F 04 5F 53 42 5F  // DBG._WAK.\/._SB_
    E0BB: 50 43 49 30 47 45 58 50 49 4E 56 43              // PCI0GEXPINVC

        If (LEqual (S0ID, One))
        {

    E0C7: A0 13 93 53 30 49 44 01                          // ...S0ID.

            Store (One, \_SB.SCGE)
        }


    E0CF: 70 01 5C 2E 5F 53 42 5F 53 43 47 45              // p.\._SB_SCGE

        If (NEXP)
        {

    E0DB: A0 37 4E 45 58 50                                // .7NEXP

            If (And (OSCC, 0x02))
            {
                \_SB.PCI0.NHPG ()
            }


    E0E1: A0 18 7B 4F 53 43 43 0A 02 00 5C 2F 03 5F 53 42  // ..{OSCC...\/._SB
    E0F1: 5F 50 43 49 30 4E 48 50 47                       // _PCI0NHPG

            If (And (OSCC, 0x04))
            {
                \_SB.PCI0.NPME ()
            }
        }


    E0FA: A0 18 7B 4F 53 43 43 0A 04 00 5C 2F 03 5F 53 42  // ..{OSCC...\/._SB
    E10A: 5F 50 43 49 30 4E 50 4D 45                       // _PCI0NPME

        If (LOr (LEqual (Arg0, 0x03), 
    E113: A0 4F 39 91 93 68 0A 03                          // .O9..h..

LEqual (Arg0, 0x04)))
        {

    E11B: 93 68 0A 04                                      // .h..

            If (
    E11F: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP01.VDID, 0xFFFFFFFF))
            {

    E122: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
    E132: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP01, Zero) // Bus Check
            }


    E13B: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
    E14B: 00                                               // .

            If (
    E14C: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP02.VDID, 0xFFFFFFFF))
            {

    E14F: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
    E15F: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP02, Zero) // Bus Check
            }


    E168: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
    E178: 00                                               // .

            If (
    E179: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP03.VDID, 0xFFFFFFFF))
            {

    E17C: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
    E18C: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP03, Zero) // Bus Check
            }


    E195: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
    E1A5: 00                                               // .

            If (
    E1A6: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP04.VDID, 0xFFFFFFFF))
            {

    E1A9: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
    E1B9: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP04, Zero) // Bus Check
            }


    E1C2: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
    E1D2: 00                                               // .

            If (
    E1D3: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP05.VDID, 0xFFFFFFFF))
            {

    E1D6: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
    E1E6: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP05, Zero) // Bus Check
            }


    E1EF: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
    E1FF: 00                                               // .

            If (
    E200: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP06.VDID, 0xFFFFFFFF))
            {

    E203: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
    E213: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP06, Zero) // Bus Check
            }


    E21C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
    E22C: 00                                               // .

            If (
    E22D: A0 34 92                                         // .4.

LNotEqual (\_SB.PCI0.RP07.VDID, 0xFFFFFFFF))
            {

    E230: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
    E240: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                If (LEqual (DSTS, Zero))
                {

    E249: A0 18 93 44 53 54 53 00                          // ...DSTS.

                    Notify (\_SB.PCI0.RP07, Zero) // Bus Check
                }
            }


    E251: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
    E261: 00                                               // .

            If (
    E262: A0 34 92                                         // .4.

LNotEqual (\_SB.PCI0.RP08.VDID, 0xFFFFFFFF))
            {

    E265: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
    E275: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                If (LEqual (DSTS, Zero))
                {

    E27E: A0 18 93 44 53 54 53 00                          // ...DSTS.

                    Notify (\_SB.PCI0.RP08, Zero) // Bus Check
                }
            }


    E286: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
    E296: 00                                               // .

            If (
    E297: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP09.VDID, 0xFFFFFFFF))
            {

    E29A: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
    E2AA: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP09, Zero) // Bus Check
            }


    E2B3: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
    E2C3: 00                                               // .

            If (
    E2C4: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP10.VDID, 0xFFFFFFFF))
            {

    E2C7: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
    E2D7: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP10, Zero) // Bus Check
            }


    E2E0: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
    E2F0: 00                                               // .

            If (
    E2F1: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP11.VDID, 0xFFFFFFFF))
            {

    E2F4: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
    E304: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP11, Zero) // Bus Check
            }


    E30D: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
    E31D: 00                                               // .

            If (
    E31E: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP12.VDID, 0xFFFFFFFF))
            {

    E321: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
    E331: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP12, Zero) // Bus Check
            }


    E33A: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
    E34A: 00                                               // .

            If (
    E34B: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP13.VDID, 0xFFFFFFFF))
            {

    E34E: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
    E35E: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP13, Zero) // Bus Check
            }


    E367: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
    E377: 00                                               // .

            If (
    E378: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP14.VDID, 0xFFFFFFFF))
            {

    E37B: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
    E38B: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP14, Zero) // Bus Check
            }


    E394: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
    E3A4: 00                                               // .

            If (
    E3A5: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP15.VDID, 0xFFFFFFFF))
            {

    E3A8: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
    E3B8: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP15, Zero) // Bus Check
            }


    E3C1: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
    E3D1: 00                                               // .

            If (
    E3D2: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP16.VDID, 0xFFFFFFFF))
            {

    E3D5: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
    E3E5: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP16, Zero) // Bus Check
            }


    E3EE: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
    E3FE: 00                                               // .

            If (
    E3FF: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP17.VDID, 0xFFFFFFFF))
            {

    E402: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
    E412: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP17, Zero) // Bus Check
            }


    E41B: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
    E42B: 00                                               // .

            If (
    E42C: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP18.VDID, 0xFFFFFFFF))
            {

    E42F: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
    E43F: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP18, Zero) // Bus Check
            }


    E448: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
    E458: 00                                               // .

            If (
    E459: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP19.VDID, 0xFFFFFFFF))
            {

    E45C: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
    E46C: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP19, Zero) // Bus Check
            }


    E475: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
    E485: 00                                               // .

            If (
    E486: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP20.VDID, 0xFFFFFFFF))
            {

    E489: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
    E499: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP20, Zero) // Bus Check
            }
        }


    E4A2: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
    E4B2: 00                                               // .

        If (
    E4B3: A0 0A                                            // ..

LOr (LEqual (Arg0, 0x03), 
    E4B5: 91 93 68 0A 03                                   // ..h..

LEqual (Arg0, 0x04))){}

    E4BA: 93 68 0A 04                                      // .h..

        Return (
    E4BE: A4                                               // .

Package (0x02)
        {
            Zero, 
            Zero
        })
    }


    E4BF: 12 04 02 00 00                                   // .....

    Method (GETB, 3, Serialized)
    {
        Multiply (Arg0, 0x08, Local0)
        Multiply (Arg1, 0x08, Local1)

    E4C4: 14 1E 47 45 54 42 0B 77 68 0A 08 60 77 69 0A 08  // ..GETB.wh..`wi..
    E4D4: 61                                               // a

        CreateField (Arg2, Local0, Local1, TBF3)

    E4D5: 5B 13 6A 60 61 54 42 46 33                       // [.j`aTBF3

        Return (TBF3) /* \GETB.TBF3 */
    }


    E4DE: A4 54 42 46 33                                   // .TBF3

    Method (PNOT, 0, Serialized)
    {

    E4E3: 14 4F 1E 50 4E 4F 54 08                          // .O.PNOT.

        If (LGreater (TCNT, One))
        {

    E4EB: A0 40 0C 94 54 43 4E 54 01                       // .@..TCNT.

            If (And (PDC0, 0x08))
            {

    E4F4: A0 16 7B 50 44 43 30 0A 08 00                    // ..{PDC0...

                Notify (\_PR.CPU0, 0x80) // Performance Capability Change
            }


    E4FE: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 80           // .\._PR_CPU0..

            If (And (PDC1, 0x08))
            {

    E50B: A0 16 7B 50 44 43 31 0A 08 00                    // ..{PDC1...

                Notify (\_PR.CPU1, 0x80) // Performance Capability Change
            }


    E515: 86 5C 2E 5F 50 52 5F 43 50 55 31 0A 80           // .\._PR_CPU1..

            If (And (PDC2, 0x08))
            {

    E522: A0 16 7B 50 44 43 32 0A 08 00                    // ..{PDC2...

                Notify (\_PR.CPU2, 0x80) // Performance Capability Change
            }


    E52C: 86 5C 2E 5F 50 52 5F 43 50 55 32 0A 80           // .\._PR_CPU2..

            If (And (PDC3, 0x08))
            {

    E539: A0 16 7B 50 44 43 33 0A 08 00                    // ..{PDC3...

                Notify (\_PR.CPU3, 0x80) // Performance Capability Change
            }


    E543: 86 5C 2E 5F 50 52 5F 43 50 55 33 0A 80           // .\._PR_CPU3..

            If (And (PDC4, 0x08))
            {

    E550: A0 16 7B 50 44 43 34 0A 08 00                    // ..{PDC4...

                Notify (\_PR.CPU4, 0x80) // Performance Capability Change
            }


    E55A: 86 5C 2E 5F 50 52 5F 43 50 55 34 0A 80           // .\._PR_CPU4..

            If (And (PDC5, 0x08))
            {

    E567: A0 16 7B 50 44 43 35 0A 08 00                    // ..{PDC5...

                Notify (\_PR.CPU5, 0x80) // Performance Capability Change
            }


    E571: 86 5C 2E 5F 50 52 5F 43 50 55 35 0A 80           // .\._PR_CPU5..

            If (And (PDC6, 0x08))
            {

    E57E: A0 16 7B 50 44 43 36 0A 08 00                    // ..{PDC6...

                Notify (\_PR.CPU6, 0x80) // Performance Capability Change
            }


    E588: 86 5C 2E 5F 50 52 5F 43 50 55 36 0A 80           // .\._PR_CPU6..

            If (And (PDC7, 0x08))
            {

    E595: A0 16 7B 50 44 43 37 0A 08 00                    // ..{PDC7...

                Notify (\_PR.CPU7, 0x80) // Performance Capability Change
            }
        }

    E59F: 86 5C 2E 5F 50 52 5F 43 50 55 37 0A 80           // .\._PR_CPU7..

        Else
        {

    E5AC: A1 0E                                            // ..

            Notify (\_PR.CPU0, 0x80) // Performance Capability Change
        }


    E5AE: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 80           // .\._PR_CPU0..

        If (LGreater (TCNT, One))
        {

    E5BB: A0 48 10 94 54 43 4E 54 01                       // .H..TCNT.

            If (LAnd (And (PDC0, 0x08), 
    E5C4: A0 1F 90 7B 50 44 43 30 0A 08 00                 // ...{PDC0...

And (PDC0, 0x10)))
            {

    E5CF: 7B 50 44 43 30 0A 10 00                          // {PDC0...

                Notify (\_PR.CPU0, 0x81) // C-State Change
            }


    E5D7: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 81           // .\._PR_CPU0..

            If (LAnd (And (PDC1, 0x08), 
    E5E4: A0 1F 90 7B 50 44 43 31 0A 08 00                 // ...{PDC1...

And (PDC1, 0x10)))
            {

    E5EF: 7B 50 44 43 31 0A 10 00                          // {PDC1...

                Notify (\_PR.CPU1, 0x81) // C-State Change
            }


    E5F7: 86 5C 2E 5F 50 52 5F 43 50 55 31 0A 81           // .\._PR_CPU1..

            If (LAnd (And (PDC2, 0x08), 
    E604: A0 1F 90 7B 50 44 43 32 0A 08 00                 // ...{PDC2...

And (PDC2, 0x10)))
            {

    E60F: 7B 50 44 43 32 0A 10 00                          // {PDC2...

                Notify (\_PR.CPU2, 0x81) // C-State Change
            }


    E617: 86 5C 2E 5F 50 52 5F 43 50 55 32 0A 81           // .\._PR_CPU2..

            If (LAnd (And (PDC3, 0x08), 
    E624: A0 1F 90 7B 50 44 43 33 0A 08 00                 // ...{PDC3...

And (PDC3, 0x10)))
            {

    E62F: 7B 50 44 43 33 0A 10 00                          // {PDC3...

                Notify (\_PR.CPU3, 0x81) // C-State Change
            }


    E637: 86 5C 2E 5F 50 52 5F 43 50 55 33 0A 81           // .\._PR_CPU3..

            If (LAnd (And (PDC4, 0x08), 
    E644: A0 1F 90 7B 50 44 43 34 0A 08 00                 // ...{PDC4...

And (PDC4, 0x10)))
            {

    E64F: 7B 50 44 43 34 0A 10 00                          // {PDC4...

                Notify (\_PR.CPU4, 0x81) // C-State Change
            }


    E657: 86 5C 2E 5F 50 52 5F 43 50 55 34 0A 81           // .\._PR_CPU4..

            If (LAnd (And (PDC5, 0x08), 
    E664: A0 1F 90 7B 50 44 43 35 0A 08 00                 // ...{PDC5...

And (PDC5, 0x10)))
            {

    E66F: 7B 50 44 43 35 0A 10 00                          // {PDC5...

                Notify (\_PR.CPU5, 0x81) // C-State Change
            }


    E677: 86 5C 2E 5F 50 52 5F 43 50 55 35 0A 81           // .\._PR_CPU5..

            If (LAnd (And (PDC6, 0x08), 
    E684: A0 1F 90 7B 50 44 43 36 0A 08 00                 // ...{PDC6...

And (PDC6, 0x10)))
            {

    E68F: 7B 50 44 43 36 0A 10 00                          // {PDC6...

                Notify (\_PR.CPU6, 0x81) // C-State Change
            }


    E697: 86 5C 2E 5F 50 52 5F 43 50 55 36 0A 81           // .\._PR_CPU6..

            If (LAnd (And (PDC7, 0x08), 
    E6A4: A0 1F 90 7B 50 44 43 37 0A 08 00                 // ...{PDC7...

And (PDC7, 0x10)))
            {

    E6AF: 7B 50 44 43 37 0A 10 00                          // {PDC7...

                Notify (\_PR.CPU7, 0x81) // C-State Change
            }
        }

    E6B7: 86 5C 2E 5F 50 52 5F 43 50 55 37 0A 81           // .\._PR_CPU7..

        Else
        {

    E6C4: A1 0E                                            // ..

            Notify (\_PR.CPU0, 0x81) // C-State Change
        }
    }


    E6C6: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 81           // .\._PR_CPU0..

    OperationRegion (MBAR, SystemMemory, Add (\_SB.PCI0.GMHB (), 0x5000), 0x1000)

    E6D3: 5B 80 4D 42 41 52 00 72 5C 2F 03 5F 53 42 5F 50  // [.MBAR.r\/._SB_P
    E6E3: 43 49 30 47 4D 48 42 0B 00 50 00 0B 00 10        // CI0GMHB..P....

    Field (MBAR, ByteAcc, NoLock, Preserve)
    {
        Offset (0x938), 
        PWRU,   4, 
        Offset (0x9A0), 
        PPL1,   15, 
        PL1E,   1, 
        CLP1,   1
    }


    E6F1: 5B 81 21 4D 42 41 52 01 00 80 9C 04 50 57 52 55  // [.!MBAR.....PWRU
    E701: 04 00 4C 33 50 50 4C 31 0F 50 4C 31 45 01 43 4C  // ..L3PPL1.PL1E.CL
    E711: 50 31 01                                         // P1.

    Name (CLMP, Zero)

    E714: 08 43 4C 4D 50 00                                // .CLMP.

    Name (PLEN, Zero)

    E71A: 08 50 4C 45 4E 00                                // .PLEN.

    Name (PLSV, 0x8000)

    E720: 08 50 4C 53 56 0B 00 80                          // .PLSV...

    Name (CSEM, Zero)

    E728: 08 43 53 45 4D 00                                // .CSEM.

    Method (SPL1, 0, Serialized)
    {

    E72E: 14 47 07 53 50 4C 31 08                          // .G.SPL1.

        Name (PPUU, Zero)

    E736: 08 50 50 55 55 00                                // .PPUU.

        If (LEqual (CSEM, One))
        {

    E73C: A0 09 93 43 53 45 4D 01                          // ...CSEM.

            Return (Zero)
        }

        Store (One, CSEM) /* \CSEM */
        Store (PPL1, PLSV) /* \PLSV */
        Store (PL1E, PLEN) /* \PLEN */
        Store (CLP1, CLMP) /* \CLMP */

    E744: A4 00 70 01 43 53 45 4D 70 50 50 4C 31 50 4C 53  // ..p.CSEMpPPL1PLS
    E754: 56 70 50 4C 31 45 50 4C 45 4E 70 43 4C 50 31 43  // VpPL1EPLENpCLP1C
    E764: 4C 4D 50                                         // LMP

        If (LEqual (PWRU, Zero))
        {

    E767: A0 0D 93 50 57 52 55 00                          // ...PWRU.

            Store (One, PPUU) /* \SPL1.PPUU */
        }

    E76F: 70 01 50 50 55 55                                // p.PPUU

        Else
        {

    E775: A1 0D                                            // ..

            ShiftLeft (Decrement (PWRU), 0x02, PPUU) /* \SPL1.PPUU */
        }

        Multiply (PLVL, PPUU, Local0)
        Divide (Local0, 0x03E8, , Local1)
        Store (Local1, PPL1) /* \PPL1 */
        Store (One, PL1E) /* \PL1E */

    E777: 79 76 50 57 52 55 0A 02 50 50 55 55 77 50 4C 56  // yvPWRU..PPUUwPLV
    E787: 4C 50 50 55 55 60 78 60 0B E8 03 00 61 70 61 50  // LPPUU`x`....apaP
    E797: 50 4C 31 70 01 50 4C 31 45                       // PL1p.PL1E

        Store (One, CLP1) /* \CLP1 */
    }


    E7A0: 70 01 43 4C 50 31                                // p.CLP1

    Method (RPL1, 0, Serialized)
    {
        Store (PLSV, PPL1) /* \PPL1 */
        Store (PLEN, PL1E) /* \PL1E */
        Store (CLMP, CLP1) /* \CLP1 */

    E7A6: 14 27 52 50 4C 31 08 70 50 4C 53 56 50 50 4C 31  // .'RPL1.pPLSVPPL1
    E7B6: 70 50 4C 45 4E 50 4C 31 45 70 43 4C 4D 50 43 4C  // pPLENPL1EpCLMPCL
    E7C6: 50 31                                            // P1

        Store (Zero, CSEM) /* \CSEM */
    }


    E7C8: 70 00 43 53 45 4D                                // p.CSEM

    Name (UAMS, Zero)

    E7CE: 08 55 41 4D 53 00                                // .UAMS.

    Name (GLCK, Zero)

    E7D4: 08 47 4C 43 4B 00                                // .GLCK.

    Method (GUAM, 1, Serialized)
    {

    E7DA: 14 4B 1F 47 55 41 4D 09                          // .K.GUAM.


    E7E2: 08 5F 54 5F 30 00                                // ._T_0.

        If (LGreater (OSYS, 0x07D0))
        {
            Add (PWRV, 0xFC, Local0)
            ADBG ("Loc 0")
            ADBG (Local0)

    E7E8: A0 3A 94 4F 53 59 53 0B D0 07 72 50 57 52 56 0A  // .:.OSYS...rPWRV.
    E7F8: FC 60 41 44 42 47 0D 4C 6F 63 20 30 00 41 44 42  // .`ADBG.Loc 0.ADB
    E808: 47 60                                            // G`

            OperationRegion (ACTC, SystemMemory, Local0, 0x04)

    E80A: 5B 80 41 43 54 43 00 60 0A 04                    // [.ACTC.`..

            Field (ACTC, DWordAcc, NoLock, Preserve)
            {
                    ,   1, 
                ACTD,   1
            }
        }


    E814: 5B 81 0D 41 43 54 43 03 00 01 41 43 54 44 01     // [..ACTC...ACTD.

        Switch (ToInteger (Arg0))
        {

    E823: A2 42 1A 01 70 99 68 00 5F 54 5F 30              // .B..p.h._T_0

            Case (Zero)
            {

    E82F: A0 46 09 93 5F 54 5F 30 00                       // .F.._T_0.

                If (LEqual (GLCK, One))
                {
                    Store (Zero, GLCK) /* \GLCK */
                    Store (One, ECUP) /* \ECUP */
                    \_SB.PCI0.LPCB.EC0.CSEE (0xAF)
                    P8XH (Zero, 0xC5)
                    P8XH (One, 0xAB)
                    ADBG ("Exit CS")

    E838: A0 4D 08 93 47 4C 43 4B 01 70 00 47 4C 43 4B 70  // .M..GLCK.p.GLCKp
    E848: 01 45 43 55 50 5C 2F 05 5F 53 42 5F 50 43 49 30  // .ECUP\/._SB_PCI0
    E858: 4C 50 43 42 45 43 30 5F 43 53 45 45 0A AF 50 38  // LPCBEC0_CSEE..P8
    E868: 58 48 00 0A C5 50 38 58 48 01 0A AB 41 44 42 47  // XH...P8XH...ADBG
    E878: 0D 45 78 69 74 20 43 53 00                       // .Exit CS.

                    If (
    E881: A0 10 92                                         // ...

LGreaterEqual (OSYS, 0x07DF))
                    {

    E884: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                        Store (Zero, ACTD) /* \GUAM.ACTD */
                    }


    E88C: 70 00 41 43 54 44                                // p.ACTD

                    If (PSCP)
                    {

    E892: A0 29 50 53 43 50                                // .)PSCP

                        If (CondRefOf (\_PR.CPU0._PPC))
                        {
                            Store (Zero, \_PR.CPPC) /* External reference */
                            PNOT ()
                        }
                    }


    E898: A0 23 5B 12 5C 2F 03 5F 50 52 5F 43 50 55 30 5F  // .#[.\/._PR_CPU0_
    E8A8: 50 50 43 00 70 00 5C 2E 5F 50 52 5F 43 50 50 43  // PPC.p.\._PR_CPPC
    E8B8: 50 4E 4F 54                                      // PNOT

                    If (PLCS)
                    {
                        RPL1 ()
                    }
                }
            }

    E8BC: A0 09 50 4C 43 53 52 50 4C 31                    // ..PLCSRPL1

            Case
    E8C6: A1 4E 0F                                         // .N.

 (One)
            {

    E8C9: A0 4C 0E 93 5F 54 5F 30 01                       // .L.._T_0.

                If (LEqual (GLCK, Zero))
                {
                    Store (One, GLCK) /* \GLCK */
                    \_SB.PCI0.LPCB.EC0.CSEE (0xAE)
                    Store (Zero, ECUP) /* \ECUP */
                    P8XH (Zero, 0xC5)
                    P8XH (One, Zero)
                    ADBG ("Enter CS")

    E8D2: A0 43 0E 93 47 4C 43 4B 00 70 01 47 4C 43 4B 5C  // .C..GLCK.p.GLCK\
    E8E2: 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43  // /._SB_PCI0LPCBEC
    E8F2: 30 5F 43 53 45 45 0A AE 70 00 45 43 55 50 50 38  // 0_CSEE..p.ECUPP8
    E902: 58 48 00 0A C5 50 38 58 48 01 00 41 44 42 47 0D  // XH...P8XH..ADBG.
    E912: 45 6E 74 65 72 20 43 53 00                       // Enter CS.

                    If (
    E91B: A0 07                                            // ..

LEqual (ECNO, One)){}

    E91D: 93 45 43 4E 4F 01                                // .ECNO.

                    If (
    E923: A0 10 92                                         // ...

LGreaterEqual (OSYS, 0x07DF))
                    {

    E926: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                        Store (One, ACTD) /* \GUAM.ACTD */
                    }


    E92E: 70 01 41 43 54 44                                // p.ACTD

                    If (PSCP)
                    {

    E934: A0 47 07 50 53 43 50                             // .G.PSCP

                        If (LAnd (CondRefOf (\_PR.CPU0._PSS), 
    E93B: A0 40 07 90 5B 12 5C 2F 03 5F 50 52 5F 43 50 55  // .@..[.\/._PR_CPU
    E94B: 30 5F 50 53 53 00                                // 0_PSS.

CondRefOf (\_PR.CPU0._PPC)))
                        {

    E951: 5B 12 5C 2F 03 5F 50 52 5F 43 50 55 30 5F 50 50  // [.\/._PR_CPU0_PP
    E961: 43 00                                            // C.

                            If (And (PDC0, 0x0400))
                            {

    E963: A0 26 7B 50 44 43 30 0B 00 04 00                 // .&{PDC0....

                                Subtract (SizeOf (\_PR.CPU0.TPSS), One, \_PR.CPPC) /* External reference */
                            }

    E96E: 74 87 5C 2F 03 5F 50 52 5F 43 50 55 30 54 50 53  // t.\/._PR_CPU0TPS
    E97E: 53 01 5C 2E 5F 50 52 5F 43 50 50 43              // S.\._PR_CPPC

                            Else
                            {

    E98A: A1 1D                                            // ..

                                Subtract (SizeOf (\_PR.CPU0.LPSS), One, \_PR.CPPC) /* External reference */
                            }

                            PNOT ()
                        }
                    }


    E98C: 74 87 5C 2F 03 5F 50 52 5F 43 50 55 30 4C 50 53  // t.\/._PR_CPU0LPS
    E99C: 53 01 5C 2E 5F 50 52 5F 43 50 50 43 50 4E 4F 54  // S.\._PR_CPPCPNOT

                    If (PLCS)
                    {
                        SPL1 ()
                    }
                }
            }

    E9AC: A0 09 50 4C 43 53 53 50 4C 31                    // ..PLCSSPL1

            Case
    E9B6: A1 0E                                            // ..

 (
    E9B8: A0 08                                            // ..

0x02)
            {
            }

    E9BA: 93 5F 54 5F 30 0A 02                             // ._T_0..

            Default
            {

    E9C1: A1 03                                            // ..

                Return (Zero)
            }


    E9C3: A4 00                                            // ..

        }

        Store (LAnd (Arg0, 
    E9C5: A5 70 90 68                                      // .p.h

LNot (PWRS)), UAMS) /* \UAMS */
        P_CS ()
    }


    E9C9: 92 50 57 52 53 55 41 4D 53 50 5F 43 53           // .PWRSUAMSP_CS

    Method (P_CS, 0, Serialized)
    {

    E9D6: 14 47 06 50 5F 43 53 08                          // .G.P_CS.

        If (CondRefOf (\_SB.PCI0.PAUD.PUAM))
        {
            \_SB.PCI0.PAUD.PUAM ()
        }


    E9DE: A0 2A 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 50  // .*[.\/._SB_PCI0P
    E9EE: 41 55 44 50 55 41 4D 00 5C 2F 04 5F 53 42 5F 50  // AUDPUAM.\/._SB_P
    E9FE: 43 49 30 50 41 55 44 50 55 41 4D                 // CI0PAUDPUAM

        If (LEqual (OSYS, 0x07DC))
        {

    EA09: A0 34 93 4F 53 59 53 0B DC 07                    // .4.OSYS...

            If (CondRefOf (\_SB.PCI0.XHC.DUAM))
            {
                \_SB.PCI0.XHC.DUAM ()
            }
        }
    }


    EA13: A0 2A 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // .*[.\/._SB_PCI0X
    EA23: 48 43 5F 44 55 41 4D 00 5C 2F 04 5F 53 42 5F 50  // HC_DUAM.\/._SB_P
    EA33: 43 49 30 58 48 43 5F 44 55 41 4D                 // CI0XHC_DUAM

    Scope (\)
    {

    EA3E: 10 1C 5C 00                                      // ..\.

        OperationRegion (IO_H, SystemIO, 0x1000, 0x04)

    EA42: 5B 80 49 4F 5F 48 01 0B 00 10 0A 04              // [.IO_H......

        Field (IO_H, ByteAcc, NoLock, Preserve)
        {
            TRPH,   8
        }
    }


    EA4E: 5B 81 0B 49 4F 5F 48 01 54 52 50 48 08           // [..IO_H.TRPH.

    Method (TRAP, 2, Serialized)
    {
        Store (Arg1, SMIF) /* \SMIF */

    EA5B: 14 49 05 54 52 41 50 0A 70 69 53 4D 49 46        // .I.TRAP.piSMIF

        If (LEqual (Arg0, 0x02))
        {
            Store (Arg1, \_PR.DTSF) /* External reference */
            Store (Zero, \_PR.TRPD) /* External reference */

    EA69: A0 28 93 68 0A 02 70 69 5C 2E 5F 50 52 5F 44 54  // .(.h..pi\._PR_DT
    EA79: 53 46 70 00 5C 2E 5F 50 52 5F 54 52 50 44        // SFp.\._PR_TRPD

            Return (\_PR.DTSF) /* External reference */
        }


    EA87: A4 5C 2E 5F 50 52 5F 44 54 53 46                 // .\._PR_DTSF

        If (LEqual (Arg0, 0x03))
        {

    EA92: A0 0B 93 68 0A 03                                // ...h..

            Store (Zero, TRPH) /* \TRPH */
        }


    EA98: 70 00 54 52 50 48                                // p.TRPH

        If (LEqual (Arg0, 0x04))
        {

    EA9E: A0 11 93 68 0A 04                                // ...h..

            Store (Zero, \_PR.TRPF) /* External reference */
        }


    EAA4: 70 00 5C 2E 5F 50 52 5F 54 52 50 46              // p.\._PR_TRPF

        Return (SMIF) /* \SMIF */
    }


    EAB0: A4 53 4D 49 46                                   // .SMIF

    Scope (_SB.PCI0)
    {

    EAB5: 10 41 57 2E 5F 53 42 5F 50 43 49 30              // .AW._SB_PCI0

        Method (PTMA, 0, NotSerialized)
        {

    EAC1: 14 11 50 54 4D 41 00                             // ..PTMA.

            Return (\_PR.BGMA) /* External reference */
        }


    EAC8: A4 5C 2E 5F 50 52 5F 42 47 4D 41                 // .\._PR_BGMA

        Method (PTMS, 0, NotSerialized)
        {

    EAD3: 14 11 50 54 4D 53 00                             // ..PTMS.

            Return (\_PR.BGMS) /* External reference */
        }


    EADA: A4 5C 2E 5F 50 52 5F 42 47 4D 53                 // .\._PR_BGMS

        Method (PTIA, 0, NotSerialized)
        {

    EAE5: 14 11 50 54 49 41 00                             // ..PTIA.

            Return (\_PR.BGIA) /* External reference */
        }


    EAEC: A4 5C 2E 5F 50 52 5F 42 47 49 41                 // .\._PR_BGIA

        Method (_INI, 0, Serialized)  // _INI: Initialize
        {
            Store (0x07D0, OSYS) /* \OSYS */

    EAF7: 14 4F 15 5F 49 4E 49 08 70 0B D0 07 4F 53 59 53  // .O._INI.p...OSYS

            If (CondRefOf (\_OSI, Local0))
            {

    EB07: A0 45 12 5B 12 5C 5F 4F 53 49 60                 // .E.[.\_OSI`

                If (_OSI ("Linux"))
                {

    EB12: A0 14 5F 4F 53 49 0D 4C 69 6E 75 78 00           // .._OSI.Linux.

                    Store (0x03E8, OSYS) /* \OSYS */
                }


    EB1F: 70 0B E8 03 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001"))
                {

    EB27: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    EB37: 30 30 31 00                                      // 001.

                    Store (0x07D1, OSYS) /* \OSYS */
                }


    EB3B: 70 0B D1 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001 SP1"))
                {

    EB43: A0 1F 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    EB53: 30 30 31 20 53 50 31 00                          // 001 SP1.

                    Store (0x07D1, OSYS) /* \OSYS */
                }


    EB5B: 70 0B D1 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001 SP2"))
                {

    EB63: A0 1F 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    EB73: 30 30 31 20 53 50 32 00                          // 001 SP2.

                    Store (0x07D2, OSYS) /* \OSYS */
                }


    EB7B: 70 0B D2 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001.1"))
                {

    EB83: A0 1D 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    EB93: 30 30 31 2E 31 00                                // 001.1.

                    Store (0x07D3, OSYS) /* \OSYS */
                }


    EB99: 70 0B D3 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2006"))
                {

    EBA1: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    EBB1: 30 30 36 00                                      // 006.

                    Store (0x07D6, OSYS) /* \OSYS */
                }


    EBB5: 70 0B D6 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2009"))
                {

    EBBD: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    EBCD: 30 30 39 00                                      // 009.

                    Store (0x07D9, OSYS) /* \OSYS */
                }


    EBD1: 70 0B D9 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2012"))
                {

    EBD9: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    EBE9: 30 31 32 00                                      // 012.

                    Store (0x07DC, OSYS) /* \OSYS */
                }


    EBED: 70 0B DC 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2013"))
                {

    EBF5: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    EC05: 30 31 33 00                                      // 013.

                    Store (0x07DD, OSYS) /* \OSYS */
                }


    EC09: 70 0B DD 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2015"))
                {

    EC11: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    EC21: 30 31 35 00                                      // 015.

                    Store (0x07DF, OSYS) /* \OSYS */
                }
            }


    EC25: 70 0B DF 07 4F 53 59 53                          // p...OSYS

            If (CondRefOf (\_PR.DTSE))
            {

    EC2D: A0 29 5B 12 5C 2E 5F 50 52 5F 44 54 53 45 00     // .)[.\._PR_DTSE.

                If (
    EC3C: A0 1A 92                                         // ...

LGreaterEqual (\_PR.DTSE, One))
                {

    EC3F: 95 5C 2E 5F 50 52 5F 44 54 53 45 01              // .\._PR_DTSE.

                    Store (One, \_PR.DSAE) /* External reference */
                }
            }
        }


    EC4B: 70 01 5C 2E 5F 50 52 5F 44 53 41 45              // p.\._PR_DSAE

        Method (NHPG, 0, Serialized)
        {
            Store (Zero, ^RP01.HPEX) /* \_SB_.PCI0.RP01.HPEX */
            Store (Zero, ^RP02.HPEX) /* \_SB_.PCI0.RP02.HPEX */
            Store (Zero, ^RP03.HPEX) /* \_SB_.PCI0.RP03.HPEX */
            Store (Zero, ^RP04.HPEX) /* \_SB_.PCI0.RP04.HPEX */
            Store (Zero, ^RP05.HPEX) /* \_SB_.PCI0.RP05.HPEX */
            Store (Zero, ^RP06.HPEX) /* \_SB_.PCI0.RP06.HPEX */
            Store (Zero, ^RP07.HPEX) /* \_SB_.PCI0.RP07.HPEX */
            Store (Zero, ^RP08.HPEX) /* \_SB_.PCI0.RP08.HPEX */
            Store (Zero, ^RP09.HPEX) /* \_SB_.PCI0.RP09.HPEX */
            Store (Zero, ^RP10.HPEX) /* \_SB_.PCI0.RP10.HPEX */
            Store (Zero, ^RP11.HPEX) /* \_SB_.PCI0.RP11.HPEX */
            Store (Zero, ^RP12.HPEX) /* \_SB_.PCI0.RP12.HPEX */
            Store (Zero, ^RP13.HPEX) /* \_SB_.PCI0.RP13.HPEX */
            Store (Zero, ^RP14.HPEX) /* \_SB_.PCI0.RP14.HPEX */
            Store (Zero, ^RP15.HPEX) /* \_SB_.PCI0.RP15.HPEX */
            Store (Zero, ^RP16.HPEX) /* \_SB_.PCI0.RP16.HPEX */
            Store (Zero, ^RP17.HPEX) /* \_SB_.PCI0.RP17.HPEX */
            Store (Zero, ^RP18.HPEX) /* \_SB_.PCI0.RP18.HPEX */
            Store (Zero, ^RP19.HPEX) /* \_SB_.PCI0.RP19.HPEX */
            Store (Zero, ^RP20.HPEX) /* \_SB_.PCI0.RP20.HPEX */
            Store (One, ^RP01.HPSX) /* \_SB_.PCI0.RP01.HPSX */
            Store (One, ^RP02.HPSX) /* \_SB_.PCI0.RP02.HPSX */
            Store (One, ^RP03.HPSX) /* \_SB_.PCI0.RP03.HPSX */
            Store (One, ^RP04.HPSX) /* \_SB_.PCI0.RP04.HPSX */
            Store (One, ^RP05.HPSX) /* \_SB_.PCI0.RP05.HPSX */
            Store (One, ^RP06.HPSX) /* \_SB_.PCI0.RP06.HPSX */
            Store (One, ^RP07.HPSX) /* \_SB_.PCI0.RP07.HPSX */
            Store (One, ^RP08.HPSX) /* \_SB_.PCI0.RP08.HPSX */
            Store (One, ^RP09.HPSX) /* \_SB_.PCI0.RP09.HPSX */
            Store (One, ^RP10.HPSX) /* \_SB_.PCI0.RP10.HPSX */
            Store (One, ^RP11.HPSX) /* \_SB_.PCI0.RP11.HPSX */
            Store (One, ^RP12.HPSX) /* \_SB_.PCI0.RP12.HPSX */
            Store (One, ^RP13.HPSX) /* \_SB_.PCI0.RP13.HPSX */
            Store (One, ^RP14.HPSX) /* \_SB_.PCI0.RP14.HPSX */
            Store (One, ^RP15.HPSX) /* \_SB_.PCI0.RP15.HPSX */
            Store (One, ^RP16.HPSX) /* \_SB_.PCI0.RP16.HPSX */
            Store (One, ^RP17.HPSX) /* \_SB_.PCI0.RP17.HPSX */
            Store (One, ^RP18.HPSX) /* \_SB_.PCI0.RP18.HPSX */
            Store (One, ^RP19.HPSX) /* \_SB_.PCI0.RP19.HPSX */

    EC57: 14 47 1E 4E 48 50 47 08 70 00 5E 2E 52 50 30 31  // .G.NHPG.p.^.RP01
    EC67: 48 50 45 58 70 00 5E 2E 52 50 30 32 48 50 45 58  // HPEXp.^.RP02HPEX
    EC77: 70 00 5E 2E 52 50 30 33 48 50 45 58 70 00 5E 2E  // p.^.RP03HPEXp.^.
    EC87: 52 50 30 34 48 50 45 58 70 00 5E 2E 52 50 30 35  // RP04HPEXp.^.RP05
    EC97: 48 50 45 58 70 00 5E 2E 52 50 30 36 48 50 45 58  // HPEXp.^.RP06HPEX
    ECA7: 70 00 5E 2E 52 50 30 37 48 50 45 58 70 00 5E 2E  // p.^.RP07HPEXp.^.
    ECB7: 52 50 30 38 48 50 45 58 70 00 5E 2E 52 50 30 39  // RP08HPEXp.^.RP09
    ECC7: 48 50 45 58 70 00 5E 2E 52 50 31 30 48 50 45 58  // HPEXp.^.RP10HPEX
    ECD7: 70 00 5E 2E 52 50 31 31 48 50 45 58 70 00 5E 2E  // p.^.RP11HPEXp.^.
    ECE7: 52 50 31 32 48 50 45 58 70 00 5E 2E 52 50 31 33  // RP12HPEXp.^.RP13
    ECF7: 48 50 45 58 70 00 5E 2E 52 50 31 34 48 50 45 58  // HPEXp.^.RP14HPEX
    ED07: 70 00 5E 2E 52 50 31 35 48 50 45 58 70 00 5E 2E  // p.^.RP15HPEXp.^.
    ED17: 52 50 31 36 48 50 45 58 70 00 5E 2E 52 50 31 37  // RP16HPEXp.^.RP17
    ED27: 48 50 45 58 70 00 5E 2E 52 50 31 38 48 50 45 58  // HPEXp.^.RP18HPEX
    ED37: 70 00 5E 2E 52 50 31 39 48 50 45 58 70 00 5E 2E  // p.^.RP19HPEXp.^.
    ED47: 52 50 32 30 48 50 45 58 70 01 5E 2E 52 50 30 31  // RP20HPEXp.^.RP01
    ED57: 48 50 53 58 70 01 5E 2E 52 50 30 32 48 50 53 58  // HPSXp.^.RP02HPSX
    ED67: 70 01 5E 2E 52 50 30 33 48 50 53 58 70 01 5E 2E  // p.^.RP03HPSXp.^.
    ED77: 52 50 30 34 48 50 53 58 70 01 5E 2E 52 50 30 35  // RP04HPSXp.^.RP05
    ED87: 48 50 53 58 70 01 5E 2E 52 50 30 36 48 50 53 58  // HPSXp.^.RP06HPSX
    ED97: 70 01 5E 2E 52 50 30 37 48 50 53 58 70 01 5E 2E  // p.^.RP07HPSXp.^.
    EDA7: 52 50 30 38 48 50 53 58 70 01 5E 2E 52 50 30 39  // RP08HPSXp.^.RP09
    EDB7: 48 50 53 58 70 01 5E 2E 52 50 31 30 48 50 53 58  // HPSXp.^.RP10HPSX
    EDC7: 70 01 5E 2E 52 50 31 31 48 50 53 58 70 01 5E 2E  // p.^.RP11HPSXp.^.
    EDD7: 52 50 31 32 48 50 53 58 70 01 5E 2E 52 50 31 33  // RP12HPSXp.^.RP13
    EDE7: 48 50 53 58 70 01 5E 2E 52 50 31 34 48 50 53 58  // HPSXp.^.RP14HPSX
    EDF7: 70 01 5E 2E 52 50 31 35 48 50 53 58 70 01 5E 2E  // p.^.RP15HPSXp.^.
    EE07: 52 50 31 36 48 50 53 58 70 01 5E 2E 52 50 31 37  // RP16HPSXp.^.RP17
    EE17: 48 50 53 58 70 01 5E 2E 52 50 31 38 48 50 53 58  // HPSXp.^.RP18HPSX
    EE27: 70 01 5E 2E 52 50 31 39 48 50 53 58              // p.^.RP19HPSX

            Store (One, ^RP20.HPSX) /* \_SB_.PCI0.RP20.HPSX */
        }


    EE33: 70 01 5E 2E 52 50 32 30 48 50 53 58              // p.^.RP20HPSX

        Method (NPME, 0, Serialized)
        {
            Store (Zero, ^RP01.PMEX) /* \_SB_.PCI0.RP01.PMEX */
            Store (Zero, ^RP02.PMEX) /* \_SB_.PCI0.RP02.PMEX */
            Store (Zero, ^RP03.PMEX) /* \_SB_.PCI0.RP03.PMEX */
            Store (Zero, ^RP04.PMEX) /* \_SB_.PCI0.RP04.PMEX */
            Store (Zero, ^RP05.PMEX) /* \_SB_.PCI0.RP05.PMEX */
            Store (Zero, ^RP06.PMEX) /* \_SB_.PCI0.RP06.PMEX */
            Store (Zero, ^RP07.PMEX) /* \_SB_.PCI0.RP07.PMEX */
            Store (Zero, ^RP08.PMEX) /* \_SB_.PCI0.RP08.PMEX */
            Store (Zero, ^RP09.PMEX) /* \_SB_.PCI0.RP09.PMEX */
            Store (Zero, ^RP10.PMEX) /* \_SB_.PCI0.RP10.PMEX */
            Store (Zero, ^RP11.PMEX) /* \_SB_.PCI0.RP11.PMEX */
            Store (Zero, ^RP12.PMEX) /* \_SB_.PCI0.RP12.PMEX */
            Store (Zero, ^RP13.PMEX) /* \_SB_.PCI0.RP13.PMEX */
            Store (Zero, ^RP14.PMEX) /* \_SB_.PCI0.RP14.PMEX */
            Store (Zero, ^RP15.PMEX) /* \_SB_.PCI0.RP15.PMEX */
            Store (Zero, ^RP16.PMEX) /* \_SB_.PCI0.RP16.PMEX */
            Store (Zero, ^RP17.PMEX) /* \_SB_.PCI0.RP17.PMEX */
            Store (Zero, ^RP18.PMEX) /* \_SB_.PCI0.RP18.PMEX */
            Store (Zero, ^RP19.PMEX) /* \_SB_.PCI0.RP19.PMEX */
            Store (Zero, ^RP20.PMEX) /* \_SB_.PCI0.RP20.PMEX */
            Store (One, ^RP01.PMSX) /* \_SB_.PCI0.RP01.PMSX */
            Store (One, ^RP02.PMSX) /* \_SB_.PCI0.RP02.PMSX */
            Store (One, ^RP03.PMSX) /* \_SB_.PCI0.RP03.PMSX */
            Store (One, ^RP04.PMSX) /* \_SB_.PCI0.RP04.PMSX */
            Store (One, ^RP05.PMSX) /* \_SB_.PCI0.RP05.PMSX */
            Store (One, ^RP06.PMSX) /* \_SB_.PCI0.RP06.PMSX */
            Store (One, ^RP07.PMSX) /* \_SB_.PCI0.RP07.PMSX */
            Store (One, ^RP08.PMSX) /* \_SB_.PCI0.RP08.PMSX */
            Store (One, ^RP09.PMSX) /* \_SB_.PCI0.RP09.PMSX */
            Store (One, ^RP10.PMSX) /* \_SB_.PCI0.RP10.PMSX */
            Store (One, ^RP11.PMSX) /* \_SB_.PCI0.RP11.PMSX */
            Store (One, ^RP12.PMSX) /* \_SB_.PCI0.RP12.PMSX */
            Store (One, ^RP13.PMSX) /* \_SB_.PCI0.RP13.PMSX */
            Store (One, ^RP14.PMSX) /* \_SB_.PCI0.RP14.PMSX */
            Store (One, ^RP15.PMSX) /* \_SB_.PCI0.RP15.PMSX */
            Store (One, ^RP16.PMSX) /* \_SB_.PCI0.RP16.PMSX */
            Store (One, ^RP17.PMSX) /* \_SB_.PCI0.RP17.PMSX */
            Store (One, ^RP18.PMSX) /* \_SB_.PCI0.RP18.PMSX */
            Store (One, ^RP19.PMSX) /* \_SB_.PCI0.RP19.PMSX */

    EE3F: 14 47 1E 4E 50 4D 45 08 70 00 5E 2E 52 50 30 31  // .G.NPME.p.^.RP01
    EE4F: 50 4D 45 58 70 00 5E 2E 52 50 30 32 50 4D 45 58  // PMEXp.^.RP02PMEX
    EE5F: 70 00 5E 2E 52 50 30 33 50 4D 45 58 70 00 5E 2E  // p.^.RP03PMEXp.^.
    EE6F: 52 50 30 34 50 4D 45 58 70 00 5E 2E 52 50 30 35  // RP04PMEXp.^.RP05
    EE7F: 50 4D 45 58 70 00 5E 2E 52 50 30 36 50 4D 45 58  // PMEXp.^.RP06PMEX
    EE8F: 70 00 5E 2E 52 50 30 37 50 4D 45 58 70 00 5E 2E  // p.^.RP07PMEXp.^.
    EE9F: 52 50 30 38 50 4D 45 58 70 00 5E 2E 52 50 30 39  // RP08PMEXp.^.RP09
    EEAF: 50 4D 45 58 70 00 5E 2E 52 50 31 30 50 4D 45 58  // PMEXp.^.RP10PMEX
    EEBF: 70 00 5E 2E 52 50 31 31 50 4D 45 58 70 00 5E 2E  // p.^.RP11PMEXp.^.
    EECF: 52 50 31 32 50 4D 45 58 70 00 5E 2E 52 50 31 33  // RP12PMEXp.^.RP13
    EEDF: 50 4D 45 58 70 00 5E 2E 52 50 31 34 50 4D 45 58  // PMEXp.^.RP14PMEX
    EEEF: 70 00 5E 2E 52 50 31 35 50 4D 45 58 70 00 5E 2E  // p.^.RP15PMEXp.^.
    EEFF: 52 50 31 36 50 4D 45 58 70 00 5E 2E 52 50 31 37  // RP16PMEXp.^.RP17
    EF0F: 50 4D 45 58 70 00 5E 2E 52 50 31 38 50 4D 45 58  // PMEXp.^.RP18PMEX
    EF1F: 70 00 5E 2E 52 50 31 39 50 4D 45 58 70 00 5E 2E  // p.^.RP19PMEXp.^.
    EF2F: 52 50 32 30 50 4D 45 58 70 01 5E 2E 52 50 30 31  // RP20PMEXp.^.RP01
    EF3F: 50 4D 53 58 70 01 5E 2E 52 50 30 32 50 4D 53 58  // PMSXp.^.RP02PMSX
    EF4F: 70 01 5E 2E 52 50 30 33 50 4D 53 58 70 01 5E 2E  // p.^.RP03PMSXp.^.
    EF5F: 52 50 30 34 50 4D 53 58 70 01 5E 2E 52 50 30 35  // RP04PMSXp.^.RP05
    EF6F: 50 4D 53 58 70 01 5E 2E 52 50 30 36 50 4D 53 58  // PMSXp.^.RP06PMSX
    EF7F: 70 01 5E 2E 52 50 30 37 50 4D 53 58 70 01 5E 2E  // p.^.RP07PMSXp.^.
    EF8F: 52 50 30 38 50 4D 53 58 70 01 5E 2E 52 50 30 39  // RP08PMSXp.^.RP09
    EF9F: 50 4D 53 58 70 01 5E 2E 52 50 31 30 50 4D 53 58  // PMSXp.^.RP10PMSX
    EFAF: 70 01 5E 2E 52 50 31 31 50 4D 53 58 70 01 5E 2E  // p.^.RP11PMSXp.^.
    EFBF: 52 50 31 32 50 4D 53 58 70 01 5E 2E 52 50 31 33  // RP12PMSXp.^.RP13
    EFCF: 50 4D 53 58 70 01 5E 2E 52 50 31 34 50 4D 53 58  // PMSXp.^.RP14PMSX
    EFDF: 70 01 5E 2E 52 50 31 35 50 4D 53 58 70 01 5E 2E  // p.^.RP15PMSXp.^.
    EFEF: 52 50 31 36 50 4D 53 58 70 01 5E 2E 52 50 31 37  // RP16PMSXp.^.RP17
    EFFF: 50 4D 53 58 70 01 5E 2E 52 50 31 38 50 4D 53 58  // PMSXp.^.RP18PMSX
    F00F: 70 01 5E 2E 52 50 31 39 50 4D 53 58              // p.^.RP19PMSX

            Store (One, ^RP20.PMSX) /* \_SB_.PCI0.RP20.PMSX */
        }
    }


    F01B: 70 01 5E 2E 52 50 32 30 50 4D 53 58              // p.^.RP20PMSX

    Scope (\)
    {

    F027: 10 45 07 5C 00                                   // .E.\.

        Name (PICM, Zero)

    F02C: 08 50 49 43 4D 00                                // .PICM.

        Name (PRWP, 
    F032: 08 50 52 57 50                                   // .PRWP

Package (0x02)
        {
            Zero, 
            Zero
        })

    F037: 12 04 02 00 00                                   // .....

        Method (GPRW, 2, NotSerialized)
        {
            Store (Arg0, 
    F03C: 14 40 06 47 50 52 57 02 70 68                    // .@.GPRW.ph

Index (PRWP, Zero))
            Store (ShiftLeft (SS1, One), Local0)
            Or (Local0, ShiftLeft (SS2, 0x02), Local0)
            Or (Local0, ShiftLeft (SS3, 0x03), Local0)
            Or (Local0, ShiftLeft (SS4, 0x04), Local0)

    F046: 88 50 52 57 50 00 00 70 79 53 53 31 5F 01 00 60  // .PRWP..pySS1_..`
    F056: 7D 60 79 53 53 32 5F 0A 02 00 60 7D 60 79 53 53  // }`ySS2_...`}`ySS
    F066: 33 5F 0A 03 00 60 7D 60 79 53 53 34 5F 0A 04 00  // 3_...`}`ySS4_...
    F076: 60                                               // `

            If (And (ShiftLeft (One, Arg1), Local0))
            {

    F077: A0 11 7B 79 01 69 00 60 00                       // ..{y.i.`.

                Store (Arg1, 
    F080: 70 69                                            // pi

Index (PRWP, One))
            }

    F082: 88 50 52 57 50 01 00                             // .PRWP..

            Else
            {
                ShiftRight (Local0, One, Local0)

    F089: A1 0E 7A 60 01 60                                // ..z`.`

                FindSetLeftBit (Local0, 
    F08F: 81 60                                            // .`

Index (PRWP, One))
            }


    F091: 88 50 52 57 50 01 00                             // .PRWP..

            Return (PRWP) /* \PRWP */
        }
    }


    F098: A4 50 52 57 50                                   // .PRWP

    Scope (_SB)
    {

    F09D: 10 48 32 5F 53 42 5F                             // .H2_SB_

        Name (OSCI, Zero)

    F0A4: 08 4F 53 43 49 00                                // .OSCI.

        Name (OSCO, Zero)

    F0AA: 08 4F 53 43 4F 00                                // .OSCO.

        Name (OSCP, Zero)

    F0B0: 08 4F 53 43 50 00                                // .OSCP.

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {

    F0B6: 14 41 0C 5F 4F 53 43 0C                          // .A._OSC.

            CreateDWordField (Arg3, Zero, STS0)

    F0BE: 8A 6B 00 53 54 53 30                             // .k.STS0

            CreateDWordField (Arg3, 0x04, CAP0)

    F0C5: 8A 6B 0A 04 43 41 50 30                          // .k..CAP0

            If (LEqual (S0ID, One))
            {

    F0CD: A0 0D 93 53 30 49 44 01                          // ...S0ID.

                Store (One, SCGE) /* \_SB_.SCGE */
            }


    F0D5: 70 01 53 43 47 45                                // p.SCGE

            If (LEqual (Arg0, 
    F0DB: A0 4F 07 93 68                                   // .O..h

ToUUID ("0811b06e-4a27-44f9-8d60-3cbbc22e7b48") /* Platform-wide Capabilities */))
            {

    F0E0: 11 13 0A 10 6E B0 11 08 27 4A F9 44 8D 60 3C BB  // ....n...'J.D.`<.
    F0F0: C2 2E 7B 48                                      // ..{H

                If (LEqual (Arg1, One))
                {
                    Store (CAP0, OSCP) /* \_SB_.OSCP */

    F0F4: A0 4B 04 93 69 01 70 43 41 50 30 4F 53 43 50     // .K..i.pCAP0OSCP

                    If (And (CAP0, 0x04))
                    {
                        Store (0x04, OSCO) /* \_SB_.OSCO */

    F103: A0 3C 7B 43 41 50 30 0A 04 00 70 0A 04 4F 53 43  // .<{CAP0...p..OSC
    F113: 4F                                               // O

                        If (
    F114: A0 2B 92                                         // .+.

LNotEqual (And (SGMD, 0x0F), 0x02))
                        {

    F117: 93 7B 53 47 4D 44 0A 0F 00 0A 02                 // .{SGMD.....

                            If (LEqual (RTD3, Zero))
                            {
                                And (CAP0, 0x3B, CAP0) /* \_SB_._OSC.CAP0 */

    F122: A0 1D 93 52 54 44 33 00 7B 43 41 50 30 0A 3B 43  // ...RTD3.{CAP0.;C
    F132: 41 50 30                                         // AP0

                                Or (STS0, 0x10, STS0) /* \_SB_._OSC.STS0 */
                            }
                        }
                    }
                }

    F135: 7D 53 54 53 30 0A 10 53 54 53 30                 // }STS0..STS0

                Else
                {
                    And (STS0, 0xFFFFFF00, STS0) /* \_SB_._OSC.STS0 */

    F140: A1 1A 7B 53 54 53 30 0C 00 FF FF FF 53 54 53 30  // ..{STS0.....STS0

                    Or (STS0, 0x0A, STS0) /* \_SB_._OSC.STS0 */
                }
            }

    F150: 7D 53 54 53 30 0A 0A 53 54 53 30                 // }STS0..STS0

            Else
            {
                And (STS0, 0xFFFFFF00, STS0) /* \_SB_._OSC.STS0 */

    F15B: A1 1A 7B 53 54 53 30 0C 00 FF FF FF 53 54 53 30  // ..{STS0.....STS0

                Or (STS0, 0x06, STS0) /* \_SB_._OSC.STS0 */
            }


    F16B: 7D 53 54 53 30 0A 06 53 54 53 30                 // }STS0..STS0

            Return (Arg3)
        }


    F176: A4 6B                                            // .k

        Device (EPC)
        {

    F178: 5B 82 4C 24 45 50 43 5F                          // [.L$EPC_

            Name (_HID, EisaId ("INT0E0C"))  // _HID: Hardware ID

    F180: 08 5F 48 49 44 0C 25 D4 0E 0C                    // ._HID.%...

            Name (_STR, 
    F18A: 08 5F 53 54 52                                   // ._STR

Unicode ("Enclave Page Cache 1.0"))  // _STR: Description String

    F18F: 11 31 0A 2E 45 00 6E 00 63 00 6C 00 61 00 76 00  // .1..E.n.c.l.a.v.
    F19F: 65 00 20 00 50 00 61 00 67 00 65 00 20 00 43 00  // e. .P.a.g.e. .C.
    F1AF: 61 00 63 00 68 00 65 00 20 00 31 00 2E 00 30 00  // a.c.h.e. .1...0.
    F1BF: 00 00                                            // ..

            Name (_MLS, 
    F1C1: 08 5F 4D 4C 53                                   // ._MLS

Package (0x01)  // _MLS: Multiple Language String
            {

    F1C6: 12 3B 01                                         // .;.

                Package (0x02)
                {
                    "en", 

    F1C9: 12 38 02 0D 65 6E 00                             // .8..en.

                    Unicode ("Enclave Page Cache 1.0")
                }
            })

    F1D0: 11 31 0A 2E 45 00 6E 00 63 00 6C 00 61 00 76 00  // .1..E.n.c.l.a.v.
    F1E0: 65 00 20 00 50 00 61 00 67 00 65 00 20 00 43 00  // e. .P.a.g.e. .C.
    F1F0: 61 00 63 00 68 00 65 00 20 00 31 00 2E 00 30 00  // a.c.h.e. .1...0.
    F200: 00 00                                            // ..

            Name (RBUF, 
    F202: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
            {
                QWordMemory (ResourceConsumer, PosDecode, MinNotFixed, MaxNotFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000001, // Length
                    ,, _Y2E, AddressRangeMemory, TypeStatic)
            })

    F207: 11 33 0A 30 8A 2B 00 00 01 01 00 00 00 00 00 00  // .3.0.+..........
    F217: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F227: 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00  // ................
    F237: 00 00 79 00                                      // ..y.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    F23B: 14 47 06 5F 43 52 53 00                          // .G._CRS.

                CreateQWordField (RBUF, \_SB.EPC._Y2E._MIN, EMIN)  // _MIN: Minimum Base Address

    F243: 8F 52 42 55 46 0A 0E 45 4D 49 4E                 // .RBUF..EMIN

                CreateQWordField (RBUF, \_SB.EPC._Y2E._MAX, EMAX)  // _MAX: Maximum Base Address

    F24E: 8F 52 42 55 46 0A 16 45 4D 41 58                 // .RBUF..EMAX

                CreateQWordField (RBUF, \_SB.EPC._Y2E._LEN, ELEN)  // _LEN: Length
                Store (\_PR.EMNA, EMIN) /* \_SB_.EPC_._CRS.EMIN */
                Store (\_PR.ELNG, ELEN) /* \_SB_.EPC_._CRS.ELEN */
                Subtract (Add (\_PR.EMNA, \_PR.ELNG), One, EMAX) /* \_SB_.EPC_._CRS.EMAX */

    F259: 8F 52 42 55 46 0A 26 45 4C 45 4E 70 5C 2E 5F 50  // .RBUF.&ELENp\._P
    F269: 52 5F 45 4D 4E 41 45 4D 49 4E 70 5C 2E 5F 50 52  // R_EMNAEMINp\._PR
    F279: 5F 45 4C 4E 47 45 4C 45 4E 74 72 5C 2E 5F 50 52  // _ELNGELENtr\._PR
    F289: 5F 45 4D 4E 41 5C 2E 5F 50 52 5F 45 4C 4E 47 00  // _EMNA\._PR_ELNG.
    F299: 01 45 4D 41 58                                   // .EMAX

                Return (RBUF) /* \_SB_.EPC_.RBUF */
            }


    F29E: A4 52 42 55 46                                   // .RBUF

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    F2A3: 14 47 10 5F 44 53 4D 0C                          // .G._DSM.


    F2AB: 08 5F 54 5F 30 00                                // ._T_0.

                Name (BUFX, 
    F2B1: 08 42 55 46 58                                   // .BUFX

Package (0x09)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                })

    F2B6: 12 2F 09 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ./..............
    F2C6: 00 80 0C 00 00 00 80 0C 00 00 00 80 0C 00 00 00  // ................
    F2D6: 80 0C 00 00 00 80 0C 00 00 00 80 0C 00 00 00 80  // ................

                If (LEqual (Arg0, 
    F2E6: A0 42 0C 93 68                                   // .B..h

ToUUID ("c60fac0c-fd9e-4273-9a3f-938f2327035e") /* Unknown UUID */))
                {

    F2EB: 11 13 0A 10 0C AC 0F C6 9E FD 73 42 9A 3F 93 8F  // ..........sB.?..
    F2FB: 23 27 03 5E                                      // #'.^

                    If (LEqual (Zero, 
    F2FF: A0 47 0A 93 00                                   // .G...

ToInteger (Arg1)))
                    {

    F304: 99 69 00                                         // .i.

                        Switch (ToInteger (Arg2))
                        {

    F307: A2 4D 09 01 70 99 6A 00 5F 54 5F 30              // .M..p.j._T_0

                            Case (Zero)
                            {

    F313: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                                Return (
    F31B: A4                                               // .

Buffer (One)
                                {
                                     0x02                                             // .
                                })
                            }

    F31C: 11 03 01 02                                      // ....

                            Case
    F320: A1 43 08                                         // .C.

 (One)
                            {
                                Store (SEC0, 
    F323: A0 40 08 93 5F 54 5F 30 01 70 53 45 43 30        // .@.._T_0.pSEC0

Index (BUFX, Zero))
                                Store (SEC1, 
    F331: 88 42 55 46 58 00 00 70 53 45 43 31              // .BUFX..pSEC1

Index (BUFX, One))
                                Store (SEC2, 
    F33D: 88 42 55 46 58 01 00 70 53 45 43 32              // .BUFX..pSEC2

Index (BUFX, 0x02))
                                Store (SEC3, 
    F349: 88 42 55 46 58 0A 02 00 70 53 45 43 33           // .BUFX...pSEC3

Index (BUFX, 0x03))
                                Store (SEC4, 
    F356: 88 42 55 46 58 0A 03 00 70 53 45 43 34           // .BUFX...pSEC4

Index (BUFX, 0x04))
                                Store (SEC5, 
    F363: 88 42 55 46 58 0A 04 00 70 53 45 43 35           // .BUFX...pSEC5

Index (BUFX, 0x05))
                                Store (SEC6, 
    F370: 88 42 55 46 58 0A 05 00 70 53 45 43 36           // .BUFX...pSEC6

Index (BUFX, 0x06))
                                Store (SEC7, 
    F37D: 88 42 55 46 58 0A 06 00 70 53 45 43 37           // .BUFX...pSEC7

Index (BUFX, 0x07))
                                Store (SEC8, 
    F38A: 88 42 55 46 58 0A 07 00 70 53 45 43 38           // .BUFX...pSEC8

Index (BUFX, 0x08))

    F397: 88 42 55 46 58 0A 08 00                          // .BUFX...

                                Return (BUFX) /* \_SB_.EPC_._DSM.BUFX */
                            }


    F39F: A4 42 55 46 58                                   // .BUFX

                        }


    F3A4: A5                                               // .

                        Return (Zero)
                    }


    F3A5: A4 00                                            // ..

                    Return (Zero)
                }


    F3A7: A4 00                                            // ..

                Return (Zero)
            }


    F3A9: A4 00                                            // ..

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    F3AB: 14 1A 5F 53 54 41 00                             // .._STA.

                If (
    F3B2: A0 11 92                                         // ...

LNotEqual (\_PR.EPCS, Zero))
                {

    F3B5: 93 5C 2E 5F 50 52 5F 45 50 43 53 00              // .\._PR_EPCS.

                    Return (0x0F)
                }


    F3C1: A4 0A 0F                                         // ...

                Return (Zero)
            }
        }
    }


    F3C4: A4 00                                            // ..

    Scope (_SB)
    {

    F3C6: 10 38 5F 53 42 5F                                // .8_SB_

        Device (BTKL)
        {

    F3CC: 5B 82 31 42 54 4B 4C                             // [.1BTKL

            Name (_HID, "INT3420" /* Intel Bluetooth RF Kill */)  // _HID: Hardware ID

    F3D3: 08 5F 48 49 44 0D 49 4E 54 33 34 32 30 00        // ._HID.INT3420.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    F3E1: 14 08 5F 53 54 41 00                             // .._STA.

                Return (Zero)
            }


    F3E8: A4 00                                            // ..

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
            }


    F3EA: 14 06 5F 50 53 30 08                             // .._PS0.

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
            }


    F3F1: 14 06 5F 50 53 33 08                             // .._PS3.

            Method (PSTS, 0, NotSerialized)
            {
            }
        }
    }


    F3F8: 14 06 50 53 54 53 00                             // ..PSTS.

    OperationRegion (_SB.PCI0.LPCB.LPCR, PCI_Config, 0x80, 0x04)

    F3FF: 5B 80 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43 42  // [./._SB_PCI0LPCB
    F40F: 4C 50 43 52 02 0A 80 0A 04                       // LPCR.....

    Field (\_SB.PCI0.LPCB.LPCR, ByteAcc, NoLock, Preserve)
    {
        CARN,   3, 
            ,   1, 
        CBDR,   3, 
        Offset (0x01), 
        LTDR,   2, 
            ,   2, 
        FDDR,   1, 
        Offset (0x02), 
        CALE,   1, 
        CBLE,   1, 
        LTLE,   1, 
        FDLE,   1, 
        Offset (0x03), 
        GLLE,   1, 
        GHLE,   1, 
        KCLE,   1, 
        MCLE,   1, 
        C1LE,   1, 
        C2LE,   1, 
        Offset (0x04)
    }


    F418: 5B 81 48 06 5C 2F 04 5F 53 42 5F 50 43 49 30 4C  // [.H.\/._SB_PCI0L
    F428: 50 43 42 4C 50 43 52 01 43 41 52 4E 03 00 01 43  // PCBLPCR.CARN...C
    F438: 42 44 52 03 00 01 4C 54 44 52 02 00 02 46 44 44  // BDR...LTDR...FDD
    F448: 52 01 00 03 43 41 4C 45 01 43 42 4C 45 01 4C 54  // R...CALE.CBLE.LT
    F458: 4C 45 01 46 44 4C 45 01 00 04 47 4C 4C 45 01 47  // LE.FDLE...GLLE.G
    F468: 48 4C 45 01 4B 43 4C 45 01 4D 43 4C 45 01 43 31  // HLE.KCLE.MCLE.C1
    F478: 4C 45 01 43 32 4C 45 01 00 02                    // LE.C2LE...

    Method (UXDV, 1, Serialized)
    {

    F482: 14 40 0A 55 58 44 56 09                          // .@.UXDV.

        Store (0xFF, Local0)

    F48A: 08 5F 54 5F 30 00 70 0A FF 60                    // ._T_0.p..`

        Switch (Add (Arg0, Zero))
        {

    F494: A2 4C 08 01 70 72 68 00 00 5F 54 5F 30           // .L..prh.._T_0

            Case (0x03F8)
            {

    F4A1: A0 0C 93 5F 54 5F 30 0B F8 03                    // ..._T_0...

                Store (Zero, Local0)
            }

    F4AB: 70 00 60                                         // p.`

            Case
    F4AE: A1 41 07                                         // .A.

 (0x02F8)
            {

    F4B1: A0 0C 93 5F 54 5F 30 0B F8 02                    // ..._T_0...

                Store (One, Local0)
            }

    F4BB: 70 01 60                                         // p.`

            Case
    F4BE: A1 41 06                                         // .A.

 (0x0220)
            {

    F4C1: A0 0D 93 5F 54 5F 30 0B 20 02                    // ..._T_0. .

                Store (0x02, Local0)
            }

    F4CB: 70 0A 02 60                                      // p..`

            Case
    F4CF: A1 40 05                                         // .@.

 (0x0228)
            {

    F4D2: A0 0D 93 5F 54 5F 30 0B 28 02                    // ..._T_0.(.

                Store (0x03, Local0)
            }

    F4DC: 70 0A 03 60                                      // p..`

            Case
    F4E0: A1 3F                                            // .?

 (0x0238)
            {

    F4E2: A0 0D 93 5F 54 5F 30 0B 38 02                    // ..._T_0.8.

                Store (0x04, Local0)
            }

    F4EC: 70 0A 04 60                                      // p..`

            Case
    F4F0: A1 2F                                            // ./

 (0x02E8)
            {

    F4F2: A0 0D 93 5F 54 5F 30 0B E8 02                    // ..._T_0...

                Store (0x05, Local0)
            }

    F4FC: 70 0A 05 60                                      // p..`

            Case
    F500: A1 1F                                            // ..

 (0x0338)
            {

    F502: A0 0D 93 5F 54 5F 30 0B 38 03                    // ..._T_0.8.

                Store (0x06, Local0)
            }

    F50C: 70 0A 06 60                                      // p..`

            Case
    F510: A1 0F                                            // ..

 (0x03E8)
            {

    F512: A0 0D 93 5F 54 5F 30 0B E8 03                    // ..._T_0...

                Store (0x07, Local0)
            }


    F51C: 70 0A 07 60                                      // p..`

        }


    F520: A5                                               // .

        Return (Local0)
    }


    F521: A4 60                                            // .`

    Method (RRIO, 4, Serialized)
    {

    F523: 14 47 22 52 52 49 4F 0C                          // .G"RRIO.


    F52B: 08 5F 54 5F 30 00                                // ._T_0.

        Switch (Add (Arg0, Zero))
        {

    F531: A2 49 21 01 70 72 68 00 00 5F 54 5F 30           // .I!.prh.._T_0

            Case (Zero)
            {
                Store (Zero, CALE) /* \CALE */
                Store (UXDV (Arg2), Local0)

    F53E: A0 2A 93 5F 54 5F 30 00 70 00 43 41 4C 45 70 55  // .*._T_0.p.CALEpU
    F54E: 58 44 56 6A 60                                   // XDVj`

                If (
    F553: A0 0C 92                                         // ...

LNotEqual (Local0, 0xFF))
                {

    F556: 93 60 0A FF                                      // .`..

                    Store (Local0, CARN) /* \CARN */
                }


    F55A: 70 60 43 41 52 4E                                // p`CARN

                If (Arg1)
                {

    F560: A0 08 69                                         // ..i

                    Store (One, CALE) /* \CALE */
                }
            }

    F563: 70 01 43 41 4C 45                                // p.CALE

            Case
    F569: A1 40 1E                                         // .@.

 (One)
            {
                Store (Zero, CBLE) /* \CBLE */
                Store (UXDV (Arg2), Local0)

    F56C: A0 2A 93 5F 54 5F 30 01 70 00 43 42 4C 45 70 55  // .*._T_0.p.CBLEpU
    F57C: 58 44 56 6A 60                                   // XDVj`

                If (
    F581: A0 0C 92                                         // ...

LNotEqual (Local0, 0xFF))
                {

    F584: 93 60 0A FF                                      // .`..

                    Store (Local0, CBDR) /* \CBDR */
                }


    F588: 70 60 43 42 44 52                                // p`CBDR

                If (Arg1)
                {

    F58E: A0 08 69                                         // ..i

                    Store (One, CBLE) /* \CBLE */
                }
            }

    F591: 70 01 43 42 4C 45                                // p.CBLE

            Case
    F597: A1 42 1B                                         // .B.

 (0x02)
            {
                Store (Zero, LTLE) /* \LTLE */

    F59A: A0 3F 93 5F 54 5F 30 0A 02 70 00 4C 54 4C 45     // .?._T_0..p.LTLE

                If (LEqual (Arg2, 0x0378))
                {

    F5A9: A0 0C 93 6A 0B 78 03                             // ...j.x.

                    Store (Zero, LTDR) /* \LTDR */
                }


    F5B0: 70 00 4C 54 44 52                                // p.LTDR

                If (LEqual (Arg2, 0x0278))
                {

    F5B6: A0 0C 93 6A 0B 78 02                             // ...j.x.

                    Store (One, LTDR) /* \LTDR */
                }


    F5BD: 70 01 4C 54 44 52                                // p.LTDR

                If (LEqual (Arg2, 0x03BC))
                {

    F5C3: A0 0D 93 6A 0B BC 03                             // ...j...

                    Store (0x02, LTDR) /* \LTDR */
                }


    F5CA: 70 0A 02 4C 54 44 52                             // p..LTDR

                If (Arg1)
                {

    F5D1: A0 08 69                                         // ..i

                    Store (One, LTLE) /* \LTLE */
                }
            }

    F5D4: 70 01 4C 54 4C 45                                // p.LTLE

            Case
    F5DA: A1 4F 16                                         // .O.

 (0x03)
            {
                Store (Zero, FDLE) /* \FDLE */

    F5DD: A0 31 93 5F 54 5F 30 0A 03 70 00 46 44 4C 45     // .1._T_0..p.FDLE

                If (LEqual (Arg2, 0x03F0))
                {

    F5EC: A0 0C 93 6A 0B F0 03                             // ...j...

                    Store (Zero, FDDR) /* \FDDR */
                }


    F5F3: 70 00 46 44 44 52                                // p.FDDR

                If (LEqual (Arg2, 0x0370))
                {

    F5F9: A0 0C 93 6A 0B 70 03                             // ...j.p.

                    Store (One, FDDR) /* \FDDR */
                }


    F600: 70 01 46 44 44 52                                // p.FDDR

                If (Arg1)
                {

    F606: A0 08 69                                         // ..i

                    Store (One, FDLE) /* \FDLE */
                }
            }

    F609: 70 01 46 44 4C 45                                // p.FDLE

            Case
    F60F: A1 4A 13                                         // .J.

 (0x08)
            {

    F612: A0 38 93 5F 54 5F 30 0A 08                       // .8._T_0..

                If (LEqual (Arg2, 0x0200))
                {

    F61B: A0 17 93 6A 0B 00 02                             // ...j...

                    If (Arg1)
                    {

    F622: A0 08 69                                         // ..i

                        Store (One, GLLE) /* \GLLE */
                    }

    F625: 70 01 47 4C 4C 45                                // p.GLLE

                    Else
                    {

    F62B: A1 07                                            // ..

                        Store (Zero, GLLE) /* \GLLE */
                    }
                }


    F62D: 70 00 47 4C 4C 45                                // p.GLLE

                If (LEqual (Arg2, 0x0208))
                {

    F633: A0 17 93 6A 0B 08 02                             // ...j...

                    If (Arg1)
                    {

    F63A: A0 08 69                                         // ..i

                        Store (One, GHLE) /* \GHLE */
                    }

    F63D: 70 01 47 48 4C 45                                // p.GHLE

                    Else
                    {

    F643: A1 07                                            // ..

                        Store (Zero, GHLE) /* \GHLE */
                    }
                }
            }

    F645: 70 00 47 48 4C 45                                // p.GHLE

            Case
    F64B: A1 4E 0F                                         // .N.

 (0x09)
            {

    F64E: A0 38 93 5F 54 5F 30 0A 09                       // .8._T_0..

                If (LEqual (Arg2, 0x0200))
                {

    F657: A0 17 93 6A 0B 00 02                             // ...j...

                    If (Arg1)
                    {

    F65E: A0 08 69                                         // ..i

                        Store (One, GLLE) /* \GLLE */
                    }

    F661: 70 01 47 4C 4C 45                                // p.GLLE

                    Else
                    {

    F667: A1 07                                            // ..

                        Store (Zero, GLLE) /* \GLLE */
                    }
                }


    F669: 70 00 47 4C 4C 45                                // p.GLLE

                If (LEqual (Arg2, 0x0208))
                {

    F66F: A0 17 93 6A 0B 08 02                             // ...j...

                    If (Arg1)
                    {

    F676: A0 08 69                                         // ..i

                        Store (One, GHLE) /* \GHLE */
                    }

    F679: 70 01 47 48 4C 45                                // p.GHLE

                    Else
                    {

    F67F: A1 07                                            // ..

                        Store (Zero, GHLE) /* \GHLE */
                    }
                }
            }

    F681: 70 00 47 48 4C 45                                // p.GHLE

            Case
    F687: A1 42 0C                                         // .B.

 (0x0A)
            {

    F68A: A0 24 93 5F 54 5F 30 0A 0A                       // .$._T_0..

                If (LOr (LEqual (Arg2, 0x60), 
    F693: A0 1B 91 93 6A 0A 60                             // ....j.`

LEqual (Arg2, 0x64)))
                {

    F69A: 93 6A 0A 64                                      // .j.d

                    If (Arg1)
                    {

    F69E: A0 08 69                                         // ..i

                        Store (One, KCLE) /* \KCLE */
                    }

    F6A1: 70 01 4B 43 4C 45                                // p.KCLE

                    Else
                    {

    F6A7: A1 07                                            // ..

                        Store (Zero, KCLE) /* \KCLE */
                    }
                }
            }

    F6A9: 70 00 4B 43 4C 45                                // p.KCLE

            Case
    F6AF: A1 4A 09                                         // .J.

 (0x0B)
            {

    F6B2: A0 24 93 5F 54 5F 30 0A 0B                       // .$._T_0..

                If (LOr (LEqual (Arg2, 0x62), 
    F6BB: A0 1B 91 93 6A 0A 62                             // ....j.b

LEqual (Arg2, 0x66)))
                {

    F6C2: 93 6A 0A 66                                      // .j.f

                    If (Arg1)
                    {

    F6C6: A0 08 69                                         // ..i

                        Store (One, MCLE) /* \MCLE */
                    }

    F6C9: 70 01 4D 43 4C 45                                // p.MCLE

                    Else
                    {

    F6CF: A1 07                                            // ..

                        Store (Zero, MCLE) /* \MCLE */
                    }
                }
            }

    F6D1: 70 00 4D 43 4C 45                                // p.MCLE

            Case
    F6D7: A1 42 07                                         // .B.

 (0x0C)
            {

    F6DA: A0 36 93 5F 54 5F 30 0A 0C                       // .6._T_0..

                If (LEqual (Arg2, 0x2E))
                {

    F6E3: A0 16 93 6A 0A 2E                                // ...j..

                    If (Arg1)
                    {

    F6E9: A0 08 69                                         // ..i

                        Store (One, C1LE) /* \C1LE */
                    }

    F6EC: 70 01 43 31 4C 45                                // p.C1LE

                    Else
                    {

    F6F2: A1 07                                            // ..

                        Store (Zero, C1LE) /* \C1LE */
                    }
                }


    F6F4: 70 00 43 31 4C 45                                // p.C1LE

                If (LEqual (Arg2, 0x4E))
                {

    F6FA: A0 16 93 6A 0A 4E                                // ...j.N

                    If (Arg1)
                    {

    F700: A0 08 69                                         // ..i

                        Store (One, C2LE) /* \C2LE */
                    }

    F703: 70 01 43 32 4C 45                                // p.C2LE

                    Else
                    {

    F709: A1 07                                            // ..

                        Store (Zero, C2LE) /* \C2LE */
                    }
                }
            }

    F70B: 70 00 43 32 4C 45                                // p.C2LE

            Case
    F711: A1 38                                            // .8

 (0x0D)
            {

    F713: A0 36 93 5F 54 5F 30 0A 0D                       // .6._T_0..

                If (LEqual (Arg2, 0x2E))
                {

    F71C: A0 16 93 6A 0A 2E                                // ...j..

                    If (Arg1)
                    {

    F722: A0 08 69                                         // ..i

                        Store (One, C1LE) /* \C1LE */
                    }

    F725: 70 01 43 31 4C 45                                // p.C1LE

                    Else
                    {

    F72B: A1 07                                            // ..

                        Store (Zero, C1LE) /* \C1LE */
                    }
                }


    F72D: 70 00 43 31 4C 45                                // p.C1LE

                If (LEqual (Arg2, 0x4E))
                {

    F733: A0 16 93 6A 0A 4E                                // ...j.N

                    If (Arg1)
                    {

    F739: A0 08 69                                         // ..i

                        Store (One, C2LE) /* \C2LE */
                    }

    F73C: 70 01 43 32 4C 45                                // p.C2LE

                    Else
                    {

    F742: A1 07                                            // ..

                        Store (Zero, C2LE) /* \C2LE */
                    }
                }
            }


    F744: 70 00 43 32 4C 45                                // p.C2LE

        }
    }


    F74A: A5                                               // .

    Method (RDMA, 3, NotSerialized)
    {
    }


    F74B: 14 06 52 44 4D 41 03                             // ..RDMA.

    Scope (_GPE)
    {

    F752: 10 89 9C 01 5F 47 50 45                          // ...._GPE

        Method (_L69, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {

    F75A: 14 4D 5C 5F 4C 36 39 00                          // .M\_L69.

            If (
    F762: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP01.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP01.HPME ()

    F766: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
    F776: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F786: 50 43 49 30 52 50 30 31 48 50 4D 45              // PCI0RP01HPME

                Notify (\_SB.PCI0.RP01, 0x02) // Device Wake
            }


    F792: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
    F7A2: 0A 02                                            // ..

            If (
    F7A4: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP02.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP02.HPME ()

    F7A8: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
    F7B8: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F7C8: 50 43 49 30 52 50 30 32 48 50 4D 45              // PCI0RP02HPME

                Notify (\_SB.PCI0.RP02, 0x02) // Device Wake
            }


    F7D4: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
    F7E4: 0A 02                                            // ..

            If (
    F7E6: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP03.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP03.HPME ()

    F7EA: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
    F7FA: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F80A: 50 43 49 30 52 50 30 33 48 50 4D 45              // PCI0RP03HPME

                Notify (\_SB.PCI0.RP03, 0x02) // Device Wake
            }


    F816: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
    F826: 0A 02                                            // ..

            If (
    F828: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP04.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP04.HPME ()

    F82C: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
    F83C: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F84C: 50 43 49 30 52 50 30 34 48 50 4D 45              // PCI0RP04HPME

                Notify (\_SB.PCI0.RP04, 0x02) // Device Wake
            }


    F858: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
    F868: 0A 02                                            // ..

            If (
    F86A: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP05.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP05.HPME ()

    F86E: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
    F87E: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F88E: 50 43 49 30 52 50 30 35 48 50 4D 45              // PCI0RP05HPME

                Notify (\_SB.PCI0.RP05, 0x02) // Device Wake
            }


    F89A: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
    F8AA: 0A 02                                            // ..

            If (
    F8AC: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP06.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP06.HPME ()

    F8B0: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
    F8C0: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F8D0: 50 43 49 30 52 50 30 36 48 50 4D 45              // PCI0RP06HPME

                Notify (\_SB.PCI0.RP06, 0x02) // Device Wake
            }


    F8DC: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
    F8EC: 0A 02                                            // ..

            If (
    F8EE: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP07.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP07.HPME ()

    F8F2: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
    F902: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F912: 50 43 49 30 52 50 30 37 48 50 4D 45              // PCI0RP07HPME

                Notify (\_SB.PCI0.RP07, 0x02) // Device Wake
            }


    F91E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
    F92E: 0A 02                                            // ..

            If (
    F930: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP08.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP08.HPME ()

    F934: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
    F944: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F954: 50 43 49 30 52 50 30 38 48 50 4D 45              // PCI0RP08HPME

                Notify (\_SB.PCI0.RP08, 0x02) // Device Wake
            }


    F960: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
    F970: 0A 02                                            // ..

            If (
    F972: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP09.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP09.HPME ()

    F976: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
    F986: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F996: 50 43 49 30 52 50 30 39 48 50 4D 45              // PCI0RP09HPME

                Notify (\_SB.PCI0.RP09, 0x02) // Device Wake
            }


    F9A2: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
    F9B2: 0A 02                                            // ..

            If (
    F9B4: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP10.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP10.HPME ()

    F9B8: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
    F9C8: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    F9D8: 50 43 49 30 52 50 31 30 48 50 4D 45              // PCI0RP10HPME

                Notify (\_SB.PCI0.RP10, 0x02) // Device Wake
            }


    F9E4: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
    F9F4: 0A 02                                            // ..

            If (
    F9F6: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP11.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP11.HPME ()

    F9FA: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
    FA0A: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FA1A: 50 43 49 30 52 50 31 31 48 50 4D 45              // PCI0RP11HPME

                Notify (\_SB.PCI0.RP11, 0x02) // Device Wake
            }


    FA26: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
    FA36: 0A 02                                            // ..

            If (
    FA38: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP12.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP12.HPME ()

    FA3C: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
    FA4C: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FA5C: 50 43 49 30 52 50 31 32 48 50 4D 45              // PCI0RP12HPME

                Notify (\_SB.PCI0.RP12, 0x02) // Device Wake
            }


    FA68: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
    FA78: 0A 02                                            // ..

            If (
    FA7A: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP13.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP13.HPME ()

    FA7E: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
    FA8E: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FA9E: 50 43 49 30 52 50 31 33 48 50 4D 45              // PCI0RP13HPME

                Notify (\_SB.PCI0.RP13, 0x02) // Device Wake
            }


    FAAA: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
    FABA: 0A 02                                            // ..

            If (
    FABC: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP14.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP14.HPME ()

    FAC0: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
    FAD0: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FAE0: 50 43 49 30 52 50 31 34 48 50 4D 45              // PCI0RP14HPME

                Notify (\_SB.PCI0.RP14, 0x02) // Device Wake
            }


    FAEC: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
    FAFC: 0A 02                                            // ..

            If (
    FAFE: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP15.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP15.HPME ()

    FB02: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
    FB12: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FB22: 50 43 49 30 52 50 31 35 48 50 4D 45              // PCI0RP15HPME

                Notify (\_SB.PCI0.RP15, 0x02) // Device Wake
            }


    FB2E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
    FB3E: 0A 02                                            // ..

            If (
    FB40: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP16.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP16.HPME ()

    FB44: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
    FB54: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FB64: 50 43 49 30 52 50 31 36 48 50 4D 45              // PCI0RP16HPME

                Notify (\_SB.PCI0.RP16, 0x02) // Device Wake
            }


    FB70: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
    FB80: 0A 02                                            // ..

            If (
    FB82: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP17.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP17.HPME ()

    FB86: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
    FB96: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FBA6: 50 43 49 30 52 50 31 37 48 50 4D 45              // PCI0RP17HPME

                Notify (\_SB.PCI0.RP17, 0x02) // Device Wake
            }


    FBB2: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
    FBC2: 0A 02                                            // ..

            If (
    FBC4: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP18.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP18.HPME ()

    FBC8: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
    FBD8: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FBE8: 50 43 49 30 52 50 31 38 48 50 4D 45              // PCI0RP18HPME

                Notify (\_SB.PCI0.RP18, 0x02) // Device Wake
            }


    FBF4: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
    FC04: 0A 02                                            // ..

            If (
    FC06: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP19.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP19.HPME ()

    FC0A: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
    FC1A: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FC2A: 50 43 49 30 52 50 31 39 48 50 4D 45              // PCI0RP19HPME

                Notify (\_SB.PCI0.RP19, 0x02) // Device Wake
            }


    FC36: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
    FC46: 0A 02                                            // ..

            If (
    FC48: A0 41 04 92                                      // .A..

LNotEqual (\_SB.PCI0.RP20.VDID, 0xFFFFFFFF))
            {
                \_SB.PCI0.RP20.HPME ()

    FC4C: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
    FC5C: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FC6C: 50 43 49 30 52 50 32 30 48 50 4D 45              // PCI0RP20HPME

                Notify (\_SB.PCI0.RP20, 0x02) // Device Wake
            }


    FC78: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
    FC88: 0A 02                                            // ..

            If (LEqual (D1F0, One))
            {
                \_SB.PCI0.PEG0.HPME ()
                Notify (\_SB.PCI0.PEG0, 0x02) // Device Wake

    FC8A: A0 43 04 93 44 31 46 30 01 5C 2F 04 5F 53 42 5F  // .C..D1F0.\/._SB_
    FC9A: 50 43 49 30 50 45 47 30 48 50 4D 45 86 5C 2F 03  // PCI0PEG0HPME.\/.
    FCAA: 5F 53 42 5F 50 43 49 30 50 45 47 30 0A 02        // _SB_PCI0PEG0..

                Notify (\_SB.PCI0.PEG0.PEGP, 0x02) // Device Wake
            }


    FCB8: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
    FCC8: 50 45 47 50 0A 02                                // PEGP..

            If (LEqual (D1F1, One))
            {
                \_SB.PCI0.PEG1.HPME ()

    FCCE: A0 2C 93 44 31 46 31 01 5C 2F 04 5F 53 42 5F 50  // .,.D1F1.\/._SB_P
    FCDE: 43 49 30 50 45 47 31 48 50 4D 45                 // CI0PEG1HPME

                Notify (\_SB.PCI0.PEG1, 0x02) // Device Wake
            }


    FCE9: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 31  // .\/._SB_PCI0PEG1
    FCF9: 0A 02                                            // ..

            If (LEqual (D1F2, One))
            {
                \_SB.PCI0.PEG2.HPME ()

    FCFB: A0 2C 93 44 31 46 32 01 5C 2F 04 5F 53 42 5F 50  // .,.D1F2.\/._SB_P
    FD0B: 43 49 30 50 45 47 32 48 50 4D 45                 // CI0PEG2HPME

                Notify (\_SB.PCI0.PEG2, 0x02) // Device Wake
            }
        }


    FD16: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 32  // .\/._SB_PCI0PEG2
    FD26: 0A 02                                            // ..

        Method (_L61, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Add (L01C, One, L01C) /* \L01C */
            P8XH (Zero, One)
            P8XH (One, L01C)

    FD28: 14 81 2B 01 5F 4C 36 31 00 72 4C 30 31 43 01 4C  // ..+._L61.rL01C.L
    FD38: 30 31 43 50 38 58 48 00 01 50 38 58 48 01 4C 30  // 01CP8XH..P8XH.L0
    FD48: 31 43                                            // 1C

            If (LAnd (
    FD4A: A0 49 0E 90 92                                   // .I...

LNotEqual (\_SB.PCI0.RP01.VDID, 0xFFFFFFFF), \_SB.PCI0.RP01.HPSX))
            {

    FD4F: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
    FD5F: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FD6F: 50 43 49 30 52 50 30 31 48 50 53 58              // PCI0RP01HPSX

                If (LOr (
    FD7B: A0 14 91 92                                      // ....

LNotEqual (TBTS, One), 
    FD7F: 93 54 42 54 53 01                                // .TBTS.


    FD85: 92                                               // .

LNotEqual (TBSE, One)))
                {

    FD86: 93 54 42 53 45 01                                // .TBSE.

                    Sleep (0x64)
                }


    FD8C: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP01.PDCX)
                {
                    Store (One, \_SB.PCI0.RP01.PDCX)
                    Store (One, \_SB.PCI0.RP01.HPSX)

    FD90: A0 4C 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .L.\/._SB_PCI0RP
    FDA0: 30 31 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 01PDCXp.\/._SB_P
    FDB0: 43 49 30 52 50 30 31 50 44 43 58 70 01 5C 2F 04  // CI0RP01PDCXp.\/.
    FDC0: 5F 53 42 5F 50 43 49 30 52 50 30 31 48 50 53 58  // _SB_PCI0RP01HPSX

                    If (LNot (\_SB.PCI0.RP01.PDSX))
                    {

    FDD0: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    FDE0: 30 31 50 44 53 58                                // 01PDSX

                        Store (Zero, \_SB.PCI0.RP01.L0SE)
                    }


    FDE6: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    FDF6: 31 4C 30 53 45                                   // 1L0SE

                    If (LOr (
    FDFB: A0 21 91 92                                      // .!..

LNotEqual (TBTS, One), 
    FDFF: 93 54 42 54 53 01                                // .TBTS.


    FE05: 92                                               // .

LNotEqual (TBSE, One)))
                    {

    FE06: 93 54 42 53 45 01                                // .TBSE.

                        Notify (\_SB.PCI0.RP01, Zero) // Bus Check
                    }
                }

    FE0C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
    FE1C: 00                                               // .

                Else
                {

    FE1D: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP01.HPSX)
                }
            }


    FE1F: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    FE2F: 31 48 50 53 58                                   // 1HPSX

            If (LAnd (
    FE34: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP02.VDID, 0xFFFFFFFF), \_SB.PCI0.RP02.HPSX))
            {

    FE39: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
    FE49: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FE59: 50 43 49 30 52 50 30 32 48 50 53 58              // PCI0RP02HPSX

                If (LOr (
    FE65: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
    FE69: 93 54 42 54 53 01                                // .TBTS.


    FE6F: 92                                               // .

LNotEqual (TBSE, 0x02)))
                {

    FE70: 93 54 42 53 45 0A 02                             // .TBSE..

                    Sleep (0x64)
                }


    FE77: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP02.PDCX)
                {
                    Store (One, \_SB.PCI0.RP02.PDCX)
                    Store (One, \_SB.PCI0.RP02.HPSX)

    FE7B: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
    FE8B: 30 32 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 02PDCXp.\/._SB_P
    FE9B: 43 49 30 52 50 30 32 50 44 43 58 70 01 5C 2F 04  // CI0RP02PDCXp.\/.
    FEAB: 5F 53 42 5F 50 43 49 30 52 50 30 32 48 50 53 58  // _SB_PCI0RP02HPSX

                    If (LNot (\_SB.PCI0.RP02.PDSX))
                    {

    FEBB: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    FECB: 30 32 50 44 53 58                                // 02PDSX

                        Store (Zero, \_SB.PCI0.RP02.L0SE)
                    }


    FED1: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    FEE1: 32 4C 30 53 45                                   // 2L0SE

                    If (LOr (
    FEE6: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
    FEEA: 93 54 42 54 53 01                                // .TBTS.


    FEF0: 92                                               // .

LNotEqual (TBSE, 0x02)))
                    {

    FEF1: 93 54 42 53 45 0A 02                             // .TBSE..

                        Notify (\_SB.PCI0.RP02, Zero) // Bus Check
                    }
                }

    FEF8: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
    FF08: 00                                               // .

                Else
                {

    FF09: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP02.HPSX)
                }
            }


    FF0B: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    FF1B: 32 48 50 53 58                                   // 2HPSX

            If (LAnd (
    FF20: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP03.VDID, 0xFFFFFFFF), \_SB.PCI0.RP03.HPSX))
            {

    FF25: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
    FF35: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
    FF45: 50 43 49 30 52 50 30 33 48 50 53 58              // PCI0RP03HPSX

                If (LOr (
    FF51: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
    FF55: 93 54 42 54 53 01                                // .TBTS.


    FF5B: 92                                               // .

LNotEqual (TBSE, 0x03)))
                {

    FF5C: 93 54 42 53 45 0A 03                             // .TBSE..

                    Sleep (0x64)
                }


    FF63: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP03.PDCX)
                {
                    Store (One, \_SB.PCI0.RP03.PDCX)
                    Store (One, \_SB.PCI0.RP03.HPSX)

    FF67: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
    FF77: 30 33 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 03PDCXp.\/._SB_P
    FF87: 43 49 30 52 50 30 33 50 44 43 58 70 01 5C 2F 04  // CI0RP03PDCXp.\/.
    FF97: 5F 53 42 5F 50 43 49 30 52 50 30 33 48 50 53 58  // _SB_PCI0RP03HPSX

                    If (LNot (\_SB.PCI0.RP03.PDSX))
                    {

    FFA7: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    FFB7: 30 33 50 44 53 58                                // 03PDSX

                        Store (Zero, \_SB.PCI0.RP03.L0SE)
                    }


    FFBD: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    FFCD: 33 4C 30 53 45                                   // 3L0SE

                    If (LOr (
    FFD2: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
    FFD6: 93 54 42 54 53 01                                // .TBTS.


    FFDC: 92                                               // .

LNotEqual (TBSE, 0x03)))
                    {

    FFDD: 93 54 42 53 45 0A 03                             // .TBSE..

                        Notify (\_SB.PCI0.RP03, Zero) // Bus Check
                    }
                }

    FFE4: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
    FFF4: 00                                               // .

                Else
                {

    FFF5: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP03.HPSX)
                }
            }


    FFF7: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   10007: 33 48 50 53 58                                   // 3HPSX

            If (LAnd (
   1000C: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP04.VDID, 0xFFFFFFFF), \_SB.PCI0.RP04.HPSX))
            {

   10011: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
   10021: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   10031: 50 43 49 30 52 50 30 34 48 50 53 58              // PCI0RP04HPSX

                If (LOr (
   1003D: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10041: 93 54 42 54 53 01                                // .TBTS.


   10047: 92                                               // .

LNotEqual (TBSE, 0x04)))
                {

   10048: 93 54 42 53 45 0A 04                             // .TBSE..

                    Sleep (0x64)
                }


   1004F: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP04.PDCX)
                {
                    Store (One, \_SB.PCI0.RP04.PDCX)
                    Store (One, \_SB.PCI0.RP04.HPSX)

   10053: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   10063: 30 34 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 04PDCXp.\/._SB_P
   10073: 43 49 30 52 50 30 34 50 44 43 58 70 01 5C 2F 04  // CI0RP04PDCXp.\/.
   10083: 5F 53 42 5F 50 43 49 30 52 50 30 34 48 50 53 58  // _SB_PCI0RP04HPSX

                    If (LNot (\_SB.PCI0.RP04.PDSX))
                    {

   10093: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   100A3: 30 34 50 44 53 58                                // 04PDSX

                        Store (Zero, \_SB.PCI0.RP04.L0SE)
                    }


   100A9: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   100B9: 34 4C 30 53 45                                   // 4L0SE

                    If (LOr (
   100BE: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   100C2: 93 54 42 54 53 01                                // .TBTS.


   100C8: 92                                               // .

LNotEqual (TBSE, 0x04)))
                    {

   100C9: 93 54 42 53 45 0A 04                             // .TBSE..

                        Notify (\_SB.PCI0.RP04, Zero) // Bus Check
                    }
                }

   100D0: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
   100E0: 00                                               // .

                Else
                {

   100E1: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP04.HPSX)
                }
            }


   100E3: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   100F3: 34 48 50 53 58                                   // 4HPSX

            If (LAnd (
   100F8: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP05.VDID, 0xFFFFFFFF), \_SB.PCI0.RP05.HPSX))
            {

   100FD: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
   1010D: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   1011D: 50 43 49 30 52 50 30 35 48 50 53 58              // PCI0RP05HPSX

                If (LOr (
   10129: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   1012D: 93 54 42 54 53 01                                // .TBTS.


   10133: 92                                               // .

LNotEqual (TBSE, 0x05)))
                {

   10134: 93 54 42 53 45 0A 05                             // .TBSE..

                    Sleep (0x64)
                }


   1013B: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP05.PDCX)
                {
                    Store (One, \_SB.PCI0.RP05.PDCX)
                    Store (One, \_SB.PCI0.RP05.HPSX)

   1013F: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   1014F: 30 35 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 05PDCXp.\/._SB_P
   1015F: 43 49 30 52 50 30 35 50 44 43 58 70 01 5C 2F 04  // CI0RP05PDCXp.\/.
   1016F: 5F 53 42 5F 50 43 49 30 52 50 30 35 48 50 53 58  // _SB_PCI0RP05HPSX

                    If (LNot (\_SB.PCI0.RP05.PDSX))
                    {

   1017F: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   1018F: 30 35 50 44 53 58                                // 05PDSX

                        Store (Zero, \_SB.PCI0.RP05.L0SE)
                    }


   10195: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   101A5: 35 4C 30 53 45                                   // 5L0SE

                    If (LOr (
   101AA: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   101AE: 93 54 42 54 53 01                                // .TBTS.


   101B4: 92                                               // .

LNotEqual (TBSE, 0x05)))
                    {

   101B5: 93 54 42 53 45 0A 05                             // .TBSE..

                        Notify (\_SB.PCI0.RP05, Zero) // Bus Check
                    }
                }

   101BC: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
   101CC: 00                                               // .

                Else
                {

   101CD: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP05.HPSX)
                }
            }


   101CF: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   101DF: 35 48 50 53 58                                   // 5HPSX

            If (LAnd (
   101E4: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP06.VDID, 0xFFFFFFFF), \_SB.PCI0.RP06.HPSX))
            {

   101E9: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
   101F9: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   10209: 50 43 49 30 52 50 30 36 48 50 53 58              // PCI0RP06HPSX

                If (LOr (
   10215: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10219: 93 54 42 54 53 01                                // .TBTS.


   1021F: 92                                               // .

LNotEqual (TBSE, 0x06)))
                {

   10220: 93 54 42 53 45 0A 06                             // .TBSE..

                    Sleep (0x64)
                }


   10227: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP06.PDCX)
                {
                    Store (One, \_SB.PCI0.RP06.PDCX)
                    Store (One, \_SB.PCI0.RP06.HPSX)

   1022B: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   1023B: 30 36 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 06PDCXp.\/._SB_P
   1024B: 43 49 30 52 50 30 36 50 44 43 58 70 01 5C 2F 04  // CI0RP06PDCXp.\/.
   1025B: 5F 53 42 5F 50 43 49 30 52 50 30 36 48 50 53 58  // _SB_PCI0RP06HPSX

                    If (LNot (\_SB.PCI0.RP06.PDSX))
                    {

   1026B: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   1027B: 30 36 50 44 53 58                                // 06PDSX

                        Store (Zero, \_SB.PCI0.RP06.L0SE)
                    }


   10281: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   10291: 36 4C 30 53 45                                   // 6L0SE

                    If (LOr (
   10296: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   1029A: 93 54 42 54 53 01                                // .TBTS.


   102A0: 92                                               // .

LNotEqual (TBSE, 0x06)))
                    {

   102A1: 93 54 42 53 45 0A 06                             // .TBSE..

                        Notify (\_SB.PCI0.RP06, Zero) // Bus Check
                    }
                }

   102A8: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
   102B8: 00                                               // .

                Else
                {

   102B9: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP06.HPSX)
                }
            }


   102BB: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   102CB: 36 48 50 53 58                                   // 6HPSX

            If (LAnd (
   102D0: A0 4C 0F 90 92                                   // .L...

LNotEqual (\_SB.PCI0.RP07.VDID, 0xFFFFFFFF), \_SB.PCI0.RP07.HPSX))
            {

   102D5: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
   102E5: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   102F5: 50 43 49 30 52 50 30 37 48 50 53 58              // PCI0RP07HPSX

                If (LOr (
   10301: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10305: 93 54 42 54 53 01                                // .TBTS.


   1030B: 92                                               // .

LNotEqual (TBSE, 0x07)))
                {

   1030C: 93 54 42 53 45 0A 07                             // .TBSE..

                    Sleep (0x64)
                }


   10313: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP07.PDCX)
                {
                    Store (One, \_SB.PCI0.RP07.PDCX)
                    Store (One, \_SB.PCI0.RP07.HPSX)

   10317: A0 4E 09 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .N.\/._SB_PCI0RP
   10327: 30 37 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 07PDCXp.\/._SB_P
   10337: 43 49 30 52 50 30 37 50 44 43 58 70 01 5C 2F 04  // CI0RP07PDCXp.\/.
   10347: 5F 53 42 5F 50 43 49 30 52 50 30 37 48 50 53 58  // _SB_PCI0RP07HPSX

                    If (LNot (\_SB.PCI0.RP07.PDSX))
                    {

   10357: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10367: 30 37 50 44 53 58                                // 07PDSX

                        Store (Zero, \_SB.PCI0.RP07.L0SE)
                    }


   1036D: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   1037D: 37 4C 30 53 45                                   // 7L0SE

                    If (LEqual (PFLV, 0x02))
                    {

   10382: A0 2B 93 50 46 4C 56 0A 02                       // .+.PFLV..

                        If (LOr (
   1038B: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   1038F: 93 54 42 54 53 01                                // .TBTS.


   10395: 92                                               // .

LNotEqual (TBSE, 0x07)))
                        {

   10396: 93 54 42 53 45 0A 07                             // .TBSE..

                            Notify (\_SB.PCI0.RP07, Zero) // Bus Check
                        }
                    }

   1039D: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
   103AD: 00                                               // .

                    ElseIf
   103AE: A1 07                                            // ..

 (ECON){}
                }

   103B0: A0 05 45 43 4F 4E                                // ..ECON

                Else
                {

   103B6: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP07.HPSX)
                }
            }


   103B8: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   103C8: 37 48 50 53 58                                   // 7HPSX

            If (LAnd (
   103CD: A0 4C 0F 90 92                                   // .L...

LNotEqual (\_SB.PCI0.RP08.VDID, 0xFFFFFFFF), \_SB.PCI0.RP08.HPSX))
            {

   103D2: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
   103E2: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   103F2: 50 43 49 30 52 50 30 38 48 50 53 58              // PCI0RP08HPSX

                If (LOr (
   103FE: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10402: 93 54 42 54 53 01                                // .TBTS.


   10408: 92                                               // .

LNotEqual (TBSE, 0x08)))
                {

   10409: 93 54 42 53 45 0A 08                             // .TBSE..

                    Sleep (0x64)
                }


   10410: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP08.PDCX)
                {
                    Store (One, \_SB.PCI0.RP08.PDCX)
                    Store (One, \_SB.PCI0.RP08.HPSX)

   10414: A0 4E 09 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .N.\/._SB_PCI0RP
   10424: 30 38 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 08PDCXp.\/._SB_P
   10434: 43 49 30 52 50 30 38 50 44 43 58 70 01 5C 2F 04  // CI0RP08PDCXp.\/.
   10444: 5F 53 42 5F 50 43 49 30 52 50 30 38 48 50 53 58  // _SB_PCI0RP08HPSX

                    If (LNot (\_SB.PCI0.RP08.PDSX))
                    {

   10454: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10464: 30 38 50 44 53 58                                // 08PDSX

                        Store (Zero, \_SB.PCI0.RP08.L0SE)
                    }


   1046A: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   1047A: 38 4C 30 53 45                                   // 8L0SE

                    If (LEqual (PFLV, 0x02))
                    {

   1047F: A0 2B 93 50 46 4C 56 0A 02                       // .+.PFLV..

                        If (LOr (
   10488: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   1048C: 93 54 42 54 53 01                                // .TBTS.


   10492: 92                                               // .

LNotEqual (TBSE, 0x08)))
                        {

   10493: 93 54 42 53 45 0A 08                             // .TBSE..

                            Notify (\_SB.PCI0.RP08, Zero) // Bus Check
                        }
                    }

   1049A: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
   104AA: 00                                               // .

                    ElseIf
   104AB: A1 07                                            // ..

 (ECON){}
                }

   104AD: A0 05 45 43 4F 4E                                // ..ECON

                Else
                {

   104B3: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP08.HPSX)
                }
            }


   104B5: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   104C5: 38 48 50 53 58                                   // 8HPSX

            If (LAnd (
   104CA: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP09.VDID, 0xFFFFFFFF), \_SB.PCI0.RP09.HPSX))
            {

   104CF: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
   104DF: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   104EF: 50 43 49 30 52 50 30 39 48 50 53 58              // PCI0RP09HPSX

                If (LOr (
   104FB: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   104FF: 93 54 42 54 53 01                                // .TBTS.


   10505: 92                                               // .

LNotEqual (TBSE, 0x09)))
                {

   10506: 93 54 42 53 45 0A 09                             // .TBSE..

                    Sleep (0x64)
                }


   1050D: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP09.PDCX)
                {
                    Store (One, \_SB.PCI0.RP09.PDCX)
                    Store (One, \_SB.PCI0.RP09.HPSX)

   10511: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   10521: 30 39 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 09PDCXp.\/._SB_P
   10531: 43 49 30 52 50 30 39 50 44 43 58 70 01 5C 2F 04  // CI0RP09PDCXp.\/.
   10541: 5F 53 42 5F 50 43 49 30 52 50 30 39 48 50 53 58  // _SB_PCI0RP09HPSX

                    If (LNot (\_SB.PCI0.RP09.PDSX))
                    {

   10551: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10561: 30 39 50 44 53 58                                // 09PDSX

                        Store (Zero, \_SB.PCI0.RP09.L0SE)
                    }


   10567: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   10577: 39 4C 30 53 45                                   // 9L0SE

                    If (LOr (
   1057C: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10580: 93 54 42 54 53 01                                // .TBTS.


   10586: 92                                               // .

LNotEqual (TBSE, 0x09)))
                    {

   10587: 93 54 42 53 45 0A 09                             // .TBSE..

                        Notify (\_SB.PCI0.RP09, Zero) // Bus Check
                    }
                }

   1058E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
   1059E: 00                                               // .

                Else
                {

   1059F: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP09.HPSX)
                }
            }


   105A1: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
   105B1: 39 48 50 53 58                                   // 9HPSX

            If (LAnd (
   105B6: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP10.VDID, 0xFFFFFFFF), \_SB.PCI0.RP10.HPSX))
            {

   105BB: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
   105CB: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   105DB: 50 43 49 30 52 50 31 30 48 50 53 58              // PCI0RP10HPSX

                If (LOr (
   105E7: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   105EB: 93 54 42 54 53 01                                // .TBTS.


   105F1: 92                                               // .

LNotEqual (TBSE, 0x0A)))
                {

   105F2: 93 54 42 53 45 0A 0A                             // .TBSE..

                    Sleep (0x64)
                }


   105F9: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP10.PDCX)
                {
                    Store (One, \_SB.PCI0.RP10.PDCX)
                    Store (One, \_SB.PCI0.RP10.HPSX)

   105FD: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   1060D: 31 30 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 10PDCXp.\/._SB_P
   1061D: 43 49 30 52 50 31 30 50 44 43 58 70 01 5C 2F 04  // CI0RP10PDCXp.\/.
   1062D: 5F 53 42 5F 50 43 49 30 52 50 31 30 48 50 53 58  // _SB_PCI0RP10HPSX

                    If (LNot (\_SB.PCI0.RP10.PDSX))
                    {

   1063D: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   1064D: 31 30 50 44 53 58                                // 10PDSX

                        Store (Zero, \_SB.PCI0.RP10.L0SE)
                    }


   10653: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10663: 30 4C 30 53 45                                   // 0L0SE

                    If (LOr (
   10668: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   1066C: 93 54 42 54 53 01                                // .TBTS.


   10672: 92                                               // .

LNotEqual (TBSE, 0x0A)))
                    {

   10673: 93 54 42 53 45 0A 0A                             // .TBSE..

                        Notify (\_SB.PCI0.RP10, Zero) // Bus Check
                    }
                }

   1067A: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
   1068A: 00                                               // .

                Else
                {

   1068B: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP10.HPSX)
                }
            }


   1068D: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   1069D: 30 48 50 53 58                                   // 0HPSX

            If (LAnd (
   106A2: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP11.VDID, 0xFFFFFFFF), \_SB.PCI0.RP11.HPSX))
            {

   106A7: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
   106B7: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   106C7: 50 43 49 30 52 50 31 31 48 50 53 58              // PCI0RP11HPSX

                If (LOr (
   106D3: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   106D7: 93 54 42 54 53 01                                // .TBTS.


   106DD: 92                                               // .

LNotEqual (TBSE, 0x0B)))
                {

   106DE: 93 54 42 53 45 0A 0B                             // .TBSE..

                    Sleep (0x64)
                }


   106E5: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP11.PDCX)
                {
                    Store (One, \_SB.PCI0.RP11.PDCX)
                    Store (One, \_SB.PCI0.RP11.HPSX)

   106E9: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   106F9: 31 31 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 11PDCXp.\/._SB_P
   10709: 43 49 30 52 50 31 31 50 44 43 58 70 01 5C 2F 04  // CI0RP11PDCXp.\/.
   10719: 5F 53 42 5F 50 43 49 30 52 50 31 31 48 50 53 58  // _SB_PCI0RP11HPSX

                    If (LNot (\_SB.PCI0.RP11.PDSX))
                    {

   10729: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10739: 31 31 50 44 53 58                                // 11PDSX

                        Store (Zero, \_SB.PCI0.RP11.L0SE)
                    }


   1073F: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   1074F: 31 4C 30 53 45                                   // 1L0SE

                    If (LOr (
   10754: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10758: 93 54 42 54 53 01                                // .TBTS.


   1075E: 92                                               // .

LNotEqual (TBSE, 0x0B)))
                    {

   1075F: 93 54 42 53 45 0A 0B                             // .TBSE..

                        Notify (\_SB.PCI0.RP11, Zero) // Bus Check
                    }
                }

   10766: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
   10776: 00                                               // .

                Else
                {

   10777: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP11.HPSX)
                }
            }


   10779: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10789: 31 48 50 53 58                                   // 1HPSX

            If (LAnd (
   1078E: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP12.VDID, 0xFFFFFFFF), \_SB.PCI0.RP12.HPSX))
            {

   10793: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
   107A3: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   107B3: 50 43 49 30 52 50 31 32 48 50 53 58              // PCI0RP12HPSX

                If (LOr (
   107BF: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   107C3: 93 54 42 54 53 01                                // .TBTS.


   107C9: 92                                               // .

LNotEqual (TBSE, 0x0C)))
                {

   107CA: 93 54 42 53 45 0A 0C                             // .TBSE..

                    Sleep (0x64)
                }


   107D1: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP12.PDCX)
                {
                    Store (One, \_SB.PCI0.RP12.PDCX)
                    Store (One, \_SB.PCI0.RP12.HPSX)

   107D5: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   107E5: 31 32 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 12PDCXp.\/._SB_P
   107F5: 43 49 30 52 50 31 32 50 44 43 58 70 01 5C 2F 04  // CI0RP12PDCXp.\/.
   10805: 5F 53 42 5F 50 43 49 30 52 50 31 32 48 50 53 58  // _SB_PCI0RP12HPSX

                    If (LNot (\_SB.PCI0.RP12.PDSX))
                    {

   10815: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10825: 31 32 50 44 53 58                                // 12PDSX

                        Store (Zero, \_SB.PCI0.RP12.L0SE)
                    }


   1082B: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   1083B: 32 4C 30 53 45                                   // 2L0SE

                    If (LOr (
   10840: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10844: 93 54 42 54 53 01                                // .TBTS.


   1084A: 92                                               // .

LNotEqual (TBSE, 0x0C)))
                    {

   1084B: 93 54 42 53 45 0A 0C                             // .TBSE..

                        Notify (\_SB.PCI0.RP12, Zero) // Bus Check
                    }
                }

   10852: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
   10862: 00                                               // .

                Else
                {

   10863: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP12.HPSX)
                }
            }


   10865: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10875: 32 48 50 53 58                                   // 2HPSX

            If (LAnd (
   1087A: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP13.VDID, 0xFFFFFFFF), \_SB.PCI0.RP13.HPSX))
            {

   1087F: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
   1088F: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   1089F: 50 43 49 30 52 50 31 33 48 50 53 58              // PCI0RP13HPSX

                If (LOr (
   108AB: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   108AF: 93 54 42 54 53 01                                // .TBTS.


   108B5: 92                                               // .

LNotEqual (TBSE, 0x0D)))
                {

   108B6: 93 54 42 53 45 0A 0D                             // .TBSE..

                    Sleep (0x64)
                }


   108BD: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP13.PDCX)
                {
                    Store (One, \_SB.PCI0.RP13.PDCX)
                    Store (One, \_SB.PCI0.RP13.HPSX)

   108C1: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   108D1: 31 33 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 13PDCXp.\/._SB_P
   108E1: 43 49 30 52 50 31 33 50 44 43 58 70 01 5C 2F 04  // CI0RP13PDCXp.\/.
   108F1: 5F 53 42 5F 50 43 49 30 52 50 31 33 48 50 53 58  // _SB_PCI0RP13HPSX

                    If (LNot (\_SB.PCI0.RP13.PDSX))
                    {

   10901: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10911: 31 33 50 44 53 58                                // 13PDSX

                        Store (Zero, \_SB.PCI0.RP13.L0SE)
                    }


   10917: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10927: 33 4C 30 53 45                                   // 3L0SE

                    If (LOr (
   1092C: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10930: 93 54 42 54 53 01                                // .TBTS.


   10936: 92                                               // .

LNotEqual (TBSE, 0x0D)))
                    {

   10937: 93 54 42 53 45 0A 0D                             // .TBSE..

                        Notify (\_SB.PCI0.RP13, Zero) // Bus Check
                    }
                }

   1093E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
   1094E: 00                                               // .

                Else
                {

   1094F: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP13.HPSX)
                }
            }


   10951: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10961: 33 48 50 53 58                                   // 3HPSX

            If (LAnd (
   10966: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP14.VDID, 0xFFFFFFFF), \_SB.PCI0.RP14.HPSX))
            {

   1096B: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
   1097B: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   1098B: 50 43 49 30 52 50 31 34 48 50 53 58              // PCI0RP14HPSX

                If (LOr (
   10997: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   1099B: 93 54 42 54 53 01                                // .TBTS.


   109A1: 92                                               // .

LNotEqual (TBSE, 0x0E)))
                {

   109A2: 93 54 42 53 45 0A 0E                             // .TBSE..

                    Sleep (0x64)
                }


   109A9: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP14.PDCX)
                {
                    Store (One, \_SB.PCI0.RP14.PDCX)
                    Store (One, \_SB.PCI0.RP14.HPSX)

   109AD: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   109BD: 31 34 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 14PDCXp.\/._SB_P
   109CD: 43 49 30 52 50 31 34 50 44 43 58 70 01 5C 2F 04  // CI0RP14PDCXp.\/.
   109DD: 5F 53 42 5F 50 43 49 30 52 50 31 34 48 50 53 58  // _SB_PCI0RP14HPSX

                    If (LNot (\_SB.PCI0.RP14.PDSX))
                    {

   109ED: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   109FD: 31 34 50 44 53 58                                // 14PDSX

                        Store (Zero, \_SB.PCI0.RP14.L0SE)
                    }


   10A03: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10A13: 34 4C 30 53 45                                   // 4L0SE

                    If (LOr (
   10A18: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10A1C: 93 54 42 54 53 01                                // .TBTS.


   10A22: 92                                               // .

LNotEqual (TBSE, 0x0E)))
                    {

   10A23: 93 54 42 53 45 0A 0E                             // .TBSE..

                        Notify (\_SB.PCI0.RP14, Zero) // Bus Check
                    }
                }

   10A2A: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
   10A3A: 00                                               // .

                Else
                {

   10A3B: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP14.HPSX)
                }
            }


   10A3D: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10A4D: 34 48 50 53 58                                   // 4HPSX

            If (LAnd (
   10A52: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP15.VDID, 0xFFFFFFFF), \_SB.PCI0.RP15.HPSX))
            {

   10A57: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
   10A67: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   10A77: 50 43 49 30 52 50 31 35 48 50 53 58              // PCI0RP15HPSX

                If (LOr (
   10A83: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10A87: 93 54 42 54 53 01                                // .TBTS.


   10A8D: 92                                               // .

LNotEqual (TBSE, 0x0F)))
                {

   10A8E: 93 54 42 53 45 0A 0F                             // .TBSE..

                    Sleep (0x64)
                }


   10A95: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP15.PDCX)
                {
                    Store (One, \_SB.PCI0.RP15.PDCX)
                    Store (One, \_SB.PCI0.RP15.HPSX)

   10A99: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   10AA9: 31 35 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 15PDCXp.\/._SB_P
   10AB9: 43 49 30 52 50 31 35 50 44 43 58 70 01 5C 2F 04  // CI0RP15PDCXp.\/.
   10AC9: 5F 53 42 5F 50 43 49 30 52 50 31 35 48 50 53 58  // _SB_PCI0RP15HPSX

                    If (LNot (\_SB.PCI0.RP15.PDSX))
                    {

   10AD9: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10AE9: 31 35 50 44 53 58                                // 15PDSX

                        Store (Zero, \_SB.PCI0.RP15.L0SE)
                    }


   10AEF: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10AFF: 35 4C 30 53 45                                   // 5L0SE

                    If (LOr (
   10B04: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10B08: 93 54 42 54 53 01                                // .TBTS.


   10B0E: 92                                               // .

LNotEqual (TBSE, 0x0F)))
                    {

   10B0F: 93 54 42 53 45 0A 0F                             // .TBSE..

                        Notify (\_SB.PCI0.RP15, Zero) // Bus Check
                    }
                }

   10B16: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
   10B26: 00                                               // .

                Else
                {

   10B27: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP15.HPSX)
                }
            }


   10B29: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10B39: 35 48 50 53 58                                   // 5HPSX

            If (LAnd (
   10B3E: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP16.VDID, 0xFFFFFFFF), \_SB.PCI0.RP16.HPSX))
            {

   10B43: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
   10B53: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   10B63: 50 43 49 30 52 50 31 36 48 50 53 58              // PCI0RP16HPSX

                If (LOr (
   10B6F: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10B73: 93 54 42 54 53 01                                // .TBTS.


   10B79: 92                                               // .

LNotEqual (TBSE, 0x10)))
                {

   10B7A: 93 54 42 53 45 0A 10                             // .TBSE..

                    Sleep (0x64)
                }


   10B81: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP16.PDCX)
                {
                    Store (One, \_SB.PCI0.RP16.PDCX)
                    Store (One, \_SB.PCI0.RP16.HPSX)

   10B85: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   10B95: 31 36 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 16PDCXp.\/._SB_P
   10BA5: 43 49 30 52 50 31 36 50 44 43 58 70 01 5C 2F 04  // CI0RP16PDCXp.\/.
   10BB5: 5F 53 42 5F 50 43 49 30 52 50 31 36 48 50 53 58  // _SB_PCI0RP16HPSX

                    If (LNot (\_SB.PCI0.RP16.PDSX))
                    {

   10BC5: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10BD5: 31 36 50 44 53 58                                // 16PDSX

                        Store (Zero, \_SB.PCI0.RP16.L0SE)
                    }


   10BDB: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10BEB: 36 4C 30 53 45                                   // 6L0SE

                    If (LOr (
   10BF0: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10BF4: 93 54 42 54 53 01                                // .TBTS.


   10BFA: 92                                               // .

LNotEqual (TBSE, 0x10)))
                    {

   10BFB: 93 54 42 53 45 0A 10                             // .TBSE..

                        Notify (\_SB.PCI0.RP16, Zero) // Bus Check
                    }
                }

   10C02: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
   10C12: 00                                               // .

                Else
                {

   10C13: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP16.HPSX)
                }
            }


   10C15: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10C25: 36 48 50 53 58                                   // 6HPSX

            If (LAnd (
   10C2A: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP17.VDID, 0xFFFFFFFF), \_SB.PCI0.RP17.HPSX))
            {

   10C2F: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
   10C3F: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   10C4F: 50 43 49 30 52 50 31 37 48 50 53 58              // PCI0RP17HPSX

                If (LOr (
   10C5B: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10C5F: 93 54 42 54 53 01                                // .TBTS.


   10C65: 92                                               // .

LNotEqual (TBSE, 0x11)))
                {

   10C66: 93 54 42 53 45 0A 11                             // .TBSE..

                    Sleep (0x64)
                }


   10C6D: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP17.PDCX)
                {
                    Store (One, \_SB.PCI0.RP17.PDCX)
                    Store (One, \_SB.PCI0.RP17.HPSX)

   10C71: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   10C81: 31 37 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 17PDCXp.\/._SB_P
   10C91: 43 49 30 52 50 31 37 50 44 43 58 70 01 5C 2F 04  // CI0RP17PDCXp.\/.
   10CA1: 5F 53 42 5F 50 43 49 30 52 50 31 37 48 50 53 58  // _SB_PCI0RP17HPSX

                    If (LNot (\_SB.PCI0.RP17.PDSX))
                    {

   10CB1: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10CC1: 31 37 50 44 53 58                                // 17PDSX

                        Store (Zero, \_SB.PCI0.RP17.L0SE)
                    }


   10CC7: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10CD7: 37 4C 30 53 45                                   // 7L0SE

                    If (LOr (
   10CDC: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10CE0: 93 54 42 54 53 01                                // .TBTS.


   10CE6: 92                                               // .

LNotEqual (TBSE, 0x11)))
                    {

   10CE7: 93 54 42 53 45 0A 11                             // .TBSE..

                        Notify (\_SB.PCI0.RP17, Zero) // Bus Check
                    }
                }

   10CEE: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
   10CFE: 00                                               // .

                Else
                {

   10CFF: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP17.HPSX)
                }
            }


   10D01: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10D11: 37 48 50 53 58                                   // 7HPSX

            If (LAnd (
   10D16: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP18.VDID, 0xFFFFFFFF), \_SB.PCI0.RP18.HPSX))
            {

   10D1B: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
   10D2B: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   10D3B: 50 43 49 30 52 50 31 38 48 50 53 58              // PCI0RP18HPSX

                If (LOr (
   10D47: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10D4B: 93 54 42 54 53 01                                // .TBTS.


   10D51: 92                                               // .

LNotEqual (TBSE, 0x12)))
                {

   10D52: 93 54 42 53 45 0A 12                             // .TBSE..

                    Sleep (0x64)
                }


   10D59: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP18.PDCX)
                {
                    Store (One, \_SB.PCI0.RP18.PDCX)
                    Store (One, \_SB.PCI0.RP18.HPSX)

   10D5D: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   10D6D: 31 38 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 18PDCXp.\/._SB_P
   10D7D: 43 49 30 52 50 31 38 50 44 43 58 70 01 5C 2F 04  // CI0RP18PDCXp.\/.
   10D8D: 5F 53 42 5F 50 43 49 30 52 50 31 38 48 50 53 58  // _SB_PCI0RP18HPSX

                    If (LNot (\_SB.PCI0.RP18.PDSX))
                    {

   10D9D: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10DAD: 31 38 50 44 53 58                                // 18PDSX

                        Store (Zero, \_SB.PCI0.RP18.L0SE)
                    }


   10DB3: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10DC3: 38 4C 30 53 45                                   // 8L0SE

                    If (LOr (
   10DC8: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10DCC: 93 54 42 54 53 01                                // .TBTS.


   10DD2: 92                                               // .

LNotEqual (TBSE, 0x12)))
                    {

   10DD3: 93 54 42 53 45 0A 12                             // .TBSE..

                        Notify (\_SB.PCI0.RP18, Zero) // Bus Check
                    }
                }

   10DDA: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
   10DEA: 00                                               // .

                Else
                {

   10DEB: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP18.HPSX)
                }
            }


   10DED: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10DFD: 38 48 50 53 58                                   // 8HPSX

            If (LAnd (
   10E02: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP19.VDID, 0xFFFFFFFF), \_SB.PCI0.RP19.HPSX))
            {

   10E07: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
   10E17: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   10E27: 50 43 49 30 52 50 31 39 48 50 53 58              // PCI0RP19HPSX

                If (LOr (
   10E33: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10E37: 93 54 42 54 53 01                                // .TBTS.


   10E3D: 92                                               // .

LNotEqual (TBSE, 0x13)))
                {

   10E3E: 93 54 42 53 45 0A 13                             // .TBSE..

                    Sleep (0x64)
                }


   10E45: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP19.PDCX)
                {
                    Store (One, \_SB.PCI0.RP19.PDCX)
                    Store (One, \_SB.PCI0.RP19.HPSX)

   10E49: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   10E59: 31 39 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 19PDCXp.\/._SB_P
   10E69: 43 49 30 52 50 31 39 50 44 43 58 70 01 5C 2F 04  // CI0RP19PDCXp.\/.
   10E79: 5F 53 42 5F 50 43 49 30 52 50 31 39 48 50 53 58  // _SB_PCI0RP19HPSX

                    If (LNot (\_SB.PCI0.RP19.PDSX))
                    {

   10E89: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10E99: 31 39 50 44 53 58                                // 19PDSX

                        Store (Zero, \_SB.PCI0.RP19.L0SE)
                    }


   10E9F: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10EAF: 39 4C 30 53 45                                   // 9L0SE

                    If (LOr (
   10EB4: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10EB8: 93 54 42 54 53 01                                // .TBTS.


   10EBE: 92                                               // .

LNotEqual (TBSE, 0x13)))
                    {

   10EBF: 93 54 42 53 45 0A 13                             // .TBSE..

                        Notify (\_SB.PCI0.RP19, Zero) // Bus Check
                    }
                }

   10EC6: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
   10ED6: 00                                               // .

                Else
                {

   10ED7: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP19.HPSX)
                }
            }


   10ED9: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
   10EE9: 39 48 50 53 58                                   // 9HPSX

            If (LAnd (
   10EEE: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP20.VDID, 0xFFFFFFFF), \_SB.PCI0.RP20.HPSX))
            {

   10EF3: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
   10F03: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
   10F13: 50 43 49 30 52 50 32 30 48 50 53 58              // PCI0RP20HPSX

                If (LOr (
   10F1F: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
   10F23: 93 54 42 54 53 01                                // .TBTS.


   10F29: 92                                               // .

LNotEqual (TBSE, 0x14)))
                {

   10F2A: 93 54 42 53 45 0A 14                             // .TBSE..

                    Sleep (0x64)
                }


   10F31: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP20.PDCX)
                {
                    Store (One, \_SB.PCI0.RP20.PDCX)
                    Store (One, \_SB.PCI0.RP20.HPSX)

   10F35: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
   10F45: 32 30 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 20PDCXp.\/._SB_P
   10F55: 43 49 30 52 50 32 30 50 44 43 58 70 01 5C 2F 04  // CI0RP20PDCXp.\/.
   10F65: 5F 53 42 5F 50 43 49 30 52 50 32 30 48 50 53 58  // _SB_PCI0RP20HPSX

                    If (LNot (\_SB.PCI0.RP20.PDSX))
                    {

   10F75: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
   10F85: 32 30 50 44 53 58                                // 20PDSX

                        Store (Zero, \_SB.PCI0.RP20.L0SE)
                    }


   10F8B: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
   10F9B: 30 4C 30 53 45                                   // 0L0SE

                    If (LOr (
   10FA0: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
   10FA4: 93 54 42 54 53 01                                // .TBTS.


   10FAA: 92                                               // .

LNotEqual (TBSE, 0x14)))
                    {

   10FAB: 93 54 42 53 45 0A 14                             // .TBSE..

                        Notify (\_SB.PCI0.RP20, Zero) // Bus Check
                    }
                }

   10FB2: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
   10FC2: 00                                               // .

                Else
                {

   10FC3: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP20.HPSX)
                }
            }
        }


   10FC5: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
   10FD5: 30 48 50 53 58                                   // 0HPSX

        Method (_L62, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Store (Zero, GPEC) /* \GPEC */

   10FDA: 14 3D 5F 4C 36 32 00 70 00 47 50 45 43           // .=_L62.p.GPEC

            If (CondRefOf (\_PR.DTSE))
            {

   10FE7: A0 1D 5B 12 5C 2E 5F 50 52 5F 44 54 53 45 00     // ..[.\._PR_DTSE.

                If (
   10FF6: A0 0E                                            // ..


   10FF8: 92                                               // .

LGreaterEqual (\_PR.DTSE, One)){}
            }


   10FF9: 95 5C 2E 5F 50 52 5F 44 54 53 45 01              // .\._PR_DTSE.

            If (CondRefOf (\_GPE.HLVT))
            {
                HLVT ()
            }
        }


   11005: A0 12 5B 12 5C 2E 5F 47 50 45 48 4C 56 54 00 48  // ..[.\._GPEHLVT.H
   11015: 4C 56 54                                         // LVT

        Method (_L66, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {

   11018: 14 34 5F 4C 36 36 00                             // .4_L66.

            If (LAnd (\_SB.PCI0.GFX0.GSSE, 
   1101F: A0 2D 90 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46  // .-.\/._SB_PCI0GF
   1102F: 58 30 47 53 53 45                                // X0GSSE

LNot (GSMI)))
            {
                \_SB.PCI0.GFX0.GSCI ()
            }
        }


   11035: 92 47 53 4D 49 5C 2F 04 5F 53 42 5F 50 43 49 30  // .GSMI\/._SB_PCI0
   11045: 47 46 58 30 47 53 43 49                          // GFX0GSCI

        Method (_L67, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {

   1104D: 14 1C 5F 4C 36 37 00                             // .._L67.

            Store (0x20, \_SB.PCI0.SBUS.HSTS)
        }


   11054: 70 0A 20 5C 2F 04 5F 53 42 5F 50 43 49 30 53 42  // p. \/._SB_PCI0SB
   11064: 55 53 48 53 54 53                                // USHSTS

        Method (_L6F, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            \_SB.UGPS ()

   1106A: 14 41 0B 5F 4C 36 46 00 5C 2E 5F 53 42 5F 55 47  // .A._L6F.\._SB_UG
   1107A: 50 53                                            // PS

            If (LEqual (RTD3, One))
            {

   1107C: A0 1A 93 52 54 44 33 01                          // ...RTD3.

                If (CondRefOf (\_GPE.AL6F))
                {
                    AL6F ()
                }
            }


   11084: A0 12 5B 12 5C 2E 5F 47 50 45 41 4C 36 46 00 41  // ..[.\._GPEAL6F.A
   11094: 4C 36 46                                         // L6F

            If (LEqual (SGGP, One))
            {

   11097: A0 28 93 53 47 47 50 01                          // .(.SGGP.

                If (CondRefOf (\_GPE.P0L6))
                {
                    P0L6 (\_SB.CAGS (P0WK))
                }
            }


   1109F: A0 20 5B 12 5C 2E 5F 47 50 45 50 30 4C 36 00 50  // . [.\._GPEP0L6.P
   110AF: 30 4C 36 5C 2E 5F 53 42 5F 43 41 47 53 50 30 57  // 0L6\._SB_CAGSP0W
   110BF: 4B                                               // K

            If (LEqual (P1GP, One))
            {

   110C0: A0 28 93 50 31 47 50 01                          // .(.P1GP.

                If (CondRefOf (\_GPE.P1L6))
                {
                    P1L6 (\_SB.CAGS (P1WK))
                }
            }


   110C8: A0 20 5B 12 5C 2E 5F 47 50 45 50 31 4C 36 00 50  // . [.\._GPEP1L6.P
   110D8: 31 4C 36 5C 2E 5F 53 42 5F 43 41 47 53 50 31 57  // 1L6\._SB_CAGSP1W
   110E8: 4B                                               // K

            If (LEqual (P2GP, One))
            {

   110E9: A0 28 93 50 32 47 50 01                          // .(.P2GP.

                If (CondRefOf (\_GPE.P2L6))
                {
                    P2L6 (\_SB.CAGS (P2WK))
                }
            }

            \_SB.CGLS ()
        }
    }


   110F1: A0 20 5B 12 5C 2E 5F 47 50 45 50 32 4C 36 00 50  // . [.\._GPEP2L6.P
   11101: 32 4C 36 5C 2E 5F 53 42 5F 43 41 47 53 50 32 57  // 2L6\._SB_CAGSP2W
   11111: 4B 5C 2E 5F 53 42 5F 43 47 4C 53                 // K\._SB_CGLS

    If (CondRefOf (\_SB.PCI0.RP01.PXSX))
    {

   1111C: A0 45 50 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .EP[.\/._SB_PCI0
   1112C: 52 50 30 31 50 58 53 58 00                       // RP01PXSX.

        Scope (_SB.PCI0.RP01.PXSX)
        {

   11135: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .LN/._SB_PCI0RP0
   11145: 31 50 58 53 58                                   // 1PXSX

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

   1114A: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   11152: 08 5F 54 5F 31 00                                // ._T_1.


   11158: 08 5F 54 5F 30 00                                // ._T_0.

                If (PCIC (Arg0))
                {

   1115E: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


   11165: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
   1116E: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
                {

   11173: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   11183: B6 A2 FE 37                                      // ...7

                    If (LEqual (Arg2, Zero))
                    {

   11187: A0 15 93 6A 00                                   // ...j.

                        If (LEqual (Arg1, Zero))
                        {

   1118C: A0 09 93 69 00                                   // ...i.

                            Return (
   11191: A4                                               // .

Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }

   11192: 11 03 01 03                                      // ....

                        Else
                        {

   11196: A1 06                                            // ..

                            Return (
   11198: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }


   11199: 11 03 01 00                                      // ....

                    If (LEqual (Arg2, One))
                    {

   1119D: A0 44 07 93 6A 01                                // .D..j.

                        Switch (DerefOf (
   111A3: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                        {

   111A9: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                            Case (
   111B1: A0 07                                            // ..

Zero)
                            {
                            }

   111B3: 93 5F 54 5F 30 00                                // ._T_0.

                            Case
   111B9: A1 47 05                                         // .G.

 (One)
                            {

   111BC: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                                If (CondRefOf (\_SB.SLPB))
                                {

   111C4: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                    Notify (SLPB, 0x80) // Status Change
                                }
                            }

   111D3: 86 53 4C 50 42 0A 80                             // .SLPB..

                            Case
   111DA: A1 36                                            // .6

 (
   111DC: A0 08                                            // ..

0x02)
                            {
                            }

   111DE: 93 5F 54 5F 30 0A 02                             // ._T_0..

                            Case
   111E5: A1 2B                                            // .+

 (
   111E7: A0 08                                            // ..

0x03)
                            {
                            }

   111E9: 93 5F 54 5F 30 0A 03                             // ._T_0..

                            Case
   111F0: A1 20                                            // . 

 (0x04)
                            {

   111F2: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                                If (CondRefOf (\_SB.SLPB))
                                {

   111FB: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                    Notify (SLPB, 0x02) // Device Wake
                                }
                            }


   1120A: 86 53 4C 50 42 0A 02                             // .SLPB..

                        }
                    }


   11211: A5                                               // .

                    Return (Zero)
                }

   11212: A4 00                                            // ..

                ElseIf
   11214: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   11217: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
                {

   1121C: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   1122C: FC C2 91 07                                      // ....

                    Switch (Arg2)
                    {

   11230: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                        Case (Zero)
                        {

   1123A: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                            If (LEqual (Arg1, Zero))
                            {

   11242: A0 09 93 69 00                                   // ...i.

                                Return (
   11247: A4                                               // .

Buffer (One)
                                {
                                     0x07                                             // .
                                })
                            }

   11248: 11 03 01 07                                      // ....

                            Else
                            {

   1124C: A1 06                                            // ..

                                Return (
   1124E: A4                                               // .

Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }

   1124F: 11 03 01 00                                      // ....

                        Case
   11253: A1 25                                            // .%

 (One)
                        {

   11255: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                            Return (WHIT ())
                        }

   1125D: A4 57 48 49 54                                   // .WHIT

                        Case
   11262: A1 16                                            // ..

 (0x02)
                        {

   11264: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                            Return (SELF ())
                        }

   1126D: A4 53 45 4C 46                                   // .SELF

                        Default
                        {

   11272: A1 06                                            // ..

                            Return (
   11274: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }


   11275: 11 03 01 00                                      // ....

                    }
                }

   11279: A5                                               // .

                Else
                {

   1127A: A1 06                                            // ..

                    Return (
   1127C: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }


   1127D: 11 03 01 00                                      // ....

            OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   11281: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

            Field (RPXX, AnyAcc, NoLock, Preserve)
            {
                VDID,   32
            }


   1128B: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

            OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   11298: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

            Field (FLDR, ByteAcc, NoLock, Preserve)
            {
                DCAP,   32, 
                DCTR,   16
            }


   112A3: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   112B3: 52 10                                            // R.

            Name (SPLX, 
   112B5: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
            {
                Zero, 

   112BA: 12 39 04 00                                      // .9..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


   112BE: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   112CE: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


   112D0: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   112E0: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

   112E2: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   112F2: 00 80                                            // ..

            Method (SPLC, 0, Serialized)
            {
                Store (DOM1, 
   112F4: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   11301: 88 83                                            // ..

Index (SPLX, One)), Zero))
                Store (LIM1, 
   11303: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   11311: 88 83                                            // ..

Index (SPLX, One)), One))
                Store (TIM1, 
   11313: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   11321: 88 83                                            // ..

Index (SPLX, One)), 0x02))
                Store (DOM2, 
   11323: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   11332: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
                Store (LIM2, 
   11334: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   11343: 88 83                                            // ..

Index (SPLX, 0x02)), One))
                Store (TIM2, 
   11345: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   11354: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
                Store (DOM3, 
   11356: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   11366: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
                Store (LIM3, 
   11368: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   11377: 88 83                                            // ..

Index (SPLX, 0x03)), One))
                Store (TIM3, 
   11379: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   11388: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   1138A: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

                Return (SPLX) /* \_SB_.PCI0.RP01.PXSX.SPLX */
            }


   11395: A4 53 50 4C 58                                   // .SPLX

            PowerResource (WRST, 0x05, 0x0000)
            {

   1139A: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    ADBG ("PXSX _STA")
                }


   113A5: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   113B5: 20 5F 53 54 41 00                                //  _STA.

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                    ADBG ("PXSX _ON")
                }


   113BB: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   113CB: 20 5F 4F 4E 00                                   //  _ON.

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                    ADBG ("PXSX _OFF")
                }


   113D0: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   113E0: 20 5F 4F 46 46 00                                //  _OFF.

                Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                {
                    ADBG ("PXSX _RST")

   113E6: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   113F6: 20 5F 52 53 54 00                                //  _RST.

                    If (And (DCAP, 0x10000000))
                    {
                        Store (DCTR, Local0)
                        Or (Local0, 0x8000, Local0)

   113FC: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   1140C: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                        Store (Local0, DCTR) /* \_SB_.PCI0.RP01.PXSX.DCTR */
                    }
                }
            }


   11415: 70 60 44 43 54 52                                // p`DCTR

            Name (_PRR, 
   1141B: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
            {
                WRST
            })

   11420: 12 06 01 57 52 53 54                             // ...WRST

            Name (WANX, 
   11427: 08 57 41 4E 58                                   // .WANX

Package (0x03)
            {
                Zero, 

   1142C: 12 27 03 00                                      // .'..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


   11430: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   11440: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

   11442: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   11452: 00 80                                            // ..

            Method (WAND, 0, Serialized)
            {
                Store (Zero, 
   11454: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   1145E: 88 83                                            // ..

Index (WANX, One)), Zero))
                Store (TRD0, 
   11460: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   1146E: 88 83                                            // ..

Index (WANX, One)), One))
                Store (TRL0, 
   11470: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   1147E: 88 83                                            // ..

Index (WANX, One)), 0x02))
                Store (One, 
   11480: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   1148C: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
                Store (TRD1, 
   1148E: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   1149D: 88 83                                            // ..

Index (WANX, 0x02)), One))
                Store (TRL1, 
   1149F: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   114AE: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   114B0: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

                Return (WANX) /* \_SB_.PCI0.RP01.PXSX.WANX */
            }


   114BB: A4 57 41 4E 58                                   // .WANX

            Name (WRDX, 
   114C0: 08 57 52 44 58                                   // .WRDX

Package (0x03)
            {
                Zero, 

   114C5: 12 19 03 00                                      // ....

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }, 


   114C9: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }
            })

   114D4: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Method (WRDD, 0, Serialized)
            {
                Store (WDM1, 
   114DF: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   114EC: 88 83                                            // ..

Index (WRDX, One)), Zero))
                Store (CID1, 
   114EE: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   114FC: 88 83                                            // ..

Index (WRDX, One)), One))
                Store (WDM2, 
   114FE: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   1150C: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
                Store (CID2, 
   1150E: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   1151D: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   1151F: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

                Return (WRDX) /* \_SB_.PCI0.RP01.PXSX.WRDX */
            }


   11529: A4 57 52 44 58                                   // .WRDX

            Method (WIST, 0, Serialized)
            {

   1152E: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   11536: 08 5F 54 5F 30 00                                // ._T_0.

                If (CondRefOf (VDID))
                {

   1153C: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                    Switch (VDID)
                    {

   11546: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                        Case (0x095A8086)
                        {

   11553: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                            Return (One)
                        }

   1155F: A4 01                                            // ..

                        Case
   11561: A1 4B 0B                                         // .K.

 (0x095B8086)
                        {

   11564: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                            Return (One)
                        }

   11570: A4 01                                            // ..

                        Case
   11572: A1 4A 0A                                         // .J.

 (0x31658086)
                        {

   11575: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                            Return (One)
                        }

   11581: A4 01                                            // ..

                        Case
   11583: A1 49 09                                         // .I.

 (0x31668086)
                        {

   11586: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                            Return (One)
                        }

   11592: A4 01                                            // ..

                        Case
   11594: A1 48 08                                         // .H.

 (0x08B18086)
                        {

   11597: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                            Return (One)
                        }

   115A3: A4 01                                            // ..

                        Case
   115A5: A1 47 07                                         // .G.

 (0x08B28086)
                        {

   115A8: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                            Return (One)
                        }

   115B4: A4 01                                            // ..

                        Case
   115B6: A1 46 06                                         // .F.

 (0x08B38086)
                        {

   115B9: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                            Return (One)
                        }

   115C5: A4 01                                            // ..

                        Case
   115C7: A1 45 05                                         // .E.

 (0x08B48086)
                        {

   115CA: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                            Return (One)
                        }

   115D6: A4 01                                            // ..

                        Case
   115D8: A1 44 04                                         // .D.

 (0x24F38086)
                        {

   115DB: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                            Return (One)
                        }

   115E7: A4 01                                            // ..

                        Case
   115E9: A1 33                                            // .3

 (0x24F48086)
                        {

   115EB: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                            Return (One)
                        }

   115F7: A4 01                                            // ..

                        Case
   115F9: A1 23                                            // .#

 (0x24F58086)
                        {

   115FB: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                            Return (One)
                        }

   11607: A4 01                                            // ..

                        Case
   11609: A1 13                                            // ..

 (0x24F68086)
                        {

   1160B: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                            Return (One)
                        }

   11617: A4 01                                            // ..

                        Default
                        {

   11619: A1 03                                            // ..

                            Return (Zero)
                        }


   1161B: A4 00                                            // ..

                    }
                }

   1161D: A5                                               // .

                Else
                {

   1161E: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


   11620: A4 00                                            // ..

    Scope (_SB.PCI0.RP02.PXSX)
    {

   11622: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .LN/._SB_PCI0RP0
   11632: 32 50 58 53 58                                   // 2PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   11637: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   1163F: 08 5F 54 5F 31 00                                // ._T_1.


   11645: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   1164B: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   11652: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   1165B: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   11660: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   11670: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   11674: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   11679: A0 09 93 69 00                                   // ...i.

                        Return (
   1167E: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   1167F: 11 03 01 03                                      // ....

                    Else
                    {

   11683: A1 06                                            // ..

                        Return (
   11685: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   11686: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   1168A: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   11690: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   11696: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   1169E: A0 07                                            // ..

Zero)
                        {
                        }

   116A0: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   116A6: A1 47 05                                         // .G.

 (One)
                        {

   116A9: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   116B1: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   116C0: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   116C7: A1 36                                            // .6

 (
   116C9: A0 08                                            // ..

0x02)
                        {
                        }

   116CB: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   116D2: A1 2B                                            // .+

 (
   116D4: A0 08                                            // ..

0x03)
                        {
                        }

   116D6: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   116DD: A1 20                                            // . 

 (0x04)
                        {

   116DF: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   116E8: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   116F7: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   116FE: A5                                               // .

                Return (Zero)
            }

   116FF: A4 00                                            // ..

            ElseIf
   11701: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   11704: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   11709: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   11719: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   1171D: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   11727: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   1172F: A0 09 93 69 00                                   // ...i.

                            Return (
   11734: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   11735: 11 03 01 07                                      // ....

                        Else
                        {

   11739: A1 06                                            // ..

                            Return (
   1173B: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   1173C: 11 03 01 00                                      // ....

                    Case
   11740: A1 25                                            // .%

 (One)
                    {

   11742: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   1174A: A4 57 48 49 54                                   // .WHIT

                    Case
   1174F: A1 16                                            // ..

 (0x02)
                    {

   11751: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   1175A: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   1175F: A1 06                                            // ..

                        Return (
   11761: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   11762: 11 03 01 00                                      // ....

                }
            }

   11766: A5                                               // .

            Else
            {

   11767: A1 06                                            // ..

                Return (
   11769: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   1176A: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   1176E: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   11778: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   11785: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   11790: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   117A0: 52 10                                            // R.

        Name (SPLX, 
   117A2: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   117A7: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   117AB: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   117BB: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   117BD: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   117CD: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   117CF: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   117DF: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   117E1: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   117EE: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   117F0: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   117FE: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   11800: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   1180E: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   11810: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   1181F: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   11821: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   11830: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   11832: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   11841: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   11843: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   11853: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   11855: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   11864: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   11866: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   11875: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   11877: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP02.PXSX.SPLX */
        }


   11882: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   11887: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   11892: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   118A2: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   118A8: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   118B8: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   118BD: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   118CD: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   118D3: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   118E3: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   118E9: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   118F9: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP02.PXSX.DCTR */
                }
            }
        }


   11902: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   11908: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   1190D: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   11914: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   11919: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   1191D: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1192D: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   1192F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1193F: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   11941: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   1194B: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   1194D: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   1195B: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   1195D: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   1196B: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   1196D: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   11979: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   1197B: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   1198A: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   1198C: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   1199B: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   1199D: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP02.PXSX.WANX */
        }


   119A8: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   119AD: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   119B2: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   119B6: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   119C1: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   119CC: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   119D9: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   119DB: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   119E9: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   119EB: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   119F9: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   119FB: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   11A0A: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   11A0C: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP02.PXSX.WRDX */
        }


   11A16: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   11A1B: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   11A23: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   11A29: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   11A33: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   11A40: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   11A4C: A4 01                                            // ..

                    Case
   11A4E: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   11A51: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   11A5D: A4 01                                            // ..

                    Case
   11A5F: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   11A62: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   11A6E: A4 01                                            // ..

                    Case
   11A70: A1 49 09                                         // .I.

 (0x31668086)
                    {

   11A73: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   11A7F: A4 01                                            // ..

                    Case
   11A81: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   11A84: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   11A90: A4 01                                            // ..

                    Case
   11A92: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   11A95: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   11AA1: A4 01                                            // ..

                    Case
   11AA3: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   11AA6: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   11AB2: A4 01                                            // ..

                    Case
   11AB4: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   11AB7: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   11AC3: A4 01                                            // ..

                    Case
   11AC5: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   11AC8: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   11AD4: A4 01                                            // ..

                    Case
   11AD6: A1 33                                            // .3

 (0x24F48086)
                    {

   11AD8: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   11AE4: A4 01                                            // ..

                    Case
   11AE6: A1 23                                            // .#

 (0x24F58086)
                    {

   11AE8: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   11AF4: A4 01                                            // ..

                    Case
   11AF6: A1 13                                            // ..

 (0x24F68086)
                    {

   11AF8: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   11B04: A4 01                                            // ..

                    Default
                    {

   11B06: A1 03                                            // ..

                        Return (Zero)
                    }


   11B08: A4 00                                            // ..

                }
            }

   11B0A: A5                                               // .

            Else
            {

   11B0B: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   11B0D: A4 00                                            // ..

    Scope (_SB.PCI0.RP03.PXSX)
    {

   11B0F: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .LN/._SB_PCI0RP0
   11B1F: 33 50 58 53 58                                   // 3PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   11B24: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   11B2C: 08 5F 54 5F 31 00                                // ._T_1.


   11B32: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   11B38: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   11B3F: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   11B48: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   11B4D: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   11B5D: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   11B61: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   11B66: A0 09 93 69 00                                   // ...i.

                        Return (
   11B6B: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   11B6C: 11 03 01 03                                      // ....

                    Else
                    {

   11B70: A1 06                                            // ..

                        Return (
   11B72: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   11B73: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   11B77: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   11B7D: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   11B83: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   11B8B: A0 07                                            // ..

Zero)
                        {
                        }

   11B8D: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   11B93: A1 47 05                                         // .G.

 (One)
                        {

   11B96: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   11B9E: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   11BAD: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   11BB4: A1 36                                            // .6

 (
   11BB6: A0 08                                            // ..

0x02)
                        {
                        }

   11BB8: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   11BBF: A1 2B                                            // .+

 (
   11BC1: A0 08                                            // ..

0x03)
                        {
                        }

   11BC3: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   11BCA: A1 20                                            // . 

 (0x04)
                        {

   11BCC: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   11BD5: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   11BE4: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   11BEB: A5                                               // .

                Return (Zero)
            }

   11BEC: A4 00                                            // ..

            ElseIf
   11BEE: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   11BF1: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   11BF6: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   11C06: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   11C0A: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   11C14: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   11C1C: A0 09 93 69 00                                   // ...i.

                            Return (
   11C21: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   11C22: 11 03 01 07                                      // ....

                        Else
                        {

   11C26: A1 06                                            // ..

                            Return (
   11C28: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   11C29: 11 03 01 00                                      // ....

                    Case
   11C2D: A1 25                                            // .%

 (One)
                    {

   11C2F: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   11C37: A4 57 48 49 54                                   // .WHIT

                    Case
   11C3C: A1 16                                            // ..

 (0x02)
                    {

   11C3E: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   11C47: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   11C4C: A1 06                                            // ..

                        Return (
   11C4E: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   11C4F: 11 03 01 00                                      // ....

                }
            }

   11C53: A5                                               // .

            Else
            {

   11C54: A1 06                                            // ..

                Return (
   11C56: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   11C57: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   11C5B: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   11C65: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   11C72: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   11C7D: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   11C8D: 52 10                                            // R.

        Name (SPLX, 
   11C8F: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   11C94: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   11C98: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   11CA8: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   11CAA: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   11CBA: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   11CBC: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   11CCC: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   11CCE: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   11CDB: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   11CDD: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   11CEB: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   11CED: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   11CFB: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   11CFD: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   11D0C: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   11D0E: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   11D1D: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   11D1F: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   11D2E: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   11D30: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   11D40: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   11D42: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   11D51: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   11D53: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   11D62: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   11D64: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP03.PXSX.SPLX */
        }


   11D6F: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   11D74: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   11D7F: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   11D8F: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   11D95: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   11DA5: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   11DAA: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   11DBA: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   11DC0: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   11DD0: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   11DD6: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   11DE6: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP03.PXSX.DCTR */
                }
            }
        }


   11DEF: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   11DF5: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   11DFA: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   11E01: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   11E06: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   11E0A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   11E1A: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   11E1C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   11E2C: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   11E2E: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   11E38: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   11E3A: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   11E48: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   11E4A: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   11E58: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   11E5A: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   11E66: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   11E68: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   11E77: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   11E79: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   11E88: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   11E8A: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP03.PXSX.WANX */
        }


   11E95: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   11E9A: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   11E9F: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   11EA3: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   11EAE: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   11EB9: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   11EC6: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   11EC8: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   11ED6: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   11ED8: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   11EE6: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   11EE8: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   11EF7: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   11EF9: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP03.PXSX.WRDX */
        }


   11F03: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   11F08: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   11F10: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   11F16: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   11F20: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   11F2D: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   11F39: A4 01                                            // ..

                    Case
   11F3B: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   11F3E: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   11F4A: A4 01                                            // ..

                    Case
   11F4C: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   11F4F: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   11F5B: A4 01                                            // ..

                    Case
   11F5D: A1 49 09                                         // .I.

 (0x31668086)
                    {

   11F60: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   11F6C: A4 01                                            // ..

                    Case
   11F6E: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   11F71: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   11F7D: A4 01                                            // ..

                    Case
   11F7F: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   11F82: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   11F8E: A4 01                                            // ..

                    Case
   11F90: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   11F93: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   11F9F: A4 01                                            // ..

                    Case
   11FA1: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   11FA4: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   11FB0: A4 01                                            // ..

                    Case
   11FB2: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   11FB5: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   11FC1: A4 01                                            // ..

                    Case
   11FC3: A1 33                                            // .3

 (0x24F48086)
                    {

   11FC5: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   11FD1: A4 01                                            // ..

                    Case
   11FD3: A1 23                                            // .#

 (0x24F58086)
                    {

   11FD5: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   11FE1: A4 01                                            // ..

                    Case
   11FE3: A1 13                                            // ..

 (0x24F68086)
                    {

   11FE5: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   11FF1: A4 01                                            // ..

                    Default
                    {

   11FF3: A1 03                                            // ..

                        Return (Zero)
                    }


   11FF5: A4 00                                            // ..

                }
            }

   11FF7: A5                                               // .

            Else
            {

   11FF8: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   11FFA: A4 00                                            // ..

    Scope (_SB.PCI0.RP04.PXSX)
    {

   11FFC: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .LN/._SB_PCI0RP0
   1200C: 34 50 58 53 58                                   // 4PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   12011: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   12019: 08 5F 54 5F 31 00                                // ._T_1.


   1201F: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   12025: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   1202C: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   12035: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   1203A: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   1204A: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   1204E: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   12053: A0 09 93 69 00                                   // ...i.

                        Return (
   12058: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   12059: 11 03 01 03                                      // ....

                    Else
                    {

   1205D: A1 06                                            // ..

                        Return (
   1205F: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   12060: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   12064: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   1206A: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   12070: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   12078: A0 07                                            // ..

Zero)
                        {
                        }

   1207A: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   12080: A1 47 05                                         // .G.

 (One)
                        {

   12083: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   1208B: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   1209A: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   120A1: A1 36                                            // .6

 (
   120A3: A0 08                                            // ..

0x02)
                        {
                        }

   120A5: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   120AC: A1 2B                                            // .+

 (
   120AE: A0 08                                            // ..

0x03)
                        {
                        }

   120B0: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   120B7: A1 20                                            // . 

 (0x04)
                        {

   120B9: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   120C2: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   120D1: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   120D8: A5                                               // .

                Return (Zero)
            }

   120D9: A4 00                                            // ..

            ElseIf
   120DB: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   120DE: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   120E3: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   120F3: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   120F7: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   12101: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   12109: A0 09 93 69 00                                   // ...i.

                            Return (
   1210E: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   1210F: 11 03 01 07                                      // ....

                        Else
                        {

   12113: A1 06                                            // ..

                            Return (
   12115: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   12116: 11 03 01 00                                      // ....

                    Case
   1211A: A1 25                                            // .%

 (One)
                    {

   1211C: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   12124: A4 57 48 49 54                                   // .WHIT

                    Case
   12129: A1 16                                            // ..

 (0x02)
                    {

   1212B: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   12134: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   12139: A1 06                                            // ..

                        Return (
   1213B: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   1213C: 11 03 01 00                                      // ....

                }
            }

   12140: A5                                               // .

            Else
            {

   12141: A1 06                                            // ..

                Return (
   12143: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   12144: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   12148: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   12152: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   1215F: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   1216A: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   1217A: 52 10                                            // R.

        Name (SPLX, 
   1217C: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   12181: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   12185: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   12195: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   12197: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   121A7: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   121A9: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   121B9: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   121BB: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   121C8: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   121CA: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   121D8: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   121DA: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   121E8: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   121EA: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   121F9: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   121FB: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   1220A: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   1220C: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   1221B: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   1221D: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   1222D: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   1222F: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   1223E: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   12240: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   1224F: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   12251: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP04.PXSX.SPLX */
        }


   1225C: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   12261: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   1226C: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   1227C: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   12282: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   12292: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   12297: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   122A7: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   122AD: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   122BD: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   122C3: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   122D3: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP04.PXSX.DCTR */
                }
            }
        }


   122DC: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   122E2: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   122E7: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   122EE: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   122F3: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   122F7: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   12307: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   12309: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   12319: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   1231B: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   12325: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   12327: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   12335: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   12337: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   12345: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   12347: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   12353: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   12355: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   12364: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   12366: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   12375: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   12377: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP04.PXSX.WANX */
        }


   12382: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   12387: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   1238C: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   12390: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   1239B: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   123A6: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   123B3: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   123B5: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   123C3: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   123C5: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   123D3: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   123D5: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   123E4: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   123E6: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP04.PXSX.WRDX */
        }


   123F0: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   123F5: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   123FD: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   12403: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   1240D: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   1241A: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   12426: A4 01                                            // ..

                    Case
   12428: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   1242B: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   12437: A4 01                                            // ..

                    Case
   12439: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   1243C: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   12448: A4 01                                            // ..

                    Case
   1244A: A1 49 09                                         // .I.

 (0x31668086)
                    {

   1244D: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   12459: A4 01                                            // ..

                    Case
   1245B: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   1245E: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   1246A: A4 01                                            // ..

                    Case
   1246C: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   1246F: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   1247B: A4 01                                            // ..

                    Case
   1247D: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   12480: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   1248C: A4 01                                            // ..

                    Case
   1248E: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   12491: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   1249D: A4 01                                            // ..

                    Case
   1249F: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   124A2: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   124AE: A4 01                                            // ..

                    Case
   124B0: A1 33                                            // .3

 (0x24F48086)
                    {

   124B2: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   124BE: A4 01                                            // ..

                    Case
   124C0: A1 23                                            // .#

 (0x24F58086)
                    {

   124C2: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   124CE: A4 01                                            // ..

                    Case
   124D0: A1 13                                            // ..

 (0x24F68086)
                    {

   124D2: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   124DE: A4 01                                            // ..

                    Default
                    {

   124E0: A1 03                                            // ..

                        Return (Zero)
                    }


   124E2: A4 00                                            // ..

                }
            }

   124E4: A5                                               // .

            Else
            {

   124E5: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   124E7: A4 00                                            // ..

    If (CondRefOf (\_SB.PCI0.RP05.PXSX))
    {

   124E9: A0 45 50 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .EP[.\/._SB_PCI0
   124F9: 52 50 30 35 50 58 53 58 00                       // RP05PXSX.

        Scope (_SB.PCI0.RP05.PXSX)
        {

   12502: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .LN/._SB_PCI0RP0
   12512: 35 50 58 53 58                                   // 5PXSX

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

   12517: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   1251F: 08 5F 54 5F 31 00                                // ._T_1.


   12525: 08 5F 54 5F 30 00                                // ._T_0.

                If (PCIC (Arg0))
                {

   1252B: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


   12532: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
   1253B: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
                {

   12540: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   12550: B6 A2 FE 37                                      // ...7

                    If (LEqual (Arg2, Zero))
                    {

   12554: A0 15 93 6A 00                                   // ...j.

                        If (LEqual (Arg1, Zero))
                        {

   12559: A0 09 93 69 00                                   // ...i.

                            Return (
   1255E: A4                                               // .

Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }

   1255F: 11 03 01 03                                      // ....

                        Else
                        {

   12563: A1 06                                            // ..

                            Return (
   12565: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }


   12566: 11 03 01 00                                      // ....

                    If (LEqual (Arg2, One))
                    {

   1256A: A0 44 07 93 6A 01                                // .D..j.

                        Switch (DerefOf (
   12570: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                        {

   12576: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                            Case (
   1257E: A0 07                                            // ..

Zero)
                            {
                            }

   12580: 93 5F 54 5F 30 00                                // ._T_0.

                            Case
   12586: A1 47 05                                         // .G.

 (One)
                            {

   12589: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                                If (CondRefOf (\_SB.SLPB))
                                {

   12591: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                    Notify (SLPB, 0x80) // Status Change
                                }
                            }

   125A0: 86 53 4C 50 42 0A 80                             // .SLPB..

                            Case
   125A7: A1 36                                            // .6

 (
   125A9: A0 08                                            // ..

0x02)
                            {
                            }

   125AB: 93 5F 54 5F 30 0A 02                             // ._T_0..

                            Case
   125B2: A1 2B                                            // .+

 (
   125B4: A0 08                                            // ..

0x03)
                            {
                            }

   125B6: 93 5F 54 5F 30 0A 03                             // ._T_0..

                            Case
   125BD: A1 20                                            // . 

 (0x04)
                            {

   125BF: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                                If (CondRefOf (\_SB.SLPB))
                                {

   125C8: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                    Notify (SLPB, 0x02) // Device Wake
                                }
                            }


   125D7: 86 53 4C 50 42 0A 02                             // .SLPB..

                        }
                    }


   125DE: A5                                               // .

                    Return (Zero)
                }

   125DF: A4 00                                            // ..

                ElseIf
   125E1: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   125E4: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
                {

   125E9: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   125F9: FC C2 91 07                                      // ....

                    Switch (Arg2)
                    {

   125FD: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                        Case (Zero)
                        {

   12607: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                            If (LEqual (Arg1, Zero))
                            {

   1260F: A0 09 93 69 00                                   // ...i.

                                Return (
   12614: A4                                               // .

Buffer (One)
                                {
                                     0x07                                             // .
                                })
                            }

   12615: 11 03 01 07                                      // ....

                            Else
                            {

   12619: A1 06                                            // ..

                                Return (
   1261B: A4                                               // .

Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }

   1261C: 11 03 01 00                                      // ....

                        Case
   12620: A1 25                                            // .%

 (One)
                        {

   12622: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                            Return (WHIT ())
                        }

   1262A: A4 57 48 49 54                                   // .WHIT

                        Case
   1262F: A1 16                                            // ..

 (0x02)
                        {

   12631: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                            Return (SELF ())
                        }

   1263A: A4 53 45 4C 46                                   // .SELF

                        Default
                        {

   1263F: A1 06                                            // ..

                            Return (
   12641: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }


   12642: 11 03 01 00                                      // ....

                    }
                }

   12646: A5                                               // .

                Else
                {

   12647: A1 06                                            // ..

                    Return (
   12649: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }


   1264A: 11 03 01 00                                      // ....

            OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   1264E: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

            Field (RPXX, AnyAcc, NoLock, Preserve)
            {
                VDID,   32
            }


   12658: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

            OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   12665: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

            Field (FLDR, ByteAcc, NoLock, Preserve)
            {
                DCAP,   32, 
                DCTR,   16
            }


   12670: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   12680: 52 10                                            // R.

            Name (SPLX, 
   12682: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
            {
                Zero, 

   12687: 12 39 04 00                                      // .9..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


   1268B: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1269B: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


   1269D: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   126AD: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

   126AF: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   126BF: 00 80                                            // ..

            Method (SPLC, 0, Serialized)
            {
                Store (DOM1, 
   126C1: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   126CE: 88 83                                            // ..

Index (SPLX, One)), Zero))
                Store (LIM1, 
   126D0: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   126DE: 88 83                                            // ..

Index (SPLX, One)), One))
                Store (TIM1, 
   126E0: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   126EE: 88 83                                            // ..

Index (SPLX, One)), 0x02))
                Store (DOM2, 
   126F0: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   126FF: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
                Store (LIM2, 
   12701: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   12710: 88 83                                            // ..

Index (SPLX, 0x02)), One))
                Store (TIM2, 
   12712: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   12721: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
                Store (DOM3, 
   12723: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   12733: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
                Store (LIM3, 
   12735: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   12744: 88 83                                            // ..

Index (SPLX, 0x03)), One))
                Store (TIM3, 
   12746: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   12755: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   12757: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

                Return (SPLX) /* \_SB_.PCI0.RP05.PXSX.SPLX */
            }


   12762: A4 53 50 4C 58                                   // .SPLX

            PowerResource (WRST, 0x05, 0x0000)
            {

   12767: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    ADBG ("PXSX _STA")
                }


   12772: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   12782: 20 5F 53 54 41 00                                //  _STA.

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                    ADBG ("PXSX _ON")
                }


   12788: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   12798: 20 5F 4F 4E 00                                   //  _ON.

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                    ADBG ("PXSX _OFF")
                }


   1279D: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   127AD: 20 5F 4F 46 46 00                                //  _OFF.

                Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                {
                    ADBG ("PXSX _RST")

   127B3: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   127C3: 20 5F 52 53 54 00                                //  _RST.

                    If (And (DCAP, 0x10000000))
                    {
                        Store (DCTR, Local0)
                        Or (Local0, 0x8000, Local0)

   127C9: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   127D9: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                        Store (Local0, DCTR) /* \_SB_.PCI0.RP05.PXSX.DCTR */
                    }
                }
            }


   127E2: 70 60 44 43 54 52                                // p`DCTR

            Name (_PRR, 
   127E8: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
            {
                WRST
            })

   127ED: 12 06 01 57 52 53 54                             // ...WRST

            Name (WANX, 
   127F4: 08 57 41 4E 58                                   // .WANX

Package (0x03)
            {
                Zero, 

   127F9: 12 27 03 00                                      // .'..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


   127FD: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1280D: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

   1280F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1281F: 00 80                                            // ..

            Method (WAND, 0, Serialized)
            {
                Store (Zero, 
   12821: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   1282B: 88 83                                            // ..

Index (WANX, One)), Zero))
                Store (TRD0, 
   1282D: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   1283B: 88 83                                            // ..

Index (WANX, One)), One))
                Store (TRL0, 
   1283D: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   1284B: 88 83                                            // ..

Index (WANX, One)), 0x02))
                Store (One, 
   1284D: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   12859: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
                Store (TRD1, 
   1285B: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   1286A: 88 83                                            // ..

Index (WANX, 0x02)), One))
                Store (TRL1, 
   1286C: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   1287B: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   1287D: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

                Return (WANX) /* \_SB_.PCI0.RP05.PXSX.WANX */
            }


   12888: A4 57 41 4E 58                                   // .WANX

            Name (WRDX, 
   1288D: 08 57 52 44 58                                   // .WRDX

Package (0x03)
            {
                Zero, 

   12892: 12 19 03 00                                      // ....

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }, 


   12896: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }
            })

   128A1: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Method (WRDD, 0, Serialized)
            {
                Store (WDM1, 
   128AC: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   128B9: 88 83                                            // ..

Index (WRDX, One)), Zero))
                Store (CID1, 
   128BB: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   128C9: 88 83                                            // ..

Index (WRDX, One)), One))
                Store (WDM2, 
   128CB: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   128D9: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
                Store (CID2, 
   128DB: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   128EA: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   128EC: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

                Return (WRDX) /* \_SB_.PCI0.RP05.PXSX.WRDX */
            }


   128F6: A4 57 52 44 58                                   // .WRDX

            Method (WIST, 0, Serialized)
            {

   128FB: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   12903: 08 5F 54 5F 30 00                                // ._T_0.

                If (CondRefOf (VDID))
                {

   12909: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                    Switch (VDID)
                    {

   12913: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                        Case (0x095A8086)
                        {

   12920: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                            Return (One)
                        }

   1292C: A4 01                                            // ..

                        Case
   1292E: A1 4B 0B                                         // .K.

 (0x095B8086)
                        {

   12931: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                            Return (One)
                        }

   1293D: A4 01                                            // ..

                        Case
   1293F: A1 4A 0A                                         // .J.

 (0x31658086)
                        {

   12942: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                            Return (One)
                        }

   1294E: A4 01                                            // ..

                        Case
   12950: A1 49 09                                         // .I.

 (0x31668086)
                        {

   12953: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                            Return (One)
                        }

   1295F: A4 01                                            // ..

                        Case
   12961: A1 48 08                                         // .H.

 (0x08B18086)
                        {

   12964: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                            Return (One)
                        }

   12970: A4 01                                            // ..

                        Case
   12972: A1 47 07                                         // .G.

 (0x08B28086)
                        {

   12975: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                            Return (One)
                        }

   12981: A4 01                                            // ..

                        Case
   12983: A1 46 06                                         // .F.

 (0x08B38086)
                        {

   12986: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                            Return (One)
                        }

   12992: A4 01                                            // ..

                        Case
   12994: A1 45 05                                         // .E.

 (0x08B48086)
                        {

   12997: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                            Return (One)
                        }

   129A3: A4 01                                            // ..

                        Case
   129A5: A1 44 04                                         // .D.

 (0x24F38086)
                        {

   129A8: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                            Return (One)
                        }

   129B4: A4 01                                            // ..

                        Case
   129B6: A1 33                                            // .3

 (0x24F48086)
                        {

   129B8: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                            Return (One)
                        }

   129C4: A4 01                                            // ..

                        Case
   129C6: A1 23                                            // .#

 (0x24F58086)
                        {

   129C8: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                            Return (One)
                        }

   129D4: A4 01                                            // ..

                        Case
   129D6: A1 13                                            // ..

 (0x24F68086)
                        {

   129D8: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                            Return (One)
                        }

   129E4: A4 01                                            // ..

                        Default
                        {

   129E6: A1 03                                            // ..

                            Return (Zero)
                        }


   129E8: A4 00                                            // ..

                    }
                }

   129EA: A5                                               // .

                Else
                {

   129EB: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


   129ED: A4 00                                            // ..

    Scope (_SB.PCI0.RP06.PXSX)
    {

   129EF: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .LN/._SB_PCI0RP0
   129FF: 36 50 58 53 58                                   // 6PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   12A04: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   12A0C: 08 5F 54 5F 31 00                                // ._T_1.


   12A12: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   12A18: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   12A1F: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   12A28: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   12A2D: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   12A3D: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   12A41: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   12A46: A0 09 93 69 00                                   // ...i.

                        Return (
   12A4B: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   12A4C: 11 03 01 03                                      // ....

                    Else
                    {

   12A50: A1 06                                            // ..

                        Return (
   12A52: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   12A53: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   12A57: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   12A5D: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   12A63: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   12A6B: A0 07                                            // ..

Zero)
                        {
                        }

   12A6D: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   12A73: A1 47 05                                         // .G.

 (One)
                        {

   12A76: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   12A7E: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   12A8D: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   12A94: A1 36                                            // .6

 (
   12A96: A0 08                                            // ..

0x02)
                        {
                        }

   12A98: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   12A9F: A1 2B                                            // .+

 (
   12AA1: A0 08                                            // ..

0x03)
                        {
                        }

   12AA3: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   12AAA: A1 20                                            // . 

 (0x04)
                        {

   12AAC: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   12AB5: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   12AC4: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   12ACB: A5                                               // .

                Return (Zero)
            }

   12ACC: A4 00                                            // ..

            ElseIf
   12ACE: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   12AD1: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   12AD6: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   12AE6: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   12AEA: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   12AF4: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   12AFC: A0 09 93 69 00                                   // ...i.

                            Return (
   12B01: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   12B02: 11 03 01 07                                      // ....

                        Else
                        {

   12B06: A1 06                                            // ..

                            Return (
   12B08: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   12B09: 11 03 01 00                                      // ....

                    Case
   12B0D: A1 25                                            // .%

 (One)
                    {

   12B0F: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   12B17: A4 57 48 49 54                                   // .WHIT

                    Case
   12B1C: A1 16                                            // ..

 (0x02)
                    {

   12B1E: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   12B27: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   12B2C: A1 06                                            // ..

                        Return (
   12B2E: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   12B2F: 11 03 01 00                                      // ....

                }
            }

   12B33: A5                                               // .

            Else
            {

   12B34: A1 06                                            // ..

                Return (
   12B36: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   12B37: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   12B3B: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   12B45: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   12B52: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   12B5D: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   12B6D: 52 10                                            // R.

        Name (SPLX, 
   12B6F: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   12B74: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   12B78: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   12B88: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   12B8A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   12B9A: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   12B9C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   12BAC: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   12BAE: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   12BBB: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   12BBD: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   12BCB: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   12BCD: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   12BDB: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   12BDD: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   12BEC: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   12BEE: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   12BFD: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   12BFF: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   12C0E: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   12C10: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   12C20: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   12C22: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   12C31: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   12C33: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   12C42: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   12C44: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP06.PXSX.SPLX */
        }


   12C4F: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   12C54: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   12C5F: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   12C6F: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   12C75: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   12C85: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   12C8A: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   12C9A: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   12CA0: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   12CB0: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   12CB6: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   12CC6: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP06.PXSX.DCTR */
                }
            }
        }


   12CCF: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   12CD5: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   12CDA: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   12CE1: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   12CE6: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   12CEA: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   12CFA: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   12CFC: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   12D0C: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   12D0E: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   12D18: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   12D1A: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   12D28: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   12D2A: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   12D38: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   12D3A: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   12D46: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   12D48: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   12D57: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   12D59: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   12D68: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   12D6A: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP06.PXSX.WANX */
        }


   12D75: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   12D7A: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   12D7F: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   12D83: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   12D8E: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   12D99: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   12DA6: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   12DA8: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   12DB6: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   12DB8: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   12DC6: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   12DC8: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   12DD7: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   12DD9: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP06.PXSX.WRDX */
        }


   12DE3: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   12DE8: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   12DF0: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   12DF6: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   12E00: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   12E0D: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   12E19: A4 01                                            // ..

                    Case
   12E1B: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   12E1E: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   12E2A: A4 01                                            // ..

                    Case
   12E2C: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   12E2F: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   12E3B: A4 01                                            // ..

                    Case
   12E3D: A1 49 09                                         // .I.

 (0x31668086)
                    {

   12E40: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   12E4C: A4 01                                            // ..

                    Case
   12E4E: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   12E51: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   12E5D: A4 01                                            // ..

                    Case
   12E5F: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   12E62: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   12E6E: A4 01                                            // ..

                    Case
   12E70: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   12E73: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   12E7F: A4 01                                            // ..

                    Case
   12E81: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   12E84: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   12E90: A4 01                                            // ..

                    Case
   12E92: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   12E95: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   12EA1: A4 01                                            // ..

                    Case
   12EA3: A1 33                                            // .3

 (0x24F48086)
                    {

   12EA5: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   12EB1: A4 01                                            // ..

                    Case
   12EB3: A1 23                                            // .#

 (0x24F58086)
                    {

   12EB5: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   12EC1: A4 01                                            // ..

                    Case
   12EC3: A1 13                                            // ..

 (0x24F68086)
                    {

   12EC5: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   12ED1: A4 01                                            // ..

                    Default
                    {

   12ED3: A1 03                                            // ..

                        Return (Zero)
                    }


   12ED5: A4 00                                            // ..

                }
            }

   12ED7: A5                                               // .

            Else
            {

   12ED8: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   12EDA: A4 00                                            // ..

    Scope (_SB.PCI0.RP07.PXSX)
    {

   12EDC: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .LN/._SB_PCI0RP0
   12EEC: 37 50 58 53 58                                   // 7PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   12EF1: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   12EF9: 08 5F 54 5F 31 00                                // ._T_1.


   12EFF: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   12F05: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   12F0C: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   12F15: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   12F1A: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   12F2A: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   12F2E: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   12F33: A0 09 93 69 00                                   // ...i.

                        Return (
   12F38: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   12F39: 11 03 01 03                                      // ....

                    Else
                    {

   12F3D: A1 06                                            // ..

                        Return (
   12F3F: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   12F40: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   12F44: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   12F4A: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   12F50: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   12F58: A0 07                                            // ..

Zero)
                        {
                        }

   12F5A: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   12F60: A1 47 05                                         // .G.

 (One)
                        {

   12F63: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   12F6B: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   12F7A: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   12F81: A1 36                                            // .6

 (
   12F83: A0 08                                            // ..

0x02)
                        {
                        }

   12F85: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   12F8C: A1 2B                                            // .+

 (
   12F8E: A0 08                                            // ..

0x03)
                        {
                        }

   12F90: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   12F97: A1 20                                            // . 

 (0x04)
                        {

   12F99: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   12FA2: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   12FB1: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   12FB8: A5                                               // .

                Return (Zero)
            }

   12FB9: A4 00                                            // ..

            ElseIf
   12FBB: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   12FBE: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   12FC3: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   12FD3: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   12FD7: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   12FE1: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   12FE9: A0 09 93 69 00                                   // ...i.

                            Return (
   12FEE: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   12FEF: 11 03 01 07                                      // ....

                        Else
                        {

   12FF3: A1 06                                            // ..

                            Return (
   12FF5: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   12FF6: 11 03 01 00                                      // ....

                    Case
   12FFA: A1 25                                            // .%

 (One)
                    {

   12FFC: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   13004: A4 57 48 49 54                                   // .WHIT

                    Case
   13009: A1 16                                            // ..

 (0x02)
                    {

   1300B: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   13014: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   13019: A1 06                                            // ..

                        Return (
   1301B: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   1301C: 11 03 01 00                                      // ....

                }
            }

   13020: A5                                               // .

            Else
            {

   13021: A1 06                                            // ..

                Return (
   13023: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   13024: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   13028: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   13032: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   1303F: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   1304A: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   1305A: 52 10                                            // R.

        Name (SPLX, 
   1305C: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   13061: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   13065: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13075: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   13077: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13087: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   13089: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13099: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   1309B: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   130A8: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   130AA: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   130B8: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   130BA: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   130C8: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   130CA: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   130D9: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   130DB: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   130EA: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   130EC: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   130FB: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   130FD: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   1310D: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   1310F: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   1311E: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   13120: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   1312F: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   13131: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP07.PXSX.SPLX */
        }


   1313C: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   13141: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   1314C: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   1315C: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   13162: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   13172: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   13177: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   13187: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   1318D: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   1319D: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   131A3: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   131B3: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP07.PXSX.DCTR */
                }
            }
        }


   131BC: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   131C2: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   131C7: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   131CE: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   131D3: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   131D7: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   131E7: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   131E9: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   131F9: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   131FB: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   13205: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   13207: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   13215: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   13217: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   13225: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   13227: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   13233: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   13235: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   13244: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   13246: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   13255: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   13257: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP07.PXSX.WANX */
        }


   13262: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   13267: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   1326C: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   13270: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   1327B: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   13286: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   13293: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   13295: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   132A3: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   132A5: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   132B3: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   132B5: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   132C4: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   132C6: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP07.PXSX.WRDX */
        }


   132D0: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   132D5: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   132DD: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   132E3: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   132ED: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   132FA: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   13306: A4 01                                            // ..

                    Case
   13308: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   1330B: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   13317: A4 01                                            // ..

                    Case
   13319: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   1331C: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   13328: A4 01                                            // ..

                    Case
   1332A: A1 49 09                                         // .I.

 (0x31668086)
                    {

   1332D: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   13339: A4 01                                            // ..

                    Case
   1333B: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   1333E: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   1334A: A4 01                                            // ..

                    Case
   1334C: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   1334F: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   1335B: A4 01                                            // ..

                    Case
   1335D: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   13360: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   1336C: A4 01                                            // ..

                    Case
   1336E: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   13371: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   1337D: A4 01                                            // ..

                    Case
   1337F: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   13382: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   1338E: A4 01                                            // ..

                    Case
   13390: A1 33                                            // .3

 (0x24F48086)
                    {

   13392: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   1339E: A4 01                                            // ..

                    Case
   133A0: A1 23                                            // .#

 (0x24F58086)
                    {

   133A2: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   133AE: A4 01                                            // ..

                    Case
   133B0: A1 13                                            // ..

 (0x24F68086)
                    {

   133B2: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   133BE: A4 01                                            // ..

                    Default
                    {

   133C0: A1 03                                            // ..

                        Return (Zero)
                    }


   133C2: A4 00                                            // ..

                }
            }

   133C4: A5                                               // .

            Else
            {

   133C5: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   133C7: A4 00                                            // ..

    Scope (_SB.PCI0.RP08.PXSX)
    {

   133C9: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .LN/._SB_PCI0RP0
   133D9: 38 50 58 53 58                                   // 8PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   133DE: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   133E6: 08 5F 54 5F 31 00                                // ._T_1.


   133EC: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   133F2: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   133F9: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   13402: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   13407: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   13417: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   1341B: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   13420: A0 09 93 69 00                                   // ...i.

                        Return (
   13425: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   13426: 11 03 01 03                                      // ....

                    Else
                    {

   1342A: A1 06                                            // ..

                        Return (
   1342C: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   1342D: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   13431: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   13437: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   1343D: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   13445: A0 07                                            // ..

Zero)
                        {
                        }

   13447: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   1344D: A1 47 05                                         // .G.

 (One)
                        {

   13450: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   13458: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   13467: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   1346E: A1 36                                            // .6

 (
   13470: A0 08                                            // ..

0x02)
                        {
                        }

   13472: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   13479: A1 2B                                            // .+

 (
   1347B: A0 08                                            // ..

0x03)
                        {
                        }

   1347D: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   13484: A1 20                                            // . 

 (0x04)
                        {

   13486: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   1348F: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   1349E: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   134A5: A5                                               // .

                Return (Zero)
            }

   134A6: A4 00                                            // ..

            ElseIf
   134A8: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   134AB: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   134B0: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   134C0: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   134C4: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   134CE: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   134D6: A0 09 93 69 00                                   // ...i.

                            Return (
   134DB: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   134DC: 11 03 01 07                                      // ....

                        Else
                        {

   134E0: A1 06                                            // ..

                            Return (
   134E2: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   134E3: 11 03 01 00                                      // ....

                    Case
   134E7: A1 25                                            // .%

 (One)
                    {

   134E9: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   134F1: A4 57 48 49 54                                   // .WHIT

                    Case
   134F6: A1 16                                            // ..

 (0x02)
                    {

   134F8: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   13501: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   13506: A1 06                                            // ..

                        Return (
   13508: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   13509: 11 03 01 00                                      // ....

                }
            }

   1350D: A5                                               // .

            Else
            {

   1350E: A1 06                                            // ..

                Return (
   13510: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   13511: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   13515: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   1351F: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   1352C: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   13537: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   13547: 52 10                                            // R.

        Name (SPLX, 
   13549: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   1354E: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   13552: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13562: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   13564: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13574: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   13576: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13586: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   13588: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   13595: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   13597: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   135A5: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   135A7: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   135B5: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   135B7: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   135C6: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   135C8: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   135D7: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   135D9: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   135E8: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   135EA: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   135FA: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   135FC: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   1360B: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   1360D: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   1361C: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   1361E: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP08.PXSX.SPLX */
        }


   13629: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   1362E: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   13639: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   13649: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   1364F: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   1365F: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   13664: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   13674: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   1367A: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   1368A: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   13690: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   136A0: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP08.PXSX.DCTR */
                }
            }
        }


   136A9: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   136AF: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   136B4: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   136BB: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   136C0: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   136C4: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   136D4: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   136D6: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   136E6: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   136E8: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   136F2: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   136F4: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   13702: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   13704: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   13712: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   13714: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   13720: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   13722: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   13731: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   13733: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   13742: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   13744: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP08.PXSX.WANX */
        }


   1374F: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   13754: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   13759: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   1375D: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   13768: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   13773: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   13780: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   13782: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   13790: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   13792: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   137A0: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   137A2: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   137B1: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   137B3: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP08.PXSX.WRDX */
        }


   137BD: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   137C2: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   137CA: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   137D0: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   137DA: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   137E7: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   137F3: A4 01                                            // ..

                    Case
   137F5: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   137F8: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   13804: A4 01                                            // ..

                    Case
   13806: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   13809: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   13815: A4 01                                            // ..

                    Case
   13817: A1 49 09                                         // .I.

 (0x31668086)
                    {

   1381A: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   13826: A4 01                                            // ..

                    Case
   13828: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   1382B: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   13837: A4 01                                            // ..

                    Case
   13839: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   1383C: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   13848: A4 01                                            // ..

                    Case
   1384A: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   1384D: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   13859: A4 01                                            // ..

                    Case
   1385B: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   1385E: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   1386A: A4 01                                            // ..

                    Case
   1386C: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   1386F: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   1387B: A4 01                                            // ..

                    Case
   1387D: A1 33                                            // .3

 (0x24F48086)
                    {

   1387F: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   1388B: A4 01                                            // ..

                    Case
   1388D: A1 23                                            // .#

 (0x24F58086)
                    {

   1388F: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   1389B: A4 01                                            // ..

                    Case
   1389D: A1 13                                            // ..

 (0x24F68086)
                    {

   1389F: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   138AB: A4 01                                            // ..

                    Default
                    {

   138AD: A1 03                                            // ..

                        Return (Zero)
                    }


   138AF: A4 00                                            // ..

                }
            }

   138B1: A5                                               // .

            Else
            {

   138B2: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   138B4: A4 00                                            // ..

    If (CondRefOf (\_SB.PCI0.RP09.PXSX))
    {

   138B6: A0 45 50 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .EP[.\/._SB_PCI0
   138C6: 52 50 30 39 50 58 53 58 00                       // RP09PXSX.

        Scope (_SB.PCI0.RP09.PXSX)
        {

   138CF: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .LN/._SB_PCI0RP0
   138DF: 39 50 58 53 58                                   // 9PXSX

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

   138E4: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   138EC: 08 5F 54 5F 31 00                                // ._T_1.


   138F2: 08 5F 54 5F 30 00                                // ._T_0.

                If (PCIC (Arg0))
                {

   138F8: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


   138FF: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
   13908: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
                {

   1390D: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   1391D: B6 A2 FE 37                                      // ...7

                    If (LEqual (Arg2, Zero))
                    {

   13921: A0 15 93 6A 00                                   // ...j.

                        If (LEqual (Arg1, Zero))
                        {

   13926: A0 09 93 69 00                                   // ...i.

                            Return (
   1392B: A4                                               // .

Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }

   1392C: 11 03 01 03                                      // ....

                        Else
                        {

   13930: A1 06                                            // ..

                            Return (
   13932: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }


   13933: 11 03 01 00                                      // ....

                    If (LEqual (Arg2, One))
                    {

   13937: A0 44 07 93 6A 01                                // .D..j.

                        Switch (DerefOf (
   1393D: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                        {

   13943: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                            Case (
   1394B: A0 07                                            // ..

Zero)
                            {
                            }

   1394D: 93 5F 54 5F 30 00                                // ._T_0.

                            Case
   13953: A1 47 05                                         // .G.

 (One)
                            {

   13956: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                                If (CondRefOf (\_SB.SLPB))
                                {

   1395E: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                    Notify (SLPB, 0x80) // Status Change
                                }
                            }

   1396D: 86 53 4C 50 42 0A 80                             // .SLPB..

                            Case
   13974: A1 36                                            // .6

 (
   13976: A0 08                                            // ..

0x02)
                            {
                            }

   13978: 93 5F 54 5F 30 0A 02                             // ._T_0..

                            Case
   1397F: A1 2B                                            // .+

 (
   13981: A0 08                                            // ..

0x03)
                            {
                            }

   13983: 93 5F 54 5F 30 0A 03                             // ._T_0..

                            Case
   1398A: A1 20                                            // . 

 (0x04)
                            {

   1398C: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                                If (CondRefOf (\_SB.SLPB))
                                {

   13995: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                    Notify (SLPB, 0x02) // Device Wake
                                }
                            }


   139A4: 86 53 4C 50 42 0A 02                             // .SLPB..

                        }
                    }


   139AB: A5                                               // .

                    Return (Zero)
                }

   139AC: A4 00                                            // ..

                ElseIf
   139AE: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   139B1: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
                {

   139B6: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   139C6: FC C2 91 07                                      // ....

                    Switch (Arg2)
                    {

   139CA: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                        Case (Zero)
                        {

   139D4: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                            If (LEqual (Arg1, Zero))
                            {

   139DC: A0 09 93 69 00                                   // ...i.

                                Return (
   139E1: A4                                               // .

Buffer (One)
                                {
                                     0x07                                             // .
                                })
                            }

   139E2: 11 03 01 07                                      // ....

                            Else
                            {

   139E6: A1 06                                            // ..

                                Return (
   139E8: A4                                               // .

Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }

   139E9: 11 03 01 00                                      // ....

                        Case
   139ED: A1 25                                            // .%

 (One)
                        {

   139EF: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                            Return (WHIT ())
                        }

   139F7: A4 57 48 49 54                                   // .WHIT

                        Case
   139FC: A1 16                                            // ..

 (0x02)
                        {

   139FE: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                            Return (SELF ())
                        }

   13A07: A4 53 45 4C 46                                   // .SELF

                        Default
                        {

   13A0C: A1 06                                            // ..

                            Return (
   13A0E: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }


   13A0F: 11 03 01 00                                      // ....

                    }
                }

   13A13: A5                                               // .

                Else
                {

   13A14: A1 06                                            // ..

                    Return (
   13A16: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }


   13A17: 11 03 01 00                                      // ....

            OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   13A1B: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

            Field (RPXX, AnyAcc, NoLock, Preserve)
            {
                VDID,   32
            }


   13A25: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

            OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   13A32: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

            Field (FLDR, ByteAcc, NoLock, Preserve)
            {
                DCAP,   32, 
                DCTR,   16
            }


   13A3D: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   13A4D: 52 10                                            // R.

            Name (SPLX, 
   13A4F: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
            {
                Zero, 

   13A54: 12 39 04 00                                      // .9..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


   13A58: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13A68: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


   13A6A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13A7A: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

   13A7C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13A8C: 00 80                                            // ..

            Method (SPLC, 0, Serialized)
            {
                Store (DOM1, 
   13A8E: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   13A9B: 88 83                                            // ..

Index (SPLX, One)), Zero))
                Store (LIM1, 
   13A9D: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   13AAB: 88 83                                            // ..

Index (SPLX, One)), One))
                Store (TIM1, 
   13AAD: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   13ABB: 88 83                                            // ..

Index (SPLX, One)), 0x02))
                Store (DOM2, 
   13ABD: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   13ACC: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
                Store (LIM2, 
   13ACE: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   13ADD: 88 83                                            // ..

Index (SPLX, 0x02)), One))
                Store (TIM2, 
   13ADF: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   13AEE: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
                Store (DOM3, 
   13AF0: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   13B00: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
                Store (LIM3, 
   13B02: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   13B11: 88 83                                            // ..

Index (SPLX, 0x03)), One))
                Store (TIM3, 
   13B13: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   13B22: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   13B24: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

                Return (SPLX) /* \_SB_.PCI0.RP09.PXSX.SPLX */
            }


   13B2F: A4 53 50 4C 58                                   // .SPLX

            PowerResource (WRST, 0x05, 0x0000)
            {

   13B34: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    ADBG ("PXSX _STA")
                }


   13B3F: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   13B4F: 20 5F 53 54 41 00                                //  _STA.

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                    ADBG ("PXSX _ON")
                }


   13B55: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   13B65: 20 5F 4F 4E 00                                   //  _ON.

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                    ADBG ("PXSX _OFF")
                }


   13B6A: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   13B7A: 20 5F 4F 46 46 00                                //  _OFF.

                Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                {
                    ADBG ("PXSX _RST")

   13B80: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   13B90: 20 5F 52 53 54 00                                //  _RST.

                    If (And (DCAP, 0x10000000))
                    {
                        Store (DCTR, Local0)
                        Or (Local0, 0x8000, Local0)

   13B96: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   13BA6: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                        Store (Local0, DCTR) /* \_SB_.PCI0.RP09.PXSX.DCTR */
                    }
                }
            }


   13BAF: 70 60 44 43 54 52                                // p`DCTR

            Name (_PRR, 
   13BB5: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
            {
                WRST
            })

   13BBA: 12 06 01 57 52 53 54                             // ...WRST

            Name (WANX, 
   13BC1: 08 57 41 4E 58                                   // .WANX

Package (0x03)
            {
                Zero, 

   13BC6: 12 27 03 00                                      // .'..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


   13BCA: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13BDA: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

   13BDC: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13BEC: 00 80                                            // ..

            Method (WAND, 0, Serialized)
            {
                Store (Zero, 
   13BEE: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   13BF8: 88 83                                            // ..

Index (WANX, One)), Zero))
                Store (TRD0, 
   13BFA: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   13C08: 88 83                                            // ..

Index (WANX, One)), One))
                Store (TRL0, 
   13C0A: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   13C18: 88 83                                            // ..

Index (WANX, One)), 0x02))
                Store (One, 
   13C1A: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   13C26: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
                Store (TRD1, 
   13C28: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   13C37: 88 83                                            // ..

Index (WANX, 0x02)), One))
                Store (TRL1, 
   13C39: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   13C48: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   13C4A: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

                Return (WANX) /* \_SB_.PCI0.RP09.PXSX.WANX */
            }


   13C55: A4 57 41 4E 58                                   // .WANX

            Name (WRDX, 
   13C5A: 08 57 52 44 58                                   // .WRDX

Package (0x03)
            {
                Zero, 

   13C5F: 12 19 03 00                                      // ....

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }, 


   13C63: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }
            })

   13C6E: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Method (WRDD, 0, Serialized)
            {
                Store (WDM1, 
   13C79: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   13C86: 88 83                                            // ..

Index (WRDX, One)), Zero))
                Store (CID1, 
   13C88: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   13C96: 88 83                                            // ..

Index (WRDX, One)), One))
                Store (WDM2, 
   13C98: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   13CA6: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
                Store (CID2, 
   13CA8: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   13CB7: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   13CB9: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

                Return (WRDX) /* \_SB_.PCI0.RP09.PXSX.WRDX */
            }


   13CC3: A4 57 52 44 58                                   // .WRDX

            Method (WIST, 0, Serialized)
            {

   13CC8: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   13CD0: 08 5F 54 5F 30 00                                // ._T_0.

                If (CondRefOf (VDID))
                {

   13CD6: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                    Switch (VDID)
                    {

   13CE0: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                        Case (0x095A8086)
                        {

   13CED: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                            Return (One)
                        }

   13CF9: A4 01                                            // ..

                        Case
   13CFB: A1 4B 0B                                         // .K.

 (0x095B8086)
                        {

   13CFE: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                            Return (One)
                        }

   13D0A: A4 01                                            // ..

                        Case
   13D0C: A1 4A 0A                                         // .J.

 (0x31658086)
                        {

   13D0F: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                            Return (One)
                        }

   13D1B: A4 01                                            // ..

                        Case
   13D1D: A1 49 09                                         // .I.

 (0x31668086)
                        {

   13D20: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                            Return (One)
                        }

   13D2C: A4 01                                            // ..

                        Case
   13D2E: A1 48 08                                         // .H.

 (0x08B18086)
                        {

   13D31: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                            Return (One)
                        }

   13D3D: A4 01                                            // ..

                        Case
   13D3F: A1 47 07                                         // .G.

 (0x08B28086)
                        {

   13D42: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                            Return (One)
                        }

   13D4E: A4 01                                            // ..

                        Case
   13D50: A1 46 06                                         // .F.

 (0x08B38086)
                        {

   13D53: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                            Return (One)
                        }

   13D5F: A4 01                                            // ..

                        Case
   13D61: A1 45 05                                         // .E.

 (0x08B48086)
                        {

   13D64: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                            Return (One)
                        }

   13D70: A4 01                                            // ..

                        Case
   13D72: A1 44 04                                         // .D.

 (0x24F38086)
                        {

   13D75: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                            Return (One)
                        }

   13D81: A4 01                                            // ..

                        Case
   13D83: A1 33                                            // .3

 (0x24F48086)
                        {

   13D85: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                            Return (One)
                        }

   13D91: A4 01                                            // ..

                        Case
   13D93: A1 23                                            // .#

 (0x24F58086)
                        {

   13D95: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                            Return (One)
                        }

   13DA1: A4 01                                            // ..

                        Case
   13DA3: A1 13                                            // ..

 (0x24F68086)
                        {

   13DA5: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                            Return (One)
                        }

   13DB1: A4 01                                            // ..

                        Default
                        {

   13DB3: A1 03                                            // ..

                            Return (Zero)
                        }


   13DB5: A4 00                                            // ..

                    }
                }

   13DB7: A5                                               // .

                Else
                {

   13DB8: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


   13DBA: A4 00                                            // ..

    Scope (_SB.PCI0.RP10.PXSX)
    {

   13DBC: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   13DCC: 30 50 58 53 58                                   // 0PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   13DD1: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   13DD9: 08 5F 54 5F 31 00                                // ._T_1.


   13DDF: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   13DE5: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   13DEC: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   13DF5: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   13DFA: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   13E0A: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   13E0E: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   13E13: A0 09 93 69 00                                   // ...i.

                        Return (
   13E18: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   13E19: 11 03 01 03                                      // ....

                    Else
                    {

   13E1D: A1 06                                            // ..

                        Return (
   13E1F: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   13E20: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   13E24: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   13E2A: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   13E30: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   13E38: A0 07                                            // ..

Zero)
                        {
                        }

   13E3A: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   13E40: A1 47 05                                         // .G.

 (One)
                        {

   13E43: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   13E4B: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   13E5A: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   13E61: A1 36                                            // .6

 (
   13E63: A0 08                                            // ..

0x02)
                        {
                        }

   13E65: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   13E6C: A1 2B                                            // .+

 (
   13E6E: A0 08                                            // ..

0x03)
                        {
                        }

   13E70: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   13E77: A1 20                                            // . 

 (0x04)
                        {

   13E79: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   13E82: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   13E91: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   13E98: A5                                               // .

                Return (Zero)
            }

   13E99: A4 00                                            // ..

            ElseIf
   13E9B: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   13E9E: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   13EA3: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   13EB3: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   13EB7: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   13EC1: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   13EC9: A0 09 93 69 00                                   // ...i.

                            Return (
   13ECE: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   13ECF: 11 03 01 07                                      // ....

                        Else
                        {

   13ED3: A1 06                                            // ..

                            Return (
   13ED5: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   13ED6: 11 03 01 00                                      // ....

                    Case
   13EDA: A1 25                                            // .%

 (One)
                    {

   13EDC: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   13EE4: A4 57 48 49 54                                   // .WHIT

                    Case
   13EE9: A1 16                                            // ..

 (0x02)
                    {

   13EEB: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   13EF4: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   13EF9: A1 06                                            // ..

                        Return (
   13EFB: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   13EFC: 11 03 01 00                                      // ....

                }
            }

   13F00: A5                                               // .

            Else
            {

   13F01: A1 06                                            // ..

                Return (
   13F03: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   13F04: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   13F08: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   13F12: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   13F1F: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   13F2A: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   13F3A: 52 10                                            // R.

        Name (SPLX, 
   13F3C: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   13F41: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   13F45: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13F55: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   13F57: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13F67: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   13F69: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   13F79: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   13F7B: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   13F88: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   13F8A: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   13F98: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   13F9A: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   13FA8: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   13FAA: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   13FB9: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   13FBB: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   13FCA: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   13FCC: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   13FDB: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   13FDD: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   13FED: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   13FEF: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   13FFE: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   14000: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   1400F: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   14011: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP10.PXSX.SPLX */
        }


   1401C: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   14021: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   1402C: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   1403C: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   14042: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   14052: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   14057: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   14067: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   1406D: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   1407D: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   14083: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   14093: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP10.PXSX.DCTR */
                }
            }
        }


   1409C: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   140A2: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   140A7: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   140AE: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   140B3: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   140B7: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   140C7: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   140C9: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   140D9: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   140DB: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   140E5: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   140E7: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   140F5: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   140F7: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   14105: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   14107: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   14113: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   14115: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   14124: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   14126: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   14135: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   14137: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP10.PXSX.WANX */
        }


   14142: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   14147: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   1414C: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   14150: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   1415B: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   14166: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   14173: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   14175: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   14183: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   14185: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   14193: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   14195: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   141A4: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   141A6: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP10.PXSX.WRDX */
        }


   141B0: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   141B5: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   141BD: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   141C3: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   141CD: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   141DA: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   141E6: A4 01                                            // ..

                    Case
   141E8: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   141EB: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   141F7: A4 01                                            // ..

                    Case
   141F9: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   141FC: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   14208: A4 01                                            // ..

                    Case
   1420A: A1 49 09                                         // .I.

 (0x31668086)
                    {

   1420D: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   14219: A4 01                                            // ..

                    Case
   1421B: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   1421E: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   1422A: A4 01                                            // ..

                    Case
   1422C: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   1422F: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   1423B: A4 01                                            // ..

                    Case
   1423D: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   14240: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   1424C: A4 01                                            // ..

                    Case
   1424E: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   14251: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   1425D: A4 01                                            // ..

                    Case
   1425F: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   14262: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   1426E: A4 01                                            // ..

                    Case
   14270: A1 33                                            // .3

 (0x24F48086)
                    {

   14272: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   1427E: A4 01                                            // ..

                    Case
   14280: A1 23                                            // .#

 (0x24F58086)
                    {

   14282: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   1428E: A4 01                                            // ..

                    Case
   14290: A1 13                                            // ..

 (0x24F68086)
                    {

   14292: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   1429E: A4 01                                            // ..

                    Default
                    {

   142A0: A1 03                                            // ..

                        Return (Zero)
                    }


   142A2: A4 00                                            // ..

                }
            }

   142A4: A5                                               // .

            Else
            {

   142A5: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   142A7: A4 00                                            // ..

    Scope (_SB.PCI0.RP11.PXSX)
    {

   142A9: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   142B9: 31 50 58 53 58                                   // 1PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   142BE: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   142C6: 08 5F 54 5F 31 00                                // ._T_1.


   142CC: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   142D2: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   142D9: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   142E2: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   142E7: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   142F7: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   142FB: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   14300: A0 09 93 69 00                                   // ...i.

                        Return (
   14305: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   14306: 11 03 01 03                                      // ....

                    Else
                    {

   1430A: A1 06                                            // ..

                        Return (
   1430C: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   1430D: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   14311: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   14317: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   1431D: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   14325: A0 07                                            // ..

Zero)
                        {
                        }

   14327: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   1432D: A1 47 05                                         // .G.

 (One)
                        {

   14330: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   14338: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   14347: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   1434E: A1 36                                            // .6

 (
   14350: A0 08                                            // ..

0x02)
                        {
                        }

   14352: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   14359: A1 2B                                            // .+

 (
   1435B: A0 08                                            // ..

0x03)
                        {
                        }

   1435D: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   14364: A1 20                                            // . 

 (0x04)
                        {

   14366: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   1436F: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   1437E: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   14385: A5                                               // .

                Return (Zero)
            }

   14386: A4 00                                            // ..

            ElseIf
   14388: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   1438B: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   14390: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   143A0: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   143A4: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   143AE: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   143B6: A0 09 93 69 00                                   // ...i.

                            Return (
   143BB: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   143BC: 11 03 01 07                                      // ....

                        Else
                        {

   143C0: A1 06                                            // ..

                            Return (
   143C2: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   143C3: 11 03 01 00                                      // ....

                    Case
   143C7: A1 25                                            // .%

 (One)
                    {

   143C9: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   143D1: A4 57 48 49 54                                   // .WHIT

                    Case
   143D6: A1 16                                            // ..

 (0x02)
                    {

   143D8: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   143E1: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   143E6: A1 06                                            // ..

                        Return (
   143E8: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   143E9: 11 03 01 00                                      // ....

                }
            }

   143ED: A5                                               // .

            Else
            {

   143EE: A1 06                                            // ..

                Return (
   143F0: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   143F1: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   143F5: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   143FF: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   1440C: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   14417: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   14427: 52 10                                            // R.

        Name (SPLX, 
   14429: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   1442E: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   14432: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14442: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   14444: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14454: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   14456: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14466: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   14468: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   14475: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   14477: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   14485: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   14487: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   14495: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   14497: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   144A6: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   144A8: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   144B7: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   144B9: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   144C8: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   144CA: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   144DA: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   144DC: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   144EB: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   144ED: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   144FC: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   144FE: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP11.PXSX.SPLX */
        }


   14509: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   1450E: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   14519: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   14529: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   1452F: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   1453F: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   14544: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   14554: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   1455A: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   1456A: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   14570: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   14580: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP11.PXSX.DCTR */
                }
            }
        }


   14589: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   1458F: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   14594: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   1459B: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   145A0: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   145A4: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   145B4: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   145B6: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   145C6: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   145C8: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   145D2: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   145D4: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   145E2: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   145E4: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   145F2: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   145F4: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   14600: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   14602: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   14611: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   14613: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   14622: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   14624: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP11.PXSX.WANX */
        }


   1462F: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   14634: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   14639: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   1463D: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   14648: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   14653: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   14660: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   14662: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   14670: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   14672: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   14680: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   14682: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   14691: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   14693: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP11.PXSX.WRDX */
        }


   1469D: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   146A2: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   146AA: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   146B0: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   146BA: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   146C7: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   146D3: A4 01                                            // ..

                    Case
   146D5: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   146D8: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   146E4: A4 01                                            // ..

                    Case
   146E6: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   146E9: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   146F5: A4 01                                            // ..

                    Case
   146F7: A1 49 09                                         // .I.

 (0x31668086)
                    {

   146FA: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   14706: A4 01                                            // ..

                    Case
   14708: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   1470B: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   14717: A4 01                                            // ..

                    Case
   14719: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   1471C: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   14728: A4 01                                            // ..

                    Case
   1472A: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   1472D: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   14739: A4 01                                            // ..

                    Case
   1473B: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   1473E: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   1474A: A4 01                                            // ..

                    Case
   1474C: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   1474F: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   1475B: A4 01                                            // ..

                    Case
   1475D: A1 33                                            // .3

 (0x24F48086)
                    {

   1475F: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   1476B: A4 01                                            // ..

                    Case
   1476D: A1 23                                            // .#

 (0x24F58086)
                    {

   1476F: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   1477B: A4 01                                            // ..

                    Case
   1477D: A1 13                                            // ..

 (0x24F68086)
                    {

   1477F: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   1478B: A4 01                                            // ..

                    Default
                    {

   1478D: A1 03                                            // ..

                        Return (Zero)
                    }


   1478F: A4 00                                            // ..

                }
            }

   14791: A5                                               // .

            Else
            {

   14792: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   14794: A4 00                                            // ..

    Scope (_SB.PCI0.RP12.PXSX)
    {

   14796: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   147A6: 32 50 58 53 58                                   // 2PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   147AB: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   147B3: 08 5F 54 5F 31 00                                // ._T_1.


   147B9: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   147BF: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   147C6: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   147CF: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   147D4: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   147E4: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   147E8: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   147ED: A0 09 93 69 00                                   // ...i.

                        Return (
   147F2: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   147F3: 11 03 01 03                                      // ....

                    Else
                    {

   147F7: A1 06                                            // ..

                        Return (
   147F9: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   147FA: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   147FE: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   14804: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   1480A: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   14812: A0 07                                            // ..

Zero)
                        {
                        }

   14814: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   1481A: A1 47 05                                         // .G.

 (One)
                        {

   1481D: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   14825: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   14834: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   1483B: A1 36                                            // .6

 (
   1483D: A0 08                                            // ..

0x02)
                        {
                        }

   1483F: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   14846: A1 2B                                            // .+

 (
   14848: A0 08                                            // ..

0x03)
                        {
                        }

   1484A: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   14851: A1 20                                            // . 

 (0x04)
                        {

   14853: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   1485C: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   1486B: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   14872: A5                                               // .

                Return (Zero)
            }

   14873: A4 00                                            // ..

            ElseIf
   14875: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   14878: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   1487D: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   1488D: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   14891: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   1489B: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   148A3: A0 09 93 69 00                                   // ...i.

                            Return (
   148A8: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   148A9: 11 03 01 07                                      // ....

                        Else
                        {

   148AD: A1 06                                            // ..

                            Return (
   148AF: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   148B0: 11 03 01 00                                      // ....

                    Case
   148B4: A1 25                                            // .%

 (One)
                    {

   148B6: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   148BE: A4 57 48 49 54                                   // .WHIT

                    Case
   148C3: A1 16                                            // ..

 (0x02)
                    {

   148C5: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   148CE: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   148D3: A1 06                                            // ..

                        Return (
   148D5: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   148D6: 11 03 01 00                                      // ....

                }
            }

   148DA: A5                                               // .

            Else
            {

   148DB: A1 06                                            // ..

                Return (
   148DD: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   148DE: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   148E2: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   148EC: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   148F9: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   14904: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   14914: 52 10                                            // R.

        Name (SPLX, 
   14916: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   1491B: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   1491F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1492F: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   14931: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14941: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   14943: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14953: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   14955: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   14962: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   14964: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   14972: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   14974: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   14982: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   14984: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   14993: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   14995: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   149A4: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   149A6: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   149B5: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   149B7: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   149C7: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   149C9: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   149D8: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   149DA: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   149E9: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   149EB: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP12.PXSX.SPLX */
        }


   149F6: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   149FB: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   14A06: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   14A16: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   14A1C: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   14A2C: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   14A31: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   14A41: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   14A47: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   14A57: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   14A5D: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   14A6D: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP12.PXSX.DCTR */
                }
            }
        }


   14A76: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   14A7C: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   14A81: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   14A88: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   14A8D: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   14A91: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14AA1: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   14AA3: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14AB3: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   14AB5: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   14ABF: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   14AC1: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   14ACF: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   14AD1: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   14ADF: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   14AE1: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   14AED: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   14AEF: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   14AFE: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   14B00: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   14B0F: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   14B11: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP12.PXSX.WANX */
        }


   14B1C: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   14B21: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   14B26: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   14B2A: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   14B35: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   14B40: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   14B4D: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   14B4F: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   14B5D: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   14B5F: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   14B6D: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   14B6F: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   14B7E: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   14B80: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP12.PXSX.WRDX */
        }


   14B8A: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   14B8F: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   14B97: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   14B9D: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   14BA7: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   14BB4: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   14BC0: A4 01                                            // ..

                    Case
   14BC2: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   14BC5: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   14BD1: A4 01                                            // ..

                    Case
   14BD3: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   14BD6: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   14BE2: A4 01                                            // ..

                    Case
   14BE4: A1 49 09                                         // .I.

 (0x31668086)
                    {

   14BE7: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   14BF3: A4 01                                            // ..

                    Case
   14BF5: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   14BF8: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   14C04: A4 01                                            // ..

                    Case
   14C06: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   14C09: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   14C15: A4 01                                            // ..

                    Case
   14C17: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   14C1A: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   14C26: A4 01                                            // ..

                    Case
   14C28: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   14C2B: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   14C37: A4 01                                            // ..

                    Case
   14C39: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   14C3C: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   14C48: A4 01                                            // ..

                    Case
   14C4A: A1 33                                            // .3

 (0x24F48086)
                    {

   14C4C: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   14C58: A4 01                                            // ..

                    Case
   14C5A: A1 23                                            // .#

 (0x24F58086)
                    {

   14C5C: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   14C68: A4 01                                            // ..

                    Case
   14C6A: A1 13                                            // ..

 (0x24F68086)
                    {

   14C6C: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   14C78: A4 01                                            // ..

                    Default
                    {

   14C7A: A1 03                                            // ..

                        Return (Zero)
                    }


   14C7C: A4 00                                            // ..

                }
            }

   14C7E: A5                                               // .

            Else
            {

   14C7F: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   14C81: A4 00                                            // ..

    Scope (_SB.PCI0.RP13.PXSX)
    {

   14C83: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   14C93: 33 50 58 53 58                                   // 3PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   14C98: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   14CA0: 08 5F 54 5F 31 00                                // ._T_1.


   14CA6: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   14CAC: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   14CB3: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   14CBC: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   14CC1: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   14CD1: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   14CD5: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   14CDA: A0 09 93 69 00                                   // ...i.

                        Return (
   14CDF: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   14CE0: 11 03 01 03                                      // ....

                    Else
                    {

   14CE4: A1 06                                            // ..

                        Return (
   14CE6: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   14CE7: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   14CEB: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   14CF1: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   14CF7: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   14CFF: A0 07                                            // ..

Zero)
                        {
                        }

   14D01: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   14D07: A1 47 05                                         // .G.

 (One)
                        {

   14D0A: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   14D12: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   14D21: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   14D28: A1 36                                            // .6

 (
   14D2A: A0 08                                            // ..

0x02)
                        {
                        }

   14D2C: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   14D33: A1 2B                                            // .+

 (
   14D35: A0 08                                            // ..

0x03)
                        {
                        }

   14D37: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   14D3E: A1 20                                            // . 

 (0x04)
                        {

   14D40: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   14D49: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   14D58: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   14D5F: A5                                               // .

                Return (Zero)
            }

   14D60: A4 00                                            // ..

            ElseIf
   14D62: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   14D65: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   14D6A: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   14D7A: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   14D7E: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   14D88: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   14D90: A0 09 93 69 00                                   // ...i.

                            Return (
   14D95: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   14D96: 11 03 01 07                                      // ....

                        Else
                        {

   14D9A: A1 06                                            // ..

                            Return (
   14D9C: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   14D9D: 11 03 01 00                                      // ....

                    Case
   14DA1: A1 25                                            // .%

 (One)
                    {

   14DA3: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   14DAB: A4 57 48 49 54                                   // .WHIT

                    Case
   14DB0: A1 16                                            // ..

 (0x02)
                    {

   14DB2: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   14DBB: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   14DC0: A1 06                                            // ..

                        Return (
   14DC2: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   14DC3: 11 03 01 00                                      // ....

                }
            }

   14DC7: A5                                               // .

            Else
            {

   14DC8: A1 06                                            // ..

                Return (
   14DCA: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   14DCB: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   14DCF: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   14DD9: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   14DE6: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   14DF1: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   14E01: 52 10                                            // R.

        Name (SPLX, 
   14E03: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   14E08: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   14E0C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14E1C: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   14E1E: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14E2E: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   14E30: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14E40: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   14E42: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   14E4F: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   14E51: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   14E5F: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   14E61: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   14E6F: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   14E71: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   14E80: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   14E82: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   14E91: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   14E93: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   14EA2: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   14EA4: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   14EB4: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   14EB6: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   14EC5: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   14EC7: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   14ED6: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   14ED8: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP13.PXSX.SPLX */
        }


   14EE3: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   14EE8: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   14EF3: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   14F03: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   14F09: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   14F19: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   14F1E: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   14F2E: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   14F34: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   14F44: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   14F4A: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   14F5A: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP13.PXSX.DCTR */
                }
            }
        }


   14F63: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   14F69: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   14F6E: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   14F75: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   14F7A: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   14F7E: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14F8E: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   14F90: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   14FA0: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   14FA2: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   14FAC: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   14FAE: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   14FBC: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   14FBE: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   14FCC: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   14FCE: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   14FDA: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   14FDC: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   14FEB: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   14FED: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   14FFC: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   14FFE: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP13.PXSX.WANX */
        }


   15009: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   1500E: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   15013: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   15017: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   15022: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   1502D: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   1503A: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   1503C: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   1504A: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   1504C: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   1505A: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   1505C: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   1506B: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   1506D: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP13.PXSX.WRDX */
        }


   15077: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   1507C: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   15084: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   1508A: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   15094: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   150A1: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   150AD: A4 01                                            // ..

                    Case
   150AF: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   150B2: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   150BE: A4 01                                            // ..

                    Case
   150C0: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   150C3: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   150CF: A4 01                                            // ..

                    Case
   150D1: A1 49 09                                         // .I.

 (0x31668086)
                    {

   150D4: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   150E0: A4 01                                            // ..

                    Case
   150E2: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   150E5: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   150F1: A4 01                                            // ..

                    Case
   150F3: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   150F6: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   15102: A4 01                                            // ..

                    Case
   15104: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   15107: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   15113: A4 01                                            // ..

                    Case
   15115: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   15118: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   15124: A4 01                                            // ..

                    Case
   15126: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   15129: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   15135: A4 01                                            // ..

                    Case
   15137: A1 33                                            // .3

 (0x24F48086)
                    {

   15139: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   15145: A4 01                                            // ..

                    Case
   15147: A1 23                                            // .#

 (0x24F58086)
                    {

   15149: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   15155: A4 01                                            // ..

                    Case
   15157: A1 13                                            // ..

 (0x24F68086)
                    {

   15159: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   15165: A4 01                                            // ..

                    Default
                    {

   15167: A1 03                                            // ..

                        Return (Zero)
                    }


   15169: A4 00                                            // ..

                }
            }

   1516B: A5                                               // .

            Else
            {

   1516C: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   1516E: A4 00                                            // ..

    Scope (_SB.PCI0.RP14.PXSX)
    {

   15170: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   15180: 34 50 58 53 58                                   // 4PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   15185: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   1518D: 08 5F 54 5F 31 00                                // ._T_1.


   15193: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   15199: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   151A0: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   151A9: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   151AE: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   151BE: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   151C2: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   151C7: A0 09 93 69 00                                   // ...i.

                        Return (
   151CC: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   151CD: 11 03 01 03                                      // ....

                    Else
                    {

   151D1: A1 06                                            // ..

                        Return (
   151D3: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   151D4: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   151D8: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   151DE: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   151E4: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   151EC: A0 07                                            // ..

Zero)
                        {
                        }

   151EE: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   151F4: A1 47 05                                         // .G.

 (One)
                        {

   151F7: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   151FF: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   1520E: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   15215: A1 36                                            // .6

 (
   15217: A0 08                                            // ..

0x02)
                        {
                        }

   15219: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   15220: A1 2B                                            // .+

 (
   15222: A0 08                                            // ..

0x03)
                        {
                        }

   15224: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   1522B: A1 20                                            // . 

 (0x04)
                        {

   1522D: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   15236: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   15245: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   1524C: A5                                               // .

                Return (Zero)
            }

   1524D: A4 00                                            // ..

            ElseIf
   1524F: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   15252: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   15257: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   15267: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   1526B: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   15275: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   1527D: A0 09 93 69 00                                   // ...i.

                            Return (
   15282: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   15283: 11 03 01 07                                      // ....

                        Else
                        {

   15287: A1 06                                            // ..

                            Return (
   15289: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   1528A: 11 03 01 00                                      // ....

                    Case
   1528E: A1 25                                            // .%

 (One)
                    {

   15290: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   15298: A4 57 48 49 54                                   // .WHIT

                    Case
   1529D: A1 16                                            // ..

 (0x02)
                    {

   1529F: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   152A8: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   152AD: A1 06                                            // ..

                        Return (
   152AF: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   152B0: 11 03 01 00                                      // ....

                }
            }

   152B4: A5                                               // .

            Else
            {

   152B5: A1 06                                            // ..

                Return (
   152B7: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   152B8: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   152BC: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   152C6: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   152D3: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   152DE: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   152EE: 52 10                                            // R.

        Name (SPLX, 
   152F0: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   152F5: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   152F9: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   15309: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   1530B: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1531B: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   1531D: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1532D: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   1532F: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   1533C: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   1533E: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   1534C: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   1534E: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   1535C: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   1535E: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   1536D: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   1536F: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   1537E: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   15380: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   1538F: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   15391: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   153A1: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   153A3: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   153B2: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   153B4: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   153C3: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   153C5: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP14.PXSX.SPLX */
        }


   153D0: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   153D5: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   153E0: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   153F0: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   153F6: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   15406: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   1540B: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   1541B: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   15421: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   15431: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   15437: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   15447: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP14.PXSX.DCTR */
                }
            }
        }


   15450: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   15456: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   1545B: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   15462: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   15467: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   1546B: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1547B: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   1547D: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1548D: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   1548F: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   15499: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   1549B: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   154A9: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   154AB: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   154B9: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   154BB: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   154C7: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   154C9: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   154D8: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   154DA: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   154E9: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   154EB: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP14.PXSX.WANX */
        }


   154F6: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   154FB: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   15500: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   15504: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   1550F: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   1551A: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   15527: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   15529: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   15537: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   15539: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   15547: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   15549: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   15558: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   1555A: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP14.PXSX.WRDX */
        }


   15564: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   15569: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   15571: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   15577: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   15581: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   1558E: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   1559A: A4 01                                            // ..

                    Case
   1559C: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   1559F: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   155AB: A4 01                                            // ..

                    Case
   155AD: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   155B0: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   155BC: A4 01                                            // ..

                    Case
   155BE: A1 49 09                                         // .I.

 (0x31668086)
                    {

   155C1: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   155CD: A4 01                                            // ..

                    Case
   155CF: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   155D2: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   155DE: A4 01                                            // ..

                    Case
   155E0: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   155E3: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   155EF: A4 01                                            // ..

                    Case
   155F1: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   155F4: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   15600: A4 01                                            // ..

                    Case
   15602: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   15605: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   15611: A4 01                                            // ..

                    Case
   15613: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   15616: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   15622: A4 01                                            // ..

                    Case
   15624: A1 33                                            // .3

 (0x24F48086)
                    {

   15626: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   15632: A4 01                                            // ..

                    Case
   15634: A1 23                                            // .#

 (0x24F58086)
                    {

   15636: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   15642: A4 01                                            // ..

                    Case
   15644: A1 13                                            // ..

 (0x24F68086)
                    {

   15646: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   15652: A4 01                                            // ..

                    Default
                    {

   15654: A1 03                                            // ..

                        Return (Zero)
                    }


   15656: A4 00                                            // ..

                }
            }

   15658: A5                                               // .

            Else
            {

   15659: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   1565B: A4 00                                            // ..

    Scope (_SB.PCI0.RP15.PXSX)
    {

   1565D: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   1566D: 35 50 58 53 58                                   // 5PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   15672: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   1567A: 08 5F 54 5F 31 00                                // ._T_1.


   15680: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   15686: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   1568D: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   15696: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   1569B: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   156AB: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   156AF: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   156B4: A0 09 93 69 00                                   // ...i.

                        Return (
   156B9: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   156BA: 11 03 01 03                                      // ....

                    Else
                    {

   156BE: A1 06                                            // ..

                        Return (
   156C0: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   156C1: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   156C5: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   156CB: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   156D1: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   156D9: A0 07                                            // ..

Zero)
                        {
                        }

   156DB: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   156E1: A1 47 05                                         // .G.

 (One)
                        {

   156E4: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   156EC: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   156FB: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   15702: A1 36                                            // .6

 (
   15704: A0 08                                            // ..

0x02)
                        {
                        }

   15706: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   1570D: A1 2B                                            // .+

 (
   1570F: A0 08                                            // ..

0x03)
                        {
                        }

   15711: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   15718: A1 20                                            // . 

 (0x04)
                        {

   1571A: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   15723: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   15732: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   15739: A5                                               // .

                Return (Zero)
            }

   1573A: A4 00                                            // ..

            ElseIf
   1573C: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   1573F: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   15744: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   15754: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   15758: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   15762: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   1576A: A0 09 93 69 00                                   // ...i.

                            Return (
   1576F: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   15770: 11 03 01 07                                      // ....

                        Else
                        {

   15774: A1 06                                            // ..

                            Return (
   15776: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   15777: 11 03 01 00                                      // ....

                    Case
   1577B: A1 25                                            // .%

 (One)
                    {

   1577D: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   15785: A4 57 48 49 54                                   // .WHIT

                    Case
   1578A: A1 16                                            // ..

 (0x02)
                    {

   1578C: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   15795: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   1579A: A1 06                                            // ..

                        Return (
   1579C: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   1579D: 11 03 01 00                                      // ....

                }
            }

   157A1: A5                                               // .

            Else
            {

   157A2: A1 06                                            // ..

                Return (
   157A4: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   157A5: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   157A9: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   157B3: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   157C0: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   157CB: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   157DB: 52 10                                            // R.

        Name (SPLX, 
   157DD: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   157E2: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   157E6: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   157F6: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   157F8: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   15808: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   1580A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1581A: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   1581C: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   15829: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   1582B: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   15839: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   1583B: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   15849: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   1584B: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   1585A: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   1585C: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   1586B: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   1586D: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   1587C: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   1587E: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   1588E: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   15890: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   1589F: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   158A1: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   158B0: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   158B2: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP15.PXSX.SPLX */
        }


   158BD: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   158C2: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   158CD: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   158DD: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   158E3: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   158F3: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   158F8: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   15908: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   1590E: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   1591E: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   15924: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   15934: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP15.PXSX.DCTR */
                }
            }
        }


   1593D: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   15943: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   15948: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   1594F: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   15954: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   15958: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   15968: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   1596A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1597A: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   1597C: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   15986: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   15988: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   15996: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   15998: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   159A6: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   159A8: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   159B4: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   159B6: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   159C5: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   159C7: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   159D6: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   159D8: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP15.PXSX.WANX */
        }


   159E3: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   159E8: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   159ED: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   159F1: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   159FC: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   15A07: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   15A14: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   15A16: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   15A24: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   15A26: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   15A34: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   15A36: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   15A45: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   15A47: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP15.PXSX.WRDX */
        }


   15A51: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   15A56: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   15A5E: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   15A64: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   15A6E: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   15A7B: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   15A87: A4 01                                            // ..

                    Case
   15A89: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   15A8C: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   15A98: A4 01                                            // ..

                    Case
   15A9A: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   15A9D: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   15AA9: A4 01                                            // ..

                    Case
   15AAB: A1 49 09                                         // .I.

 (0x31668086)
                    {

   15AAE: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   15ABA: A4 01                                            // ..

                    Case
   15ABC: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   15ABF: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   15ACB: A4 01                                            // ..

                    Case
   15ACD: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   15AD0: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   15ADC: A4 01                                            // ..

                    Case
   15ADE: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   15AE1: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   15AED: A4 01                                            // ..

                    Case
   15AEF: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   15AF2: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   15AFE: A4 01                                            // ..

                    Case
   15B00: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   15B03: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   15B0F: A4 01                                            // ..

                    Case
   15B11: A1 33                                            // .3

 (0x24F48086)
                    {

   15B13: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   15B1F: A4 01                                            // ..

                    Case
   15B21: A1 23                                            // .#

 (0x24F58086)
                    {

   15B23: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   15B2F: A4 01                                            // ..

                    Case
   15B31: A1 13                                            // ..

 (0x24F68086)
                    {

   15B33: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   15B3F: A4 01                                            // ..

                    Default
                    {

   15B41: A1 03                                            // ..

                        Return (Zero)
                    }


   15B43: A4 00                                            // ..

                }
            }

   15B45: A5                                               // .

            Else
            {

   15B46: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   15B48: A4 00                                            // ..

    Scope (_SB.PCI0.RP16.PXSX)
    {

   15B4A: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   15B5A: 36 50 58 53 58                                   // 6PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   15B5F: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   15B67: 08 5F 54 5F 31 00                                // ._T_1.


   15B6D: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   15B73: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   15B7A: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   15B83: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   15B88: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   15B98: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   15B9C: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   15BA1: A0 09 93 69 00                                   // ...i.

                        Return (
   15BA6: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   15BA7: 11 03 01 03                                      // ....

                    Else
                    {

   15BAB: A1 06                                            // ..

                        Return (
   15BAD: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   15BAE: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   15BB2: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   15BB8: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   15BBE: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   15BC6: A0 07                                            // ..

Zero)
                        {
                        }

   15BC8: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   15BCE: A1 47 05                                         // .G.

 (One)
                        {

   15BD1: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   15BD9: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   15BE8: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   15BEF: A1 36                                            // .6

 (
   15BF1: A0 08                                            // ..

0x02)
                        {
                        }

   15BF3: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   15BFA: A1 2B                                            // .+

 (
   15BFC: A0 08                                            // ..

0x03)
                        {
                        }

   15BFE: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   15C05: A1 20                                            // . 

 (0x04)
                        {

   15C07: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   15C10: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   15C1F: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   15C26: A5                                               // .

                Return (Zero)
            }

   15C27: A4 00                                            // ..

            ElseIf
   15C29: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   15C2C: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   15C31: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   15C41: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   15C45: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   15C4F: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   15C57: A0 09 93 69 00                                   // ...i.

                            Return (
   15C5C: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   15C5D: 11 03 01 07                                      // ....

                        Else
                        {

   15C61: A1 06                                            // ..

                            Return (
   15C63: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   15C64: 11 03 01 00                                      // ....

                    Case
   15C68: A1 25                                            // .%

 (One)
                    {

   15C6A: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   15C72: A4 57 48 49 54                                   // .WHIT

                    Case
   15C77: A1 16                                            // ..

 (0x02)
                    {

   15C79: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   15C82: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   15C87: A1 06                                            // ..

                        Return (
   15C89: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   15C8A: 11 03 01 00                                      // ....

                }
            }

   15C8E: A5                                               // .

            Else
            {

   15C8F: A1 06                                            // ..

                Return (
   15C91: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   15C92: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   15C96: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   15CA0: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   15CAD: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   15CB8: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   15CC8: 52 10                                            // R.

        Name (SPLX, 
   15CCA: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   15CCF: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   15CD3: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   15CE3: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   15CE5: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   15CF5: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   15CF7: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   15D07: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   15D09: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   15D16: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   15D18: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   15D26: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   15D28: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   15D36: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   15D38: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   15D47: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   15D49: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   15D58: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   15D5A: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   15D69: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   15D6B: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   15D7B: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   15D7D: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   15D8C: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   15D8E: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   15D9D: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   15D9F: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP16.PXSX.SPLX */
        }


   15DAA: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   15DAF: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   15DBA: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   15DCA: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   15DD0: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   15DE0: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   15DE5: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   15DF5: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   15DFB: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   15E0B: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   15E11: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   15E21: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP16.PXSX.DCTR */
                }
            }
        }


   15E2A: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   15E30: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   15E35: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   15E3C: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   15E41: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   15E45: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   15E55: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   15E57: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   15E67: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   15E69: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   15E73: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   15E75: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   15E83: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   15E85: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   15E93: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   15E95: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   15EA1: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   15EA3: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   15EB2: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   15EB4: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   15EC3: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   15EC5: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP16.PXSX.WANX */
        }


   15ED0: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   15ED5: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   15EDA: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   15EDE: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   15EE9: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   15EF4: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   15F01: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   15F03: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   15F11: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   15F13: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   15F21: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   15F23: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   15F32: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   15F34: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP16.PXSX.WRDX */
        }


   15F3E: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   15F43: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   15F4B: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   15F51: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   15F5B: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   15F68: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   15F74: A4 01                                            // ..

                    Case
   15F76: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   15F79: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   15F85: A4 01                                            // ..

                    Case
   15F87: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   15F8A: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   15F96: A4 01                                            // ..

                    Case
   15F98: A1 49 09                                         // .I.

 (0x31668086)
                    {

   15F9B: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   15FA7: A4 01                                            // ..

                    Case
   15FA9: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   15FAC: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   15FB8: A4 01                                            // ..

                    Case
   15FBA: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   15FBD: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   15FC9: A4 01                                            // ..

                    Case
   15FCB: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   15FCE: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   15FDA: A4 01                                            // ..

                    Case
   15FDC: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   15FDF: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   15FEB: A4 01                                            // ..

                    Case
   15FED: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   15FF0: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   15FFC: A4 01                                            // ..

                    Case
   15FFE: A1 33                                            // .3

 (0x24F48086)
                    {

   16000: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   1600C: A4 01                                            // ..

                    Case
   1600E: A1 23                                            // .#

 (0x24F58086)
                    {

   16010: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   1601C: A4 01                                            // ..

                    Case
   1601E: A1 13                                            // ..

 (0x24F68086)
                    {

   16020: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   1602C: A4 01                                            // ..

                    Default
                    {

   1602E: A1 03                                            // ..

                        Return (Zero)
                    }


   16030: A4 00                                            // ..

                }
            }

   16032: A5                                               // .

            Else
            {

   16033: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   16035: A4 00                                            // ..

    Scope (_SB.PCI0.RP17.PXSX)
    {

   16037: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   16047: 37 50 58 53 58                                   // 7PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   1604C: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   16054: 08 5F 54 5F 31 00                                // ._T_1.


   1605A: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   16060: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   16067: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   16070: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   16075: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   16085: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   16089: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   1608E: A0 09 93 69 00                                   // ...i.

                        Return (
   16093: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   16094: 11 03 01 03                                      // ....

                    Else
                    {

   16098: A1 06                                            // ..

                        Return (
   1609A: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   1609B: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   1609F: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   160A5: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   160AB: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   160B3: A0 07                                            // ..

Zero)
                        {
                        }

   160B5: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   160BB: A1 47 05                                         // .G.

 (One)
                        {

   160BE: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   160C6: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   160D5: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   160DC: A1 36                                            // .6

 (
   160DE: A0 08                                            // ..

0x02)
                        {
                        }

   160E0: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   160E7: A1 2B                                            // .+

 (
   160E9: A0 08                                            // ..

0x03)
                        {
                        }

   160EB: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   160F2: A1 20                                            // . 

 (0x04)
                        {

   160F4: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   160FD: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   1610C: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   16113: A5                                               // .

                Return (Zero)
            }

   16114: A4 00                                            // ..

            ElseIf
   16116: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   16119: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   1611E: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   1612E: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   16132: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   1613C: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   16144: A0 09 93 69 00                                   // ...i.

                            Return (
   16149: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   1614A: 11 03 01 07                                      // ....

                        Else
                        {

   1614E: A1 06                                            // ..

                            Return (
   16150: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   16151: 11 03 01 00                                      // ....

                    Case
   16155: A1 25                                            // .%

 (One)
                    {

   16157: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   1615F: A4 57 48 49 54                                   // .WHIT

                    Case
   16164: A1 16                                            // ..

 (0x02)
                    {

   16166: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   1616F: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   16174: A1 06                                            // ..

                        Return (
   16176: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   16177: 11 03 01 00                                      // ....

                }
            }

   1617B: A5                                               // .

            Else
            {

   1617C: A1 06                                            // ..

                Return (
   1617E: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   1617F: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   16183: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   1618D: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   1619A: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   161A5: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   161B5: 52 10                                            // R.

        Name (SPLX, 
   161B7: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   161BC: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   161C0: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   161D0: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   161D2: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   161E2: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   161E4: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   161F4: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   161F6: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   16203: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   16205: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   16213: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   16215: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   16223: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   16225: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   16234: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   16236: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   16245: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   16247: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   16256: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   16258: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   16268: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   1626A: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   16279: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   1627B: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   1628A: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   1628C: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP17.PXSX.SPLX */
        }


   16297: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   1629C: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   162A7: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   162B7: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   162BD: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   162CD: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   162D2: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   162E2: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   162E8: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   162F8: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   162FE: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   1630E: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP17.PXSX.DCTR */
                }
            }
        }


   16317: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   1631D: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   16322: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   16329: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   1632E: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   16332: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   16342: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   16344: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   16354: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   16356: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   16360: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   16362: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   16370: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   16372: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   16380: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   16382: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   1638E: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   16390: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   1639F: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   163A1: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   163B0: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   163B2: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP17.PXSX.WANX */
        }


   163BD: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   163C2: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   163C7: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   163CB: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   163D6: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   163E1: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   163EE: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   163F0: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   163FE: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   16400: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   1640E: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   16410: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   1641F: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   16421: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP17.PXSX.WRDX */
        }


   1642B: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   16430: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   16438: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   1643E: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   16448: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   16455: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   16461: A4 01                                            // ..

                    Case
   16463: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   16466: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   16472: A4 01                                            // ..

                    Case
   16474: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   16477: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   16483: A4 01                                            // ..

                    Case
   16485: A1 49 09                                         // .I.

 (0x31668086)
                    {

   16488: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   16494: A4 01                                            // ..

                    Case
   16496: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   16499: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   164A5: A4 01                                            // ..

                    Case
   164A7: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   164AA: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   164B6: A4 01                                            // ..

                    Case
   164B8: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   164BB: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   164C7: A4 01                                            // ..

                    Case
   164C9: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   164CC: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   164D8: A4 01                                            // ..

                    Case
   164DA: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   164DD: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   164E9: A4 01                                            // ..

                    Case
   164EB: A1 33                                            // .3

 (0x24F48086)
                    {

   164ED: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   164F9: A4 01                                            // ..

                    Case
   164FB: A1 23                                            // .#

 (0x24F58086)
                    {

   164FD: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   16509: A4 01                                            // ..

                    Case
   1650B: A1 13                                            // ..

 (0x24F68086)
                    {

   1650D: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   16519: A4 01                                            // ..

                    Default
                    {

   1651B: A1 03                                            // ..

                        Return (Zero)
                    }


   1651D: A4 00                                            // ..

                }
            }

   1651F: A5                                               // .

            Else
            {

   16520: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   16522: A4 00                                            // ..

    Scope (_SB.PCI0.RP18.PXSX)
    {

   16524: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   16534: 38 50 58 53 58                                   // 8PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   16539: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   16541: 08 5F 54 5F 31 00                                // ._T_1.


   16547: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   1654D: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   16554: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   1655D: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   16562: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   16572: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   16576: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   1657B: A0 09 93 69 00                                   // ...i.

                        Return (
   16580: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   16581: 11 03 01 03                                      // ....

                    Else
                    {

   16585: A1 06                                            // ..

                        Return (
   16587: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   16588: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   1658C: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   16592: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   16598: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   165A0: A0 07                                            // ..

Zero)
                        {
                        }

   165A2: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   165A8: A1 47 05                                         // .G.

 (One)
                        {

   165AB: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   165B3: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   165C2: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   165C9: A1 36                                            // .6

 (
   165CB: A0 08                                            // ..

0x02)
                        {
                        }

   165CD: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   165D4: A1 2B                                            // .+

 (
   165D6: A0 08                                            // ..

0x03)
                        {
                        }

   165D8: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   165DF: A1 20                                            // . 

 (0x04)
                        {

   165E1: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   165EA: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   165F9: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   16600: A5                                               // .

                Return (Zero)
            }

   16601: A4 00                                            // ..

            ElseIf
   16603: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   16606: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   1660B: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   1661B: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   1661F: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   16629: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   16631: A0 09 93 69 00                                   // ...i.

                            Return (
   16636: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   16637: 11 03 01 07                                      // ....

                        Else
                        {

   1663B: A1 06                                            // ..

                            Return (
   1663D: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   1663E: 11 03 01 00                                      // ....

                    Case
   16642: A1 25                                            // .%

 (One)
                    {

   16644: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   1664C: A4 57 48 49 54                                   // .WHIT

                    Case
   16651: A1 16                                            // ..

 (0x02)
                    {

   16653: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   1665C: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   16661: A1 06                                            // ..

                        Return (
   16663: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   16664: 11 03 01 00                                      // ....

                }
            }

   16668: A5                                               // .

            Else
            {

   16669: A1 06                                            // ..

                Return (
   1666B: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   1666C: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   16670: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   1667A: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   16687: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   16692: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   166A2: 52 10                                            // R.

        Name (SPLX, 
   166A4: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   166A9: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   166AD: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   166BD: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   166BF: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   166CF: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   166D1: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   166E1: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   166E3: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   166F0: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   166F2: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   16700: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   16702: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   16710: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   16712: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   16721: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   16723: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   16732: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   16734: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   16743: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   16745: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   16755: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   16757: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   16766: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   16768: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   16777: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   16779: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP18.PXSX.SPLX */
        }


   16784: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   16789: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   16794: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   167A4: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   167AA: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   167BA: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   167BF: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   167CF: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   167D5: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   167E5: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   167EB: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   167FB: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP18.PXSX.DCTR */
                }
            }
        }


   16804: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   1680A: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   1680F: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   16816: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   1681B: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   1681F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1682F: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   16831: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   16841: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   16843: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   1684D: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   1684F: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   1685D: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   1685F: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   1686D: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   1686F: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   1687B: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   1687D: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   1688C: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   1688E: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   1689D: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   1689F: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP18.PXSX.WANX */
        }


   168AA: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   168AF: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   168B4: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   168B8: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   168C3: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   168CE: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   168DB: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   168DD: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   168EB: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   168ED: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   168FB: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   168FD: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   1690C: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   1690E: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP18.PXSX.WRDX */
        }


   16918: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   1691D: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   16925: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   1692B: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   16935: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   16942: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   1694E: A4 01                                            // ..

                    Case
   16950: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   16953: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   1695F: A4 01                                            // ..

                    Case
   16961: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   16964: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   16970: A4 01                                            // ..

                    Case
   16972: A1 49 09                                         // .I.

 (0x31668086)
                    {

   16975: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   16981: A4 01                                            // ..

                    Case
   16983: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   16986: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   16992: A4 01                                            // ..

                    Case
   16994: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   16997: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   169A3: A4 01                                            // ..

                    Case
   169A5: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   169A8: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   169B4: A4 01                                            // ..

                    Case
   169B6: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   169B9: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   169C5: A4 01                                            // ..

                    Case
   169C7: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   169CA: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   169D6: A4 01                                            // ..

                    Case
   169D8: A1 33                                            // .3

 (0x24F48086)
                    {

   169DA: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   169E6: A4 01                                            // ..

                    Case
   169E8: A1 23                                            // .#

 (0x24F58086)
                    {

   169EA: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   169F6: A4 01                                            // ..

                    Case
   169F8: A1 13                                            // ..

 (0x24F68086)
                    {

   169FA: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   16A06: A4 01                                            // ..

                    Default
                    {

   16A08: A1 03                                            // ..

                        Return (Zero)
                    }


   16A0A: A4 00                                            // ..

                }
            }

   16A0C: A5                                               // .

            Else
            {

   16A0D: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   16A0F: A4 00                                            // ..

    Scope (_SB.PCI0.RP19.PXSX)
    {

   16A11: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .LN/._SB_PCI0RP1
   16A21: 39 50 58 53 58                                   // 9PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   16A26: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   16A2E: 08 5F 54 5F 31 00                                // ._T_1.


   16A34: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   16A3A: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   16A41: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   16A4A: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   16A4F: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   16A5F: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   16A63: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   16A68: A0 09 93 69 00                                   // ...i.

                        Return (
   16A6D: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   16A6E: 11 03 01 03                                      // ....

                    Else
                    {

   16A72: A1 06                                            // ..

                        Return (
   16A74: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   16A75: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   16A79: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   16A7F: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   16A85: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   16A8D: A0 07                                            // ..

Zero)
                        {
                        }

   16A8F: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   16A95: A1 47 05                                         // .G.

 (One)
                        {

   16A98: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   16AA0: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   16AAF: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   16AB6: A1 36                                            // .6

 (
   16AB8: A0 08                                            // ..

0x02)
                        {
                        }

   16ABA: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   16AC1: A1 2B                                            // .+

 (
   16AC3: A0 08                                            // ..

0x03)
                        {
                        }

   16AC5: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   16ACC: A1 20                                            // . 

 (0x04)
                        {

   16ACE: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   16AD7: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   16AE6: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   16AED: A5                                               // .

                Return (Zero)
            }

   16AEE: A4 00                                            // ..

            ElseIf
   16AF0: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   16AF3: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   16AF8: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   16B08: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   16B0C: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   16B16: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   16B1E: A0 09 93 69 00                                   // ...i.

                            Return (
   16B23: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   16B24: 11 03 01 07                                      // ....

                        Else
                        {

   16B28: A1 06                                            // ..

                            Return (
   16B2A: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   16B2B: 11 03 01 00                                      // ....

                    Case
   16B2F: A1 25                                            // .%

 (One)
                    {

   16B31: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   16B39: A4 57 48 49 54                                   // .WHIT

                    Case
   16B3E: A1 16                                            // ..

 (0x02)
                    {

   16B40: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   16B49: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   16B4E: A1 06                                            // ..

                        Return (
   16B50: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   16B51: 11 03 01 00                                      // ....

                }
            }

   16B55: A5                                               // .

            Else
            {

   16B56: A1 06                                            // ..

                Return (
   16B58: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   16B59: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   16B5D: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   16B67: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   16B74: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   16B7F: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   16B8F: 52 10                                            // R.

        Name (SPLX, 
   16B91: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   16B96: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   16B9A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   16BAA: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   16BAC: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   16BBC: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   16BBE: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   16BCE: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   16BD0: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   16BDD: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   16BDF: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   16BED: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   16BEF: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   16BFD: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   16BFF: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   16C0E: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   16C10: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   16C1F: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   16C21: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   16C30: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   16C32: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   16C42: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   16C44: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   16C53: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   16C55: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   16C64: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   16C66: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP19.PXSX.SPLX */
        }


   16C71: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   16C76: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   16C81: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   16C91: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   16C97: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   16CA7: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   16CAC: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   16CBC: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   16CC2: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   16CD2: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   16CD8: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   16CE8: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP19.PXSX.DCTR */
                }
            }
        }


   16CF1: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   16CF7: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   16CFC: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   16D03: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   16D08: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   16D0C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   16D1C: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   16D1E: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   16D2E: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   16D30: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   16D3A: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   16D3C: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   16D4A: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   16D4C: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   16D5A: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   16D5C: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   16D68: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   16D6A: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   16D79: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   16D7B: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   16D8A: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   16D8C: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP19.PXSX.WANX */
        }


   16D97: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   16D9C: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   16DA1: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   16DA5: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   16DB0: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   16DBB: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   16DC8: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   16DCA: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   16DD8: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   16DDA: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   16DE8: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   16DEA: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   16DF9: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   16DFB: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP19.PXSX.WRDX */
        }


   16E05: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   16E0A: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   16E12: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   16E18: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   16E22: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   16E2F: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   16E3B: A4 01                                            // ..

                    Case
   16E3D: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   16E40: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   16E4C: A4 01                                            // ..

                    Case
   16E4E: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   16E51: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   16E5D: A4 01                                            // ..

                    Case
   16E5F: A1 49 09                                         // .I.

 (0x31668086)
                    {

   16E62: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   16E6E: A4 01                                            // ..

                    Case
   16E70: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   16E73: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   16E7F: A4 01                                            // ..

                    Case
   16E81: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   16E84: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   16E90: A4 01                                            // ..

                    Case
   16E92: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   16E95: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   16EA1: A4 01                                            // ..

                    Case
   16EA3: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   16EA6: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   16EB2: A4 01                                            // ..

                    Case
   16EB4: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   16EB7: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   16EC3: A4 01                                            // ..

                    Case
   16EC5: A1 33                                            // .3

 (0x24F48086)
                    {

   16EC7: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   16ED3: A4 01                                            // ..

                    Case
   16ED5: A1 23                                            // .#

 (0x24F58086)
                    {

   16ED7: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   16EE3: A4 01                                            // ..

                    Case
   16EE5: A1 13                                            // ..

 (0x24F68086)
                    {

   16EE7: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   16EF3: A4 01                                            // ..

                    Default
                    {

   16EF5: A1 03                                            // ..

                        Return (Zero)
                    }


   16EF7: A4 00                                            // ..

                }
            }

   16EF9: A5                                               // .

            Else
            {

   16EFA: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   16EFC: A4 00                                            // ..

    Scope (_SB.PCI0.RP20.PXSX)
    {

   16EFE: 10 4C 4E 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // .LN/._SB_PCI0RP2
   16F0E: 30 50 58 53 58                                   // 0PXSX

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   16F13: 14 46 13 5F 44 53 4D 0C                          // .F._DSM.


   16F1B: 08 5F 54 5F 31 00                                // ._T_1.


   16F21: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

   16F27: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


   16F2E: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
   16F37: A0 45 0A 93 68                                   // .E..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {

   16F3C: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
   16F4C: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

   16F50: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

   16F55: A0 09 93 69 00                                   // ...i.

                        Return (
   16F5A: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   16F5B: 11 03 01 03                                      // ....

                    Else
                    {

   16F5F: A1 06                                            // ..

                        Return (
   16F61: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }


   16F62: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

   16F66: A0 44 07 93 6A 01                                // .D..j.

                    Switch (DerefOf (
   16F6C: A2 4E 06 01 70 83                                // .N..p.

Index (Arg3, Zero)))
                    {

   16F72: 88 6B 00 00 5F 54 5F 30                          // .k.._T_0

                        Case (
   16F7A: A0 07                                            // ..

Zero)
                        {
                        }

   16F7C: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
   16F82: A1 47 05                                         // .G.

 (One)
                        {

   16F85: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SLPB))
                            {

   16F8D: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x80) // Status Change
                            }
                        }

   16F9C: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
   16FA3: A1 36                                            // .6

 (
   16FA5: A0 08                                            // ..

0x02)
                        {
                        }

   16FA7: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
   16FAE: A1 2B                                            // .+

 (
   16FB0: A0 08                                            // ..

0x03)
                        {
                        }

   16FB2: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
   16FB9: A1 20                                            // . 

 (0x04)
                        {

   16FBB: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SLPB))
                            {

   16FC4: A0 15 5B 12 5C 2E 5F 53 42 5F 53 4C 50 42 00     // ..[.\._SB_SLPB.

                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }


   16FD3: 86 53 4C 50 42 0A 02                             // .SLPB..

                    }
                }


   16FDA: A5                                               // .

                Return (Zero)
            }

   16FDB: A4 00                                            // ..

            ElseIf
   16FDD: A1 4C 06                                         // .L.

 (LEqual (Arg0, 
   16FE0: A0 42 06 93 68                                   // .B..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {

   16FE5: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
   16FF5: FC C2 91 07                                      // ....

                Switch (Arg2)
                {

   16FF9: A2 49 04 01 70 6A 5F 54 5F 31                    // .I..pj_T_1

                    Case (Zero)
                    {

   17003: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

   1700B: A0 09 93 69 00                                   // ...i.

                            Return (
   17010: A4                                               // .

Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }

   17011: 11 03 01 07                                      // ....

                        Else
                        {

   17015: A1 06                                            // ..

                            Return (
   17017: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

   17018: 11 03 01 00                                      // ....

                    Case
   1701C: A1 25                                            // .%

 (One)
                    {

   1701E: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

   17026: A4 57 48 49 54                                   // .WHIT

                    Case
   1702B: A1 16                                            // ..

 (0x02)
                    {

   1702D: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

   17036: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

   1703B: A1 06                                            // ..

                        Return (
   1703D: A4                                               // .

Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }


   1703E: 11 03 01 00                                      // ....

                }
            }

   17042: A5                                               // .

            Else
            {

   17043: A1 06                                            // ..

                Return (
   17045: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }


   17046: 11 03 01 00                                      // ....

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

   1704A: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


   17054: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

   17061: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


   1706C: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
   1707C: 52 10                                            // R.

        Name (SPLX, 
   1707E: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

   17083: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   17087: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   17097: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   17099: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   170A9: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   170AB: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   170BB: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
   170BD: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
   170CA: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
   170CC: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
   170DA: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
   170DC: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
   170EA: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
   170EC: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
   170FB: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
   170FD: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
   1710C: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
   1710E: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
   1711D: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
   1711F: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
   1712F: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
   17131: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
   17140: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
   17142: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
   17151: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

   17153: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP20.PXSX.SPLX */
        }


   1715E: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

   17163: 5B 84 4F 07 57 52 53 54 05 00 00                 // [.O.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
            }


   1716E: 14 15 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
   1717E: 20 5F 53 54 41 00                                //  _STA.

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


   17184: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
   17194: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


   17199: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
   171A9: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

   171AF: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
   171BF: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

   171C5: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
   171D5: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR) /* \_SB_.PCI0.RP20.PXSX.DCTR */
                }
            }
        }


   171DE: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
   171E4: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

   171E9: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
   171F0: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

   171F5: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


   171F9: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   17209: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

   1720B: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
   1721B: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
   1721D: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
   17227: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
   17229: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
   17237: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
   17239: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
   17247: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
   17249: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
   17255: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
   17257: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
   17266: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
   17268: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
   17277: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

   17279: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP20.PXSX.WANX */
        }


   17284: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
   17289: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

   1728E: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


   17292: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

   1729D: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
   172A8: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
   172B5: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
   172B7: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
   172C5: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
   172C7: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
   172D5: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
   172D7: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
   172E6: 88 83                                            // ..

Index (WRDX, 0x02)), One))

   172E8: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP20.PXSX.WRDX */
        }


   172F2: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

   172F7: 14 43 0F 57 49 53 54 08                          // .C.WIST.


   172FF: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

   17305: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

   1730F: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

   1731C: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

   17328: A4 01                                            // ..

                    Case
   1732A: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

   1732D: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

   17339: A4 01                                            // ..

                    Case
   1733B: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

   1733E: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

   1734A: A4 01                                            // ..

                    Case
   1734C: A1 49 09                                         // .I.

 (0x31668086)
                    {

   1734F: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

   1735B: A4 01                                            // ..

                    Case
   1735D: A1 48 08                                         // .H.

 (0x08B18086)
                    {

   17360: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

   1736C: A4 01                                            // ..

                    Case
   1736E: A1 47 07                                         // .G.

 (0x08B28086)
                    {

   17371: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

   1737D: A4 01                                            // ..

                    Case
   1737F: A1 46 06                                         // .F.

 (0x08B38086)
                    {

   17382: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

   1738E: A4 01                                            // ..

                    Case
   17390: A1 45 05                                         // .E.

 (0x08B48086)
                    {

   17393: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

   1739F: A4 01                                            // ..

                    Case
   173A1: A1 44 04                                         // .D.

 (0x24F38086)
                    {

   173A4: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

   173B0: A4 01                                            // ..

                    Case
   173B2: A1 33                                            // .3

 (0x24F48086)
                    {

   173B4: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

   173C0: A4 01                                            // ..

                    Case
   173C2: A1 23                                            // .#

 (0x24F58086)
                    {

   173C4: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

   173D0: A4 01                                            // ..

                    Case
   173D2: A1 13                                            // ..

 (0x24F68086)
                    {

   173D4: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

   173E0: A4 01                                            // ..

                    Default
                    {

   173E2: A1 03                                            // ..

                        Return (Zero)
                    }


   173E4: A4 00                                            // ..

                }
            }

   173E6: A5                                               // .

            Else
            {

   173E7: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


   173E9: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

   173EB: 10 41 05 2E 5F 53 42 5F 50 43 49 30              // .A.._SB_PCI0

        Method (WHIT, 0, NotSerialized)
        {

   173F7: 14 28 57 48 49 54 00                             // .(WHIT.

            Return (
   173FE: A4                                               // .

Package (0x01)
            {

   173FF: 12 20 01                                         // . .

                Package (0x05)
                {
                    "DockOemId", 
                    "DockSkuId", 
                    Zero, 
                    0x02, 
                    0x02
                }
            })
        }


   17402: 12 1D 05 0D 44 6F 63 6B 4F 65 6D 49 64 00 0D 44  // ....DockOemId..D
   17412: 6F 63 6B 53 6B 75 49 64 00 00 0A 02 0A 02        // ockSkuId......

        Method (SELF, 0, NotSerialized)
        {

   17420: 14 1C 53 45 4C 46 00                             // ..SELF.

            Return (
   17427: A4                                               // .

Package (0x02)
            {
                "PcOemId", 
                "PcSkuId"
            })
        }
    }


   17428: 12 14 02 0D 50 63 4F 65 6D 49 64 00 0D 50 63 53  // ....PcOemId..PcS
   17438: 6B 75 49 64 00                                   // kuId.

    Scope (_SB.PCI0.GFX0)
    {

   1743D: 10 36 2F 03 5F 53 42 5F 50 43 49 30 47 46 58 30  // .6/._SB_PCI0GFX0

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   1744D: 14 26 5F 44 45 50 00                             // .&_DEP.

            If (LOr (LEqual (S0ID, One), 
   17454: A0 19 91 93 53 30 49 44 01                       // ....S0ID.


   1745D: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

   1745E: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
   17466: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

   17467: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

   1746E: A1 05                                            // ..

                Return (
   17470: A4                                               // .

Package (0x00){})
            }
        }
    }


   17471: 12 02 00                                         // ...

    Scope (_SB.PCI0.SAT0)
    {

   17474: 10 43 04 2F 03 5F 53 42 5F 50 43 49 30 53 41 54  // .C./._SB_PCI0SAT
   17484: 30                                               // 0

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   17485: 14 32 5F 44 45 50 00                             // .2_DEP.

            If (LAnd (LOr (LEqual (S0ID, One), 
   1748C: A0 25 90 91 93 53 30 49 44 01                    // .%...S0ID.


   17496: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17497: 95 4F 53 59 53 0B DF 07                          // .OSYS...


   1749F: 92                                               // .

LNotEqual (
                And (PEPC, 0x03), Zero)))
            {

   174A0: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                Return (
   174AA: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

   174AB: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

   174B2: A1 05                                            // ..

                Return (
   174B4: A4                                               // .

Package (0x00){})
            }
        }
    }


   174B5: 12 02 00                                         // ...

    If (LOr (LEqual (S0ID, One), 
   174B8: A0 46 14 91 93 53 30 49 44 01                    // .F...S0ID.


   174C2: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
    {

   174C3: 95 4F 53 59 53 0B DF 07                          // .OSYS...

        Scope (_SB.PCI0.I2C0)
        {

   174CB: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 30  // ../._SB_PCI0I2C0

            Name (_DEP, 
   174DB: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   174E0: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C1)
        {

   174E7: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 31  // ../._SB_PCI0I2C1

            Name (_DEP, 
   174F7: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   174FC: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C2)
        {

   17503: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 32  // ../._SB_PCI0I2C2

            Name (_DEP, 
   17513: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   17518: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C3)
        {

   1751F: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 33  // ../._SB_PCI0I2C3

            Name (_DEP, 
   1752F: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   17534: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C4)
        {

   1753B: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 34  // ../._SB_PCI0I2C4

            Name (_DEP, 
   1754B: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   17550: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C5)
        {

   17557: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 35  // ../._SB_PCI0I2C5

            Name (_DEP, 
   17567: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   1756C: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.SPI0)
        {

   17573: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 30  // ../._SB_PCI0SPI0

            Name (_DEP, 
   17583: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   17588: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.SPI1)
        {

   1758F: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 31  // ../._SB_PCI0SPI1

            Name (_DEP, 
   1759F: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   175A4: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.UA00)
        {

   175AB: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 30  // ../._SB_PCI0UA00

            Name (_DEP, 
   175BB: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   175C0: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.UA01)
        {

   175C7: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 31  // ../._SB_PCI0UA01

            Name (_DEP, 
   175D7: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


   175DC: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.UA02)
        {

   175E3: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 32  // ../._SB_PCI0UA02

            Name (_DEP, 
   175F3: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }
    }


   175F8: 12 06 01 50 45 50 44                             // ...PEPD

    Scope (_SB.PCI0.XHC)
    {

   175FF: 10 36 2F 03 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .6/._SB_PCI0XHC_

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   1760F: 14 26 5F 44 45 50 00                             // .&_DEP.

            If (LOr (LEqual (S0ID, One), 
   17616: A0 19 91 93 53 30 49 44 01                       // ....S0ID.


   1761F: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

   17620: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
   17628: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

   17629: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

   17630: A1 05                                            // ..

                Return (
   17632: A4                                               // .

Package (0x00){})
            }
        }
    }


   17633: 12 02 00                                         // ...

    If (CondRefOf (\_SB.PCI0.RP01.PXSX))
    {

   17636: A0 46 0E 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .F.[.\/._SB_PCI0
   17646: 52 50 30 31 50 58 53 58 00                       // RP01PXSX.

        Scope (_SB.PCI0.RP01.PXSX)
        {

   1764F: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
   1765F: 31 50 58 53 58                                   // 1PXSX

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {

   17664: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

                If (LOr (PAHC (), PNVM ()))
                {

   1766C: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                    If (LAnd (LOr (LEqual (S0ID, One), 
   17678: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   17682: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17683: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                        And (PEPC, 0x0400), 0x0400), 
   1768B: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                    {

   17699: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                        Return (
   176A6: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }
                }


   176A7: 12 06 01 50 45 50 44                             // ...PEPD

                Return (
   176AE: A4                                               // .

Package (0x00){})
            }


   176AF: 12 02 00                                         // ...

            OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   176B2: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

            Field (PCCX, ByteAcc, NoLock, Preserve)
            {
                PIXX,   8, 
                SCCX,   8, 
                BCCX,   8
            }


   176BD: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   176CD: 58 08 42 43 43 58 08                             // X.BCCX.

            Method (PAHC, 0, Serialized)
            {

   176D4: 14 23 50 41 48 43 08                             // .#PAHC.

                If (LEqual (BCCX, One))
                {

   176DB: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x06))
                    {

   176E3: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                        If (LEqual (PIXX, One))
                        {

   176EC: A0 09 93 50 49 58 58 01                          // ...PIXX.

                            Return (One)
                        }
                    }
                }


   176F4: A4 01                                            // ..

                Return (Zero)
            }


   176F6: A4 00                                            // ..

            Method (PNVM, 0, Serialized)
            {

   176F8: 14 24 50 4E 56 4D 08                             // .$PNVM.

                If (LEqual (BCCX, One))
                {

   176FF: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x08))
                    {

   17707: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                        If (LEqual (PIXX, 0x02))
                        {

   17710: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                            Return (One)
                        }
                    }
                }


   17719: A4 01                                            // ..

                Return (Zero)
            }
        }
    }


   1771B: A4 00                                            // ..

    Scope (_SB.PCI0.RP02.PXSX)
    {

   1771D: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
   1772D: 32 50 58 53 58                                   // 2PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   17732: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   1773A: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   17746: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   17750: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17751: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   17759: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   17767: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   17774: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   17775: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   1777C: A4                                               // .

Package (0x00){})
        }


   1777D: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   17780: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   1778B: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   1779B: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   177A2: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   177A9: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   177B1: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   177BA: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   177C2: A4 01                                            // ..

            Return (Zero)
        }


   177C4: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   177C6: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   177CD: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   177D5: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   177DE: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   177E7: A4 01                                            // ..

            Return (Zero)
        }
    }


   177E9: A4 00                                            // ..

    Scope (_SB.PCI0.RP03.PXSX)
    {

   177EB: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
   177FB: 33 50 58 53 58                                   // 3PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   17800: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   17808: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   17814: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   1781E: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   1781F: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   17827: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   17835: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   17842: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   17843: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   1784A: A4                                               // .

Package (0x00){})
        }


   1784B: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   1784E: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   17859: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17869: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   17870: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   17877: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   1787F: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   17888: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   17890: A4 01                                            // ..

            Return (Zero)
        }


   17892: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   17894: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   1789B: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   178A3: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   178AC: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   178B5: A4 01                                            // ..

            Return (Zero)
        }
    }


   178B7: A4 00                                            // ..

    Scope (_SB.PCI0.RP04.PXSX)
    {

   178B9: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
   178C9: 34 50 58 53 58                                   // 4PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   178CE: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   178D6: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   178E2: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   178EC: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   178ED: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   178F5: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   17903: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   17910: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   17911: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   17918: A4                                               // .

Package (0x00){})
        }


   17919: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   1791C: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   17927: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17937: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   1793E: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   17945: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   1794D: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   17956: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   1795E: A4 01                                            // ..

            Return (Zero)
        }


   17960: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   17962: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   17969: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   17971: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   1797A: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   17983: A4 01                                            // ..

            Return (Zero)
        }
    }


   17985: A4 00                                            // ..

    If (CondRefOf (\_SB.PCI0.RP05.PXSX))
    {

   17987: A0 46 0E 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .F.[.\/._SB_PCI0
   17997: 52 50 30 35 50 58 53 58 00                       // RP05PXSX.

        Scope (_SB.PCI0.RP05.PXSX)
        {

   179A0: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
   179B0: 35 50 58 53 58                                   // 5PXSX

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {

   179B5: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

                If (LOr (PAHC (), PNVM ()))
                {

   179BD: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                    If (LAnd (LOr (LEqual (S0ID, One), 
   179C9: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   179D3: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   179D4: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                        And (PEPC, 0x0400), 0x0400), 
   179DC: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                    {

   179EA: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                        Return (
   179F7: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }
                }


   179F8: 12 06 01 50 45 50 44                             // ...PEPD

                Return (
   179FF: A4                                               // .

Package (0x00){})
            }


   17A00: 12 02 00                                         // ...

            OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   17A03: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

            Field (PCCX, ByteAcc, NoLock, Preserve)
            {
                PIXX,   8, 
                SCCX,   8, 
                BCCX,   8
            }


   17A0E: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17A1E: 58 08 42 43 43 58 08                             // X.BCCX.

            Method (PAHC, 0, Serialized)
            {

   17A25: 14 23 50 41 48 43 08                             // .#PAHC.

                If (LEqual (BCCX, One))
                {

   17A2C: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x06))
                    {

   17A34: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                        If (LEqual (PIXX, One))
                        {

   17A3D: A0 09 93 50 49 58 58 01                          // ...PIXX.

                            Return (One)
                        }
                    }
                }


   17A45: A4 01                                            // ..

                Return (Zero)
            }


   17A47: A4 00                                            // ..

            Method (PNVM, 0, Serialized)
            {

   17A49: 14 24 50 4E 56 4D 08                             // .$PNVM.

                If (LEqual (BCCX, One))
                {

   17A50: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x08))
                    {

   17A58: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                        If (LEqual (PIXX, 0x02))
                        {

   17A61: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                            Return (One)
                        }
                    }
                }


   17A6A: A4 01                                            // ..

                Return (Zero)
            }
        }
    }


   17A6C: A4 00                                            // ..

    Scope (_SB.PCI0.RP06.PXSX)
    {

   17A6E: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
   17A7E: 36 50 58 53 58                                   // 6PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   17A83: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   17A8B: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   17A97: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   17AA1: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17AA2: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   17AAA: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   17AB8: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   17AC5: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   17AC6: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   17ACD: A4                                               // .

Package (0x00){})
        }


   17ACE: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   17AD1: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   17ADC: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17AEC: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   17AF3: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   17AFA: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   17B02: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   17B0B: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   17B13: A4 01                                            // ..

            Return (Zero)
        }


   17B15: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   17B17: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   17B1E: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   17B26: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   17B2F: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   17B38: A4 01                                            // ..

            Return (Zero)
        }
    }


   17B3A: A4 00                                            // ..

    Scope (_SB.PCI0.RP07.PXSX)
    {

   17B3C: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
   17B4C: 37 50 58 53 58                                   // 7PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   17B51: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   17B59: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   17B65: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   17B6F: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17B70: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   17B78: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   17B86: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   17B93: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   17B94: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   17B9B: A4                                               // .

Package (0x00){})
        }


   17B9C: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   17B9F: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   17BAA: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17BBA: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   17BC1: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   17BC8: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   17BD0: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   17BD9: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   17BE1: A4 01                                            // ..

            Return (Zero)
        }


   17BE3: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   17BE5: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   17BEC: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   17BF4: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   17BFD: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   17C06: A4 01                                            // ..

            Return (Zero)
        }
    }


   17C08: A4 00                                            // ..

    Scope (_SB.PCI0.RP08.PXSX)
    {

   17C0A: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
   17C1A: 38 50 58 53 58                                   // 8PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   17C1F: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   17C27: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   17C33: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   17C3D: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17C3E: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   17C46: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   17C54: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   17C61: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   17C62: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   17C69: A4                                               // .

Package (0x00){})
        }


   17C6A: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   17C6D: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   17C78: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17C88: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   17C8F: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   17C96: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   17C9E: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   17CA7: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   17CAF: A4 01                                            // ..

            Return (Zero)
        }


   17CB1: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   17CB3: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   17CBA: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   17CC2: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   17CCB: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   17CD4: A4 01                                            // ..

            Return (Zero)
        }
    }


   17CD6: A4 00                                            // ..

    If (CondRefOf (\_SB.PCI0.RP09.PXSX))
    {

   17CD8: A0 46 0E 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .F.[.\/._SB_PCI0
   17CE8: 52 50 30 39 50 58 53 58 00                       // RP09PXSX.

        Scope (_SB.PCI0.RP09.PXSX)
        {

   17CF1: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
   17D01: 39 50 58 53 58                                   // 9PXSX

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {

   17D06: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

                If (LOr (PAHC (), PNVM ()))
                {

   17D0E: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                    If (LAnd (LOr (LEqual (S0ID, One), 
   17D1A: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   17D24: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17D25: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                        And (PEPC, 0x0400), 0x0400), 
   17D2D: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                    {

   17D3B: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                        Return (
   17D48: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }
                }


   17D49: 12 06 01 50 45 50 44                             // ...PEPD

                Return (
   17D50: A4                                               // .

Package (0x00){})
            }


   17D51: 12 02 00                                         // ...

            OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   17D54: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

            Field (PCCX, ByteAcc, NoLock, Preserve)
            {
                PIXX,   8, 
                SCCX,   8, 
                BCCX,   8
            }


   17D5F: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17D6F: 58 08 42 43 43 58 08                             // X.BCCX.

            Method (PAHC, 0, Serialized)
            {

   17D76: 14 23 50 41 48 43 08                             // .#PAHC.

                If (LEqual (BCCX, One))
                {

   17D7D: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x06))
                    {

   17D85: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                        If (LEqual (PIXX, One))
                        {

   17D8E: A0 09 93 50 49 58 58 01                          // ...PIXX.

                            Return (One)
                        }
                    }
                }


   17D96: A4 01                                            // ..

                Return (Zero)
            }


   17D98: A4 00                                            // ..

            Method (PNVM, 0, Serialized)
            {

   17D9A: 14 24 50 4E 56 4D 08                             // .$PNVM.

                If (LEqual (BCCX, One))
                {

   17DA1: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x08))
                    {

   17DA9: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                        If (LEqual (PIXX, 0x02))
                        {

   17DB2: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                            Return (One)
                        }
                    }
                }


   17DBB: A4 01                                            // ..

                Return (Zero)
            }
        }
    }


   17DBD: A4 00                                            // ..

    Scope (_SB.PCI0.RP10.PXSX)
    {

   17DBF: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   17DCF: 30 50 58 53 58                                   // 0PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   17DD4: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   17DDC: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   17DE8: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   17DF2: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17DF3: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   17DFB: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   17E09: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   17E16: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   17E17: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   17E1E: A4                                               // .

Package (0x00){})
        }


   17E1F: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   17E22: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   17E2D: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17E3D: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   17E44: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   17E4B: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   17E53: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   17E5C: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   17E64: A4 01                                            // ..

            Return (Zero)
        }


   17E66: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   17E68: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   17E6F: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   17E77: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   17E80: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   17E89: A4 01                                            // ..

            Return (Zero)
        }
    }


   17E8B: A4 00                                            // ..

    Scope (_SB.PCI0.RP11.PXSX)
    {

   17E8D: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   17E9D: 31 50 58 53 58                                   // 1PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   17EA2: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   17EAA: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   17EB6: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   17EC0: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17EC1: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   17EC9: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   17ED7: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   17EE4: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   17EE5: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   17EEC: A4                                               // .

Package (0x00){})
        }


   17EED: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   17EF0: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   17EFB: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17F0B: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   17F12: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   17F19: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   17F21: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   17F2A: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   17F32: A4 01                                            // ..

            Return (Zero)
        }


   17F34: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   17F36: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   17F3D: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   17F45: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   17F4E: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   17F57: A4 01                                            // ..

            Return (Zero)
        }
    }


   17F59: A4 00                                            // ..

    Scope (_SB.PCI0.RP12.PXSX)
    {

   17F5B: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   17F6B: 32 50 58 53 58                                   // 2PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   17F70: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   17F78: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   17F84: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   17F8E: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   17F8F: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   17F97: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   17FA5: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   17FB2: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   17FB3: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   17FBA: A4                                               // .

Package (0x00){})
        }


   17FBB: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   17FBE: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   17FC9: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   17FD9: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   17FE0: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   17FE7: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   17FEF: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   17FF8: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   18000: A4 01                                            // ..

            Return (Zero)
        }


   18002: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   18004: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   1800B: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   18013: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   1801C: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   18025: A4 01                                            // ..

            Return (Zero)
        }
    }


   18027: A4 00                                            // ..

    Scope (_SB.PCI0.RP13.PXSX)
    {

   18029: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   18039: 33 50 58 53 58                                   // 3PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   1803E: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   18046: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   18052: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   1805C: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   1805D: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   18065: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   18073: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   18080: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   18081: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   18088: A4                                               // .

Package (0x00){})
        }


   18089: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   1808C: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   18097: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   180A7: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   180AE: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   180B5: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   180BD: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   180C6: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   180CE: A4 01                                            // ..

            Return (Zero)
        }


   180D0: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   180D2: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   180D9: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   180E1: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   180EA: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   180F3: A4 01                                            // ..

            Return (Zero)
        }
    }


   180F5: A4 00                                            // ..

    Scope (_SB.PCI0.RP14.PXSX)
    {

   180F7: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   18107: 34 50 58 53 58                                   // 4PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   1810C: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   18114: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   18120: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   1812A: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   1812B: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   18133: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   18141: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   1814E: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   1814F: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   18156: A4                                               // .

Package (0x00){})
        }


   18157: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   1815A: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   18165: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   18175: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   1817C: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   18183: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   1818B: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   18194: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   1819C: A4 01                                            // ..

            Return (Zero)
        }


   1819E: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   181A0: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   181A7: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   181AF: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   181B8: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   181C1: A4 01                                            // ..

            Return (Zero)
        }
    }


   181C3: A4 00                                            // ..

    Scope (_SB.PCI0.RP15.PXSX)
    {

   181C5: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   181D5: 35 50 58 53 58                                   // 5PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   181DA: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   181E2: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   181EE: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   181F8: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   181F9: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   18201: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   1820F: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   1821C: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   1821D: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   18224: A4                                               // .

Package (0x00){})
        }


   18225: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   18228: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   18233: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   18243: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   1824A: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   18251: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   18259: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   18262: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   1826A: A4 01                                            // ..

            Return (Zero)
        }


   1826C: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   1826E: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   18275: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   1827D: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   18286: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   1828F: A4 01                                            // ..

            Return (Zero)
        }
    }


   18291: A4 00                                            // ..

    Scope (_SB.PCI0.RP16.PXSX)
    {

   18293: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   182A3: 36 50 58 53 58                                   // 6PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   182A8: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   182B0: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   182BC: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   182C6: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   182C7: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   182CF: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   182DD: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   182EA: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   182EB: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   182F2: A4                                               // .

Package (0x00){})
        }


   182F3: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   182F6: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   18301: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   18311: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   18318: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   1831F: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   18327: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   18330: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   18338: A4 01                                            // ..

            Return (Zero)
        }


   1833A: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   1833C: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   18343: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   1834B: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   18354: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   1835D: A4 01                                            // ..

            Return (Zero)
        }
    }


   1835F: A4 00                                            // ..

    Scope (_SB.PCI0.RP17.PXSX)
    {

   18361: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   18371: 37 50 58 53 58                                   // 7PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   18376: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   1837E: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   1838A: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   18394: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   18395: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   1839D: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   183AB: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   183B8: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   183B9: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   183C0: A4                                               // .

Package (0x00){})
        }


   183C1: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   183C4: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   183CF: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   183DF: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   183E6: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   183ED: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   183F5: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   183FE: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   18406: A4 01                                            // ..

            Return (Zero)
        }


   18408: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   1840A: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   18411: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   18419: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   18422: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   1842B: A4 01                                            // ..

            Return (Zero)
        }
    }


   1842D: A4 00                                            // ..

    Scope (_SB.PCI0.RP18.PXSX)
    {

   1842F: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   1843F: 38 50 58 53 58                                   // 8PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   18444: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   1844C: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   18458: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   18462: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   18463: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   1846B: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   18479: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   18486: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   18487: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   1848E: A4                                               // .

Package (0x00){})
        }


   1848F: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   18492: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   1849D: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   184AD: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   184B4: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   184BB: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   184C3: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   184CC: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   184D4: A4 01                                            // ..

            Return (Zero)
        }


   184D6: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   184D8: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   184DF: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   184E7: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   184F0: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   184F9: A4 01                                            // ..

            Return (Zero)
        }
    }


   184FB: A4 00                                            // ..

    Scope (_SB.PCI0.RP19.PXSX)
    {

   184FD: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
   1850D: 39 50 58 53 58                                   // 9PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   18512: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   1851A: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   18526: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   18530: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   18531: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   18539: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   18547: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   18554: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   18555: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   1855C: A4                                               // .

Package (0x00){})
        }


   1855D: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   18560: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   1856B: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   1857B: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   18582: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   18589: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   18591: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   1859A: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   185A2: A4 01                                            // ..

            Return (Zero)
        }


   185A4: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   185A6: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   185AD: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   185B5: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   185BE: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   185C7: A4 01                                            // ..

            Return (Zero)
        }
    }


   185C9: A4 00                                            // ..

    Scope (_SB.PCI0.RP20.PXSX)
    {

   185CB: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // .M./._SB_PCI0RP2
   185DB: 30 50 58 53 58                                   // 0PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

   185E0: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

   185E8: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
   185F4: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


   185FE: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
   185FF: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (
                    And (PEPC, 0x0400), 0x0400), 
   18607: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

   18615: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
   18622: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


   18623: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
   1862A: A4                                               // .

Package (0x00){})
        }


   1862B: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

   1862E: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


   18639: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
   18649: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

   18650: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

   18657: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

   1865F: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

   18668: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


   18670: A4 01                                            // ..

            Return (Zero)
        }


   18672: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

   18674: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

   1867B: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

   18683: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

   1868C: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


   18695: A4 01                                            // ..

            Return (Zero)
        }
    }


   18697: A4 00                                            // ..

    Scope (_PR.CPU0)
    {

   18699: 10 4D 06 2E 5F 50 52 5F 43 50 55 30              // .M.._PR_CPU0

        Method (XDEP, 0, NotSerialized)
        {
            ADBG ("CPU0 DEP Call")

   186A5: 14 41 06 58 44 45 50 00 41 44 42 47 0D 43 50 55  // .A.XDEP.ADBG.CPU
   186B5: 30 20 44 45 50 20 43 61 6C 6C 00                 // 0 DEP Call.

            If (LOr (LEqual (S0ID, One), 
   186C0: A0 2D 91 93 53 30 49 44 01                       // .-..S0ID.


   186C9: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {
                ADBG ("CPU0 DEP")

   186CA: 95 4F 53 59 53 0B DF 07 41 44 42 47 0D 43 50 55  // .OSYS...ADBG.CPU
   186DA: 30 20 44 45 50 00                                // 0 DEP.

                Return (
   186E0: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

   186E1: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {
                ADBG ("CPU0 DEP NULL")

   186EE: A1 18 41 44 42 47 0D 43 50 55 30 20 44 45 50 20  // ..ADBG.CPU0 DEP 
   186FE: 4E 55 4C 4C 00                                   // NULL.

                Return (
   18703: A4                                               // .

Package (0x00){})
            }
        }
    }


   18704: 12 02 00                                         // ...

    Scope (_PR.CPU1)
    {

   18707: 10 4D 06 2E 5F 50 52 5F 43 50 55 31              // .M.._PR_CPU1

        Method (XDEP, 0, NotSerialized)
        {
            ADBG ("CPU1 DEP Call")

   18713: 14 41 06 58 44 45 50 00 41 44 42 47 0D 43 50 55  // .A.XDEP.ADBG.CPU
   18723: 31 20 44 45 50 20 43 61 6C 6C 00                 // 1 DEP Call.

            If (LOr (LEqual (S0ID, One), 
   1872E: A0 2D 91 93 53 30 49 44 01                       // .-..S0ID.


   18737: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {
                ADBG ("CPU1 DEP")

   18738: 95 4F 53 59 53 0B DF 07 41 44 42 47 0D 43 50 55  // .OSYS...ADBG.CPU
   18748: 31 20 44 45 50 00                                // 1 DEP.

                Return (
   1874E: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

   1874F: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {
                ADBG ("CPU1 DEP NULL")

   1875C: A1 18 41 44 42 47 0D 43 50 55 31 20 44 45 50 20  // ..ADBG.CPU1 DEP 
   1876C: 4E 55 4C 4C 00                                   // NULL.

                Return (
   18771: A4                                               // .

Package (0x00){})
            }
        }
    }


   18772: 12 02 00                                         // ...

    Scope (_PR.CPU2)
    {

   18775: 10 4D 06 2E 5F 50 52 5F 43 50 55 32              // .M.._PR_CPU2

        Method (XDEP, 0, NotSerialized)
        {
            ADBG ("CPU2 DEP Call")

   18781: 14 41 06 58 44 45 50 00 41 44 42 47 0D 43 50 55  // .A.XDEP.ADBG.CPU
   18791: 32 20 44 45 50 20 43 61 6C 6C 00                 // 2 DEP Call.

            If (LOr (LEqual (S0ID, One), 
   1879C: A0 2D 91 93 53 30 49 44 01                       // .-..S0ID.


   187A5: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {
                ADBG ("CPU2 DEP")

   187A6: 95 4F 53 59 53 0B DF 07 41 44 42 47 0D 43 50 55  // .OSYS...ADBG.CPU
   187B6: 32 20 44 45 50 00                                // 2 DEP.

                Return (
   187BC: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

   187BD: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {
                ADBG ("CPU2 DEP NULL")

   187CA: A1 18 41 44 42 47 0D 43 50 55 32 20 44 45 50 20  // ..ADBG.CPU2 DEP 
   187DA: 4E 55 4C 4C 00                                   // NULL.

                Return (
   187DF: A4                                               // .

Package (0x00){})
            }
        }
    }


   187E0: 12 02 00                                         // ...

    Scope (_PR.CPU3)
    {

   187E3: 10 4D 06 2E 5F 50 52 5F 43 50 55 33              // .M.._PR_CPU3

        Method (XDEP, 0, NotSerialized)
        {
            ADBG ("CPU3 DEP Call")

   187EF: 14 41 06 58 44 45 50 00 41 44 42 47 0D 43 50 55  // .A.XDEP.ADBG.CPU
   187FF: 33 20 44 45 50 20 43 61 6C 6C 00                 // 3 DEP Call.

            If (LOr (LEqual (S0ID, One), 
   1880A: A0 2D 91 93 53 30 49 44 01                       // .-..S0ID.


   18813: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {
                ADBG ("CPU3 DEP")

   18814: 95 4F 53 59 53 0B DF 07 41 44 42 47 0D 43 50 55  // .OSYS...ADBG.CPU
   18824: 33 20 44 45 50 00                                // 3 DEP.

                Return (
   1882A: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

   1882B: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {
                ADBG ("CPU3 DEP NULL")

   18838: A1 18 41 44 42 47 0D 43 50 55 33 20 44 45 50 20  // ..ADBG.CPU3 DEP 
   18848: 4E 55 4C 4C 00                                   // NULL.

                Return (
   1884D: A4                                               // .

Package (0x00){})
            }
        }
    }


   1884E: 12 02 00                                         // ...

    Scope (_PR.CPU4)
    {

   18851: 10 4D 06 2E 5F 50 52 5F 43 50 55 34              // .M.._PR_CPU4

        Method (XDEP, 0, NotSerialized)
        {
            ADBG ("CPU4 DEP Call")

   1885D: 14 41 06 58 44 45 50 00 41 44 42 47 0D 43 50 55  // .A.XDEP.ADBG.CPU
   1886D: 34 20 44 45 50 20 43 61 6C 6C 00                 // 4 DEP Call.

            If (LOr (LEqual (S0ID, One), 
   18878: A0 2D 91 93 53 30 49 44 01                       // .-..S0ID.


   18881: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {
                ADBG ("CPU4 DEP")

   18882: 95 4F 53 59 53 0B DF 07 41 44 42 47 0D 43 50 55  // .OSYS...ADBG.CPU
   18892: 34 20 44 45 50 00                                // 4 DEP.

                Return (
   18898: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

   18899: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {
                ADBG ("CPU4 DEP NULL")

   188A6: A1 18 41 44 42 47 0D 43 50 55 34 20 44 45 50 20  // ..ADBG.CPU4 DEP 
   188B6: 4E 55 4C 4C 00                                   // NULL.

                Return (
   188BB: A4                                               // .

Package (0x00){})
            }
        }
    }


   188BC: 12 02 00                                         // ...

    Scope (_PR.CPU5)
    {

   188BF: 10 4D 06 2E 5F 50 52 5F 43 50 55 35              // .M.._PR_CPU5

        Method (XDEP, 0, NotSerialized)
        {
            ADBG ("CPU5 DEP Call")

   188CB: 14 41 06 58 44 45 50 00 41 44 42 47 0D 43 50 55  // .A.XDEP.ADBG.CPU
   188DB: 35 20 44 45 50 20 43 61 6C 6C 00                 // 5 DEP Call.

            If (LOr (LEqual (S0ID, One), 
   188E6: A0 2D 91 93 53 30 49 44 01                       // .-..S0ID.


   188EF: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {
                ADBG ("CPU5 DEP")

   188F0: 95 4F 53 59 53 0B DF 07 41 44 42 47 0D 43 50 55  // .OSYS...ADBG.CPU
   18900: 35 20 44 45 50 00                                // 5 DEP.

                Return (
   18906: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

   18907: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {
                ADBG ("CPU5 DEP NULL")

   18914: A1 18 41 44 42 47 0D 43 50 55 35 20 44 45 50 20  // ..ADBG.CPU5 DEP 
   18924: 4E 55 4C 4C 00                                   // NULL.

                Return (
   18929: A4                                               // .

Package (0x00){})
            }
        }
    }


   1892A: 12 02 00                                         // ...

    Scope (_PR.CPU6)
    {

   1892D: 10 4D 06 2E 5F 50 52 5F 43 50 55 36              // .M.._PR_CPU6

        Method (XDEP, 0, NotSerialized)
        {
            ADBG ("CPU6 DEP Call")

   18939: 14 41 06 58 44 45 50 00 41 44 42 47 0D 43 50 55  // .A.XDEP.ADBG.CPU
   18949: 36 20 44 45 50 20 43 61 6C 6C 00                 // 6 DEP Call.

            If (LOr (LEqual (S0ID, One), 
   18954: A0 2D 91 93 53 30 49 44 01                       // .-..S0ID.


   1895D: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {
                ADBG ("CPU6 DEP")

   1895E: 95 4F 53 59 53 0B DF 07 41 44 42 47 0D 43 50 55  // .OSYS...ADBG.CPU
   1896E: 36 20 44 45 50 00                                // 6 DEP.

                Return (
   18974: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

   18975: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {
                ADBG ("CPU6 DEP NULL")

   18982: A1 18 41 44 42 47 0D 43 50 55 36 20 44 45 50 20  // ..ADBG.CPU6 DEP 
   18992: 4E 55 4C 4C 00                                   // NULL.

                Return (
   18997: A4                                               // .

Package (0x00){})
            }
        }
    }


   18998: 12 02 00                                         // ...

    Scope (_PR.CPU7)
    {

   1899B: 10 4D 06 2E 5F 50 52 5F 43 50 55 37              // .M.._PR_CPU7

        Method (XDEP, 0, NotSerialized)
        {
            ADBG ("CPU7 DEP Call")

   189A7: 14 41 06 58 44 45 50 00 41 44 42 47 0D 43 50 55  // .A.XDEP.ADBG.CPU
   189B7: 37 20 44 45 50 20 43 61 6C 6C 00                 // 7 DEP Call.

            If (LOr (LEqual (S0ID, One), 
   189C2: A0 2D 91 93 53 30 49 44 01                       // .-..S0ID.


   189CB: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {
                ADBG ("CPU7 DEP")

   189CC: 95 4F 53 59 53 0B DF 07 41 44 42 47 0D 43 50 55  // .OSYS...ADBG.CPU
   189DC: 37 20 44 45 50 00                                // 7 DEP.

                Return (
   189E2: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

   189E3: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {
                ADBG ("CPU7 DEP NULL")

   189F0: A1 18 41 44 42 47 0D 43 50 55 37 20 44 45 50 20  // ..ADBG.CPU7 DEP 
   18A00: 4E 55 4C 4C 00                                   // NULL.

                Return (
   18A05: A4                                               // .

Package (0x00){})
            }
        }
    }


   18A06: 12 02 00                                         // ...

    Scope (_SB)
    {

   18A09: 10 8E 94 01 5F 53 42 5F                          // ...._SB_

        Device (PEPD)
        {

   18A11: 5B 82 85 94 01 50 45 50 44                       // [....PEPD

            Name (_HID, "INT33A1" /* Intel Power Engine */)  // _HID: Hardware ID

   18A1A: 08 5F 48 49 44 0D 49 4E 54 33 33 41 31 00        // ._HID.INT33A1.

            Name (_CID, EisaId ("PNP0D80") /* Windows-compatible System Power Management Controller */)  // _CID: Compatible ID

   18A28: 08 5F 43 49 44 0C 41 D0 0D 80                    // ._CID.A...

            Name (_UID, One)  // _UID: Unique ID

   18A32: 08 5F 55 49 44 01                                // ._UID.

            Name (DEVY, 
   18A38: 08 44 45 56 59                                   // .DEVY

Package (0x29)
            {

   18A3D: 12 4C 56 29                                      // .LV)

                Package (0x03)
                {
                    "\\_PR.CPU0", 
                    One, 

   18A41: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 30 00 01     // ....\_PR.CPU0..

                    Package (0x02)
                    {
                        Zero, 

   18A50: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


   18A54: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.CPU1", 
                    One, 

   18A5A: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 31 00 01     // ....\_PR.CPU1..

                    Package (0x02)
                    {
                        Zero, 

   18A69: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


   18A6D: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.CPU2", 
                    One, 

   18A73: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 32 00 01     // ....\_PR.CPU2..

                    Package (0x02)
                    {
                        Zero, 

   18A82: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


   18A86: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.CPU3", 
                    One, 

   18A8C: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 33 00 01     // ....\_PR.CPU3..

                    Package (0x02)
                    {
                        Zero, 

   18A9B: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


   18A9F: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_SB.PCI0.GFX0", 
                    One, 

   18AA5: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
   18AB5: 58 30 00 01                                      // X0..

                    Package (0x02)
                    {
                        Zero, 

   18AB9: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18ABD: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0", 
                    Zero, 

   18AC4: 12 1F 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
   18AD4: 54 30 00 00                                      // T0..

                    Package (0x02)
                    {
                        Zero, 

   18AD8: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18ADC: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.UA00", 
                    One, 

   18AE4: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
   18AF4: 30 30 00 01                                      // 00..

                    Package (0x02)
                    {
                        Zero, 

   18AF8: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18AFC: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.UA01", 
                    One, 

   18B03: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
   18B13: 30 31 00 01                                      // 01..

                    Package (0x02)
                    {
                        Zero, 

   18B17: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18B1B: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C0", 
                    One, 

   18B22: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
   18B32: 43 30 00 01                                      // C0..

                    Package (0x02)
                    {
                        Zero, 

   18B36: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18B3A: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C1", 
                    One, 

   18B41: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
   18B51: 43 31 00 01                                      // C1..

                    Package (0x02)
                    {
                        Zero, 

   18B55: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18B59: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.XHC", 
                    One, 

   18B60: 12 1D 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 58 48  // ....\_SB.PCI0.XH
   18B70: 43 00 01                                         // C..

                    Package (0x02)
                    {
                        Zero, 

   18B73: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18B77: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "INTELAUDIO\\FUNC_01&VEN_10EC*", 
                    One, 

   18B7E: 12 30 03 0D 49 4E 54 45 4C 41 55 44 49 4F 5C 46  // .0..INTELAUDIO\F
   18B8E: 55 4E 43 5F 30 31 26 56 45 4E 5F 31 30 45 43 2A  // UNC_01&VEN_10EC*
   18B9E: 00 01                                            // ..

                    Package (0x03)
                    {
                        Zero, 

   18BA0: 12 0E 03 00                                      // ....

                        Package (0x02)
                        {
                            Zero, 
                            Zero
                        }, 


   18BA4: 12 04 02 00 00                                   // .....

                        Package (0x02)
                        {
                            One, 
                            0x03
                        }
                    }
                }, 


   18BA9: 12 05 02 01 0A 03                                // ......

                Package (0x03)
                {
                    "\\_SB.PCI0.PEMC", 
                    One, 

   18BAF: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 50 45  // ....\_SB.PCI0.PE
   18BBF: 4D 43 00 01                                      // MC..

                    Package (0x02)
                    {
                        Zero, 

   18BC3: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18BC7: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.PSDC", 
                    One, 

   18BCE: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 50 53  // ....\_SB.PCI0.PS
   18BDE: 44 43 00 01                                      // DC..

                    Package (0x02)
                    {
                        Zero, 

   18BE2: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18BE6: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C2", 
                    One, 

   18BED: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
   18BFD: 43 32 00 01                                      // C2..

                    Package (0x02)
                    {
                        Zero, 

   18C01: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18C05: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C3", 
                    One, 

   18C0C: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
   18C1C: 43 33 00 01                                      // C3..

                    Package (0x02)
                    {
                        Zero, 

   18C20: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18C24: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C4", 
                    One, 

   18C2B: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
   18C3B: 43 34 00 01                                      // C4..

                    Package (0x02)
                    {
                        Zero, 

   18C3F: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18C43: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C5", 
                    One, 

   18C4A: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
   18C5A: 43 35 00 01                                      // C5..

                    Package (0x02)
                    {
                        Zero, 

   18C5E: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18C62: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.UA02", 
                    One, 

   18C69: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
   18C79: 30 32 00 01                                      // 02..

                    Package (0x02)
                    {
                        Zero, 

   18C7D: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18C81: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SPI0", 
                    One, 

   18C88: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 50  // ....\_SB.PCI0.SP
   18C98: 49 30 00 01                                      // I0..

                    Package (0x02)
                    {
                        Zero, 

   18C9C: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18CA0: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SPI1", 
                    One, 

   18CA7: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 50  // ....\_SB.PCI0.SP
   18CB7: 49 31 00 01                                      // I1..

                    Package (0x02)
                    {
                        Zero, 

   18CBB: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


   18CBF: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.RP01.PXSX", 
                    Zero, 

   18CC6: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18CD6: 30 31 2E 50 58 53 58 00 00                       // 01.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18CDF: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18CE3: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP02.PXSX", 
                    Zero, 

   18CEB: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18CFB: 30 32 2E 50 58 53 58 00 00                       // 02.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18D04: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18D08: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP03.PXSX", 
                    Zero, 

   18D10: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18D20: 30 33 2E 50 58 53 58 00 00                       // 03.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18D29: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18D2D: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP04.PXSX", 
                    Zero, 

   18D35: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18D45: 30 34 2E 50 58 53 58 00 00                       // 04.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18D4E: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18D52: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP05.PXSX", 
                    Zero, 

   18D5A: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18D6A: 30 35 2E 50 58 53 58 00 00                       // 05.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18D73: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18D77: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP06.PXSX", 
                    Zero, 

   18D7F: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18D8F: 30 36 2E 50 58 53 58 00 00                       // 06.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18D98: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18D9C: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP07.PXSX", 
                    Zero, 

   18DA4: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18DB4: 30 37 2E 50 58 53 58 00 00                       // 07.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18DBD: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18DC1: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP08.PXSX", 
                    Zero, 

   18DC9: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18DD9: 30 38 2E 50 58 53 58 00 00                       // 08.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18DE2: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18DE6: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP09.PXSX", 
                    Zero, 

   18DEE: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18DFE: 30 39 2E 50 58 53 58 00 00                       // 09.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18E07: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18E0B: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP10.PXSX", 
                    Zero, 

   18E13: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18E23: 31 30 2E 50 58 53 58 00 00                       // 10.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18E2C: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18E30: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP11.PXSX", 
                    Zero, 

   18E38: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18E48: 31 31 2E 50 58 53 58 00 00                       // 11.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18E51: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18E55: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP12.PXSX", 
                    Zero, 

   18E5D: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18E6D: 31 32 2E 50 58 53 58 00 00                       // 12.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18E76: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18E7A: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP13.PXSX", 
                    Zero, 

   18E82: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18E92: 31 33 2E 50 58 53 58 00 00                       // 13.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18E9B: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18E9F: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP14.PXSX", 
                    Zero, 

   18EA7: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18EB7: 31 34 2E 50 58 53 58 00 00                       // 14.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18EC0: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18EC4: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP15.PXSX", 
                    Zero, 

   18ECC: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18EDC: 31 35 2E 50 58 53 58 00 00                       // 15.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18EE5: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18EE9: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP16.PXSX", 
                    Zero, 

   18EF1: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18F01: 31 36 2E 50 58 53 58 00 00                       // 16.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18F0A: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18F0E: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP17.PXSX", 
                    Zero, 

   18F16: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18F26: 31 37 2E 50 58 53 58 00 00                       // 17.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18F2F: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18F33: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP18.PXSX", 
                    Zero, 

   18F3B: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18F4B: 31 38 2E 50 58 53 58 00 00                       // 18.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18F54: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18F58: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP19.PXSX", 
                    Zero, 

   18F60: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18F70: 31 39 2E 50 58 53 58 00 00                       // 19.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18F79: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


   18F7D: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP20.PXSX", 
                    Zero, 

   18F85: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
   18F95: 32 30 2E 50 58 53 58 00 00                       // 20.PXSX..

                    Package (0x02)
                    {
                        Zero, 

   18F9E: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }
            })

   18FA2: 12 07 03 0A FF 00 0A 81                          // ........

            Name (BCCD, 
   18FAA: 08 42 43 43 44                                   // .BCCD

Package (0x19)
            {

   18FAF: 12 48 50 19                                      // .HP.

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0", 

   18FB3: 12 2C 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .,..\_SB.PCI0.SA
   18FC3: 54 30 00                                         // T0.

                    Package (0x01)
                    {

   18FC6: 12 19 01                                         // ...

                        Package (0x03)
                        {

   18FC9: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   18FCC: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


   18FD6: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT0", 

   18FE0: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
   18FF0: 54 30 2E 50 52 54 30 00                          // T0.PRT0.

                    Package (0x01)
                    {

   18FF8: 12 19 01                                         // ...

                        Package (0x03)
                        {

   18FFB: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   18FFE: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


   19008: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 

   19012: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
   19022: 54 30 2E 50 52 54 31 00                          // T0.PRT1.

                    Package (0x01)
                    {

   1902A: 12 19 01                                         // ...

                        Package (0x03)
                        {

   1902D: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19030: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


   1903A: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT2", 

   19044: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
   19054: 54 30 2E 50 52 54 32 00                          // T0.PRT2.

                    Package (0x01)
                    {

   1905C: 12 19 01                                         // ...

                        Package (0x03)
                        {

   1905F: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19062: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


   1906C: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT3", 

   19076: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
   19086: 54 30 2E 50 52 54 33 00                          // T0.PRT3.

                    Package (0x01)
                    {

   1908E: 12 19 01                                         // ...

                        Package (0x03)
                        {

   19091: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19094: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


   1909E: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.RP01.PXSX", 

   190A8: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   190B8: 30 31 2E 50 58 53 58 00                          // 01.PXSX.

                    Package (0x01)
                    {

   190C0: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   190C3: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   190C6: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   190D0: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP02.PXSX", 

   190DC: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   190EC: 30 32 2E 50 58 53 58 00                          // 02.PXSX.

                    Package (0x01)
                    {

   190F4: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   190F7: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   190FA: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   19104: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP03.PXSX", 

   19110: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   19120: 30 33 2E 50 58 53 58 00                          // 03.PXSX.

                    Package (0x01)
                    {

   19128: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   1912B: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   1912E: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   19138: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP04.PXSX", 

   19144: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   19154: 30 34 2E 50 58 53 58 00                          // 04.PXSX.

                    Package (0x01)
                    {

   1915C: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   1915F: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19162: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   1916C: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP05.PXSX", 

   19178: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   19188: 30 35 2E 50 58 53 58 00                          // 05.PXSX.

                    Package (0x01)
                    {

   19190: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   19193: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19196: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   191A0: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP06.PXSX", 

   191AC: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   191BC: 30 36 2E 50 58 53 58 00                          // 06.PXSX.

                    Package (0x01)
                    {

   191C4: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   191C7: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   191CA: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   191D4: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP07.PXSX", 

   191E0: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   191F0: 30 37 2E 50 58 53 58 00                          // 07.PXSX.

                    Package (0x01)
                    {

   191F8: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   191FB: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   191FE: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   19208: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP08.PXSX", 

   19214: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   19224: 30 38 2E 50 58 53 58 00                          // 08.PXSX.

                    Package (0x01)
                    {

   1922C: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   1922F: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19232: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   1923C: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP09.PXSX", 

   19248: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   19258: 30 39 2E 50 58 53 58 00                          // 09.PXSX.

                    Package (0x01)
                    {

   19260: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   19263: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19266: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   19270: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP10.PXSX", 

   1927C: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   1928C: 31 30 2E 50 58 53 58 00                          // 10.PXSX.

                    Package (0x01)
                    {

   19294: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   19297: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   1929A: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   192A4: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP11.PXSX", 

   192B0: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   192C0: 31 31 2E 50 58 53 58 00                          // 11.PXSX.

                    Package (0x01)
                    {

   192C8: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   192CB: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   192CE: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   192D8: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP12.PXSX", 

   192E4: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   192F4: 31 32 2E 50 58 53 58 00                          // 12.PXSX.

                    Package (0x01)
                    {

   192FC: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   192FF: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19302: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   1930C: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP13.PXSX", 

   19318: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   19328: 31 33 2E 50 58 53 58 00                          // 13.PXSX.

                    Package (0x01)
                    {

   19330: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   19333: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19336: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   19340: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP14.PXSX", 

   1934C: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   1935C: 31 34 2E 50 58 53 58 00                          // 14.PXSX.

                    Package (0x01)
                    {

   19364: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   19367: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   1936A: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   19374: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP15.PXSX", 

   19380: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   19390: 31 35 2E 50 58 53 58 00                          // 15.PXSX.

                    Package (0x01)
                    {

   19398: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   1939B: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   1939E: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   193A8: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP16.PXSX", 

   193B4: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   193C4: 31 36 2E 50 58 53 58 00                          // 16.PXSX.

                    Package (0x01)
                    {

   193CC: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   193CF: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   193D2: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   193DC: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP17.PXSX", 

   193E8: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   193F8: 31 37 2E 50 58 53 58 00                          // 17.PXSX.

                    Package (0x01)
                    {

   19400: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   19403: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   19406: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   19410: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP18.PXSX", 

   1941C: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   1942C: 31 38 2E 50 58 53 58 00                          // 18.PXSX.

                    Package (0x01)
                    {

   19434: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   19437: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   1943A: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   19444: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP19.PXSX", 

   19450: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   19460: 31 39 2E 50 58 53 58 00                          // 19.PXSX.

                    Package (0x01)
                    {

   19468: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   1946B: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   1946E: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


   19478: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP20.PXSX", 

   19484: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
   19494: 32 30 2E 50 58 53 58 00                          // 20.PXSX.

                    Package (0x01)
                    {

   1949C: 12 1B 01                                         // ...

                        Package (0x03)
                        {

   1949F: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


   194A2: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }
            })

   194AC: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

   194B8: 14 27 5F 53 54 41 00                             // .'_STA.

                If (LOr (
   194BF: A0 1E 91 92                                      // ....

LGreaterEqual (OSYS, 0x07DF), 
   194C3: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LAnd (
   194CB: 90 92                                            // ..

LGreaterEqual (OSYS, 0x07DC), 
   194CD: 95 4F 53 59 53 0B DC 07                          // .OSYS...

LEqual (
                    S0ID, One))))
                {

   194D5: 93 53 30 49 44 01                                // .S0ID.

                    Return (0x0F)
                }


   194DB: A4 0A 0F                                         // ...

                Return (Zero)
            }


   194DE: A4 00                                            // ..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                ADBG (
   194E0: 14 47 E7 5F 44 53 4D 0C 41 44 42 47              // .G._DSM.ADBG

Concatenate ("PEPC = ", ToHexString (PEPC)))

   194EC: 73 0D 50 45 50 43 20 3D 20 00 98 50 45 50 43 00  // s.PEPC = ..PEPC.
   194FC: 00                                               // .

                If (LEqual (Arg0, 
   194FD: A0 48 E5 93 68                                   // .H..h

ToUUID ("c4eb40a0-6cd2-11e2-bcfd-0800200c9a66") /* Unknown UUID */))
                {

   19502: 11 13 0A 10 A0 40 EB C4 D2 6C E2 11 BC FD 08 00  // .....@...l......
   19512: 20 0C 9A 66                                      //  ..f

                    If (LEqual (Arg2, Zero))
                    {

   19516: A0 09 93 6A 00                                   // ...j.

                        Return (
   1951B: A4                                               // .

Buffer (One)
                        {
                             0x7F                                             // .
                        })
                    }


   1951C: 11 03 01 7F                                      // ....

                    If (LEqual (Arg2, One))
                    {

   19520: A0 48 DF 93 6A 01                                // .H..j.

                        If (LEqual (S0ID, Zero))
                        {

   19526: A0 0B 93 53 30 49 44 00                          // ...S0ID.

                            Return (
   1952E: A4                                               // .

Package (0x00){})
                        }


   1952F: 12 02 00                                         // ...

                        If (LEqual (And (PEPC, 0x03), One))
                        {

   19532: A0 43 4E 93 7B 50 45 50 43 0A 03 00 01           // .CN.{PEPC....

                            If (And (SPST, 0x0F))
                            {

   1953F: A0 17 7B 53 50 53 54 0A 0F 00                    // ..{SPST...

                                Store (One, 
   19549: 70 01                                            // p.

Index (DerefOf (
   1954B: 88 83                                            // ..

Index (DEVY, 0x05)), One))
                            }


   1954D: 88 44 45 56 59 0A 05 00 01 00                    // .DEVY.....

                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {

   19557: A0 41 05 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .A.[.\/._SB_PCI0
   19567: 52 50 30 31 50 58 53 58 00                       // RP01PXSX.

                                If (LOr (^^PCI0.RP01.PXSX.PAHC (), ^^PCI0.RP01.PXSX.PNVM ()))
                                {

   19570: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 31 50  // .8.^^/.PCI0RP01P
   19580: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   19590: 50 30 31 50 58 53 58 50 4E 56 4D                 // P01PXSXPNVM

                                    Store (One, 
   1959B: 70 01                                            // p.

Index (DerefOf (
   1959D: 88 83                                            // ..

Index (DEVY, 0x15)), One))
                                }
                            }


   1959F: 88 44 45 56 59 0A 15 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP02.PXSX.PAHC (), ^^PCI0.RP02.PXSX.PNVM ()))
                            {

   195A9: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 32 50  // .8.^^/.PCI0RP02P
   195B9: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   195C9: 50 30 32 50 58 53 58 50 4E 56 4D                 // P02PXSXPNVM

                                Store (One, 
   195D4: 70 01                                            // p.

Index (DerefOf (
   195D6: 88 83                                            // ..

Index (DEVY, 0x16)), One))
                            }


   195D8: 88 44 45 56 59 0A 16 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP03.PXSX.PAHC (), ^^PCI0.RP03.PXSX.PNVM ()))
                            {

   195E2: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 33 50  // .8.^^/.PCI0RP03P
   195F2: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   19602: 50 30 33 50 58 53 58 50 4E 56 4D                 // P03PXSXPNVM

                                Store (One, 
   1960D: 70 01                                            // p.

Index (DerefOf (
   1960F: 88 83                                            // ..

Index (DEVY, 0x17)), One))
                            }


   19611: 88 44 45 56 59 0A 17 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP04.PXSX.PAHC (), ^^PCI0.RP04.PXSX.PNVM ()))
                            {

   1961B: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 34 50  // .8.^^/.PCI0RP04P
   1962B: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   1963B: 50 30 34 50 58 53 58 50 4E 56 4D                 // P04PXSXPNVM

                                Store (One, 
   19646: 70 01                                            // p.

Index (DerefOf (
   19648: 88 83                                            // ..

Index (DEVY, 0x18)), One))
                            }


   1964A: 88 44 45 56 59 0A 18 00 01 00                    // .DEVY.....

                            If (CondRefOf (\_SB.PCI0.RP05.PXSX))
                            {

   19654: A0 41 05 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .A.[.\/._SB_PCI0
   19664: 52 50 30 35 50 58 53 58 00                       // RP05PXSX.

                                If (LOr (^^PCI0.RP05.PXSX.PAHC (), ^^PCI0.RP05.PXSX.PNVM ()))
                                {

   1966D: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 35 50  // .8.^^/.PCI0RP05P
   1967D: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   1968D: 50 30 35 50 58 53 58 50 4E 56 4D                 // P05PXSXPNVM

                                    Store (One, 
   19698: 70 01                                            // p.

Index (DerefOf (
   1969A: 88 83                                            // ..

Index (DEVY, 0x19)), One))
                                }
                            }


   1969C: 88 44 45 56 59 0A 19 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP06.PXSX.PAHC (), ^^PCI0.RP06.PXSX.PNVM ()))
                            {

   196A6: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 36 50  // .8.^^/.PCI0RP06P
   196B6: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   196C6: 50 30 36 50 58 53 58 50 4E 56 4D                 // P06PXSXPNVM

                                Store (One, 
   196D1: 70 01                                            // p.

Index (DerefOf (
   196D3: 88 83                                            // ..

Index (DEVY, 0x1A)), One))
                            }


   196D5: 88 44 45 56 59 0A 1A 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP07.PXSX.PAHC (), ^^PCI0.RP07.PXSX.PNVM ()))
                            {

   196DF: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 37 50  // .8.^^/.PCI0RP07P
   196EF: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   196FF: 50 30 37 50 58 53 58 50 4E 56 4D                 // P07PXSXPNVM

                                Store (One, 
   1970A: 70 01                                            // p.

Index (DerefOf (
   1970C: 88 83                                            // ..

Index (DEVY, 0x1B)), One))
                            }


   1970E: 88 44 45 56 59 0A 1B 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP08.PXSX.PAHC (), ^^PCI0.RP08.PXSX.PNVM ()))
                            {

   19718: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 38 50  // .8.^^/.PCI0RP08P
   19728: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   19738: 50 30 38 50 58 53 58 50 4E 56 4D                 // P08PXSXPNVM

                                Store (One, 
   19743: 70 01                                            // p.

Index (DerefOf (
   19745: 88 83                                            // ..

Index (DEVY, 0x1C)), One))
                            }


   19747: 88 44 45 56 59 0A 1C 00 01 00                    // .DEVY.....

                            If (CondRefOf (\_SB.PCI0.RP09.PXSX))
                            {

   19751: A0 41 05 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .A.[.\/._SB_PCI0
   19761: 52 50 30 39 50 58 53 58 00                       // RP09PXSX.

                                If (LOr (^^PCI0.RP09.PXSX.PAHC (), ^^PCI0.RP09.PXSX.PNVM ()))
                                {

   1976A: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 39 50  // .8.^^/.PCI0RP09P
   1977A: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   1978A: 50 30 39 50 58 53 58 50 4E 56 4D                 // P09PXSXPNVM

                                    Store (One, 
   19795: 70 01                                            // p.

Index (DerefOf (
   19797: 88 83                                            // ..

Index (DEVY, 0x1D)), One))
                                }
                            }


   19799: 88 44 45 56 59 0A 1D 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP10.PXSX.PAHC (), ^^PCI0.RP10.PXSX.PNVM ()))
                            {

   197A3: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 30 50  // .8.^^/.PCI0RP10P
   197B3: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   197C3: 50 31 30 50 58 53 58 50 4E 56 4D                 // P10PXSXPNVM

                                Store (One, 
   197CE: 70 01                                            // p.

Index (DerefOf (
   197D0: 88 83                                            // ..

Index (DEVY, 0x1E)), One))
                            }


   197D2: 88 44 45 56 59 0A 1E 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP11.PXSX.PAHC (), ^^PCI0.RP11.PXSX.PNVM ()))
                            {

   197DC: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 31 50  // .8.^^/.PCI0RP11P
   197EC: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   197FC: 50 31 31 50 58 53 58 50 4E 56 4D                 // P11PXSXPNVM

                                Store (One, 
   19807: 70 01                                            // p.

Index (DerefOf (
   19809: 88 83                                            // ..

Index (DEVY, 0x1F)), One))
                            }


   1980B: 88 44 45 56 59 0A 1F 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP12.PXSX.PAHC (), ^^PCI0.RP12.PXSX.PNVM ()))
                            {

   19815: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 32 50  // .8.^^/.PCI0RP12P
   19825: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   19835: 50 31 32 50 58 53 58 50 4E 56 4D                 // P12PXSXPNVM

                                Store (One, 
   19840: 70 01                                            // p.

Index (DerefOf (
   19842: 88 83                                            // ..

Index (DEVY, 0x20)), One))
                            }


   19844: 88 44 45 56 59 0A 20 00 01 00                    // .DEVY. ...

                            If (LOr (^^PCI0.RP13.PXSX.PAHC (), ^^PCI0.RP13.PXSX.PNVM ()))
                            {

   1984E: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 33 50  // .8.^^/.PCI0RP13P
   1985E: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   1986E: 50 31 33 50 58 53 58 50 4E 56 4D                 // P13PXSXPNVM

                                Store (One, 
   19879: 70 01                                            // p.

Index (DerefOf (
   1987B: 88 83                                            // ..

Index (DEVY, 0x21)), One))
                            }


   1987D: 88 44 45 56 59 0A 21 00 01 00                    // .DEVY.!...

                            If (LOr (^^PCI0.RP14.PXSX.PAHC (), ^^PCI0.RP14.PXSX.PNVM ()))
                            {

   19887: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 34 50  // .8.^^/.PCI0RP14P
   19897: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   198A7: 50 31 34 50 58 53 58 50 4E 56 4D                 // P14PXSXPNVM

                                Store (One, 
   198B2: 70 01                                            // p.

Index (DerefOf (
   198B4: 88 83                                            // ..

Index (DEVY, 0x22)), One))
                            }


   198B6: 88 44 45 56 59 0A 22 00 01 00                    // .DEVY."...

                            If (LOr (^^PCI0.RP15.PXSX.PAHC (), ^^PCI0.RP15.PXSX.PNVM ()))
                            {

   198C0: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 35 50  // .8.^^/.PCI0RP15P
   198D0: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   198E0: 50 31 35 50 58 53 58 50 4E 56 4D                 // P15PXSXPNVM

                                Store (One, 
   198EB: 70 01                                            // p.

Index (DerefOf (
   198ED: 88 83                                            // ..

Index (DEVY, 0x23)), One))
                            }


   198EF: 88 44 45 56 59 0A 23 00 01 00                    // .DEVY.#...

                            If (LOr (^^PCI0.RP16.PXSX.PAHC (), ^^PCI0.RP16.PXSX.PNVM ()))
                            {

   198F9: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 36 50  // .8.^^/.PCI0RP16P
   19909: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   19919: 50 31 36 50 58 53 58 50 4E 56 4D                 // P16PXSXPNVM

                                Store (One, 
   19924: 70 01                                            // p.

Index (DerefOf (
   19926: 88 83                                            // ..

Index (DEVY, 0x24)), One))
                            }


   19928: 88 44 45 56 59 0A 24 00 01 00                    // .DEVY.$...

                            If (LOr (^^PCI0.RP17.PXSX.PAHC (), ^^PCI0.RP17.PXSX.PNVM ()))
                            {

   19932: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 37 50  // .8.^^/.PCI0RP17P
   19942: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   19952: 50 31 37 50 58 53 58 50 4E 56 4D                 // P17PXSXPNVM

                                Store (One, 
   1995D: 70 01                                            // p.

Index (DerefOf (
   1995F: 88 83                                            // ..

Index (DEVY, 0x25)), One))
                            }


   19961: 88 44 45 56 59 0A 25 00 01 00                    // .DEVY.%...

                            If (LOr (^^PCI0.RP18.PXSX.PAHC (), ^^PCI0.RP18.PXSX.PNVM ()))
                            {

   1996B: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 38 50  // .8.^^/.PCI0RP18P
   1997B: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   1998B: 50 31 38 50 58 53 58 50 4E 56 4D                 // P18PXSXPNVM

                                Store (One, 
   19996: 70 01                                            // p.

Index (DerefOf (
   19998: 88 83                                            // ..

Index (DEVY, 0x26)), One))
                            }


   1999A: 88 44 45 56 59 0A 26 00 01 00                    // .DEVY.&...

                            If (LOr (^^PCI0.RP19.PXSX.PAHC (), ^^PCI0.RP19.PXSX.PNVM ()))
                            {

   199A4: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 39 50  // .8.^^/.PCI0RP19P
   199B4: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   199C4: 50 31 39 50 58 53 58 50 4E 56 4D                 // P19PXSXPNVM

                                Store (One, 
   199CF: 70 01                                            // p.

Index (DerefOf (
   199D1: 88 83                                            // ..

Index (DEVY, 0x27)), One))
                            }


   199D3: 88 44 45 56 59 0A 27 00 01 00                    // .DEVY.'...

                            If (LOr (^^PCI0.RP20.PXSX.PAHC (), ^^PCI0.RP20.PXSX.PNVM ()))
                            {

   199DD: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 32 30 50  // .8.^^/.PCI0RP20P
   199ED: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
   199FD: 50 32 30 50 58 53 58 50 4E 56 4D                 // P20PXSXPNVM

                                Store (One, 
   19A08: 70 01                                            // p.

Index (DerefOf (
   19A0A: 88 83                                            // ..

Index (DEVY, 0x28)), One))
                            }
                        }


   19A0C: 88 44 45 56 59 0A 28 00 01 00                    // .DEVY.(...

                        If (LEqual (And (PEPC, 0x04), Zero))
                        {

   19A16: A0 19 93 7B 50 45 50 43 0A 04 00 00              // ...{PEPC....

                            Store (Zero, 
   19A22: 70 00                                            // p.

Index (DerefOf (
   19A24: 88 83                                            // ..

Index (DEVY, 0x06)), One))
                        }


   19A26: 88 44 45 56 59 0A 06 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x08), Zero))
                        {

   19A30: A0 19 93 7B 50 45 50 43 0A 08 00 00              // ...{PEPC....

                            Store (Zero, 
   19A3C: 70 00                                            // p.

Index (DerefOf (
   19A3E: 88 83                                            // ..

Index (DEVY, 0x07)), One))
                        }


   19A40: 88 44 45 56 59 0A 07 00 01 00                    // .DEVY.....

                        If (
   19A4A: A0 0B                                            // ..

LEqual (And (PEPC, 0x10), Zero)){}

   19A4C: 93 7B 50 45 50 43 0A 10 00 00                    // .{PEPC....

                        If (LEqual (And (PEPC, 0x20), Zero))
                        {

   19A56: A0 19 93 7B 50 45 50 43 0A 20 00 00              // ...{PEPC. ..

                            Store (Zero, 
   19A62: 70 00                                            // p.

Index (DerefOf (
   19A64: 88 83                                            // ..

Index (DEVY, 0x08)), One))
                        }


   19A66: 88 44 45 56 59 0A 08 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x40), Zero))
                        {

   19A70: A0 19 93 7B 50 45 50 43 0A 40 00 00              // ...{PEPC.@..

                            Store (Zero, 
   19A7C: 70 00                                            // p.

Index (DerefOf (
   19A7E: 88 83                                            // ..

Index (DEVY, 0x09)), One))
                        }


   19A80: 88 44 45 56 59 0A 09 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x80), Zero))
                        {

   19A8A: A0 19 93 7B 50 45 50 43 0A 80 00 00              // ...{PEPC....

                            Store (Zero, 
   19A96: 70 00                                            // p.

Index (DerefOf (
   19A98: 88 83                                            // ..

Index (DEVY, 0x0A)), One))
                        }


   19A9A: 88 44 45 56 59 0A 0A 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0100), Zero))
                        {

   19AA4: A0 1A 93 7B 50 45 50 43 0B 00 01 00 00           // ...{PEPC.....

                            Store (Zero, 
   19AB1: 70 00                                            // p.

Index (DerefOf (
   19AB3: 88 83                                            // ..

Index (DEVY, 0x0B)), One))
                        }


   19AB5: 88 44 45 56 59 0A 0B 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0200), Zero))
                        {

   19ABF: A0 1A 93 7B 50 45 50 43 0B 00 02 00 00           // ...{PEPC.....

                            Store (Zero, 
   19ACC: 70 00                                            // p.

Index (DerefOf (
   19ACE: 88 83                                            // ..

Index (DEVY, 0x04)), One))
                        }


   19AD0: 88 44 45 56 59 0A 04 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0400), Zero))
                        {
                            Store (Zero, 
   19ADA: A0 43 04 93 7B 50 45 50 43 0B 00 04 00 00 70 00  // .C..{PEPC.....p.

Index (DerefOf (
   19AEA: 88 83                                            // ..

Index (DEVY, Zero)), One))
                            Store (Zero, 
   19AEC: 88 44 45 56 59 00 00 01 00 70 00                 // .DEVY....p.

Index (DerefOf (
   19AF7: 88 83                                            // ..

Index (DEVY, One)), One))
                            Store (Zero, 
   19AF9: 88 44 45 56 59 01 00 01 00 70 00                 // .DEVY....p.

Index (DerefOf (
   19B04: 88 83                                            // ..

Index (DEVY, 0x02)), One))

   19B06: 88 44 45 56 59 0A 02 00 01 00                    // .DEVY.....

                            Store (Zero, 
   19B10: 70 00                                            // p.

Index (DerefOf (
   19B12: 88 83                                            // ..

Index (DEVY, 0x03)), One))
                        }


   19B14: 88 44 45 56 59 0A 03 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0800), Zero))
                        {

   19B1E: A0 1A 93 7B 50 45 50 43 0B 00 08 00 00           // ...{PEPC.....

                            Store (Zero, 
   19B2B: 70 00                                            // p.

Index (DerefOf (
   19B2D: 88 83                                            // ..

Index (DEVY, 0x0C)), One))
                        }


   19B2F: 88 44 45 56 59 0A 0C 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x1000), Zero))
                        {

   19B39: A0 1A 93 7B 50 45 50 43 0B 00 10 00 00           // ...{PEPC.....

                            Store (Zero, 
   19B46: 70 00                                            // p.

Index (DerefOf (
   19B48: 88 83                                            // ..

Index (DEVY, 0x0D)), One))
                        }


   19B4A: 88 44 45 56 59 0A 0D 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x2000), Zero))
                        {

   19B54: A0 1A 93 7B 50 45 50 43 0B 00 20 00 00           // ...{PEPC.. ..

                            Store (Zero, 
   19B61: 70 00                                            // p.

Index (DerefOf (
   19B63: 88 83                                            // ..

Index (DEVY, 0x0E)), One))
                        }


   19B65: 88 44 45 56 59 0A 0E 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x4000), Zero))
                        {

   19B6F: A0 1A 93 7B 50 45 50 43 0B 00 40 00 00           // ...{PEPC..@..

                            Store (Zero, 
   19B7C: 70 00                                            // p.

Index (DerefOf (
   19B7E: 88 83                                            // ..

Index (DEVY, 0x0F)), One))
                        }


   19B80: 88 44 45 56 59 0A 0F 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x8000), Zero))
                        {

   19B8A: A0 1A 93 7B 50 45 50 43 0B 00 80 00 00           // ...{PEPC.....

                            Store (Zero, 
   19B97: 70 00                                            // p.

Index (DerefOf (
   19B99: 88 83                                            // ..

Index (DEVY, 0x10)), One))
                        }


   19B9B: 88 44 45 56 59 0A 10 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x00010000), Zero))
                        {

   19BA5: A0 1C 93 7B 50 45 50 43 0C 00 00 01 00 00 00     // ...{PEPC.......

                            Store (Zero, 
   19BB4: 70 00                                            // p.

Index (DerefOf (
   19BB6: 88 83                                            // ..

Index (DEVY, 0x11)), One))
                        }


   19BB8: 88 44 45 56 59 0A 11 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x00020000), Zero))
                        {

   19BC2: A0 1C 93 7B 50 45 50 43 0C 00 00 02 00 00 00     // ...{PEPC.......

                            Store (Zero, 
   19BD1: 70 00                                            // p.

Index (DerefOf (
   19BD3: 88 83                                            // ..

Index (DEVY, 0x12)), One))
                        }


   19BD5: 88 44 45 56 59 0A 12 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x00040000), Zero))
                        {

   19BDF: A0 1C 93 7B 50 45 50 43 0C 00 00 04 00 00 00     // ...{PEPC.......

                            Store (Zero, 
   19BEE: 70 00                                            // p.

Index (DerefOf (
   19BF0: 88 83                                            // ..

Index (DEVY, 0x13)), One))
                        }


   19BF2: 88 44 45 56 59 0A 13 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x00080000), Zero))
                        {

   19BFC: A0 1C 93 7B 50 45 50 43 0C 00 00 08 00 00 00     // ...{PEPC.......

                            Store (Zero, 
   19C0B: 70 00                                            // p.

Index (DerefOf (
   19C0D: 88 83                                            // ..

Index (DEVY, 0x14)), One))
                        }


   19C0F: 88 44 45 56 59 0A 14 00 01 00                    // .DEVY.....

                        If (
   19C19: A0 4A 6F 92                                      // .Jo.

LGreaterEqual (OSYS, 0x07DF))
                        {

   19C1D: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {

   19C25: A0 4D 06 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
   19C35: 52 50 30 31 50 58 53 58 00                       // RP01PXSX.

                                If (^^PCI0.RP01.PXSX.WIST ())
                                {
                                    Store (0x03, 
   19C3E: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 31 50  // .D.^^/.PCI0RP01P
   19C4E: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19C58: 88 83                                            // ..

Index (DerefOf (
   19C5A: 88 83                                            // ..

Index (DerefOf (
   19C5C: 88 83                                            // ..

Index (DEVY, 0x15)), 
                                        0x02)), One)), One))
                                    Store (Zero, 
   19C5E: 88 44 45 56 59 0A 15 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19C6E: 00                                               // .

Index (DerefOf (
   19C6F: 88 83                                            // ..

Index (DerefOf (
   19C71: 88 83                                            // ..

Index (DerefOf (
   19C73: 88 83                                            // ..

Index (DEVY, 0x15)), 
                                        0x02)), One)), 0x02))

   19C75: 88 44 45 56 59 0A 15 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                    Store (One, 
   19C85: 70 01                                            // p.

Index (DerefOf (
   19C87: 88 83                                            // ..

Index (DEVY, 0x15)), One))
                                }
                            }


   19C89: 88 44 45 56 59 0A 15 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP02.PXSX.WIST ())
                            {
                                Store (0x03, 
   19C93: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 32 50  // .D.^^/.PCI0RP02P
   19CA3: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19CAD: 88 83                                            // ..

Index (DerefOf (
   19CAF: 88 83                                            // ..

Index (DerefOf (
   19CB1: 88 83                                            // ..

Index (DEVY, 0x16)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   19CB3: 88 44 45 56 59 0A 16 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19CC3: 00                                               // .

Index (DerefOf (
   19CC4: 88 83                                            // ..

Index (DerefOf (
   19CC6: 88 83                                            // ..

Index (DerefOf (
   19CC8: 88 83                                            // ..

Index (DEVY, 0x16)), 
                                    0x02)), One)), 0x02))

   19CCA: 88 44 45 56 59 0A 16 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
   19CDA: 70 01                                            // p.

Index (DerefOf (
   19CDC: 88 83                                            // ..

Index (DEVY, 0x16)), One))
                            }


   19CDE: 88 44 45 56 59 0A 16 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP03.PXSX.WIST ())
                            {
                                Store (0x03, 
   19CE8: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 33 50  // .D.^^/.PCI0RP03P
   19CF8: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19D02: 88 83                                            // ..

Index (DerefOf (
   19D04: 88 83                                            // ..

Index (DerefOf (
   19D06: 88 83                                            // ..

Index (DEVY, 0x17)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   19D08: 88 44 45 56 59 0A 17 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19D18: 00                                               // .

Index (DerefOf (
   19D19: 88 83                                            // ..

Index (DerefOf (
   19D1B: 88 83                                            // ..

Index (DerefOf (
   19D1D: 88 83                                            // ..

Index (DEVY, 0x17)), 
                                    0x02)), One)), 0x02))

   19D1F: 88 44 45 56 59 0A 17 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
   19D2F: 70 01                                            // p.

Index (DerefOf (
   19D31: 88 83                                            // ..

Index (DEVY, 0x17)), One))
                            }


   19D33: 88 44 45 56 59 0A 17 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP04.PXSX.WIST ())
                            {
                                Store (0x03, 
   19D3D: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 34 50  // .D.^^/.PCI0RP04P
   19D4D: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19D57: 88 83                                            // ..

Index (DerefOf (
   19D59: 88 83                                            // ..

Index (DerefOf (
   19D5B: 88 83                                            // ..

Index (DEVY, 0x18)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   19D5D: 88 44 45 56 59 0A 18 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19D6D: 00                                               // .

Index (DerefOf (
   19D6E: 88 83                                            // ..

Index (DerefOf (
   19D70: 88 83                                            // ..

Index (DerefOf (
   19D72: 88 83                                            // ..

Index (DEVY, 0x18)), 
                                    0x02)), One)), 0x02))

   19D74: 88 44 45 56 59 0A 18 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
   19D84: 70 01                                            // p.

Index (DerefOf (
   19D86: 88 83                                            // ..

Index (DEVY, 0x18)), One))
                            }


   19D88: 88 44 45 56 59 0A 18 00 01 00                    // .DEVY.....

                            If (CondRefOf (\_SB.PCI0.RP05.PXSX))
                            {

   19D92: A0 4D 06 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
   19DA2: 52 50 30 35 50 58 53 58 00                       // RP05PXSX.

                                If (^^PCI0.RP05.PXSX.WIST ())
                                {
                                    Store (0x03, 
   19DAB: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 35 50  // .D.^^/.PCI0RP05P
   19DBB: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19DC5: 88 83                                            // ..

Index (DerefOf (
   19DC7: 88 83                                            // ..

Index (DerefOf (
   19DC9: 88 83                                            // ..

Index (DEVY, 0x19)), 
                                        0x02)), One)), One))
                                    Store (Zero, 
   19DCB: 88 44 45 56 59 0A 19 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19DDB: 00                                               // .

Index (DerefOf (
   19DDC: 88 83                                            // ..

Index (DerefOf (
   19DDE: 88 83                                            // ..

Index (DerefOf (
   19DE0: 88 83                                            // ..

Index (DEVY, 0x19)), 
                                        0x02)), One)), 0x02))

   19DE2: 88 44 45 56 59 0A 19 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                    Store (One, 
   19DF2: 70 01                                            // p.

Index (DerefOf (
   19DF4: 88 83                                            // ..

Index (DEVY, 0x19)), One))
                                }
                            }


   19DF6: 88 44 45 56 59 0A 19 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP06.PXSX.WIST ())
                            {
                                Store (0x03, 
   19E00: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 36 50  // .D.^^/.PCI0RP06P
   19E10: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19E1A: 88 83                                            // ..

Index (DerefOf (
   19E1C: 88 83                                            // ..

Index (DerefOf (
   19E1E: 88 83                                            // ..

Index (DEVY, 0x1A)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   19E20: 88 44 45 56 59 0A 1A 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19E30: 00                                               // .

Index (DerefOf (
   19E31: 88 83                                            // ..

Index (DerefOf (
   19E33: 88 83                                            // ..

Index (DerefOf (
   19E35: 88 83                                            // ..

Index (DEVY, 0x1A)), 
                                    0x02)), One)), 0x02))

   19E37: 88 44 45 56 59 0A 1A 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
   19E47: 70 01                                            // p.

Index (DerefOf (
   19E49: 88 83                                            // ..

Index (DEVY, 0x1A)), One))
                            }


   19E4B: 88 44 45 56 59 0A 1A 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP07.PXSX.WIST ())
                            {
                                Store (0x03, 
   19E55: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 37 50  // .D.^^/.PCI0RP07P
   19E65: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19E6F: 88 83                                            // ..

Index (DerefOf (
   19E71: 88 83                                            // ..

Index (DerefOf (
   19E73: 88 83                                            // ..

Index (DEVY, 0x1B)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   19E75: 88 44 45 56 59 0A 1B 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19E85: 00                                               // .

Index (DerefOf (
   19E86: 88 83                                            // ..

Index (DerefOf (
   19E88: 88 83                                            // ..

Index (DerefOf (
   19E8A: 88 83                                            // ..

Index (DEVY, 0x1B)), 
                                    0x02)), One)), 0x02))

   19E8C: 88 44 45 56 59 0A 1B 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
   19E9C: 70 01                                            // p.

Index (DerefOf (
   19E9E: 88 83                                            // ..

Index (DEVY, 0x1B)), One))
                            }


   19EA0: 88 44 45 56 59 0A 1B 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP08.PXSX.WIST ())
                            {
                                Store (0x03, 
   19EAA: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 38 50  // .D.^^/.PCI0RP08P
   19EBA: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19EC4: 88 83                                            // ..

Index (DerefOf (
   19EC6: 88 83                                            // ..

Index (DerefOf (
   19EC8: 88 83                                            // ..

Index (DEVY, 0x1C)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   19ECA: 88 44 45 56 59 0A 1C 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19EDA: 00                                               // .

Index (DerefOf (
   19EDB: 88 83                                            // ..

Index (DerefOf (
   19EDD: 88 83                                            // ..

Index (DerefOf (
   19EDF: 88 83                                            // ..

Index (DEVY, 0x1C)), 
                                    0x02)), One)), 0x02))

   19EE1: 88 44 45 56 59 0A 1C 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
   19EF1: 70 01                                            // p.

Index (DerefOf (
   19EF3: 88 83                                            // ..

Index (DEVY, 0x1C)), One))
                            }


   19EF5: 88 44 45 56 59 0A 1C 00 01 00                    // .DEVY.....

                            If (CondRefOf (\_SB.PCI0.RP09.PXSX))
                            {

   19EFF: A0 4D 06 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
   19F0F: 52 50 30 39 50 58 53 58 00                       // RP09PXSX.

                                If (^^PCI0.RP09.PXSX.WIST ())
                                {
                                    Store (0x03, 
   19F18: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 39 50  // .D.^^/.PCI0RP09P
   19F28: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19F32: 88 83                                            // ..

Index (DerefOf (
   19F34: 88 83                                            // ..

Index (DerefOf (
   19F36: 88 83                                            // ..

Index (DEVY, 0x1D)), 
                                        0x02)), One)), One))
                                    Store (Zero, 
   19F38: 88 44 45 56 59 0A 1D 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19F48: 00                                               // .

Index (DerefOf (
   19F49: 88 83                                            // ..

Index (DerefOf (
   19F4B: 88 83                                            // ..

Index (DerefOf (
   19F4D: 88 83                                            // ..

Index (DEVY, 0x1D)), 
                                        0x02)), One)), 0x02))

   19F4F: 88 44 45 56 59 0A 1D 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                    Store (One, 
   19F5F: 70 01                                            // p.

Index (DerefOf (
   19F61: 88 83                                            // ..

Index (DEVY, 0x1D)), One))
                                }
                            }


   19F63: 88 44 45 56 59 0A 1D 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP10.PXSX.WIST ())
                            {
                                Store (0x03, 
   19F6D: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 30 50  // .D.^^/.PCI0RP10P
   19F7D: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19F87: 88 83                                            // ..

Index (DerefOf (
   19F89: 88 83                                            // ..

Index (DerefOf (
   19F8B: 88 83                                            // ..

Index (DEVY, 0x1E)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   19F8D: 88 44 45 56 59 0A 1E 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19F9D: 00                                               // .

Index (DerefOf (
   19F9E: 88 83                                            // ..

Index (DerefOf (
   19FA0: 88 83                                            // ..

Index (DerefOf (
   19FA2: 88 83                                            // ..

Index (DEVY, 0x1E)), 
                                    0x02)), One)), 0x02))

   19FA4: 88 44 45 56 59 0A 1E 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
   19FB4: 70 01                                            // p.

Index (DerefOf (
   19FB6: 88 83                                            // ..

Index (DEVY, 0x1E)), One))
                            }


   19FB8: 88 44 45 56 59 0A 1E 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP11.PXSX.WIST ())
                            {
                                Store (0x03, 
   19FC2: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 31 50  // .D.^^/.PCI0RP11P
   19FD2: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   19FDC: 88 83                                            // ..

Index (DerefOf (
   19FDE: 88 83                                            // ..

Index (DerefOf (
   19FE0: 88 83                                            // ..

Index (DEVY, 0x1F)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   19FE2: 88 44 45 56 59 0A 1F 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
   19FF2: 00                                               // .

Index (DerefOf (
   19FF3: 88 83                                            // ..

Index (DerefOf (
   19FF5: 88 83                                            // ..

Index (DerefOf (
   19FF7: 88 83                                            // ..

Index (DEVY, 0x1F)), 
                                    0x02)), One)), 0x02))

   19FF9: 88 44 45 56 59 0A 1F 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
   1A009: 70 01                                            // p.

Index (DerefOf (
   1A00B: 88 83                                            // ..

Index (DEVY, 0x1F)), One))
                            }


   1A00D: 88 44 45 56 59 0A 1F 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP12.PXSX.WIST ())
                            {
                                Store (0x03, 
   1A017: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 32 50  // .D.^^/.PCI0RP12P
   1A027: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   1A031: 88 83                                            // ..

Index (DerefOf (
   1A033: 88 83                                            // ..

Index (DerefOf (
   1A035: 88 83                                            // ..

Index (DEVY, 0x20)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   1A037: 88 44 45 56 59 0A 20 00 0A 02 00 01 00 01 00 70  // .DEVY. ........p
   1A047: 00                                               // .

Index (DerefOf (
   1A048: 88 83                                            // ..

Index (DerefOf (
   1A04A: 88 83                                            // ..

Index (DerefOf (
   1A04C: 88 83                                            // ..

Index (DEVY, 0x20)), 
                                    0x02)), One)), 0x02))

   1A04E: 88 44 45 56 59 0A 20 00 0A 02 00 01 00 0A 02 00  // .DEVY. .........

                                Store (One, 
   1A05E: 70 01                                            // p.

Index (DerefOf (
   1A060: 88 83                                            // ..

Index (DEVY, 0x20)), One))
                            }


   1A062: 88 44 45 56 59 0A 20 00 01 00                    // .DEVY. ...

                            If (^^PCI0.RP13.PXSX.WIST ())
                            {
                                Store (0x03, 
   1A06C: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 33 50  // .D.^^/.PCI0RP13P
   1A07C: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   1A086: 88 83                                            // ..

Index (DerefOf (
   1A088: 88 83                                            // ..

Index (DerefOf (
   1A08A: 88 83                                            // ..

Index (DEVY, 0x21)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   1A08C: 88 44 45 56 59 0A 21 00 0A 02 00 01 00 01 00 70  // .DEVY.!........p
   1A09C: 00                                               // .

Index (DerefOf (
   1A09D: 88 83                                            // ..

Index (DerefOf (
   1A09F: 88 83                                            // ..

Index (DerefOf (
   1A0A1: 88 83                                            // ..

Index (DEVY, 0x21)), 
                                    0x02)), One)), 0x02))

   1A0A3: 88 44 45 56 59 0A 21 00 0A 02 00 01 00 0A 02 00  // .DEVY.!.........

                                Store (One, 
   1A0B3: 70 01                                            // p.

Index (DerefOf (
   1A0B5: 88 83                                            // ..

Index (DEVY, 0x21)), One))
                            }


   1A0B7: 88 44 45 56 59 0A 21 00 01 00                    // .DEVY.!...

                            If (^^PCI0.RP14.PXSX.WIST ())
                            {
                                Store (0x03, 
   1A0C1: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 34 50  // .D.^^/.PCI0RP14P
   1A0D1: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   1A0DB: 88 83                                            // ..

Index (DerefOf (
   1A0DD: 88 83                                            // ..

Index (DerefOf (
   1A0DF: 88 83                                            // ..

Index (DEVY, 0x22)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   1A0E1: 88 44 45 56 59 0A 22 00 0A 02 00 01 00 01 00 70  // .DEVY."........p
   1A0F1: 00                                               // .

Index (DerefOf (
   1A0F2: 88 83                                            // ..

Index (DerefOf (
   1A0F4: 88 83                                            // ..

Index (DerefOf (
   1A0F6: 88 83                                            // ..

Index (DEVY, 0x22)), 
                                    0x02)), One)), 0x02))

   1A0F8: 88 44 45 56 59 0A 22 00 0A 02 00 01 00 0A 02 00  // .DEVY.".........

                                Store (One, 
   1A108: 70 01                                            // p.

Index (DerefOf (
   1A10A: 88 83                                            // ..

Index (DEVY, 0x22)), One))
                            }


   1A10C: 88 44 45 56 59 0A 22 00 01 00                    // .DEVY."...

                            If (^^PCI0.RP15.PXSX.WIST ())
                            {
                                Store (0x03, 
   1A116: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 35 50  // .D.^^/.PCI0RP15P
   1A126: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   1A130: 88 83                                            // ..

Index (DerefOf (
   1A132: 88 83                                            // ..

Index (DerefOf (
   1A134: 88 83                                            // ..

Index (DEVY, 0x23)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   1A136: 88 44 45 56 59 0A 23 00 0A 02 00 01 00 01 00 70  // .DEVY.#........p
   1A146: 00                                               // .

Index (DerefOf (
   1A147: 88 83                                            // ..

Index (DerefOf (
   1A149: 88 83                                            // ..

Index (DerefOf (
   1A14B: 88 83                                            // ..

Index (DEVY, 0x23)), 
                                    0x02)), One)), 0x02))

   1A14D: 88 44 45 56 59 0A 23 00 0A 02 00 01 00 0A 02 00  // .DEVY.#.........

                                Store (One, 
   1A15D: 70 01                                            // p.

Index (DerefOf (
   1A15F: 88 83                                            // ..

Index (DEVY, 0x23)), One))
                            }


   1A161: 88 44 45 56 59 0A 23 00 01 00                    // .DEVY.#...

                            If (^^PCI0.RP16.PXSX.WIST ())
                            {
                                Store (0x03, 
   1A16B: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 36 50  // .D.^^/.PCI0RP16P
   1A17B: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   1A185: 88 83                                            // ..

Index (DerefOf (
   1A187: 88 83                                            // ..

Index (DerefOf (
   1A189: 88 83                                            // ..

Index (DEVY, 0x24)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   1A18B: 88 44 45 56 59 0A 24 00 0A 02 00 01 00 01 00 70  // .DEVY.$........p
   1A19B: 00                                               // .

Index (DerefOf (
   1A19C: 88 83                                            // ..

Index (DerefOf (
   1A19E: 88 83                                            // ..

Index (DerefOf (
   1A1A0: 88 83                                            // ..

Index (DEVY, 0x24)), 
                                    0x02)), One)), 0x02))

   1A1A2: 88 44 45 56 59 0A 24 00 0A 02 00 01 00 0A 02 00  // .DEVY.$.........

                                Store (One, 
   1A1B2: 70 01                                            // p.

Index (DerefOf (
   1A1B4: 88 83                                            // ..

Index (DEVY, 0x24)), One))
                            }


   1A1B6: 88 44 45 56 59 0A 24 00 01 00                    // .DEVY.$...

                            If (^^PCI0.RP17.PXSX.WIST ())
                            {
                                Store (0x03, 
   1A1C0: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 37 50  // .D.^^/.PCI0RP17P
   1A1D0: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   1A1DA: 88 83                                            // ..

Index (DerefOf (
   1A1DC: 88 83                                            // ..

Index (DerefOf (
   1A1DE: 88 83                                            // ..

Index (DEVY, 0x25)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   1A1E0: 88 44 45 56 59 0A 25 00 0A 02 00 01 00 01 00 70  // .DEVY.%........p
   1A1F0: 00                                               // .

Index (DerefOf (
   1A1F1: 88 83                                            // ..

Index (DerefOf (
   1A1F3: 88 83                                            // ..

Index (DerefOf (
   1A1F5: 88 83                                            // ..

Index (DEVY, 0x25)), 
                                    0x02)), One)), 0x02))

   1A1F7: 88 44 45 56 59 0A 25 00 0A 02 00 01 00 0A 02 00  // .DEVY.%.........

                                Store (One, 
   1A207: 70 01                                            // p.

Index (DerefOf (
   1A209: 88 83                                            // ..

Index (DEVY, 0x25)), One))
                            }


   1A20B: 88 44 45 56 59 0A 25 00 01 00                    // .DEVY.%...

                            If (^^PCI0.RP18.PXSX.WIST ())
                            {
                                Store (0x03, 
   1A215: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 38 50  // .D.^^/.PCI0RP18P
   1A225: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   1A22F: 88 83                                            // ..

Index (DerefOf (
   1A231: 88 83                                            // ..

Index (DerefOf (
   1A233: 88 83                                            // ..

Index (DEVY, 0x26)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   1A235: 88 44 45 56 59 0A 26 00 0A 02 00 01 00 01 00 70  // .DEVY.&........p
   1A245: 00                                               // .

Index (DerefOf (
   1A246: 88 83                                            // ..

Index (DerefOf (
   1A248: 88 83                                            // ..

Index (DerefOf (
   1A24A: 88 83                                            // ..

Index (DEVY, 0x26)), 
                                    0x02)), One)), 0x02))

   1A24C: 88 44 45 56 59 0A 26 00 0A 02 00 01 00 0A 02 00  // .DEVY.&.........

                                Store (One, 
   1A25C: 70 01                                            // p.

Index (DerefOf (
   1A25E: 88 83                                            // ..

Index (DEVY, 0x26)), One))
                            }


   1A260: 88 44 45 56 59 0A 26 00 01 00                    // .DEVY.&...

                            If (^^PCI0.RP19.PXSX.WIST ())
                            {
                                Store (0x03, 
   1A26A: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 39 50  // .D.^^/.PCI0RP19P
   1A27A: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   1A284: 88 83                                            // ..

Index (DerefOf (
   1A286: 88 83                                            // ..

Index (DerefOf (
   1A288: 88 83                                            // ..

Index (DEVY, 0x27)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   1A28A: 88 44 45 56 59 0A 27 00 0A 02 00 01 00 01 00 70  // .DEVY.'........p
   1A29A: 00                                               // .

Index (DerefOf (
   1A29B: 88 83                                            // ..

Index (DerefOf (
   1A29D: 88 83                                            // ..

Index (DerefOf (
   1A29F: 88 83                                            // ..

Index (DEVY, 0x27)), 
                                    0x02)), One)), 0x02))

   1A2A1: 88 44 45 56 59 0A 27 00 0A 02 00 01 00 0A 02 00  // .DEVY.'.........

                                Store (One, 
   1A2B1: 70 01                                            // p.

Index (DerefOf (
   1A2B3: 88 83                                            // ..

Index (DEVY, 0x27)), One))
                            }


   1A2B5: 88 44 45 56 59 0A 27 00 01 00                    // .DEVY.'...

                            If (^^PCI0.RP20.PXSX.WIST ())
                            {
                                Store (0x03, 
   1A2BF: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 32 30 50  // .D.^^/.PCI0RP20P
   1A2CF: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
   1A2D9: 88 83                                            // ..

Index (DerefOf (
   1A2DB: 88 83                                            // ..

Index (DerefOf (
   1A2DD: 88 83                                            // ..

Index (DEVY, 0x28)), 
                                    0x02)), One)), One))
                                Store (Zero, 
   1A2DF: 88 44 45 56 59 0A 28 00 0A 02 00 01 00 01 00 70  // .DEVY.(........p
   1A2EF: 00                                               // .

Index (DerefOf (
   1A2F0: 88 83                                            // ..

Index (DerefOf (
   1A2F2: 88 83                                            // ..

Index (DerefOf (
   1A2F4: 88 83                                            // ..

Index (DEVY, 0x28)), 
                                    0x02)), One)), 0x02))

   1A2F6: 88 44 45 56 59 0A 28 00 0A 02 00 01 00 0A 02 00  // .DEVY.(.........

                                Store (One, 
   1A306: 70 01                                            // p.

Index (DerefOf (
   1A308: 88 83                                            // ..

Index (DEVY, 0x28)), One))
                            }
                        }


   1A30A: 88 44 45 56 59 0A 28 00 01 00                    // .DEVY.(...

                        Return (DEVY) /* \_SB_.PEPD.DEVY */
                    }


   1A314: A4 44 45 56 59                                   // .DEVY

                    If (LEqual (Arg2, 0x02))
                    {

   1A319: A0 0A 93 6A 0A 02                                // ...j..

                        Return (BCCD) /* \_SB_.PEPD.BCCD */
                    }


   1A31F: A4 42 43 43 44                                   // .BCCD

                    If (
   1A324: A0 05                                            // ..

LEqual (Arg2, 0x03)){}

   1A326: 93 6A 0A 03                                      // .j..

                    If (
   1A32A: A0 05                                            // ..

LEqual (Arg2, 0x04)){}

   1A32C: 93 6A 0A 04                                      // .j..

                    If (LEqual (Arg2, 0x05))
                    {

   1A330: A0 12 93 6A 0A 05                                // ...j..

                        If (LEqual (S0ID, One))
                        {
                            GUAM (One)
                        }
                    }


   1A336: A0 0C 93 53 30 49 44 01 47 55 41 4D 01           // ...S0ID.GUAM.

                    If (LEqual (Arg2, 0x06))
                    {

   1A343: A0 12 93 6A 0A 06                                // ...j..

                        If (LEqual (S0ID, One))
                        {
                            GUAM (Zero)
                        }
                    }
                }


   1A349: A0 0C 93 53 30 49 44 01 47 55 41 4D 00           // ...S0ID.GUAM.

                Return (One)
            }
        }
    }


   1A356: A4 01                                            // ..

    Scope (_SB.PCI0.LPCB)
    {

   1A358: 10 4B 30 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .K0/._SB_PCI0LPC
   1A368: 42                                               // B

        Device (FWHD)
        {

   1A369: 5B 82 26 46 57 48 44                             // [.&FWHD

            Name (_HID, EisaId ("INT0800") /* Intel 82802 Firmware Hub Device */)  // _HID: Hardware ID

   1A370: 08 5F 48 49 44 0C 25 D4 08 00                    // ._HID.%...

            Name (_CRS, 
   1A37A: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
            })
        }


   1A37F: 11 11 0A 0E 86 09 00 00 00 00 00 FF 00 00 00 01  // ................
   1A38F: 79 00                                            // y.

        Device (HPET)
        {

   1A391: 5B 82 45 06 48 50 45 54                          // [.E.HPET

            Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID

   1A399: 08 5F 48 49 44 0C 41 D0 01 03                    // ._HID.A...

            Name (_UID, Zero)  // _UID: Unique ID

   1A3A3: 08 5F 55 49 44 00                                // ._UID.

            Name (BUF0, 
   1A3A9: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0xFED00000,         // Address Base
                    0x00000400,         // Address Length
                    _Y2F)
            })

   1A3AE: 11 11 0A 0E 86 09 00 01 00 00 D0 FE 00 04 00 00  // ................
   1A3BE: 79 00                                            // y.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

   1A3C0: 14 11 5F 53 54 41 00                             // .._STA.

                If (HPTE)
                {

   1A3C7: A0 08 48 50 54 45                                // ..HPTE

                    Return (0x0F)
                }


   1A3CD: A4 0A 0F                                         // ...

                Return (Zero)
            }


   1A3D0: A4 00                                            // ..

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

   1A3D2: 14 25 5F 43 52 53 08                             // .%_CRS.

                If (HPTE)
                {

   1A3D9: A0 19 48 50 54 45                                // ..HPTE

                    CreateDWordField (BUF0, \_SB.PCI0.LPCB.HPET._Y2F._BAS, HPT0)  // _BAS: Base Address

   1A3DF: 8A 42 55 46 30 0A 04 48 50 54 30                 // .BUF0..HPT0

                    Store (HPTB, HPT0) /* \_SB_.PCI0.LPCB.HPET._CRS.HPT0 */
                }


   1A3EA: 70 48 50 54 42 48 50 54 30                       // pHPTBHPT0

                Return (BUF0) /* \_SB_.PCI0.LPCB.HPET.BUF0 */
            }
        }


   1A3F3: A4 42 55 46 30                                   // .BUF0

        Device (IPIC)
        {

   1A3F8: 5B 82 45 0A 49 50 49 43                          // [.E.IPIC

            Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID

   1A400: 08 5F 48 49 44 0B 41 D0                          // ._HID.A.

            Name (_CRS, 
   1A408: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0020,             // Range Minimum
                    0x0020,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0024,             // Range Minimum
                    0x0024,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0028,             // Range Minimum
                    0x0028,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x002C,             // Range Minimum
                    0x002C,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0030,             // Range Minimum
                    0x0030,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0034,             // Range Minimum
                    0x0034,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0038,             // Range Minimum
                    0x0038,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x003C,             // Range Minimum
                    0x003C,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A0,             // Range Minimum
                    0x00A0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A4,             // Range Minimum
                    0x00A4,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A8,             // Range Minimum
                    0x00A8,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00AC,             // Range Minimum
                    0x00AC,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B0,             // Range Minimum
                    0x00B0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B4,             // Range Minimum
                    0x00B4,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B8,             // Range Minimum
                    0x00B8,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00BC,             // Range Minimum
                    0x00BC,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x04D0,             // Range Minimum
                    0x04D0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IRQNoFlags ()
                    {2}
            })
        }


   1A40D: 11 41 09 0A 8D 47 01 20 00 20 00 01 02 47 01 24  // .A...G. . ...G.$
   1A41D: 00 24 00 01 02 47 01 28 00 28 00 01 02 47 01 2C  // .$...G.(.(...G.,
   1A42D: 00 2C 00 01 02 47 01 30 00 30 00 01 02 47 01 34  // .,...G.0.0...G.4
   1A43D: 00 34 00 01 02 47 01 38 00 38 00 01 02 47 01 3C  // .4...G.8.8...G.<
   1A44D: 00 3C 00 01 02 47 01 A0 00 A0 00 01 02 47 01 A4  // .<...G.......G..
   1A45D: 00 A4 00 01 02 47 01 A8 00 A8 00 01 02 47 01 AC  // .....G.......G..
   1A46D: 00 AC 00 01 02 47 01 B0 00 B0 00 01 02 47 01 B4  // .....G.......G..
   1A47D: 00 B4 00 01 02 47 01 B8 00 B8 00 01 02 47 01 BC  // .....G.......G..
   1A48D: 00 BC 00 01 02 47 01 D0 04 D0 04 01 02 22 04 00  // .....G......."..
   1A49D: 79 00                                            // y.

        Device (MATH)
        {

   1A49F: 5B 82 3E 4D 41 54 48                             // [.>MATH

            Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID

   1A4A6: 08 5F 48 49 44 0C 41 D0 0C 04                    // ._HID.A...

            Name (_CRS, 
   1A4B0: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x00F0,             // Range Minimum
                    0x00F0,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IRQNoFlags ()
                    {13}
            })

   1A4B5: 11 10 0A 0D 47 01 F0 00 F0 00 01 01 22 00 20 79  // ....G.......". y
   1A4C5: 00                                               // .

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

   1A4C6: 14 18 5F 53 54 41 00                             // .._STA.

                If (LEqual (PCHV (), SPTH))
                {

   1A4CD: A0 0D 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

                    Return (0x1F)
                }

   1A4D8: A4 0A 1F                                         // ...

                Else
                {

   1A4DB: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }


   1A4DD: A4 00                                            // ..

        Device (LDRC)
        {

   1A4DF: 5B 82 43 0A 4C 44 52 43                          // [.C.LDRC

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

   1A4E7: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, 0x02)  // _UID: Unique ID

   1A4F1: 08 5F 55 49 44 0A 02                             // ._UID..

            Name (_CRS, 
   1A4F8: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x002E,             // Range Minimum
                    0x002E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x004E,             // Range Minimum
                    0x004E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0061,             // Range Minimum
                    0x0061,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0063,             // Range Minimum
                    0x0063,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0065,             // Range Minimum
                    0x0065,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0067,             // Range Minimum
                    0x0067,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0070,             // Range Minimum
                    0x0070,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0080,             // Range Minimum
                    0x0080,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0092,             // Range Minimum
                    0x0092,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x00B2,             // Range Minimum
                    0x00B2,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0680,             // Range Minimum
                    0x0680,             // Range Maximum
                    0x01,               // Alignment
                    0x20,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x1800,             // Range Minimum
                    0x1800,             // Range Maximum
                    0x01,               // Alignment
                    0xFF,               // Length
                    )
                IO (Decode16,
                    0x164E,             // Range Minimum
                    0x164E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
            })
        }


   1A4FD: 11 46 08 0A 82 47 01 2E 00 2E 00 01 02 47 01 4E  // .F...G.......G.N
   1A50D: 00 4E 00 01 02 47 01 61 00 61 00 01 01 47 01 63  // .N...G.a.a...G.c
   1A51D: 00 63 00 01 01 47 01 65 00 65 00 01 01 47 01 67  // .c...G.e.e...G.g
   1A52D: 00 67 00 01 01 47 01 70 00 70 00 01 01 47 01 80  // .g...G.p.p...G..
   1A53D: 00 80 00 01 01 47 01 92 00 92 00 01 01 47 01 B2  // .....G.......G..
   1A54D: 00 B2 00 01 02 47 01 80 06 80 06 01 20 47 01 FF  // .....G...... G..
   1A55D: FF FF FF 01 01 47 01 FF FF FF FF 01 01 47 01 FF  // .....G.......G..
   1A56D: FF FF FF 01 01 47 01 00 18 00 18 01 FF 47 01 4E  // .....G.......G.N
   1A57D: 16 4E 16 01 02 79 00                             // .N...y.

        Device (LDR2)
        {

   1A584: 5B 82 43 04 4C 44 52 32                          // [.C.LDR2

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

   1A58C: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, 0x05)  // _UID: Unique ID

   1A596: 08 5F 55 49 44 0A 05                             // ._UID..

            Name (_CRS, 
   1A59D: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0800,             // Range Minimum
                    0x0800,             // Range Maximum
                    0x01,               // Alignment
                    0x80,               // Length
                    )
            })

   1A5A2: 11 0D 0A 0A 47 01 00 08 00 08 01 80 79 00        // ....G.......y.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

   1A5B0: 14 18 5F 53 54 41 00                             // .._STA.

                If (LEqual (PCHV (), SPTH))
                {

   1A5B7: A0 0D 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

                    Return (0x0F)
                }

   1A5C2: A4 0A 0F                                         // ...

                Else
                {

   1A5C5: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }


   1A5C7: A4 00                                            // ..

        Device (RTC)
        {

   1A5C9: 5B 82 25 52 54 43 5F                             // [.%RTC_

            Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID

   1A5D0: 08 5F 48 49 44 0C 41 D0 0B 00                    // ._HID.A...

            Name (_CRS, 
   1A5DA: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0070,             // Range Minimum
                    0x0070,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                IRQNoFlags ()
                    {8}
            })
        }


   1A5DF: 11 10 0A 0D 47 01 70 00 70 00 01 08 22 00 01 79  // ....G.p.p..."..y
   1A5EF: 00                                               // .

        Device (TIMR)
        {

   1A5F0: 5B 82 2D 54 49 4D 52                             // [.-TIMR

            Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID

   1A5F7: 08 5F 48 49 44 0C 41 D0 01 00                    // ._HID.A...

            Name (_CRS, 
   1A601: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0040,             // Range Minimum
                    0x0040,             // Range Maximum
                    0x01,               // Alignment
                    0x04,               // Length
                    )
                IO (Decode16,
                    0x0050,             // Range Minimum
                    0x0050,             // Range Maximum
                    0x10,               // Alignment
                    0x04,               // Length
                    )
                IRQNoFlags ()
                    {0}
            })
        }


   1A606: 11 18 0A 15 47 01 40 00 40 00 01 04 47 01 50 00  // ....G.@.@...G.P.
   1A616: 50 00 10 04 22 01 00 79 00                       // P..."..y.

        Device (CWDT)
        {

   1A61F: 5B 82 43 04 43 57 44 54                          // [.C.CWDT

            Name (_HID, EisaId ("INT3F0D") /* ACPI Motherboard Resources */)  // _HID: Hardware ID

   1A627: 08 5F 48 49 44 0C 25 D4 3F 0D                    // ._HID.%.?.

            Name (_CID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _CID: Compatible ID

   1A631: 08 5F 43 49 44 0C 41 D0 0C 02                    // ._CID.A...

            Name (BUF0, 
   1A63B: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                IO (Decode16,
                    0x1854,             // Range Minimum
                    0x1854,             // Range Maximum
                    0x04,               // Alignment
                    0x04,               // Length
                    )
            })

   1A640: 11 0D 0A 0A 47 01 54 18 54 18 04 04 79 00        // ....G.T.T...y.

            Method (_STA, 0, Serialized)  // _STA: Status
            {

   1A64E: 14 09 5F 53 54 41 08                             // .._STA.

                Return (0x0F)
            }


   1A655: A4 0A 0F                                         // ...

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

   1A658: 14 0B 5F 43 52 53 08                             // .._CRS.

                Return (BUF0) /* \_SB_.PCI0.LPCB.CWDT.BUF0 */
            }
        }
    }


   1A65F: A4 42 55 46 30                                   // .BUF0

    OperationRegion (ABNV, SystemMemory, 0x7730E000, 0x000D)

   1A664: 5B 80 41 42 4E 56 00 0C 00 E0 30 77 0B 0D 00     // [.ABNV....0w...

    Field (ABNV, AnyAcc, Lock, Preserve)
    {
        ABMA,   64, 
        ABMS,   8, 
        ABIA,   16, 
        ABIL,   8
    }


   1A673: 5B 81 1B 41 42 4E 56 10 41 42 4D 41 40 04 41 42  // [..ABNV.ABMA@.AB
   1A683: 4D 53 08 41 42 49 41 10 41 42 49 4C 08           // MS.ABIA.ABIL.

    Device (_SB.TPM)
    {

   1A690: 5B 82 41 35 2E 5F 53 42 5F 54 50 4D 5F           // [.A5._SB_TPM_

        Method (_STR, 0, NotSerialized)  // _STR: Description String
        {

   1A69D: 14 47 05 5F 53 54 52 00                          // .G._STR.

            If (LEqual (TTDP, Zero))
            {

   1A6A5: A0 2A 93 54 54 44 50 00                          // .*.TTDP.

                Return (
   1A6AD: A4                                               // .

Unicode ("TPM 1.2 Device"))
            }

   1A6AE: 11 21 0A 1E 54 00 50 00 4D 00 20 00 31 00 2E 00  // .!..T.P.M. .1...
   1A6BE: 32 00 20 00 44 00 65 00 76 00 69 00 63 00 65 00  // 2. .D.e.v.i.c.e.
   1A6CE: 00 00                                            // ..

            Else
            {

   1A6D0: A1 24                                            // .$

                Return (
   1A6D2: A4                                               // .

Unicode ("TPM 2.0 Device"))
            }
        }


   1A6D3: 11 21 0A 1E 54 00 50 00 4D 00 20 00 32 00 2E 00  // .!..T.P.M. .2...
   1A6E3: 30 00 20 00 44 00 65 00 76 00 69 00 63 00 65 00  // 0. .D.e.v.i.c.e.
   1A6F3: 00 00                                            // ..

        Name (CRST, 
   1A6F5: 08 43 52 53 54                                   // .CRST

ResourceTemplate ()
        {
            Memory32Fixed (ReadOnly,
                0x00000000,         // Address Base
                0x00001000,         // Address Length
                _Y30)
            Memory32Fixed (ReadOnly,
                0xFED70000,         // Address Base
                0x00001000,         // Address Length
                _Y31)
        })

   1A6FA: 11 1D 0A 1A 86 09 00 00 00 00 00 00 00 10 00 00  // ................
   1A70A: 86 09 00 00 00 00 D7 FE 00 10 00 00 79 00        // ............y.

        Name (CRSD, 
   1A718: 08 43 52 53 44                                   // .CRSD

ResourceTemplate ()
        {
            Memory32Fixed (ReadOnly,
                0xFED40000,         // Address Base
                0x00001000,         // Address Length
                _Y32)
        })

   1A71D: 11 11 0A 0E 86 09 00 00 00 00 D4 FE 00 10 00 00  // ................
   1A72D: 79 00                                            // y.

        Name (CRSI, 
   1A72F: 08 43 52 53 49                                   // .CRSI

ResourceTemplate ()
        {
            Memory32Fixed (ReadOnly,
                0xFED40000,         // Address Base
                0x00001000,         // Address Length
                _Y33)
        })

   1A734: 11 11 0A 0E 86 09 00 00 00 00 D4 FE 00 10 00 00  // ................
   1A744: 79 00                                            // y.

        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
        {

   1A746: 14 46 0F 5F 43 52 53 08                          // .F._CRS.

            If (LEqual (AMDT, One))
            {

   1A74E: A0 4B 05 93 41 4D 44 54 01                       // .K..AMDT.

                CreateDWordField (CRST, \_SB.TPM._Y30._BAS, MTFB)  // _BAS: Base Address

   1A757: 8A 43 52 53 54 0A 04 4D 54 46 42                 // .CRST..MTFB

                CreateDWordField (CRST, \_SB.TPM._Y30._LEN, LTFB)  // _LEN: Length
                Store (TPMB, MTFB) /* \_SB_.TPM_._CRS.MTFB */
                Store (0x1000, LTFB) /* \_SB_.TPM_._CRS.LTFB */

   1A762: 8A 43 52 53 54 0A 08 4C 54 46 42 70 54 50 4D 42  // .CRST..LTFBpTPMB
   1A772: 4D 54 46 42 70 0B 00 10 4C 54 46 42              // MTFBp...LTFB

                CreateDWordField (CRST, \_SB.TPM._Y31._BAS, MTFC)  // _BAS: Base Address

   1A77E: 8A 43 52 53 54 0A 10 4D 54 46 43                 // .CRST..MTFC

                CreateDWordField (CRST, \_SB.TPM._Y31._LEN, LTFC)  // _LEN: Length
                Store (TPMC, MTFC) /* \_SB_.TPM_._CRS.MTFC */
                Store (0x1000, LTFC) /* \_SB_.TPM_._CRS.LTFC */

   1A789: 8A 43 52 53 54 0A 14 4C 54 46 43 70 54 50 4D 43  // .CRST..LTFCpTPMC
   1A799: 4D 54 46 43 70 0B 00 10 4C 54 46 43              // MTFCp...LTFC

                Return (CRST) /* \_SB_.TPM_.CRST */
            }

   1A7A5: A4 43 52 53 54                                   // .CRST

            ElseIf
   1A7AA: A1 42 09                                         // .B.

 (LEqual (DTPT, One))
            {

   1A7AD: A0 34 93 44 54 50 54 01                          // .4.DTPT.

                CreateDWordField (CRSD, \_SB.TPM._Y32._BAS, MTFE)  // _BAS: Base Address

   1A7B5: 8A 43 52 53 44 0A 04 4D 54 46 45                 // .CRSD..MTFE

                CreateDWordField (CRSD, \_SB.TPM._Y32._LEN, LTFE)  // _LEN: Length
                Store (0xFED40000, MTFE) /* \_SB_.TPM_._CRS.MTFE */
                Store (0x0880, LTFE) /* \_SB_.TPM_._CRS.LTFE */

   1A7C0: 8A 43 52 53 44 0A 08 4C 54 46 45 70 0C 00 00 D4  // .CRSD..LTFEp....
   1A7D0: FE 4D 54 46 45 70 0B 80 08 4C 54 46 45           // .MTFEp...LTFE

                Return (CRSD) /* \_SB_.TPM_.CRSD */
            }

   1A7DD: A4 43 52 53 44                                   // .CRSD

            ElseIf
   1A7E2: A1 4A 05                                         // .J.

 (LEqual (TTPF, One))
            {

   1A7E5: A0 34 93 54 54 50 46 01                          // .4.TTPF.

                CreateDWordField (CRSI, \_SB.TPM._Y33._BAS, MTFD)  // _BAS: Base Address

   1A7ED: 8A 43 52 53 49 0A 04 4D 54 46 44                 // .CRSI..MTFD

                CreateDWordField (CRSI, \_SB.TPM._Y33._LEN, LTFD)  // _LEN: Length
                Store (0xFED40000, MTFD) /* \_SB_.TPM_._CRS.MTFD */
                Store (0x5000, LTFD) /* \_SB_.TPM_._CRS.LTFD */

   1A7F8: 8A 43 52 53 49 0A 08 4C 54 46 44 70 0C 00 00 D4  // .CRSI..LTFDp....
   1A808: FE 4D 54 46 44 70 0B 00 50 4C 54 46 44           // .MTFDp..PLTFD

                Return (CRSI) /* \_SB_.TPM_.CRSI */
            }

   1A815: A4 43 52 53 49                                   // .CRSI

            ElseIf
   1A81A: A1 22                                            // ."

 (LEqual (TTPF, Zero))
            {

   1A81C: A0 20 93 54 54 50 46 00                          // . .TTPF.

                CreateDWordField (CRSI, \_SB.TPM._Y33._BAS, MTFF)  // _BAS: Base Address
                Store (TPMM, MTFF) /* \_SB_.TPM_._CRS.MTFF */

   1A824: 8A 43 52 53 49 0A 04 4D 54 46 46 70 54 50 4D 4D  // .CRSI..MTFFpTPMM
   1A834: 4D 54 46 46                                      // MTFF

                Return (CRSI) /* \_SB_.TPM_.CRSI */
            }
        }


   1A838: A4 43 52 53 49                                   // .CRSI

        OperationRegion (TMMB, SystemMemory, 0xFED40000, 0x5000)

   1A83D: 5B 80 54 4D 4D 42 00 0C 00 00 D4 FE 0B 00 50     // [.TMMB........P

        Field (TMMB, ByteAcc, Lock, Preserve)
        {
            ACCS,   8, 
            Offset (0x04), 
            LCST,   32, 
            Offset (0x40), 
            CREQ,   32, 
            CSTS,   32, 
            Offset (0x4C), 
            SCMD,   32
        }


   1A84C: 5B 81 26 54 4D 4D 42 11 41 43 43 53 08 00 18 4C  // [.&TMMB.ACCS...L
   1A85C: 43 53 54 20 00 40 1C 43 52 45 51 20 43 53 54 53  // CST .@.CREQ CSTS
   1A86C: 20 00 20 53 43 4D 44 20                          //  . SCMD 

        OperationRegion (CRBD, SystemMemory, TPMM, 0x48)

   1A874: 5B 80 43 52 42 44 00 54 50 4D 4D 0A 48           // [.CRBD.TPMM.H

        Field (CRBD, AnyAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            HERR,   32, 
            Offset (0x40), 
            HCMD,   32, 
            HSTS,   32
        }


   1A881: 5B 81 1A 43 52 42 44 00 00 20 48 45 52 52 20 00  // [..CRBD.. HERR .
   1A891: 40 1C 48 43 4D 44 20 48 53 54 53 20              // @.HCMD HSTS 

        Method (_STA, 0, NotSerialized)  // _STA: Status
        {

   1A89D: 14 2E 5F 53 54 41 00                             // .._STA.

            If (LEqual (TTDP, Zero))
            {

   1A8A4: A0 12 93 54 54 44 50 00                          // ...TTDP.

                If (TPMF)
                {

   1A8AC: A0 08 54 50 4D 46                                // ..TPMF

                    Return (0x0F)
                }


   1A8B2: A4 0A 0F                                         // ...

                Return (Zero)
            }

   1A8B5: A4 00                                            // ..

            ElseIf
   1A8B7: A1 14                                            // ..

 (LEqual (TTDP, One))
            {

   1A8B9: A0 12 93 54 54 44 50 01                          // ...TTDP.

                If (TPMF)
                {

   1A8C1: A0 08 54 50 4D 46                                // ..TPMF

                    Return (0x0F)
                }


   1A8C7: A4 0A 0F                                         // ...

                Return (Zero)
            }
        }


   1A8CA: A4 00                                            // ..

        Method (STRT, 3, Serialized)
        {

   1A8CC: 14 4E 0B 53 54 52 54 0B                          // .N.STRT.


   1A8D4: 08 5F 54 5F 30 00                                // ._T_0.

            OperationRegion (TPMR, SystemMemory, FTPM, 0x1000)

   1A8DA: 5B 80 54 50 4D 52 00 46 54 50 4D 0B 00 10        // [.TPMR.FTPM...

            Field (TPMR, AnyAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                FERR,   32, 
                Offset (0x0C), 
                BEGN,   32
            }


   1A8E8: 5B 81 14 54 50 4D 52 00 00 20 46 45 52 52 20 00  // [..TPMR.. FERR .
   1A8F8: 20 42 45 47 4E 20                                //  BEGN 

            Name (TIMR, Zero)

   1A8FE: 08 54 49 4D 52 00                                // .TIMR.

            Switch (ToInteger (Arg1))
            {

   1A904: A2 44 08 01 70 99 69 00 5F 54 5F 30              // .D..p.i._T_0

                Case (Zero)
                {

   1A910: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                    Return (
   1A918: A4                                               // .

Buffer (One)
                    {
                         0x03                                             // .
                    })
                }

   1A919: 11 03 01 03                                      // ....

                Case
   1A91D: A1 4A 06                                         // .J.

 (One)
                {
                    Store (Zero, TIMR) /* \_SB_.TPM_.STRT.TIMR */

   1A920: A0 47 06 93 5F 54 5F 30 01 70 00 54 49 4D 52     // .G.._T_0.p.TIMR

                    If (LEqual (AMDT, One))
                    {

   1A92F: A0 2A 93 41 4D 44 54 01                          // .*.AMDT.

                        While (LAnd (LEqual (BEGN, One), 
   1A937: A2 20 90 93 42 45 47 4E 01                       // . ..BEGN.

LLess (TIMR, 0x0200)))
                        {

   1A940: 95 54 49 4D 52 0B 00 02                          // .TIMR...

                            If (LEqual (BEGN, One))
                            {
                                Sleep (One)

   1A948: A0 0F 93 42 45 47 4E 01 5B 22 01                 // ...BEGN.[".

                                Increment (TIMR)
                            }
                        }


   1A953: 75 54 49 4D 52                                   // uTIMR

                        Return (Zero)
                    }

   1A958: A4 00                                            // ..

                    Else
                    {

   1A95A: A1 2D                                            // .-

                        If (LEqual (Or (And (HSTS, 0x02), And (HSTS, One)), 
                            0x03))
                        {

   1A95C: A0 1B 93 7D 7B 48 53 54 53 0A 02 00 7B 48 53 54  // ...}{HSTS...{HST
   1A96C: 53 01 00 00 0A 03                                // S.....

                            Store (One, HCMD) /* \_SB_.TPM_.HCMD */
                        }

   1A972: 70 01 48 43 4D 44                                // p.HCMD

                        Else
                        {
                            Store (One, FERR) /* \_SB_.TPM_.STRT.FERR */

   1A978: A1 0D 70 01 46 45 52 52                          // ..p.FERR

                            Store (Zero, BEGN) /* \_SB_.TPM_.STRT.BEGN */
                        }


   1A980: 70 00 42 45 47 4E                                // p.BEGN

                        Return (Zero)
                    }
                }


   1A986: A4 00                                            // ..

            }


   1A988: A5                                               // .

            Return (One)
        }


   1A989: A4 01                                            // ..

        Method (CRYF, 3, Serialized)
        {

   1A98B: 14 47 05 43 52 59 46 0B                          // .G.CRYF.


   1A993: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (ToInteger (Arg1))
            {

   1A999: A2 44 04 01 70 99 69 00 5F 54 5F 30              // .D..p.i._T_0

                Case (Zero)
                {

   1A9A5: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                    Return (
   1A9AD: A4                                               // .

Buffer (One)
                    {
                         0x03                                             // .
                    })
                }

   1A9AE: 11 03 01 03                                      // ....

                Case
   1A9B2: A1 2A                                            // .*

 (One)
                {

   1A9B4: A0 28 93 5F 54 5F 30 01                          // .(._T_0.

                    Name (TPMV, 
   1A9BC: 08 54 50 4D 56                                   // .TPMV

Package (0x02)
                    {
                        One, 

   1A9C1: 12 09 02 01                                      // ....

                        Package (0x02)
                        {
                            One, 
                            0x20
                        }
                    })

   1A9C5: 12 05 02 01 0A 20                                // ..... 

                    If (LEqual (_STA (), Zero))
                    {

   1A9CB: A0 0C 93 5F 53 54 41 00                          // ..._STA.

                        Return (
   1A9D3: A4                                               // .

Package (0x01)
                        {
                            Zero
                        })
                    }


   1A9D4: 12 03 01 00                                      // ....

                    Return (TPMV) /* \_SB_.TPM_.CRYF.TPMV */
                }


   1A9D8: A4 54 50 4D 56                                   // .TPMV

            }


   1A9DD: A5                                               // .

            Return (
   1A9DE: A4                                               // .

Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }


   1A9DF: 11 03 01 00                                      // ....

    Scope (_SB.TPM)
    {

   1A9E3: 10 4F 4F 2E 5F 53 42 5F 54 50 4D 5F              // .OO._SB_TPM_

        OperationRegion (TSMI, SystemIO, SMIA, 0x02)

   1A9EF: 5B 80 54 53 4D 49 01 53 4D 49 41 0A 02           // [.TSMI.SMIA..

        Field (TSMI, WordAcc, NoLock, Preserve)
        {
            SMI,    16
        }


   1A9FC: 5B 81 0B 54 53 4D 49 02 53 4D 49 5F 10           // [..TSMI.SMI_.

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

   1AA09: 14 49 4D 5F 44 53 4D 0C                          // .IM_DSM.


   1AA11: 08 5F 54 5F 31 00                                // ._T_1.


   1AA17: 08 5F 54 5F 30 00                                // ._T_0.

            If (LEqual (Arg0, 
   1AA1D: A0 41 3F 93 68                                   // .A?.h

ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
            {

   1AA22: 11 13 0A 10 A6 FA DD 3D 1B 36 B4 4E A4 24 8D 10  // .......=.6.N.$..
   1AA32: 08 9D 16 53                                      // ...S

                Switch (ToInteger (Arg2))
                {

   1AA36: A2 48 3D 01 70 99 6A 00 5F 54 5F 30              // .H=.p.j._T_0

                    Case (Zero)
                    {

   1AA42: A0 0E 93 5F 54 5F 30 00                          // ..._T_0.

                        Return (
   1AA4A: A4                                               // .

Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }

   1AA4B: 11 05 0A 02 FF 01                                // ......

                    Case
   1AA51: A1 4C 3B                                         // .L;

 (One)
                    {

   1AA54: A0 0D 93 5F 54 5F 30 01                          // ..._T_0.

                        Return ("1.2")
                    }

   1AA5C: A4 0D 31 2E 32 00                                // ..1.2.

                    Case
   1AA62: A1 4B 3A                                         // .K:

 (0x02)
                    {
                        ToInteger (DerefOf (
   1AA65: A0 4F 09 93 5F 54 5F 30 0A 02 99 83              // .O.._T_0....

Index (Arg3, Zero)), TMF2) /* \TMF2 */
                        Store (OFST, TMF1) /* \TMF1 */
                        Or (0x1200, TMF1, TMF1) /* \TMF1 */
                        Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AA71: 88 6B 00 00 54 4D 46 32 70 4F 46 53 54 54 4D 46  // .k..TMF2pOFSTTMF
   1AA81: 31 7D 0B 00 12 54 4D 46 31 54 4D 46 31 70 54 4D  // 1}...TMF1TMF1pTM
   1AA91: 46 31 53 4D 49 5F 70 53 4D 49 5F 54 4D 46 31 7A  // F1SMI_pSMI_TMF1z
   1AAA1: 54 4D 46 31 0A 08 54 4D 46 31                    // TMF1..TMF1

                        If (LEqual (TMF1, 0xFF))
                        {

   1AAAB: A0 0B 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (0x02)
                        }

                        ShiftLeft (TMF2, 0x08, TMF2) /* \TMF2 */
                        Or (OFST, TMF2, TMF2) /* \TMF2 */
                        Store (TMF2, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AAB4: A4 0A 02 79 54 4D 46 32 0A 08 54 4D 46 32 7D 4F  // ...yTMF2..TMF2}O
   1AAC4: 46 53 54 54 4D 46 32 54 4D 46 32 70 54 4D 46 32  // FSTTMF2TMF2pTMF2
   1AAD4: 53 4D 49 5F 70 53 4D 49 5F 54 4D 46 31 7A 54 4D  // SMI_pSMI_TMF1zTM
   1AAE4: 46 31 0A 08 54 4D 46 31                          // F1..TMF1

                        If (LEqual (TMF1, 0xFF))
                        {

   1AAEC: A0 0B 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (0x02)
                        }


   1AAF5: A4 0A 02                                         // ...

                        If (LEqual (TMF1, 0xFF))
                        {

   1AAF8: A0 0A 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (One)
                        }


   1AB01: A4 01                                            // ..

                        Return (Zero)
                    }

   1AB03: A4 00                                            // ..

                    Case
   1AB05: A1 48 30                                         // .H0

 (0x03)
                    {

   1AB08: A0 41 06 93 5F 54 5F 30 0A 03                    // .A.._T_0..

                        Name (PPI1, 
   1AB12: 08 50 50 49 31                                   // .PPI1

Package (0x02)
                        {
                            Zero, 
                            Zero
                        })
                        Store (OFST, TMF1) /* \TMF1 */
                        Or (0x1100, TMF1, TMF1) /* \TMF1 */
                        Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AB17: 12 04 02 00 00 70 4F 46 53 54 54 4D 46 31 7D 0B  // .....pOFSTTMF1}.
   1AB27: 00 11 54 4D 46 31 54 4D 46 31 70 54 4D 46 31 53  // ..TMF1TMF1pTMF1S
   1AB37: 4D 49 5F 70 53 4D 49 5F 54 4D 46 31 7A 54 4D 46  // MI_pSMI_TMF1zTMF
   1AB47: 31 0A 08 54 4D 46 31                             // 1..TMF1

                        If (LEqual (TMF1, 0xFF))
                        {

   1AB4E: A0 0A 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (One)
                        }

                        Store (TMF1, 
   1AB57: A4 01 70 54 4D 46 31                             // ..pTMF1

Index (PPI1, One))

   1AB5E: 88 50 50 49 31 01 00                             // .PPI1..

                        Return (PPI1) /* \_SB_.TPM_._DSM.PPI1 */
                    }

   1AB65: A4 50 50 49 31                                   // .PPI1

                    Case
   1AB6A: A1 43 2A                                         // .C*

 (0x04)
                    {

   1AB6D: A0 0D 93 5F 54 5F 30 0A 04                       // ..._T_0..

                        Return (TRST) /* \TRST */
                    }

   1AB76: A4 54 52 53 54                                   // .TRST

                    Case
   1AB7B: A1 42 29                                         // .B)

 (0x05)
                    {

   1AB7E: A0 43 16 93 5F 54 5F 30 0A 05                    // .C.._T_0..

                        Name (PPI2, 
   1AB88: 08 50 50 49 32                                   // .PPI2

Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        })
                        Store (OFST, TMF1) /* \TMF1 */
                        Or (0x2100, TMF1, TMF1) /* \TMF1 */
                        Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AB8D: 12 05 03 00 00 00 70 4F 46 53 54 54 4D 46 31 7D  // ......pOFSTTMF1}
   1AB9D: 0B 00 21 54 4D 46 31 54 4D 46 31 70 54 4D 46 31  // ..!TMF1TMF1pTMF1
   1ABAD: 53 4D 49 5F 70 53 4D 49 5F 54 4D 46 31 7A 54 4D  // SMI_pSMI_TMF1zTM
   1ABBD: 46 31 0A 08 54 4D 46 31                          // F1..TMF1

                        If (LEqual (TMF1, 0xFF))
                        {

   1ABC5: A0 0B 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (0x02)
                        }

                        Store (TMF1, 
   1ABCE: A4 0A 02 70 54 4D 46 31                          // ...pTMF1

Index (PPI2, One))
                        Store (OFST, TMF1) /* \TMF1 */
                        Or (0x3100, TMF1, TMF1) /* \TMF1 */
                        Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1ABD6: 88 50 50 49 32 01 00 70 4F 46 53 54 54 4D 46 31  // .PPI2..pOFSTTMF1
   1ABE6: 7D 0B 00 31 54 4D 46 31 54 4D 46 31 70 54 4D 46  // }..1TMF1TMF1pTMF
   1ABF6: 31 53 4D 49 5F 70 53 4D 49 5F 54 4D 46 31 7A 54  // 1SMI_pSMI_TMF1zT
   1AC06: 4D 46 31 0A 08 54 4D 46 31                       // MF1..TMF1

                        If (LEqual (TMF1, 0xFF))
                        {

   1AC0F: A0 0B 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (0x02)
                        }


   1AC18: A4 0A 02                                         // ...

                        If (LEqual (TMF1, 0xF0))
                        {
                            Store (OFST, TMF1) /* \TMF1 */
                            Or (0x5100, TMF1, TMF1) /* \TMF1 */
                            Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                            Store (SMI, TMF1) /* \TMF1 */
                            ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AC1B: A0 47 05 93 54 4D 46 31 0A F0 70 4F 46 53 54 54  // .G..TMF1..pOFSTT
   1AC2B: 4D 46 31 7D 0B 00 51 54 4D 46 31 54 4D 46 31 70  // MF1}..QTMF1TMF1p
   1AC3B: 54 4D 46 31 53 4D 49 5F 70 53 4D 49 5F 54 4D 46  // TMF1SMI_pSMI_TMF
   1AC4B: 31 7A 54 4D 46 31 0A 08 54 4D 46 31              // 1zTMF1..TMF1

                            If (LEqual (TMF1, 0xFF))
                            {
                                Store (0xFFFFFFF0, 
   1AC57: A0 1B 93 54 4D 46 31 0A FF 70 0C F0 FF FF FF     // ...TMF1..p.....

Index (PPI2, 0x02))

   1AC66: 88 50 50 49 32 0A 02 00                          // .PPI2...

                                Return (PPI2) /* \_SB_.TPM_._DSM.PPI2 */
                            }
                        }

   1AC6E: A4 50 50 49 32                                   // .PPI2

                        ElseIf
   1AC73: A1 49 06                                         // .I.

 (LEqual (TMF1, 0xF1))
                        {
                            Store (OFST, TMF1) /* \TMF1 */
                            Or (0x5100, TMF1, TMF1) /* \TMF1 */
                            Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                            Store (SMI, TMF1) /* \TMF1 */
                            ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AC76: A0 47 05 93 54 4D 46 31 0A F1 70 4F 46 53 54 54  // .G..TMF1..pOFSTT
   1AC86: 4D 46 31 7D 0B 00 51 54 4D 46 31 54 4D 46 31 70  // MF1}..QTMF1TMF1p
   1AC96: 54 4D 46 31 53 4D 49 5F 70 53 4D 49 5F 54 4D 46  // TMF1SMI_pSMI_TMF
   1ACA6: 31 7A 54 4D 46 31 0A 08 54 4D 46 31              // 1zTMF1..TMF1

                            If (LEqual (TMF1, 0xFF))
                            {
                                Store (0xFFFFFFF1, 
   1ACB2: A0 1B 93 54 4D 46 31 0A FF 70 0C F1 FF FF FF     // ...TMF1..p.....

Index (PPI2, 0x02))

   1ACC1: 88 50 50 49 32 0A 02 00                          // .PPI2...

                                Return (PPI2) /* \_SB_.TPM_._DSM.PPI2 */
                            }
                        }

   1ACC9: A4 50 50 49 32                                   // .PPI2

                        Else
                        {

   1ACCE: A1 0E                                            // ..

                            Store (TMF1, 
   1ACD0: 70 54 4D 46 31                                   // pTMF1

Index (PPI2, 0x02))
                        }


   1ACD5: 88 50 50 49 32 0A 02 00                          // .PPI2...

                        Return (PPI2) /* \_SB_.TPM_._DSM.PPI2 */
                    }

   1ACDD: A4 50 50 49 32                                   // .PPI2

                    Case
   1ACE2: A1 4B 12                                         // .K.

 (0x06)
                    {

   1ACE5: A0 0B 93 5F 54 5F 30 0A 06                       // ..._T_0..

                        Return (0x03)
                    }

   1ACEE: A4 0A 03                                         // ...

                    Case
   1ACF1: A1 4C 11                                         // .L.

 (0x07)
                    {
                        ToInteger (DerefOf (
   1ACF4: A0 4F 09 93 5F 54 5F 30 0A 07 99 83              // .O.._T_0....

Index (Arg3, Zero)), TMF2) /* \TMF2 */
                        Store (OFST, TMF1) /* \TMF1 */
                        Or (0x1200, TMF1, TMF1) /* \TMF1 */
                        Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AD00: 88 6B 00 00 54 4D 46 32 70 4F 46 53 54 54 4D 46  // .k..TMF2pOFSTTMF
   1AD10: 31 7D 0B 00 12 54 4D 46 31 54 4D 46 31 70 54 4D  // 1}...TMF1TMF1pTM
   1AD20: 46 31 53 4D 49 5F 70 53 4D 49 5F 54 4D 46 31 7A  // F1SMI_pSMI_TMF1z
   1AD30: 54 4D 46 31 0A 08 54 4D 46 31                    // TMF1..TMF1

                        If (LEqual (TMF1, 0xFF))
                        {

   1AD3A: A0 0B 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (0x02)
                        }

                        ShiftLeft (TMF2, 0x08, TMF2) /* \TMF2 */
                        Or (OFST, TMF2, TMF2) /* \TMF2 */
                        Store (TMF2, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AD43: A4 0A 02 79 54 4D 46 32 0A 08 54 4D 46 32 7D 4F  // ...yTMF2..TMF2}O
   1AD53: 46 53 54 54 4D 46 32 54 4D 46 32 70 54 4D 46 32  // FSTTMF2TMF2pTMF2
   1AD63: 53 4D 49 5F 70 53 4D 49 5F 54 4D 46 31 7A 54 4D  // SMI_pSMI_TMF1zTM
   1AD73: 46 31 0A 08 54 4D 46 31                          // F1..TMF1

                        If (LEqual (TMF1, 0xFF))
                        {

   1AD7B: A0 0B 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (0x02)
                        }


   1AD84: A4 0A 02                                         // ...

                        If (LEqual (TMF1, 0xF1))
                        {

   1AD87: A0 0A 93 54 4D 46 31 0A F1                       // ...TMF1..

                            Return (One)
                        }


   1AD90: A4 01                                            // ..

                        Return (Zero)
                    }

   1AD92: A4 00                                            // ..

                    Case
   1AD94: A1 49 07                                         // .I.

 (0x08)
                    {
                        ToInteger (DerefOf (
   1AD97: A0 44 07 93 5F 54 5F 30 0A 08 99 83              // .D.._T_0....

Index (Arg3, Zero)), TMF2) /* \TMF2 */
                        Store (OFST, TMF1) /* \TMF1 */
                        Or (0x4300, TMF1, TMF1) /* \TMF1 */
                        Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftLeft (TMF2, 0x08, TMF2) /* \TMF2 */
                        Or (OFST, TMF2, TMF2) /* \TMF2 */
                        Store (TMF2, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1ADA3: 88 6B 00 00 54 4D 46 32 70 4F 46 53 54 54 4D 46  // .k..TMF2pOFSTTMF
   1ADB3: 31 7D 0B 00 43 54 4D 46 31 54 4D 46 31 70 54 4D  // 1}..CTMF1TMF1pTM
   1ADC3: 46 31 53 4D 49 5F 70 53 4D 49 5F 54 4D 46 31 79  // F1SMI_pSMI_TMF1y
   1ADD3: 54 4D 46 32 0A 08 54 4D 46 32 7D 4F 46 53 54 54  // TMF2..TMF2}OFSTT
   1ADE3: 4D 46 32 54 4D 46 32 70 54 4D 46 32 53 4D 49 5F  // MF2TMF2pTMF2SMI_
   1ADF3: 70 53 4D 49 5F 54 4D 46 31 7A 54 4D 46 31 0A 08  // pSMI_TMF1zTMF1..
   1AE03: 54 4D 46 31                                      // TMF1

                        Return (TMF1) /* \TMF1 */
                    }

   1AE07: A4 54 4D 46 31                                   // .TMF1

                    Default
                    {
                    }


   1AE0C: A1 01                                            // ..

                }
            }

   1AE0E: A5                                               // .

            ElseIf
   1AE0F: A1 4E 0C                                         // .N.

 (LEqual (Arg0, 
   1AE12: A0 4B 0C 93 68                                   // .K..h

ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
            {

   1AE17: 11 13 0A 10 ED 54 60 37 13 CC 75 46 90 1C 47 56  // .....T`7..uF..GV
   1AE27: D7 F2 D4 5D                                      // ...]

                Switch (ToInteger (Arg2))
                {

   1AE2B: A2 42 0B 01 70 99 6A 00 5F 54 5F 31              // .B..p.j._T_1

                    Case (Zero)
                    {

   1AE37: A0 0C 93 5F 54 5F 31 00                          // ..._T_1.

                        Return (
   1AE3F: A4                                               // .

Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }

   1AE40: 11 03 01 03                                      // ....

                    Case
   1AE44: A1 48 09                                         // .H.

 (One)
                    {
                        Store (OFST, TMF1) /* \TMF1 */
                        Or (0x2200, TMF1, TMF1) /* \TMF1 */
                        Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AE47: A0 43 09 93 5F 54 5F 31 01 70 4F 46 53 54 54 4D  // .C.._T_1.pOFSTTM
   1AE57: 46 31 7D 0B 00 22 54 4D 46 31 54 4D 46 31 70 54  // F1}.."TMF1TMF1pT
   1AE67: 4D 46 31 53 4D 49 5F 70 53 4D 49 5F 54 4D 46 31  // MF1SMI_pSMI_TMF1
   1AE77: 7A 54 4D 46 31 0A 08 54 4D 46 31                 // zTMF1..TMF1

                        If (LEqual (TMF1, 0xFF))
                        {

   1AE82: A0 0B 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (0x02)
                        }

                        ToInteger (DerefOf (
   1AE8B: A4 0A 02 99 83                                   // .....

Index (Arg3, Zero)), TMF1) /* \TMF1 */
                        ShiftLeft (TMF1, 0x08, TMF1) /* \TMF1 */
                        Or (OFST, TMF1, TMF1) /* \TMF1 */
                        Store (TMF1, SMI) /* \_SB_.TPM_.SMI_ */
                        Store (SMI, TMF1) /* \TMF1 */
                        ShiftRight (TMF1, 0x08, TMF1) /* \TMF1 */

   1AE90: 88 6B 00 00 54 4D 46 31 79 54 4D 46 31 0A 08 54  // .k..TMF1yTMF1..T
   1AEA0: 4D 46 31 7D 4F 46 53 54 54 4D 46 31 54 4D 46 31  // MF1}OFSTTMF1TMF1
   1AEB0: 70 54 4D 46 31 53 4D 49 5F 70 53 4D 49 5F 54 4D  // pTMF1SMI_pSMI_TM
   1AEC0: 46 31 7A 54 4D 46 31 0A 08 54 4D 46 31           // F1zTMF1..TMF1

                        If (LEqual (TMF1, 0xFF))
                        {

   1AECD: A0 0B 93 54 4D 46 31 0A FF                       // ...TMF1..

                            Return (0x02)
                        }


   1AED6: A4 0A 02                                         // ...

                        Return (Zero)
                    }

   1AED9: A4 00                                            // ..

                    Default
                    {
                    }


   1AEDB: A1 01                                            // ..

                }
            }


   1AEDD: A5                                               // .

            Return (
   1AEDE: A4                                               // .

Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }


   1AEDF: 11 03 01 00                                      // ....

    Scope (_SB.PCI0.XHC.RHUB)
    {

   1AEE3: 10 42 D3 2F 04 5F 53 42 5F 50 43 49 30 58 48 43  // .B./._SB_PCI0XHC
   1AEF3: 5F 52 48 55 42                                   // _RHUB

        Device (SS01)
        {

   1AEF8: 5B 82 4E 07 53 53 30 31                          // [.N.SS01

            Name (_ADR, One)  // _ADR: Address

   1AF00: 08 5F 41 44 52 01                                // ._ADR.

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1AF06: 14 19 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1AF0D: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1AF12: 12 08 04 0A FF 0A 03 00 00                       // .........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS01._UPC.XUPC */
            }


   1AF1B: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1AF20: 14 47 05 5F 50 4C 44 08                          // .G._PLD.

                Name (XPLD, 
   1AF28: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1AF2D: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1AF30: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1AF40: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1AF44: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (One, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS01._PLD.VISI */

   1AF47: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 01  // .XPLD...@.VISIp.
   1AF57: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1AF5B: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (One, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS01._PLD.GPOS */

   1AF5E: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1AF6E: 01 47 50 4F 53                                   // .GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS01._PLD.XPLD */
            }
        }


   1AF73: A4 58 50 4C 44                                   // .XPLD

        Device (SS02)
        {

   1AF78: 5B 82 40 08 53 53 30 32                          // [.@.SS02

            Name (_ADR, 0x02)  // _ADR: Address

   1AF80: 08 5F 41 44 52 0A 02                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1AF87: 14 19 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1AF8E: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    0x0A, 
                    Zero, 
                    Zero
                })

   1AF93: 12 08 04 0A FF 0A 0A 00 00                       // .........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS02._UPC.XUPC */
            }


   1AF9C: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1AFA1: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1AFA9: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1AFAE: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1AFB1: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1AFC1: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1AFC5: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (One, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS02._PLD.VISI */

   1AFC8: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 01  // .XPLD...@.VISIp.
   1AFD8: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1AFDC: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x02, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS02._PLD.GPOS */

   1AFDF: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1AFEF: 0A 02 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS02._PLD.XPLD */
            }
        }


   1AFF5: A4 58 50 4C 44                                   // .XPLD

        Device (SS03)
        {

   1AFFA: 5B 82 4F 07 53 53 30 33                          // [.O.SS03

            Name (_ADR, 0x03)  // _ADR: Address

   1B002: 08 5F 41 44 52 0A 03                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B009: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B010: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B015: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS03._UPC.XUPC */
            }


   1B01D: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B022: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B02A: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B02F: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B032: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B042: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B046: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS03._PLD.VISI */

   1B049: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B059: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B05D: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x03, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS03._PLD.GPOS */

   1B060: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B070: 0A 03 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS03._PLD.XPLD */
            }
        }


   1B076: A4 58 50 4C 44                                   // .XPLD

        Device (SS04)
        {

   1B07B: 5B 82 4F 07 53 53 30 34                          // [.O.SS04

            Name (_ADR, 0x04)  // _ADR: Address

   1B083: 08 5F 41 44 52 0A 04                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B08A: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B091: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    Zero, 
                    Zero, 
                    Zero
                })

   1B096: 12 07 04 0A FF 00 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS04._UPC.XUPC */
            }


   1B09E: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B0A3: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B0AB: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B0B0: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B0B3: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B0C3: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B0C7: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS04._PLD.VISI */

   1B0CA: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B0DA: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B0DE: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x04, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS04._PLD.GPOS */

   1B0E1: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B0F1: 0A 04 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS04._PLD.XPLD */
            }
        }


   1B0F7: A4 58 50 4C 44                                   // .XPLD

        Device (SS05)
        {

   1B0FC: 5B 82 40 08 53 53 30 35                          // [.@.SS05

            Name (_ADR, 0x05)  // _ADR: Address

   1B104: 08 5F 41 44 52 0A 05                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B10B: 14 19 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B112: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B117: 12 08 04 0A FF 0A 03 00 00                       // .........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS05._UPC.XUPC */
            }


   1B120: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B125: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B12D: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B132: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B135: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B145: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B149: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (One, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS05._PLD.VISI */

   1B14C: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 01  // .XPLD...@.VISIp.
   1B15C: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B160: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x05, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS05._PLD.GPOS */

   1B163: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B173: 0A 05 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS05._PLD.XPLD */
            }
        }


   1B179: A4 58 50 4C 44                                   // .XPLD

        Device (SS06)
        {

   1B17E: 5B 82 4F 07 53 53 30 36                          // [.O.SS06

            Name (_ADR, 0x06)  // _ADR: Address

   1B186: 08 5F 41 44 52 0A 06                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B18D: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B194: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    Zero, 
                    Zero, 
                    Zero
                })

   1B199: 12 07 04 0A FF 00 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS06._UPC.XUPC */
            }


   1B1A1: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B1A6: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B1AE: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B1B3: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B1B6: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B1C6: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B1CA: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (One, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS06._PLD.VISI */

   1B1CD: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 01  // .XPLD...@.VISIp.
   1B1DD: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B1E1: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x06, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS06._PLD.GPOS */

   1B1E4: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B1F4: 0A 06 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS06._PLD.XPLD */
            }
        }


   1B1FA: A4 58 50 4C 44                                   // .XPLD

        Device (SS07)
        {

   1B1FF: 5B 82 4F 07 53 53 30 37                          // [.O.SS07

            Name (_ADR, 0x07)  // _ADR: Address

   1B207: 08 5F 41 44 52 0A 07                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B20E: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B215: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B21A: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS07._UPC.XUPC */
            }


   1B222: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B227: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B22F: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B234: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B237: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B247: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B24B: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS07._PLD.VISI */

   1B24E: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B25E: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B262: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x07, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS07._PLD.GPOS */

   1B265: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B275: 0A 07 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS07._PLD.XPLD */
            }
        }


   1B27B: A4 58 50 4C 44                                   // .XPLD

        Device (SS08)
        {

   1B280: 5B 82 4F 07 53 53 30 38                          // [.O.SS08

            Name (_ADR, 0x08)  // _ADR: Address

   1B288: 08 5F 41 44 52 0A 08                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B28F: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B296: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B29B: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS08._UPC.XUPC */
            }


   1B2A3: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B2A8: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B2B0: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B2B5: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B2B8: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B2C8: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B2CC: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS08._PLD.VISI */

   1B2CF: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B2DF: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B2E3: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x08, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS08._PLD.GPOS */

   1B2E6: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B2F6: 0A 08 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS08._PLD.XPLD */
            }
        }


   1B2FC: A4 58 50 4C 44                                   // .XPLD

        Device (SS09)
        {

   1B301: 5B 82 4F 07 53 53 30 39                          // [.O.SS09

            Name (_ADR, 0x09)  // _ADR: Address

   1B309: 08 5F 41 44 52 0A 09                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B310: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B317: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    Zero, 
                    Zero, 
                    Zero
                })

   1B31C: 12 07 04 0A FF 00 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS09._UPC.XUPC */
            }


   1B324: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B329: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B331: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B336: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B339: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B349: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B34D: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS09._PLD.VISI */

   1B350: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B360: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B364: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x09, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS09._PLD.GPOS */

   1B367: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B377: 0A 09 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS09._PLD.XPLD */
            }
        }


   1B37D: A4 58 50 4C 44                                   // .XPLD

        Device (SS0A)
        {

   1B382: 5B 82 4F 07 53 53 30 41                          // [.O.SS0A

            Name (_ADR, 0x0A)  // _ADR: Address

   1B38A: 08 5F 41 44 52 0A 0A                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B391: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B398: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B39D: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS0A._UPC.XUPC */
            }


   1B3A5: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B3AA: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B3B2: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B3B7: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B3BA: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B3CA: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B3CE: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS0A._PLD.VISI */

   1B3D1: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B3E1: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B3E5: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x0A, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS0A._PLD.GPOS */

   1B3E8: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B3F8: 0A 0A 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS0A._PLD.XPLD */
            }
        }


   1B3FE: A4 58 50 4C 44                                   // .XPLD

        Device (SS0B)
        {

   1B403: 5B 82 4F 07 53 53 30 42                          // [.O.SS0B

            Name (_ADR, 0x0B)  // _ADR: Address

   1B40B: 08 5F 41 44 52 0A 0B                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B412: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B419: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B41E: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS0B._UPC.XUPC */
            }


   1B426: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B42B: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B433: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B438: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B43B: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B44B: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B44F: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS0B._PLD.VISI */

   1B452: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B462: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B466: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x0B, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS0B._PLD.GPOS */

   1B469: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B479: 0A 0B 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS0B._PLD.XPLD */
            }
        }


   1B47F: A4 58 50 4C 44                                   // .XPLD

        Device (SS0C)
        {

   1B484: 5B 82 4F 07 53 53 30 43                          // [.O.SS0C

            Name (_ADR, 0x0C)  // _ADR: Address

   1B48C: 08 5F 41 44 52 0A 0C                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B493: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B49A: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B49F: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS0C._UPC.XUPC */
            }


   1B4A7: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B4AC: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B4B4: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B4B9: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B4BC: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B4CC: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B4D0: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS0C._PLD.VISI */

   1B4D3: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B4E3: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B4E7: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x0C, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS0C._PLD.GPOS */

   1B4EA: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B4FA: 0A 0C 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS0C._PLD.XPLD */
            }
        }


   1B500: A4 58 50 4C 44                                   // .XPLD

        Device (SS0D)
        {

   1B505: 5B 82 4F 07 53 53 30 44                          // [.O.SS0D

            Name (_ADR, 0x0D)  // _ADR: Address

   1B50D: 08 5F 41 44 52 0A 0D                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B514: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B51B: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B520: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS0D._UPC.XUPC */
            }


   1B528: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B52D: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B535: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B53A: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B53D: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B54D: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B551: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS0D._PLD.VISI */

   1B554: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B564: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B568: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x0D, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS0D._PLD.GPOS */

   1B56B: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B57B: 0A 0D 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS0D._PLD.XPLD */
            }
        }


   1B581: A4 58 50 4C 44                                   // .XPLD

        Device (SS0E)
        {

   1B586: 5B 82 4F 07 53 53 30 45                          // [.O.SS0E

            Name (_ADR, 0x0E)  // _ADR: Address

   1B58E: 08 5F 41 44 52 0A 0E                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B595: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B59C: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B5A1: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS0E._UPC.XUPC */
            }


   1B5A9: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B5AE: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B5B6: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B5BB: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B5BE: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B5CE: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B5D2: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS0E._PLD.VISI */

   1B5D5: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B5E5: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B5E9: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x0E, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS0E._PLD.GPOS */

   1B5EC: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B5FC: 0A 0E 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS0E._PLD.XPLD */
            }
        }


   1B602: A4 58 50 4C 44                                   // .XPLD

        Device (SS0F)
        {

   1B607: 5B 82 4F 07 53 53 30 46                          // [.O.SS0F

            Name (_ADR, 0x0F)  // _ADR: Address

   1B60F: 08 5F 41 44 52 0A 0F                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B616: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B61D: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B622: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS0F._UPC.XUPC */
            }


   1B62A: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B62F: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B637: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B63C: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B63F: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B64F: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B653: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS0F._PLD.VISI */

   1B656: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B666: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B66A: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x0F, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS0F._PLD.GPOS */

   1B66D: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B67D: 0A 0F 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS0F._PLD.XPLD */
            }
        }


   1B683: A4 58 50 4C 44                                   // .XPLD

        Device (SS10)
        {

   1B688: 5B 82 4F 07 53 53 31 30                          // [.O.SS10

            Name (_ADR, 0x10)  // _ADR: Address

   1B690: 08 5F 41 44 52 0A 10                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B697: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B69E: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B6A3: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS10._UPC.XUPC */
            }


   1B6AB: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B6B0: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B6B8: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B6BD: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B6C0: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B6D0: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B6D4: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS10._PLD.VISI */

   1B6D7: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B6E7: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B6EB: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x10, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS10._PLD.GPOS */

   1B6EE: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B6FE: 0A 10 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS10._PLD.XPLD */
            }
        }


   1B704: A4 58 50 4C 44                                   // .XPLD

        Device (SS11)
        {

   1B709: 5B 82 4F 07 53 53 31 31                          // [.O.SS11

            Name (_ADR, 0x11)  // _ADR: Address

   1B711: 08 5F 41 44 52 0A 11                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B718: 14 19 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B71F: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B724: 12 08 04 0A FF 0A 03 00 00                       // .........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS11._UPC.XUPC */
            }


   1B72D: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B732: 14 47 05 5F 50 4C 44 08                          // .G._PLD.

                Name (XPLD, 
   1B73A: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B73F: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B742: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B752: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B756: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (One, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS11._PLD.VISI */

   1B759: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 01  // .XPLD...@.VISIp.
   1B769: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B76D: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (One, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS11._PLD.GPOS */

   1B770: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B780: 01 47 50 4F 53                                   // .GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS11._PLD.XPLD */
            }
        }


   1B785: A4 58 50 4C 44                                   // .XPLD

        Device (SS12)
        {

   1B78A: 5B 82 40 08 53 53 31 32                          // [.@.SS12

            Name (_ADR, 0x12)  // _ADR: Address

   1B792: 08 5F 41 44 52 0A 12                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B799: 14 19 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B7A0: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    0x0A, 
                    Zero, 
                    Zero
                })

   1B7A5: 12 08 04 0A FF 0A 0A 00 00                       // .........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS12._UPC.XUPC */
            }


   1B7AE: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B7B3: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B7BB: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B7C0: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B7C3: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B7D3: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B7D7: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (One, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS12._PLD.VISI */

   1B7DA: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 01  // .XPLD...@.VISIp.
   1B7EA: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B7EE: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x02, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS12._PLD.GPOS */

   1B7F1: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B801: 0A 02 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS12._PLD.XPLD */
            }
        }


   1B807: A4 58 50 4C 44                                   // .XPLD

        Device (SS13)
        {

   1B80C: 5B 82 40 08 53 53 31 33                          // [.@.SS13

            Name (_ADR, 0x13)  // _ADR: Address

   1B814: 08 5F 41 44 52 0A 13                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B81B: 14 19 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B822: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    0x0A, 
                    Zero, 
                    Zero
                })

   1B827: 12 08 04 0A FF 0A 0A 00 00                       // .........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS13._UPC.XUPC */
            }


   1B830: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B835: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B83D: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B842: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B845: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B855: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B859: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (One, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS13._PLD.VISI */

   1B85C: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 01  // .XPLD...@.VISIp.
   1B86C: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B870: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x02, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS13._PLD.GPOS */

   1B873: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B883: 0A 02 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS13._PLD.XPLD */
            }
        }


   1B889: A4 58 50 4C 44                                   // .XPLD

        Device (SS14)
        {

   1B88E: 5B 82 4F 07 53 53 31 34                          // [.O.SS14

            Name (_ADR, 0x14)  // _ADR: Address

   1B896: 08 5F 41 44 52 0A 14                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B89D: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B8A4: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B8A9: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS14._UPC.XUPC */
            }


   1B8B1: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B8B6: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B8BE: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B8C3: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B8C6: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B8D6: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B8DA: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS14._PLD.VISI */

   1B8DD: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B8ED: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B8F1: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x14, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS14._PLD.GPOS */

   1B8F4: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B904: 0A 14 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS14._PLD.XPLD */
            }
        }


   1B90A: A4 58 50 4C 44                                   // .XPLD

        Device (SS15)
        {

   1B90F: 5B 82 40 08 53 53 31 35                          // [.@.SS15

            Name (_ADR, 0x15)  // _ADR: Address

   1B917: 08 5F 41 44 52 0A 15                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B91E: 14 19 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B925: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B92A: 12 08 04 0A FF 0A 03 00 00                       // .........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS15._UPC.XUPC */
            }


   1B933: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B938: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B940: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B945: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B948: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B958: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B95C: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (One, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS15._PLD.VISI */

   1B95F: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 01  // .XPLD...@.VISIp.
   1B96F: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B973: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x05, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS15._PLD.GPOS */

   1B976: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1B986: 0A 05 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS15._PLD.XPLD */
            }
        }


   1B98C: A4 58 50 4C 44                                   // .XPLD

        Device (SS16)
        {

   1B991: 5B 82 4F 07 53 53 31 36                          // [.O.SS16

            Name (_ADR, 0x16)  // _ADR: Address

   1B999: 08 5F 41 44 52 0A 16                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1B9A0: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1B9A7: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1B9AC: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS16._UPC.XUPC */
            }


   1B9B4: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1B9B9: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1B9C1: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1B9C6: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1B9C9: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1B9D9: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1B9DD: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS16._PLD.VISI */

   1B9E0: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1B9F0: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1B9F4: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x16, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS16._PLD.GPOS */

   1B9F7: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1BA07: 0A 16 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS16._PLD.XPLD */
            }
        }


   1BA0D: A4 58 50 4C 44                                   // .XPLD

        Device (SS17)
        {

   1BA12: 5B 82 4F 07 53 53 31 37                          // [.O.SS17

            Name (_ADR, 0x17)  // _ADR: Address

   1BA1A: 08 5F 41 44 52 0A 17                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1BA21: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1BA28: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1BA2D: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS17._UPC.XUPC */
            }


   1BA35: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1BA3A: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1BA42: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1BA47: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1BA4A: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1BA5A: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1BA5E: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS17._PLD.VISI */

   1BA61: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1BA71: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1BA75: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x17, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS17._PLD.GPOS */

   1BA78: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1BA88: 0A 17 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS17._PLD.XPLD */
            }
        }


   1BA8E: A4 58 50 4C 44                                   // .XPLD

        Device (SS18)
        {

   1BA93: 5B 82 4F 07 53 53 31 38                          // [.O.SS18

            Name (_ADR, 0x18)  // _ADR: Address

   1BA9B: 08 5F 41 44 52 0A 18                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1BAA2: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1BAA9: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1BAAE: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS18._UPC.XUPC */
            }


   1BAB6: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1BABB: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1BAC3: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1BAC8: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1BACB: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1BADB: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1BADF: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS18._PLD.VISI */

   1BAE2: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1BAF2: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1BAF6: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x18, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS18._PLD.GPOS */

   1BAF9: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1BB09: 0A 18 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS18._PLD.XPLD */
            }
        }


   1BB0F: A4 58 50 4C 44                                   // .XPLD

        Device (SS19)
        {

   1BB14: 5B 82 4F 07 53 53 31 39                          // [.O.SS19

            Name (_ADR, 0x19)  // _ADR: Address

   1BB1C: 08 5F 41 44 52 0A 19                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1BB23: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1BB2A: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1BB2F: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS19._UPC.XUPC */
            }


   1BB37: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1BB3C: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1BB44: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1BB49: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1BB4C: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1BB5C: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1BB60: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS19._PLD.VISI */

   1BB63: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1BB73: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1BB77: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x19, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS19._PLD.GPOS */

   1BB7A: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1BB8A: 0A 19 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS19._PLD.XPLD */
            }
        }


   1BB90: A4 58 50 4C 44                                   // .XPLD

        Device (SS1A)
        {

   1BB95: 5B 82 4F 07 53 53 31 41                          // [.O.SS1A

            Name (_ADR, 0x1A)  // _ADR: Address

   1BB9D: 08 5F 41 44 52 0A 1A                             // ._ADR..

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

   1BBA4: 14 18 5F 55 50 43 08                             // .._UPC.

                Name (XUPC, 
   1BBAB: 08 58 55 50 43                                   // .XUPC

Package (0x04)
                {
                    Zero, 
                    0x03, 
                    Zero, 
                    Zero
                })

   1BBB0: 12 07 04 00 0A 03 00 00                          // ........

                Return (XUPC) /* \_SB_.PCI0.XHC_.RHUB.SS1A._UPC.XUPC */
            }


   1BBB8: A4 58 55 50 43                                   // .XUPC

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

   1BBBD: 14 48 05 5F 50 4C 44 08                          // .H._PLD.

                Name (XPLD, 
   1BBC5: 08 58 50 4C 44                                   // .XPLD

Package (0x01)
                {

   1BBCA: 12 16 01                                         // ...

                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x61, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // a.......
                    }
                })

   1BBCD: 11 13 0A 10 82 00 00 00 00 00 00 00 61 0D 00 00  // ............a...
   1BBDD: 00 00 00 00                                      // ....

                CreateField (DerefOf (
   1BBE1: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x40, One, VISI)
                Store (Zero, VISI) /* \_SB_.PCI0.XHC_.RHUB.SS1A._PLD.VISI */

   1BBE4: 88 58 50 4C 44 00 00 0A 40 01 56 49 53 49 70 00  // .XPLD...@.VISIp.
   1BBF4: 56 49 53 49                                      // VISI

                CreateField (DerefOf (
   1BBF8: 5B 13 83                                         // [..

Index (XPLD, Zero)), 0x57, 0x08, GPOS)
                Store (0x1A, GPOS) /* \_SB_.PCI0.XHC_.RHUB.SS1A._PLD.GPOS */

   1BBFB: 88 58 50 4C 44 00 00 0A 57 0A 08 47 50 4F 53 70  // .XPLD...W..GPOSp
   1BC0B: 0A 1A 47 50 4F 53                                // ..GPOS

                Return (XPLD) /* \_SB_.PCI0.XHC_.RHUB.SS1A._PLD.XPLD */
            }
        }
    }


   1BC11: A4 58 50 4C 44                                   // .XPLD

    Scope (_SB.PCI0.LPCB)
    {

   1BC16: 10 43 84 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .C./._SB_PCI0LPC
   1BC26: 42                                               // B

        Device (EC0)
        {

   1BC27: 5B 82 41 83 45 43 30 5F                          // [.A.EC0_

            Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID

   1BC2F: 08 5F 48 49 44 0C 41 D0 0C 09                    // ._HID.A...

            Name (_CRS, 
   1BC39: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0062,             // Range Minimum
                    0x0062,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0066,             // Range Minimum
                    0x0066,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
            })

   1BC3E: 11 15 0A 12 47 01 62 00 62 00 00 01 47 01 66 00  // ....G.b.b...G.f.
   1BC4E: 66 00 00 01 79 00                                // f...y.

            Method (_GPE, 0, NotSerialized)  // _GPE: General Purpose Events
            {
                Store (GGPE (0x01030003), Local0)

   1BC54: 14 13 5F 47 50 45 00 70 47 47 50 45 0C 03 00 03  // .._GPE.pGGPE....
   1BC64: 01 60                                            // .`

                Return (Local0)
            }


   1BC66: A4 60                                            // .`

            Mutex (MUEC, 0x00)

   1BC68: 5B 01 4D 55 45 43 00                             // [.MUEC.

            Mutex (MU4T, 0x00)

   1BC6F: 5B 01 4D 55 34 54 00                             // [.MU4T.

            Name (ECFL, Ones)

   1BC76: 08 45 43 46 4C FF                                // .ECFL.

            Method (ECAV, 0, NotSerialized)
            {

   1BC7C: 14 3B 45 43 41 56 00                             // .;ECAV.

                If (
   1BC83: A0 0B 92                                         // ...

LGreaterEqual (SLPT, 0x04))
                {

   1BC86: 95 53 4C 50 54 0A 04                             // .SLPT..

                    Return (Zero)
                }


   1BC8D: A4 00                                            // ..

                If (LEqual (NVLK, One))
                {

   1BC8F: A0 09 93 4E 56 4C 4B 01                          // ...NVLK.

                    Return (Zero)
                }


   1BC97: A4 00                                            // ..

                If (LEqual (ECFL, Ones))
                {

   1BC99: A0 19 93 45 43 46 4C FF                          // ...ECFL.

                    If (
   1BCA1: A0 0B 92                                         // ...

LGreaterEqual (_REV, 0x02))
                    {

   1BCA4: 95 5F 52 45 56 0A 02                             // ._REV..

                        Return (One)
                    }

   1BCAB: A4 01                                            // ..

                    Else
                    {

   1BCAD: A1 03                                            // ..

                        Return (Zero)
                    }


   1BCAF: A4 00                                            // ..

                    Return (Zero)
                }


   1BCB1: A4 00                                            // ..

                Return (ECFL) /* \_SB_.PCI0.LPCB.EC0_.ECFL */
            }


   1BCB3: A4 45 43 46 4C                                   // .ECFL

            OperationRegion (PECO, SystemIO, 0x0260, 0x08)

   1BCB8: 5B 80 50 45 43 4F 01 0B 60 02 0A 08              // [.PECO..`...

            Field (PECO, ByteAcc, Lock, Preserve)
            {
                HSTS,   8, 
                HCTL,   8, 
                HCMD,   8, 
                HTAR,   8, 
                HWLR,   8, 
                HRLR,   8, 
                HWDR,   8, 
                HRDR,   8
            }


   1BCC4: 5B 81 2E 50 45 43 4F 11 48 53 54 53 08 48 43 54  // [..PECO.HSTS.HCT
   1BCD4: 4C 08 48 43 4D 44 08 48 54 41 52 08 48 57 4C 52  // L.HCMD.HTAR.HWLR
   1BCE4: 08 48 52 4C 52 08 48 57 44 52 08 48 52 44 52 08  // .HRLR.HWDR.HRDR.

            Method (PECI, 7, Serialized)
            {

   1BCF4: 14 45 3A 50 45 43 49 0F                          // .E:PECI.


   1BCFC: 08 5F 54 5F 30 00                                // ._T_0.

                While (LEqual (And (PBSY, 0x02), 0x02))
                {

   1BD02: A2 1D 93 7B 50 42 53 59 0A 02 00 0A 02           // ...{PBSY.....

                    If (LGreater (Arg6, 0x1000))
                    {

   1BD0F: A0 08 94 6E 0B 00 10                             // ...n...

                        Return (Zero)
                    }

                    Add (Arg6, One, Arg6)

   1BD16: A4 00 72 6E 01 6E                                // ..rn.n

                    Sleep (0x0A)
                }

                And (PBSY, 0xFD, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */
                Store (Arg0, HTAR) /* \_SB_.PCI0.LPCB.EC0_.HTAR */
                Store (Arg1, HWLR) /* \_SB_.PCI0.LPCB.EC0_.HWLR */
                Store (Arg2, HRLR) /* \_SB_.PCI0.LPCB.EC0_.HRLR */
                Store (Arg3, HCMD) /* \_SB_.PCI0.LPCB.EC0_.HCMD */

   1BD1C: 5B 22 0A 0A 7B 50 42 53 59 0A FD 50 42 53 59 70  // ["..{PBSY..PBSYp
   1BD2C: 68 48 54 41 52 70 69 48 57 4C 52 70 6A 48 52 4C  // hHTARpiHWLRpjHRL
   1BD3C: 52 70 6B 48 43 4D 44                             // RpkHCMD

                Name (TEMP, Zero)
                Store (Zero, TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BD43: 08 54 45 4D 50 00 70 00 54 45 4D 50              // .TEMP.p.TEMP

                If (
   1BD4F: A0 49 21 92                                      // .I!.

LNotEqual (Arg1, Zero))
                {

   1BD53: 93 69 00                                         // .i.

                    Switch (ToInteger (HCMD))
                    {

   1BD56: A2 42 21 01 70 99 48 43 4D 44 00 5F 54 5F 30     // .B!.p.HCMD._T_0

                        Case (0xF7)
                        {
                            Store (Zero, TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BD65: A0 0F 93 5F 54 5F 30 0A F7 70 00 54 45 4D 50     // ..._T_0..p.TEMP

                            Break
                        }

   1BD74: A5                                               // .

                        Case
   1BD75: A1 42 1F                                         // .B.

 (One)
                        {
                            Store (Zero, TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BD78: A0 0E 93 5F 54 5F 30 01 70 00 54 45 4D 50        // ..._T_0.p.TEMP

                            Break
                        }

   1BD86: A5                                               // .

                        Case
   1BD87: A1 40 1E                                         // .@.

 (0x02)
                        {
                            Store (Zero, TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BD8A: A0 0F 93 5F 54 5F 30 0A 02 70 00 54 45 4D 50     // ..._T_0..p.TEMP

                            Break
                        }

   1BD99: A5                                               // .

                        Case
   1BD9A: A1 4D 1C                                         // .M.

 (0xA1)
                        {
                            Store (Subtract (Arg1, One), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BD9D: A0 12 93 5F 54 5F 30 0A A1 70 74 69 01 00 54 45  // ..._T_0..pti..TE
   1BDAD: 4D 50                                            // MP

                            Break
                        }

   1BDAF: A5                                               // .

                        Case
   1BDB0: A1 47 1B                                         // .G.

 (0xA2)
                        {
                            Store (Subtract (Arg1, One), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BDB3: A0 12 93 5F 54 5F 30 0A A2 70 74 69 01 00 54 45  // ..._T_0..pti..TE
   1BDC3: 4D 50                                            // MP

                            Break
                        }

   1BDC5: A5                                               // .

                        Case
   1BDC6: A1 41 1A                                         // .A.

 (0xB1)
                        {
                            Store (Subtract (Arg1, One), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BDC9: A0 12 93 5F 54 5F 30 0A B1 70 74 69 01 00 54 45  // ..._T_0..pti..TE
   1BDD9: 4D 50                                            // MP

                            Break
                        }

   1BDDB: A5                                               // .

                        Case
   1BDDC: A1 4B 18                                         // .K.

 (0xB2)
                        {
                            Store (Subtract (Arg1, One), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BDDF: A0 12 93 5F 54 5F 30 0A B2 70 74 69 01 00 54 45  // ..._T_0..pti..TE
   1BDEF: 4D 50                                            // MP

                            Break
                        }

   1BDF1: A5                                               // .

                        Case
   1BDF2: A1 45 17                                         // .E.

 (0x61)
                        {
                            Store (Subtract (Arg1, One), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BDF5: A0 12 93 5F 54 5F 30 0A 61 70 74 69 01 00 54 45  // ..._T_0.apti..TE
   1BE05: 4D 50                                            // MP

                            Break
                        }

   1BE07: A5                                               // .

                        Case
   1BE08: A1 4F 15                                         // .O.

 (0x62)
                        {
                            Store (Subtract (Arg1, One), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BE0B: A0 12 93 5F 54 5F 30 0A 62 70 74 69 01 00 54 45  // ..._T_0.bpti..TE
   1BE1B: 4D 50                                            // MP

                            Break
                        }

   1BE1D: A5                                               // .

                        Case
   1BE1E: A1 49 14                                         // .I.

 (0xE1)
                        {
                            Store (Subtract (Arg1, One), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BE21: A0 12 93 5F 54 5F 30 0A E1 70 74 69 01 00 54 45  // ..._T_0..pti..TE
   1BE31: 4D 50                                            // MP

                            Break
                        }

   1BE33: A5                                               // .

                        Case
   1BE34: A1 43 13                                         // .C.

 (0xE2)
                        {
                            Store (Subtract (Arg1, One), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BE37: A0 12 93 5F 54 5F 30 0A E2 70 74 69 01 00 54 45  // ..._T_0..pti..TE
   1BE47: 4D 50                                            // MP

                            Break
                        }

   1BE49: A5                                               // .

                        Case
   1BE4A: A1 4D 11                                         // .M.

 (0xA5)
                        {
                            Or (HCTL, 0x40, HCTL) /* \_SB_.PCI0.LPCB.EC0_.HCTL */
                            Store (Subtract (Arg1, 0x02), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BE4D: A0 1E 93 5F 54 5F 30 0A A5 7D 48 43 54 4C 0A 40  // ..._T_0..}HCTL.@
   1BE5D: 48 43 54 4C 70 74 69 0A 02 00 54 45 4D 50        // HCTLpti...TEMP

                            Break
                        }

   1BE6B: A5                                               // .

                        Case
   1BE6C: A1 4B 0F                                         // .K.

 (0xA6)
                        {
                            Or (HCTL, 0x40, HCTL) /* \_SB_.PCI0.LPCB.EC0_.HCTL */
                            Store (Subtract (Arg1, 0x02), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BE6F: A0 1E 93 5F 54 5F 30 0A A6 7D 48 43 54 4C 0A 40  // ..._T_0..}HCTL.@
   1BE7F: 48 43 54 4C 70 74 69 0A 02 00 54 45 4D 50        // HCTLpti...TEMP

                            Break
                        }

   1BE8D: A5                                               // .

                        Case
   1BE8E: A1 49 0D                                         // .I.

 (0xB5)
                        {
                            Or (HCTL, 0x40, HCTL) /* \_SB_.PCI0.LPCB.EC0_.HCTL */
                            Store (Subtract (Arg1, 0x02), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BE91: A0 1E 93 5F 54 5F 30 0A B5 7D 48 43 54 4C 0A 40  // ..._T_0..}HCTL.@
   1BEA1: 48 43 54 4C 70 74 69 0A 02 00 54 45 4D 50        // HCTLpti...TEMP

                            Break
                        }

   1BEAF: A5                                               // .

                        Case
   1BEB0: A1 47 0B                                         // .G.

 (0xB6)
                        {
                            Or (HCTL, 0x40, HCTL) /* \_SB_.PCI0.LPCB.EC0_.HCTL */
                            Store (Subtract (Arg1, 0x02), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BEB3: A0 1E 93 5F 54 5F 30 0A B6 7D 48 43 54 4C 0A 40  // ..._T_0..}HCTL.@
   1BEC3: 48 43 54 4C 70 74 69 0A 02 00 54 45 4D 50        // HCTLpti...TEMP

                            Break
                        }

   1BED1: A5                                               // .

                        Case
   1BED2: A1 45 09                                         // .E.

 (0x65)
                        {
                            Or (HCTL, 0x40, HCTL) /* \_SB_.PCI0.LPCB.EC0_.HCTL */
                            Store (Subtract (Arg1, 0x02), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BED5: A0 1E 93 5F 54 5F 30 0A 65 7D 48 43 54 4C 0A 40  // ..._T_0.e}HCTL.@
   1BEE5: 48 43 54 4C 70 74 69 0A 02 00 54 45 4D 50        // HCTLpti...TEMP

                            Break
                        }

   1BEF3: A5                                               // .

                        Case
   1BEF4: A1 43 07                                         // .C.

 (0x66)
                        {
                            Or (HCTL, 0x40, HCTL) /* \_SB_.PCI0.LPCB.EC0_.HCTL */
                            Store (Subtract (Arg1, 0x02), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BEF7: A0 1E 93 5F 54 5F 30 0A 66 7D 48 43 54 4C 0A 40  // ..._T_0.f}HCTL.@
   1BF07: 48 43 54 4C 70 74 69 0A 02 00 54 45 4D 50        // HCTLpti...TEMP

                            Break
                        }

   1BF15: A5                                               // .

                        Case
   1BF16: A1 41 05                                         // .A.

 (0xE5)
                        {
                            Or (HCTL, 0x40, HCTL) /* \_SB_.PCI0.LPCB.EC0_.HCTL */
                            Store (Subtract (Arg1, 0x02), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BF19: A0 1E 93 5F 54 5F 30 0A E5 7D 48 43 54 4C 0A 40  // ..._T_0..}HCTL.@
   1BF29: 48 43 54 4C 70 74 69 0A 02 00 54 45 4D 50        // HCTLpti...TEMP

                            Break
                        }

   1BF37: A5                                               // .

                        Case
   1BF38: A1 2F                                            // ./

 (0xE6)
                        {
                            Or (HCTL, 0x40, HCTL) /* \_SB_.PCI0.LPCB.EC0_.HCTL */
                            Store (Subtract (Arg1, 0x02), TEMP) /* \_SB_.PCI0.LPCB.EC0_.PECI.TEMP */

   1BF3A: A0 1E 93 5F 54 5F 30 0A E6 7D 48 43 54 4C 0A 40  // ..._T_0..}HCTL.@
   1BF4A: 48 43 54 4C 70 74 69 0A 02 00 54 45 4D 50        // HCTLpti...TEMP

                            Break
                        }

   1BF58: A5                                               // .

                        Default
                        {
                            And (PBSY, 0xFE, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */

   1BF59: A1 0E 7B 50 42 53 59 0A FE 50 42 53 59           // ..{PBSY..PBSY

                            Return (Zero)
                        }


   1BF66: A4 00                                            // ..

                    }
                }


   1BF68: A5                                               // .

                If (LGreater (TEMP, Zero))
                {
                    Store (Zero, Local0)

   1BF69: A0 20 94 54 45 4D 50 00 70 00 60                 // . .TEMP.p.`

                    While (LLess (Local0, TEMP))
                    {
                        Store (DerefOf (
   1BF74: A2 15 95 60 54 45 4D 50 70 83                    // ...`TEMPp.

Index (Arg4, Local0)), HWDR) /* \_SB_.PCI0.LPCB.EC0_.HWDR */

   1BF7E: 88 6C 60 00 48 57 44 52                          // .l`.HWDR

                        Add (Local0, One, Local0)
                    }
                }

                Or (HCTL, One, HCTL) /* \_SB_.PCI0.LPCB.EC0_.HCTL */

   1BF86: 72 60 01 60 7D 48 43 54 4C 01 48 43 54 4C        // r`.`}HCTL.HCTL

                Name (TIME, 0x5000)
                Store (Zero, Local0)

   1BF94: 08 54 49 4D 45 0B 00 50 70 00 60                 // .TIME..Pp.`

                While (LLess (Local0, TIME))
                {

   1BF9F: A2 40 0B 95 60 54 49 4D 45                       // .@..`TIME

                    If (And (HSTS, 0x80))
                    {
                        Store (0x80, HSTS) /* \_SB_.PCI0.LPCB.EC0_.HSTS */
                        And (PBSY, 0xFE, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */

   1BFA8: A0 1D 7B 48 53 54 53 0A 80 00 70 0A 80 48 53 54  // ..{HSTS...p..HST
   1BFB8: 53 7B 50 42 53 59 0A FE 50 42 53 59              // S{PBSY..PBSY

                        Return (Zero)
                    }


   1BFC4: A4 00                                            // ..

                    If (And (HSTS, 0x40))
                    {
                        Store (0x40, HSTS) /* \_SB_.PCI0.LPCB.EC0_.HSTS */
                        And (PBSY, 0xFE, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */

   1BFC6: A0 1D 7B 48 53 54 53 0A 40 00 70 0A 40 48 53 54  // ..{HSTS.@.p.@HST
   1BFD6: 53 7B 50 42 53 59 0A FE 50 42 53 59              // S{PBSY..PBSY

                        Return (Zero)
                    }


   1BFE2: A4 00                                            // ..

                    If (And (HSTS, 0x20))
                    {
                        Store (0x20, HSTS) /* \_SB_.PCI0.LPCB.EC0_.HSTS */
                        And (PBSY, 0xFE, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */

   1BFE4: A0 1D 7B 48 53 54 53 0A 20 00 70 0A 20 48 53 54  // ..{HSTS. .p. HST
   1BFF4: 53 7B 50 42 53 59 0A FE 50 42 53 59              // S{PBSY..PBSY

                        Return (Zero)
                    }


   1C000: A4 00                                            // ..

                    If (And (HSTS, 0x08))
                    {
                        Store (0x08, HSTS) /* \_SB_.PCI0.LPCB.EC0_.HSTS */
                        And (PBSY, 0xFE, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */

   1C002: A0 1D 7B 48 53 54 53 0A 08 00 70 0A 08 48 53 54  // ..{HSTS...p..HST
   1C012: 53 7B 50 42 53 59 0A FE 50 42 53 59              // S{PBSY..PBSY

                        Return (Zero)
                    }


   1C01E: A4 00                                            // ..

                    If (And (HSTS, 0x04))
                    {
                        Store (0x04, HSTS) /* \_SB_.PCI0.LPCB.EC0_.HSTS */
                        And (PBSY, 0xFE, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */

   1C020: A0 1D 7B 48 53 54 53 0A 04 00 70 0A 04 48 53 54  // ..{HSTS...p..HST
   1C030: 53 7B 50 42 53 59 0A FE 50 42 53 59              // S{PBSY..PBSY

                        Return (Zero)
                    }


   1C03C: A4 00                                            // ..

                    If (And (HSTS, 0x02))
                    {
                        Store (0x02, HSTS) /* \_SB_.PCI0.LPCB.EC0_.HSTS */

   1C03E: A0 11 7B 48 53 54 53 0A 02 00 70 0A 02 48 53 54  // ..{HSTS...p..HST
   1C04E: 53                                               // S

                        Break
                    }
                }


   1C04F: A5                                               // .

                If (LEqual (Local0, TIME))
                {
                    And (PBSY, 0xFE, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */

   1C050: A0 14 93 60 54 49 4D 45 7B 50 42 53 59 0A FE 50  // ...`TIME{PBSY..P
   1C060: 42 53 59                                         // BSY

                    Return (Zero)
                }

   1C063: A4 00                                            // ..

                Else
                {
                    Store (Zero, Local0)

   1C065: A1 29 70 00 60                                   // .)p.`

                    While (LLess (Local0, HRLR))
                    {
                        Store (HRDR, Local1)
                        Store (Local1, 
   1C06A: A2 17 95 60 48 52 4C 52 70 48 52 44 52 61 70 61  // ...`HRLRpHRDRapa

Index (Arg5, Local0))

   1C07A: 88 6D 60 00                                      // .m`.

                        Add (Local0, One, Local0)
                    }

                    And (PBSY, 0xFE, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */

   1C07E: 72 60 01 60 7B 50 42 53 59 0A FE 50 42 53 59     // r`.`{PBSY..PBSY

                    Return (One)
                }


   1C08D: A4 01                                            // ..

                And (PBSY, 0xFE, PBSY) /* \_SB_.PCI0.LPCB.EC0_.PBSY */
            }


   1C08F: 7B 50 42 53 59 0A FE 50 42 53 59                 // {PBSY..PBSY

            OperationRegion (ECOR, EmbeddedControl, Zero, 0xFF)

   1C09A: 5B 80 45 43 4F 52 03 00 0A FF                    // [.ECOR....

            Field (ECOR, ByteAcc, Lock, Preserve)
            {
                Offset (0x04), 
                CMD1,   8, 
                CDT1,   8, 
                CDT2,   8, 
                CDT3,   8, 
                Offset (0x80), 
                Offset (0x81), 
                Offset (0x82), 
                Offset (0x83), 
                EB0R,   8, 
                EB1R,   8, 
                EPWF,   8, 
                Offset (0x87), 
                Offset (0x88), 
                Offset (0x89), 
                Offset (0x93), 
                TAH0,   16, 
                TAH1,   16, 
                TSTP,   8, 
                Offset (0x9C), 
                CDT4,   8, 
                CDT5,   8, 
                Offset (0xA0), 
                Offset (0xA1), 
                Offset (0xA2), 
                Offset (0xA3), 
                EACT,   8, 
                TH1R,   8, 
                TH1L,   8, 
                TH0R,   8, 
                TH0L,   8, 
                Offset (0xB0), 
                B0PN,   16, 
                Offset (0xB4), 
                Offset (0xB6), 
                Offset (0xB8), 
                Offset (0xBA), 
                Offset (0xBC), 
                Offset (0xBE), 
                B0TM,   16, 
                B0C1,   16, 
                B0C2,   16, 
                B0C3,   16, 
                B0C4,   16, 
                Offset (0xD0), 
                B1PN,   16, 
                Offset (0xD4), 
                Offset (0xD6), 
                Offset (0xD8), 
                Offset (0xDA), 
                Offset (0xDC), 
                Offset (0xDE), 
                B1TM,   16, 
                B1C1,   16, 
                B1C2,   16, 
                B1C3,   16, 
                B1C4,   16, 
                Offset (0xF0), 
                Offset (0xF2), 
                Offset (0xF4), 
                B0SN,   16, 
                Offset (0xF8), 
                Offset (0xFA), 
                Offset (0xFC), 
                B1SN,   16
            }


   1C0A4: 5B 81 4B 0E 45 43 4F 52 11 00 20 43 4D 44 31 08  // [.K.ECOR.. CMD1.
   1C0B4: 43 44 54 31 08 43 44 54 32 08 43 44 54 33 08 00  // CDT1.CDT2.CDT3..
   1C0C4: 40 3C 00 08 00 08 00 08 45 42 30 52 08 45 42 31  // @<......EB0R.EB1
   1C0D4: 52 08 45 50 57 46 08 00 08 00 08 00 08 00 40 05  // R.EPWF........@.
   1C0E4: 54 41 48 30 10 54 41 48 31 10 54 53 54 50 08 00  // TAH0.TAH1.TSTP..
   1C0F4: 20 43 44 54 34 08 43 44 54 35 08 00 10 00 08 00  //  CDT4.CDT5......
   1C104: 08 00 08 45 41 43 54 08 54 48 31 52 08 54 48 31  // ...EACT.TH1R.TH1
   1C114: 4C 08 54 48 30 52 08 54 48 30 4C 08 00 40 04 42  // L.TH0R.TH0L..@.B
   1C124: 30 50 4E 10 00 10 00 10 00 10 00 10 00 10 00 10  // 0PN.............
   1C134: 42 30 54 4D 10 42 30 43 31 10 42 30 43 32 10 42  // B0TM.B0C1.B0C2.B
   1C144: 30 43 33 10 42 30 43 34 10 00 40 04 42 31 50 4E  // 0C3.B0C4..@.B1PN
   1C154: 10 00 10 00 10 00 10 00 10 00 10 00 10 42 31 54  // .............B1T
   1C164: 4D 10 42 31 43 31 10 42 31 43 32 10 42 31 43 33  // M.B1C1.B1C2.B1C3
   1C174: 10 42 31 43 34 10 00 40 04 00 10 00 10 42 30 53  // .B1C4..@.....B0S
   1C184: 4E 10 00 10 00 10 00 10 42 31 53 4E 10           // N.......B1SN.

            Name (SMBF, Zero)

   1C191: 08 53 4D 42 46 00                                // .SMBF.

            OperationRegion (SMBX, EmbeddedControl, 0x18, 0x28)

   1C197: 5B 80 53 4D 42 58 03 0A 18 0A 28                 // [.SMBX....(

            Field (SMBX, ByteAcc, NoLock, Preserve)
            {
                PRTC,   8, 
                SSTS,   5, 
                    ,   1, 
                ALFG,   1, 
                CDFG,   1, 
                ADDR,   8, 
                CMDB,   8, 
                BDAT,   256, 
                BCNT,   8, 
                    ,   1, 
                ALAD,   7, 
                ALD0,   8, 
                ALD1,   8
            }


   1C1A2: 5B 81 43 04 53 4D 42 58 01 50 52 54 43 08 53 53  // [.C.SMBX.PRTC.SS
   1C1B2: 54 53 05 00 01 41 4C 46 47 01 43 44 46 47 01 41  // TS...ALFG.CDFG.A
   1C1C2: 44 44 52 08 43 4D 44 42 08 42 44 41 54 40 10 42  // DDR.CMDB.BDAT@.B
   1C1D2: 43 4E 54 08 00 01 41 4C 41 44 07 41 4C 44 30 08  // CNT...ALAD.ALD0.
   1C1E2: 41 4C 44 31 08                                   // ALD1.

            OperationRegion (SMB2, EmbeddedControl, 0x40, 0x28)

   1C1E7: 5B 80 53 4D 42 32 03 0A 40 0A 28                 // [.SMB2..@.(

            Field (SMB2, ByteAcc, NoLock, Preserve)
            {
                PRT2,   8, 
                SST2,   5, 
                    ,   1, 
                ALF2,   1, 
                CDF2,   1, 
                ADD2,   8, 
                CMD2,   8, 
                BDA2,   256, 
                BCN2,   8, 
                    ,   1, 
                ALA2,   7, 
                ALR0,   8, 
                ALR1,   8
            }


   1C1F2: 5B 81 43 04 53 4D 42 32 01 50 52 54 32 08 53 53  // [.C.SMB2.PRT2.SS
   1C202: 54 32 05 00 01 41 4C 46 32 01 43 44 46 32 01 41  // T2...ALF2.CDF2.A
   1C212: 44 44 32 08 43 4D 44 32 08 42 44 41 32 40 10 42  // DD2.CMD2.BDA2@.B
   1C222: 43 4E 32 08 00 01 41 4C 41 32 07 41 4C 52 30 08  // CN2...ALA2.ALR0.
   1C232: 41 4C 52 31 08                                   // ALR1.

            Field (SMB2, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                DA20,   8, 
                DA21,   8
            }


   1C237: 5B 81 12 53 4D 42 32 01 00 20 44 41 32 30 08 44  // [..SMB2.. DA20.D
   1C247: 41 32 31 08                                      // A21.

            Field (SMBX, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                DAT0,   8, 
                DAT1,   8
            }


   1C24B: 5B 81 12 53 4D 42 58 01 00 20 44 41 54 30 08 44  // [..SMBX.. DAT0.D
   1C25B: 41 54 31 08                                      // AT1.

            Field (SMBX, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                DT2B,   16
            }


   1C25F: 5B 81 0D 53 4D 42 58 01 00 20 44 54 32 42 10     // [..SMBX.. DT2B.

            OperationRegion (NSBS, EmbeddedControl, 0x40, 0x04)

   1C26E: 5B 80 4E 53 42 53 03 0A 40 0A 04                 // [.NSBS..@..

            Field (NSBS, ByteAcc, NoLock, Preserve)
            {
                A2AD,   8, 
                A2D0,   8, 
                A2D1,   8, 
                A3AD,   8
            }


   1C279: 5B 81 1A 4E 53 42 53 01 41 32 41 44 08 41 32 44  // [..NSBS.A2AD.A2D
   1C289: 30 08 41 32 44 31 08 41 33 41 44 08              // 0.A2D1.A3AD.

            OperationRegion (BRAM, SystemIO, 0x025A, 0x02)

   1C295: 5B 80 42 52 41 4D 01 0B 5A 02 0A 02              // [.BRAM..Z...

            Field (BRAM, ByteAcc, Lock, Preserve)
            {
                BRAI,   8, 
                BRAD,   8
            }


   1C2A1: 5B 81 10 42 52 41 4D 11 42 52 41 49 08 42 52 41  // [..BRAM.BRAI.BRA
   1C2B1: 44 08                                            // D.

            IndexField (BRAI, BRAD, ByteAcc, NoLock, Preserve)
            {
                Offset (0x8F), 
                PBSY,   8, 
                EPWS,   8, 
                EB0S,   8, 
                EB1S,   8, 
                EB0T,   8, 
                EB1T,   8, 
                Offset (0x98), 
                ECPU,   8, 
                ECRT,   8, 
                EPSV,   8, 
                Offset (0xA0), 
                B0VL,   16, 
                B0RC,   16, 
                B0FC,   16, 
                B0MD,   16, 
                B0ST,   16, 
                B0CC,   16, 
                B0DC,   16, 
                B0DV,   16, 
                B1VL,   16, 
                B1RC,   16, 
                B1FC,   16, 
                B1MD,   16, 
                B1ST,   16, 
                B1CC,   16, 
                B1DC,   16, 
                B1DV,   16
            }


   1C2B3: 5B 86 4F 08 42 52 41 49 42 52 41 44 01 00 48 47  // [.O.BRAIBRAD..HG
   1C2C3: 50 42 53 59 08 45 50 57 53 08 45 42 30 53 08 45  // PBSY.EPWS.EB0S.E
   1C2D3: 42 31 53 08 45 42 30 54 08 45 42 31 54 08 00 18  // B1S.EB0T.EB1T...
   1C2E3: 45 43 50 55 08 45 43 52 54 08 45 50 53 56 08 00  // ECPU.ECRT.EPSV..
   1C2F3: 28 42 30 56 4C 10 42 30 52 43 10 42 30 46 43 10  // (B0VL.B0RC.B0FC.
   1C303: 42 30 4D 44 10 42 30 53 54 10 42 30 43 43 10 42  // B0MD.B0ST.B0CC.B
   1C313: 30 44 43 10 42 30 44 56 10 42 31 56 4C 10 42 31  // 0DC.B0DV.B1VL.B1
   1C323: 52 43 10 42 31 46 43 10 42 31 4D 44 10 42 31 53  // RC.B1FC.B1MD.B1S
   1C333: 54 10 42 31 43 43 10 42 31 44 43 10 42 31 44 56  // T.B1CC.B1DC.B1DV
   1C343: 10                                               // .

            OperationRegion (CRIH, SystemIO, 0x0381, One)

   1C344: 5B 80 43 52 49 48 01 0B 81 03 01                 // [.CRIH.....

            Field (CRIH, ByteAcc, Lock, Preserve)
            {
                CRAH,   8
            }


   1C34F: 5B 81 0B 43 52 49 48 11 43 52 41 48 08           // [..CRIH.CRAH.

            OperationRegion (XRAM, SystemIO, 0x0382, 0x02)

   1C35C: 5B 80 58 52 41 4D 01 0B 82 03 0A 02              // [.XRAM......

            Field (XRAM, ByteAcc, Lock, Preserve)
            {
                CRAI,   8, 
                CRAD,   8
            }


   1C368: 5B 81 10 58 52 41 4D 11 43 52 41 49 08 43 52 41  // [..XRAM.CRAI.CRA
   1C378: 44 08                                            // D.

            IndexField (CRAI, CRAD, ByteAcc, NoLock, Preserve)
            {
                Offset (0x70), 
                DMCL,   8, 
                DTSS,   8, 
                DAST,   8, 
                DTAT,   8, 
                DPNA,   8, 
                DPFA,   8, 
                AS1T,   8, 
                AS0T,   8, 
                DBST,   8, 
                DTBT,   8, 
                DPNB,   8, 
                DPFB,   8, 
                BS1T,   8, 
                BS0T,   8, 
                DCST,   8, 
                DTCT,   8, 
                DPNC,   8, 
                DPFC,   8, 
                CS1T,   8, 
                CS0T,   8, 
                DDST,   8, 
                DTDT,   8, 
                DPND,   8, 
                DPFD,   8, 
                DS1T,   8, 
                DS0T,   8, 
                Offset (0x9C), 
                THL0,   8, 
                THH0,   8, 
                THL1,   8, 
                THH1,   8
            }


   1C37A: 5B 86 47 0A 43 52 41 49 43 52 41 44 01 00 40 38  // [.G.CRAICRAD..@8
   1C38A: 44 4D 43 4C 08 44 54 53 53 08 44 41 53 54 08 44  // DMCL.DTSS.DAST.D
   1C39A: 54 41 54 08 44 50 4E 41 08 44 50 46 41 08 41 53  // TAT.DPNA.DPFA.AS
   1C3AA: 31 54 08 41 53 30 54 08 44 42 53 54 08 44 54 42  // 1T.AS0T.DBST.DTB
   1C3BA: 54 08 44 50 4E 42 08 44 50 46 42 08 42 53 31 54  // T.DPNB.DPFB.BS1T
   1C3CA: 08 42 53 30 54 08 44 43 53 54 08 44 54 43 54 08  // .BS0T.DCST.DTCT.
   1C3DA: 44 50 4E 43 08 44 50 46 43 08 43 53 31 54 08 43  // DPNC.DPFC.CS1T.C
   1C3EA: 53 30 54 08 44 44 53 54 08 44 54 44 54 08 44 50  // S0T.DDST.DTDT.DP
   1C3FA: 4E 44 08 44 50 46 44 08 44 53 31 54 08 44 53 30  // ND.DPFD.DS1T.DS0
   1C40A: 54 08 00 40 09 54 48 4C 30 08 54 48 48 30 08 54  // T..@.THL0.THH0.T
   1C41A: 48 4C 31 08 54 48 48 31 08                       // HL1.THH1.

            Mutex (CMUT, 0x00)

   1C423: 5B 01 43 4D 55 54 00                             // [.CMUT.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

   1C42A: 14 1C 5F 49 4E 49 00                             // .._INI.

                If (
   1C431: A0 11 92                                         // ...

LLessEqual (MSOS (), OSME))
                {

   1C434: 94 4D 53 4F 53 4F 53 4D 45                       // .MSOSOSME

                    Store (One, ECFL) /* \_SB_.PCI0.LPCB.EC0_.ECFL */
                }

                KINI ()
            }


   1C43D: 70 01 45 43 46 4C 4B 49 4E 49                    // p.ECFLKINI

            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {

   1C447: 14 12 5F 52 45 47 02                             // .._REG.

                If (LEqual (Arg0, 0x03))
                {

   1C44E: A0 0B 93 68 0A 03                                // ...h..

                    Store (Arg1, ECFL) /* \_SB_.PCI0.LPCB.EC0_.ECFL */
                }
            }
        }
    }


   1C454: 70 69 45 43 46 4C                                // piECFL

    Scope (\)
    {

   1C45A: 10 43 85 5C 00                                   // .C.\.

        Method (DIAG, 1, NotSerialized)
        {
            P8XH (Zero, Arg0)
            SBYT (Zero, Arg0)
        }


   1C45F: 14 12 44 49 41 47 01 50 38 58 48 00 68 53 42 59  // ..DIAG.P8XH.hSBY
   1C46F: 54 00 68                                         // T.h

        OperationRegion (GPSC, SystemIO, 0xB2, 0x02)

   1C472: 5B 80 47 50 53 43 01 0A B2 0A 02                 // [.GPSC.....

        Field (GPSC, ByteAcc, NoLock, Preserve)
        {
            SMCM,   8, 
            SMST,   8
        }


   1C47D: 5B 81 10 47 50 53 43 01 53 4D 43 4D 08 53 4D 53  // [..GPSC.SMCM.SMS
   1C48D: 54 08                                            // T.

        Method (ISMI, 1, Serialized)
        {

   1C48F: 14 0C 49 53 4D 49 09                             // ..ISMI.

            Store (Arg0, SMCM) /* \SMCM */
        }


   1C496: 70 68 53 4D 43 4D                                // phSMCM

        Method (ASMI, 1, Serialized)
        {
            Store (Arg0, \_SB.ALPR)
            Store (0xA3, SMCM) /* \SMCM */

   1C49C: 14 24 41 53 4D 49 09 70 68 5C 2E 5F 53 42 5F 41  // .$ASMI.ph\._SB_A
   1C4AC: 4C 50 52 70 0A A3 53 4D 43 4D                    // LPRp..SMCM

            Return (\_SB.ALPR)
        }


   1C4B6: A4 5C 2E 5F 53 42 5F 41 4C 50 52                 // .\._SB_ALPR

        Scope (_SB)
        {

   1C4C1: 10 4F 4C 5F 53 42 5F                             // .OL_SB_

            OperationRegion (ECMS, SystemIO, 0x72, 0x02)

   1C4C8: 5B 80 45 43 4D 53 01 0A 72 0A 02                 // [.ECMS..r..

            Field (ECMS, ByteAcc, Lock, Preserve)
            {
                EIND,   8, 
                EDAT,   8
            }


   1C4D3: 5B 81 10 45 43 4D 53 11 45 49 4E 44 08 45 44 41  // [..ECMS.EIND.EDA
   1C4E3: 54 08                                            // T.

            IndexField (EIND, EDAT, ByteAcc, NoLock, Preserve)
            {
                Offset (0x40), 
                IKFG,   8, 
                Offset (0x43), 
                RAMB,   32, 
                AVOL,   8, 
                LBTN,   8, 
                ERRF,   8, 
                OCLK,   8, 
                WIDE,   1, 
                OVCK,   2, 
                SLPN,   3, 
                ACRD,   1, 
                VGAS,   1, 
                CPUR,   6, 
                CPUF,   2, 
                LBT2,   8, 
                PCMS,   8, 
                ALSL,   8, 
                ALAE,   1, 
                ALDE,   1, 
                ALSP,   1, 
                    ,   1, 
                FSTG,   4, 
                WLDP,   1, 
                BTDP,   1, 
                WRST,   1, 
                BRST,   1, 
                WRPS,   1, 
                BRPS,   1, 
                Offset (0x52), 
                SYNA,   1, 
                ALPS,   1, 
                ELAN,   1, 
                STLC,   1, 
                FOLT,   1, 
                TPIF,   1, 
                Offset (0x53), 
                IKF2,   8, 
                UHDB,   8, 
                OSPM,   8, 
                TCGF,   8, 
                PPIS,   8, 
                PPIR,   8, 
                SIDE,   1, 
                PWBS,   1, 
                WFFG,   1, 
                OCST,   3, 
                SMTT,   1, 
                Offset (0x5A), 
                SP80,   1, 
                TPLP,   1, 
                TPLI,   2, 
                Offset (0x5B), 
                SWD2,   1, 
                F9KP,   1, 
                HACF,   6, 
                UWDP,   1, 
                WMDP,   1, 
                GPDP,   1, 
                TGDP,   1, 
                UWST,   1, 
                WMST,   1, 
                GPST,   1, 
                TGST,   1, 
                UWPS,   1, 
                WMPS,   1, 
                GPPS,   1, 
                TGPS,   1, 
                FGDP,   1, 
                FGST,   1, 
                FGPS,   1, 
                Offset (0x5E), 
                SPDC,   8, 
                DROK,   1, 
                SPDG,   1, 
                Offset (0x60), 
                KBLV,   8, 
                KBHZ,   8, 
                FVGA,   1, 
                P4HN,   1, 
                USSC,   1, 
                MFTM,   1, 
                APBM,   4, 
                EGCP,   8, 
                EGC2,   2, 
                Offset (0x65), 
                VHDA,   1, 
                DP3S,   1, 
                LTCL,   2, 
                LOLK,   2, 
                U3WA,   2, 
                GSDT,   1, 
                PBAF,   1, 
                Offset (0x67), 
                PA3D,   1, 
                Offset (0x68), 
                S4TF,   1, 
                BECF,   1, 
                MMOD,   4, 
                Offset (0x69)
            }


   1C4E5: 5B 86 49 1D 45 49 4E 44 45 44 41 54 01 00 40 20  // [.I.EINDEDAT..@ 
   1C4F5: 49 4B 46 47 08 00 10 52 41 4D 42 20 41 56 4F 4C  // IKFG...RAMB AVOL
   1C505: 08 4C 42 54 4E 08 45 52 52 46 08 4F 43 4C 4B 08  // .LBTN.ERRF.OCLK.
   1C515: 57 49 44 45 01 4F 56 43 4B 02 53 4C 50 4E 03 41  // WIDE.OVCK.SLPN.A
   1C525: 43 52 44 01 56 47 41 53 01 43 50 55 52 06 43 50  // CRD.VGAS.CPUR.CP
   1C535: 55 46 02 4C 42 54 32 08 50 43 4D 53 08 41 4C 53  // UF.LBT2.PCMS.ALS
   1C545: 4C 08 41 4C 41 45 01 41 4C 44 45 01 41 4C 53 50  // L.ALAE.ALDE.ALSP
   1C555: 01 00 01 46 53 54 47 04 57 4C 44 50 01 42 54 44  // ...FSTG.WLDP.BTD
   1C565: 50 01 57 52 53 54 01 42 52 53 54 01 57 52 50 53  // P.WRST.BRST.WRPS
   1C575: 01 42 52 50 53 01 00 02 53 59 4E 41 01 41 4C 50  // .BRPS...SYNA.ALP
   1C585: 53 01 45 4C 41 4E 01 53 54 4C 43 01 46 4F 4C 54  // S.ELAN.STLC.FOLT
   1C595: 01 54 50 49 46 01 00 02 49 4B 46 32 08 55 48 44  // .TPIF...IKF2.UHD
   1C5A5: 42 08 4F 53 50 4D 08 54 43 47 46 08 50 50 49 53  // B.OSPM.TCGF.PPIS
   1C5B5: 08 50 50 49 52 08 53 49 44 45 01 50 57 42 53 01  // .PPIR.SIDE.PWBS.
   1C5C5: 57 46 46 47 01 4F 43 53 54 03 53 4D 54 54 01 00  // WFFG.OCST.SMTT..
   1C5D5: 01 53 50 38 30 01 54 50 4C 50 01 54 50 4C 49 02  // .SP80.TPLP.TPLI.
   1C5E5: 00 04 53 57 44 32 01 46 39 4B 50 01 48 41 43 46  // ..SWD2.F9KP.HACF
   1C5F5: 06 55 57 44 50 01 57 4D 44 50 01 47 50 44 50 01  // .UWDP.WMDP.GPDP.
   1C605: 54 47 44 50 01 55 57 53 54 01 57 4D 53 54 01 47  // TGDP.UWST.WMST.G
   1C615: 50 53 54 01 54 47 53 54 01 55 57 50 53 01 57 4D  // PST.TGST.UWPS.WM
   1C625: 50 53 01 47 50 50 53 01 54 47 50 53 01 46 47 44  // PS.GPPS.TGPS.FGD
   1C635: 50 01 46 47 53 54 01 46 47 50 53 01 00 01 53 50  // P.FGST.FGPS...SP
   1C645: 44 43 08 44 52 4F 4B 01 53 50 44 47 01 00 06 4B  // DC.DROK.SPDG...K
   1C655: 42 4C 56 08 4B 42 48 5A 08 46 56 47 41 01 50 34  // BLV.KBHZ.FVGA.P4
   1C665: 48 4E 01 55 53 53 43 01 4D 46 54 4D 01 41 50 42  // HN.USSC.MFTM.APB
   1C675: 4D 04 45 47 43 50 08 45 47 43 32 02 00 06 56 48  // M.EGCP.EGC2...VH
   1C685: 44 41 01 44 50 33 53 01 4C 54 43 4C 02 4C 4F 4C  // DA.DP3S.LTCL.LOL
   1C695: 4B 02 55 33 57 41 02 47 53 44 54 01 50 42 41 46  // K.U3WA.GSDT.PBAF
   1C6A5: 01 00 06 50 41 33 44 01 00 07 53 34 54 46 01 42  // ...PA3D...S4TF.B
   1C6B5: 45 43 46 01 4D 4D 4F 44 04 00 02                 // ECF.MMOD...

            OperationRegion (RAMW, SystemMemory, RAMB, 0x0100)

   1C6C0: 5B 80 52 41 4D 57 00 52 41 4D 42 0B 00 01        // [.RAMW.RAMB...

            Field (RAMW, AnyAcc, NoLock, Preserve)
            {
                TRTY,   8, 
                FSFN,   8, 
                FSTA,   16, 
                FADR,   64, 
                FSIZ,   16, 
                ACTD,   8, 
                AVLD,   8, 
                SETD,   8, 
                ACPF,   8, 
                DCPF,   8, 
                DCP2,   8, 
                DCTP,   8, 
                CTPY,   8, 
                OPAD,   16, 
                OCAD,   16, 
                CSTE,   16, 
                NSTE,   16, 
                SSTE,   16, 
                SFUN,   8, 
                TPSV,   8, 
                TAC0,   8, 
                TCRT,   8, 
                TDO1,   8, 
                TDO2,   8, 
                PPSV,   8, 
                PAC0,   8, 
                T0HL,   8, 
                T0LL,   8, 
                T0F1,   8, 
                T0F2,   8, 
                T1HL,   8, 
                T1LL,   8, 
                T1F1,   8, 
                T1F2,   8, 
                T2HL,   8, 
                T2LL,   8, 
                T2F1,   8, 
                T2F2,   8, 
                T3HL,   8, 
                T3LL,   8, 
                T3F1,   8, 
                T3F2,   8, 
                T4HL,   8, 
                T4LL,   8, 
                T4F1,   8, 
                T4F2,   8, 
                T5HL,   8, 
                T5LL,   8, 
                T5F1,   8, 
                T5F2,   8, 
                T6HL,   8, 
                T6LL,   8, 
                T6F1,   8, 
                T6F2,   8, 
                T7HL,   8, 
                T7LL,   8, 
                T7F1,   8, 
                T7F2,   8, 
                SLPT,   8, 
                AIBF,   8, 
                IDES,   8, 
                VGAF,   16, 
                C4CP,   8, 
                LUXS,   8, 
                LUXL,   8, 
                LUXH,   8, 
                LUXF,   8, 
                MNAM,   64, 
                LCDV,   32, 
                LCDR,   8, 
                PTIM,   8, 
                PTMP,   8, 
                SMIF,   8, 
                DTSE,   8, 
                DTS1,   8, 
                DTS2,   8, 
                MPEN,   8, 
                QFAN,   8, 
                VBIF,   16, 
                BIPA,   32, 
                RTCW,   16, 
                CPUN,   8, 
                ALPR,   32, 
                CIST,   8, 
                GNBF,   32, 
                CPUP,   16, 
                SLMT,   16, 
                LDES,   8, 
                HDDF,   8, 
                GCDF,   16, 
                SMBB,   32, 
                FEBL,   32, 
                TMPB,   8, 
                DSYN,   8, 
                LDFT,   8, 
                TBOT,   16, 
                RTC1,   8, 
                RTC2,   8, 
                RTC3,   8, 
                BRTI,   8, 
                SGEN,   8, 
                RBUF,   32, 
                RVBS,   32, 
                EXTS,   8, 
                SCMA,   32, 
                CTBO,   8, 
                DOSF,   8, 
                PTAB,   32, 
                CPCH,   32, 
                HTPT,   32, 
                CPUH,   8, 
                XHCB,   32, 
                USBC,   8, 
                VBOF,   16, 
                RSKY,   8, 
                WOLO,   8, 
                INSK,   8, 
                FPBA,   32, 
                FPTR,   32, 
                NVLK,   8, 
                NVLP,   64, 
                ACPI,   8, 
                NRS3,   16, 
                DPS3,   16, 
                S4FG,   8, 
                MODE,   8, 
                S4TM,   32, 
                EVET,   32, 
                ALSA,   16, 
                EZFU,   8, 
                SMFA,   32, 
                ISDF,   8, 
                CALB,   32, 
                CFG2,   32, 
                TJMX,   8, 
                SCWT,   16, 
                CA10,   32, 
                CA11,   32, 
                ASMU,   8
            }
        }


   1C6CE: 5B 81 41 2C 52 41 4D 57 00 54 52 54 59 08 46 53  // [.A,RAMW.TRTY.FS
   1C6DE: 46 4E 08 46 53 54 41 10 46 41 44 52 40 04 46 53  // FN.FSTA.FADR@.FS
   1C6EE: 49 5A 10 41 43 54 44 08 41 56 4C 44 08 53 45 54  // IZ.ACTD.AVLD.SET
   1C6FE: 44 08 41 43 50 46 08 44 43 50 46 08 44 43 50 32  // D.ACPF.DCPF.DCP2
   1C70E: 08 44 43 54 50 08 43 54 50 59 08 4F 50 41 44 10  // .DCTP.CTPY.OPAD.
   1C71E: 4F 43 41 44 10 43 53 54 45 10 4E 53 54 45 10 53  // OCAD.CSTE.NSTE.S
   1C72E: 53 54 45 10 53 46 55 4E 08 54 50 53 56 08 54 41  // STE.SFUN.TPSV.TA
   1C73E: 43 30 08 54 43 52 54 08 54 44 4F 31 08 54 44 4F  // C0.TCRT.TDO1.TDO
   1C74E: 32 08 50 50 53 56 08 50 41 43 30 08 54 30 48 4C  // 2.PPSV.PAC0.T0HL
   1C75E: 08 54 30 4C 4C 08 54 30 46 31 08 54 30 46 32 08  // .T0LL.T0F1.T0F2.
   1C76E: 54 31 48 4C 08 54 31 4C 4C 08 54 31 46 31 08 54  // T1HL.T1LL.T1F1.T
   1C77E: 31 46 32 08 54 32 48 4C 08 54 32 4C 4C 08 54 32  // 1F2.T2HL.T2LL.T2
   1C78E: 46 31 08 54 32 46 32 08 54 33 48 4C 08 54 33 4C  // F1.T2F2.T3HL.T3L
   1C79E: 4C 08 54 33 46 31 08 54 33 46 32 08 54 34 48 4C  // L.T3F1.T3F2.T4HL
   1C7AE: 08 54 34 4C 4C 08 54 34 46 31 08 54 34 46 32 08  // .T4LL.T4F1.T4F2.
   1C7BE: 54 35 48 4C 08 54 35 4C 4C 08 54 35 46 31 08 54  // T5HL.T5LL.T5F1.T
   1C7CE: 35 46 32 08 54 36 48 4C 08 54 36 4C 4C 08 54 36  // 5F2.T6HL.T6LL.T6
   1C7DE: 46 31 08 54 36 46 32 08 54 37 48 4C 08 54 37 4C  // F1.T6F2.T7HL.T7L
   1C7EE: 4C 08 54 37 46 31 08 54 37 46 32 08 53 4C 50 54  // L.T7F1.T7F2.SLPT
   1C7FE: 08 41 49 42 46 08 49 44 45 53 08 56 47 41 46 10  // .AIBF.IDES.VGAF.
   1C80E: 43 34 43 50 08 4C 55 58 53 08 4C 55 58 4C 08 4C  // C4CP.LUXS.LUXL.L
   1C81E: 55 58 48 08 4C 55 58 46 08 4D 4E 41 4D 40 04 4C  // UXH.LUXF.MNAM@.L
   1C82E: 43 44 56 20 4C 43 44 52 08 50 54 49 4D 08 50 54  // CDV LCDR.PTIM.PT
   1C83E: 4D 50 08 53 4D 49 46 08 44 54 53 45 08 44 54 53  // MP.SMIF.DTSE.DTS
   1C84E: 31 08 44 54 53 32 08 4D 50 45 4E 08 51 46 41 4E  // 1.DTS2.MPEN.QFAN
   1C85E: 08 56 42 49 46 10 42 49 50 41 20 52 54 43 57 10  // .VBIF.BIPA RTCW.
   1C86E: 43 50 55 4E 08 41 4C 50 52 20 43 49 53 54 08 47  // CPUN.ALPR CIST.G
   1C87E: 4E 42 46 20 43 50 55 50 10 53 4C 4D 54 10 4C 44  // NBF CPUP.SLMT.LD
   1C88E: 45 53 08 48 44 44 46 08 47 43 44 46 10 53 4D 42  // ES.HDDF.GCDF.SMB
   1C89E: 42 20 46 45 42 4C 20 54 4D 50 42 08 44 53 59 4E  // B FEBL TMPB.DSYN
   1C8AE: 08 4C 44 46 54 08 54 42 4F 54 10 52 54 43 31 08  // .LDFT.TBOT.RTC1.
   1C8BE: 52 54 43 32 08 52 54 43 33 08 42 52 54 49 08 53  // RTC2.RTC3.BRTI.S
   1C8CE: 47 45 4E 08 52 42 55 46 20 52 56 42 53 20 45 58  // GEN.RBUF RVBS EX
   1C8DE: 54 53 08 53 43 4D 41 20 43 54 42 4F 08 44 4F 53  // TS.SCMA CTBO.DOS
   1C8EE: 46 08 50 54 41 42 20 43 50 43 48 20 48 54 50 54  // F.PTAB CPCH HTPT
   1C8FE: 20 43 50 55 48 08 58 48 43 42 20 55 53 42 43 08  //  CPUH.XHCB USBC.
   1C90E: 56 42 4F 46 10 52 53 4B 59 08 57 4F 4C 4F 08 49  // VBOF.RSKY.WOLO.I
   1C91E: 4E 53 4B 08 46 50 42 41 20 46 50 54 52 20 4E 56  // NSK.FPBA FPTR NV
   1C92E: 4C 4B 08 4E 56 4C 50 40 04 41 43 50 49 08 4E 52  // LK.NVLP@.ACPI.NR
   1C93E: 53 33 10 44 50 53 33 10 53 34 46 47 08 4D 4F 44  // S3.DPS3.S4FG.MOD
   1C94E: 45 08 53 34 54 4D 20 45 56 45 54 20 41 4C 53 41  // E.S4TM EVET ALSA
   1C95E: 10 45 5A 46 55 08 53 4D 46 41 20 49 53 44 46 08  // .EZFU.SMFA ISDF.
   1C96E: 43 41 4C 42 20 43 46 47 32 20 54 4A 4D 58 08 53  // CALB CFG2 TJMX.S
   1C97E: 43 57 54 10 43 41 31 30 20 43 41 31 31 20 41 53  // CWT.CA10 CA11 AS
   1C98E: 4D 55 08                                         // MU.

        OperationRegion (DBGM, SystemMemory, 0x000D0000, 0x04)

   1C991: 5B 80 44 42 47 4D 00 0C 00 00 0D 00 0A 04        // [.DBGM........

        Field (DBGM, DWordAcc, NoLock, Preserve)
        {
            DBGG,   32
        }


   1C99F: 5B 81 0B 44 42 47 4D 03 44 42 47 47 20           // [..DBGM.DBGG 

        Name (OSFG, Zero)

   1C9AC: 08 4F 53 46 47 00                                // .OSFG.

        Name (OS9X, One)

   1C9B2: 08 4F 53 39 58 01                                // .OS9X.

        Name (OS98, 0x02)

   1C9B8: 08 4F 53 39 38 0A 02                             // .OS98..

        Name (OSME, 0x04)

   1C9BF: 08 4F 53 4D 45 0A 04                             // .OSME..

        Name (OS2K, 0x08)

   1C9C6: 08 4F 53 32 4B 0A 08                             // .OS2K..

        Name (OSXP, 0x10)

   1C9CD: 08 4F 53 58 50 0A 10                             // .OSXP..

        Name (OSEG, 0x20)

   1C9D4: 08 4F 53 45 47 0A 20                             // .OSEG. 

        Name (OSVT, 0x40)

   1C9DB: 08 4F 53 56 54 0A 40                             // .OSVT.@

        Name (OSW7, 0x80)

   1C9E2: 08 4F 53 57 37 0A 80                             // .OSW7..

        Name (OSW8, 0x0100)

   1C9E9: 08 4F 53 57 38 0B 00 01                          // .OSW8...

        Name (OS13, 0x0110)

   1C9F1: 08 4F 53 31 33 0B 10 01                          // .OS13...

        Name (OS14, 0x0120)

   1C9F9: 08 4F 53 31 34 0B 20 01                          // .OS14. .

        Name (OS15, 0x0130)

   1CA01: 08 4F 53 31 35 0B 30 01                          // .OS15.0.

        Name (OS16, 0x0140)

   1CA09: 08 4F 53 31 36 0B 40 01                          // .OS16.@.

        Name (OS17, 0x0150)

   1CA11: 08 4F 53 31 37 0B 50 01                          // .OS17.P.

        Method (MCTH, 2, NotSerialized)
        {

   1CA19: 14 4E 04 4D 43 54 48 02                          // .N.MCTH.

            If (LLess (SizeOf (Arg0), 
   1CA21: A0 08 95 87 68                                   // ....h

SizeOf (Arg1)))
            {

   1CA26: 87 69                                            // .i

                Return (Zero)
            }

            Add (SizeOf (Arg0), One, Local0)

   1CA28: A4 00 72 87 68 01 60                             // ..r.h.`

            Name (BUF0, 
   1CA2F: 08 42 55 46 30                                   // .BUF0

Buffer (Local0){})

   1CA34: 11 02 60                                         // ..`

            Name (BUF1, 
   1CA37: 08 42 55 46 31                                   // .BUF1

Buffer (Local0){})
            Store (Arg0, BUF0) /* \MCTH.BUF0 */
            Store (Arg1, BUF1) /* \MCTH.BUF1 */

   1CA3C: 11 02 60 70 68 42 55 46 30 70 69 42 55 46 31     // ..`phBUF0piBUF1

            While (Local0)
            {
                Decrement (Local0)

   1CA4B: A2 1A 60 76 60                                   // ..`v`

                If (
   1CA50: A0 15 92                                         // ...

LNotEqual (DerefOf (
   1CA53: 93 83                                            // ..

Index (BUF0, Local0)), 
   1CA55: 88 42 55 46 30 60 00                             // .BUF0`.

DerefOf (
   1CA5C: 83                                               // .

Index (BUF1, Local0
                    ))))
                {

   1CA5D: 88 42 55 46 31 60 00                             // .BUF1`.

                    Return (Zero)
                }
            }


   1CA64: A4 00                                            // ..

            Return (One)
        }


   1CA66: A4 01                                            // ..

        Method (MSOS, 0, NotSerialized)
        {

   1CA68: 14 42 0A 4D 53 4F 53 00                          // .B.MSOS.

            If (
   1CA70: A0 13 92                                         // ...

LGreaterEqual (OSYS, 0x07DC))
            {

   1CA73: 95 4F 53 59 53 0B DC 07                          // .OSYS...

                Store (OSW8, OSFG) /* \OSFG */
            }

   1CA7B: 70 4F 53 57 38 4F 53 46 47                       // pOSW8OSFG

            ElseIf
   1CA84: A1 41 08                                         // .A.

 (LEqual (OSYS, 0x07D9))
            {

   1CA87: A0 12 93 4F 53 59 53 0B D9 07                    // ...OSYS...

                Store (OSW7, OSFG) /* \OSFG */
            }

   1CA91: 70 4F 53 57 37 4F 53 46 47                       // pOSW7OSFG

            ElseIf
   1CA9A: A1 4B 06                                         // .K.

 (LEqual (OSYS, 0x07D6))
            {

   1CA9D: A0 12 93 4F 53 59 53 0B D6 07                    // ...OSYS...

                Store (OSVT, OSFG) /* \OSFG */
            }

   1CAA7: 70 4F 53 56 54 4F 53 46 47                       // pOSVTOSFG

            ElseIf
   1CAB0: A1 45 05                                         // .E.

 (LAnd (
   1CAB3: A0 1D 90 92                                      // ....

LGreaterEqual (OSYS, 0x07D1), 
   1CAB7: 95 4F 53 59 53 0B D1 07                          // .OSYS...


   1CABF: 92                                               // .

LLessEqual (OSYS, 0x07D3)))
            {

   1CAC0: 94 4F 53 59 53 0B D3 07                          // .OSYS...

                Store (OSXP, OSFG) /* \OSFG */
            }

   1CAC8: 70 4F 53 58 50 4F 53 46 47                       // pOSXPOSFG

            ElseIf
   1CAD1: A1 34                                            // .4

 (LEqual (OSYS, 0x07D0))
            {

   1CAD3: A0 12 93 4F 53 59 53 0B D0 07                    // ...OSYS...

                Store (OSME, OSFG) /* \OSFG */
            }

   1CADD: 70 4F 53 4D 45 4F 53 46 47                       // pOSMEOSFG

            ElseIf
   1CAE6: A1 1F                                            // ..

 (LEqual (OSYS, 0x07CE))
            {

   1CAE8: A0 12 93 4F 53 59 53 0B CE 07                    // ...OSYS...

                Store (OS98, OSFG) /* \OSFG */
            }

   1CAF2: 70 4F 53 39 38 4F 53 46 47                       // pOS98OSFG

            Else
            {

   1CAFB: A1 0A                                            // ..

                Store (OSW8, OSFG) /* \OSFG */
            }


   1CAFD: 70 4F 53 57 38 4F 53 46 47                       // pOSW8OSFG

            Return (OSFG) /* \OSFG */
        }


   1CB06: A4 4F 53 46 47                                   // .OSFG

        Name (ONAM, "ASUSTeK")

   1CB0B: 08 4F 4E 41 4D 0D 41 53 55 53 54 65 4B 00        // .ONAM.ASUSTeK.

        Method (ADVG, 0, NotSerialized)
        {

   1CB19: 14 44 06 41 44 56 47 00                          // .D.ADVG.

            If (\_SB.PCI0.GFX0.PRST)
            {

   1CB21: A0 28 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58  // .(\/._SB_PCI0GFX
   1CB31: 30 50 52 53 54                                   // 0PRST

                Return (\_SB.PCI0.GFX0.ADVD) /* External reference */
            }


   1CB36: A4 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58 30  // .\/._SB_PCI0GFX0
   1CB46: 41 44 56 44                                      // ADVD

            If (\_SB.PCI0.PEG0.PEGP.PRST)
            {

   1CB4A: A0 30 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47  // .0\/._SB_PCI0PEG
   1CB5A: 30 50 45 47 50 50 52 53 54                       // 0PEGPPRST

                Return (\_SB.PCI0.PEG0.PEGP.ADVD) /* External reference */
            }


   1CB63: A4 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
   1CB73: 50 45 47 50 41 44 56 44                          // PEGPADVD

            Return (0x03)
        }


   1CB7B: A4 0A 03                                         // ...

        Method (GCDM, 0, NotSerialized)
        {

   1CB7E: 14 43 06 47 43 44 4D 00                          // .C.GCDM.

            If (\_SB.PCI0.GFX0.PRST)
            {

   1CB86: A0 28 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58  // .(\/._SB_PCI0GFX
   1CB96: 30 50 52 53 54                                   // 0PRST

                Return (\_SB.PCI0.GFX0.GCDS) /* External reference */
            }


   1CB9B: A4 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58 30  // .\/._SB_PCI0GFX0
   1CBAB: 47 43 44 53                                      // GCDS

            If (\_SB.PCI0.PEG0.PEGP.PRST)
            {

   1CBAF: A0 30 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47  // .0\/._SB_PCI0PEG
   1CBBF: 30 50 45 47 50 50 52 53 54                       // 0PEGPPRST

                Return (\_SB.PCI0.PEG0.PEGP.GCDS) /* External reference */
            }


   1CBC8: A4 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
   1CBD8: 50 45 47 50 47 43 44 53                          // PEGPGCDS

            Return (One)
        }


   1CBE0: A4 01                                            // ..

        Method (SWHG, 1, Serialized)
        {

   1CBE2: 14 47 06 53 57 48 47 09                          // .G.SWHG.

            If (\_SB.PCI0.GFX0.PRST)
            {
                \_SB.PCI0.GFX0.SWHD (Arg0)

   1CBEA: A0 2A 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58  // .*\/._SB_PCI0GFX
   1CBFA: 30 50 52 53 54 5C 2F 04 5F 53 42 5F 50 43 49 30  // 0PRST\/._SB_PCI0
   1CC0A: 47 46 58 30 53 57 48 44 68                       // GFX0SWHDh

                Return (One)
            }


   1CC13: A4 01                                            // ..

            If (\_SB.PCI0.PEG0.PEGP.PRST)
            {
                \_SB.PCI0.PEG0.PEGP.SWHD (Arg0)

   1CC15: A0 32 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47  // .2\/._SB_PCI0PEG
   1CC25: 30 50 45 47 50 50 52 53 54 5C 2F 05 5F 53 42 5F  // 0PEGPPRST\/._SB_
   1CC35: 50 43 49 30 50 45 47 30 50 45 47 50 53 57 48 44  // PCI0PEG0PEGPSWHD
   1CC45: 68                                               // h

                Return (One)
            }


   1CC46: A4 01                                            // ..

            Return (Zero)
        }


   1CC48: A4 00                                            // ..

        Method (NATK, 0, NotSerialized)
        {

   1CC4A: 14 43 06 4E 41 54 4B 00                          // .C.NATK.

            If (\_SB.PCI0.GFX0.PRST)
            {

   1CC52: A0 28 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58  // .(\/._SB_PCI0GFX
   1CC62: 30 50 52 53 54                                   // 0PRST

                Return (\_SB.PCI0.GFX0.NATK) /* External reference */
            }


   1CC67: A4 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58 30  // .\/._SB_PCI0GFX0
   1CC77: 4E 41 54 4B                                      // NATK

            If (\_SB.PCI0.PEG0.PEGP.PRST)
            {

   1CC7B: A0 30 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47  // .0\/._SB_PCI0PEG
   1CC8B: 30 50 45 47 50 50 52 53 54                       // 0PEGPPRST

                Return (\_SB.PCI0.PEG0.PEGP.NATK) /* External reference */
            }


   1CC94: A4 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
   1CCA4: 50 45 47 50 4E 41 54 4B                          // PEGPNATK

            Return (One)
        }
    }


   1CCAC: A4 01                                            // ..

    Scope (_SB)
    {

   1CCAE: 10 81 87 01 5F 53 42 5F                          // ...._SB_

        Name (ATKP, Zero)

   1CCB6: 08 41 54 4B 50 00                                // .ATKP.

        Name (AITM, Zero)

   1CCBC: 08 41 49 54 4D 00                                // .AITM.

        Name (PLMD, Zero)

   1CCC2: 08 50 4C 4D 44 00                                // .PLMD.

        Name (MUTX, One)

   1CCC8: 08 4D 55 54 58 01                                // .MUTX.

        Name (LEDS, Zero)

   1CCCE: 08 4C 45 44 53 00                                // .LEDS.

        Name (PWKY, Zero)

   1CCD4: 08 50 57 4B 59 00                                // .PWKY.

        Name (FNIV, Zero)

   1CCDA: 08 46 4E 49 56 00                                // .FNIV.

        Device (ATKD)
        {

   1CCE0: 5B 82 8E 83 01 41 54 4B 44                       // [....ATKD

            Name (_HID, "PNP0C14" /* Windows Management Instrumentation Device */)  // _HID: Hardware ID

   1CCE9: 08 5F 48 49 44 0D 50 4E 50 30 43 31 34 00        // ._HID.PNP0C14.

            Name (_UID, "ATK")  // _UID: Unique ID

   1CCF7: 08 5F 55 49 44 0D 41 54 4B 00                    // ._UID.ATK.

            Name (ATKQ, 
   1CD01: 08 41 54 4B 51                                   // .ATKQ

Package (0x10)
            {
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF
            })

   1CD06: 12 43 05 10 0C FF FF FF FF 0C FF FF FF FF 0C FF  // .C..............
   1CD16: FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF  // ................
   1CD26: FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF  // ................
   1CD36: FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF  // ................
   1CD46: 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C  // ................
   1CD56: FF FF FF FF                                      // ....

            Name (AQHI, Zero)

   1CD5A: 08 41 51 48 49 00                                // .AQHI.

            Name (AQTI, 0x0F)

   1CD60: 08 41 51 54 49 0A 0F                             // .AQTI..

            Name (AQNO, Zero)

   1CD67: 08 41 51 4E 4F 00                                // .AQNO.

            Method (IANQ, 1, Serialized)
            {

   1CD6D: 14 49 05 49 41 4E 51 09                          // .I.IANQ.

                If (
   1CD75: A0 2E 92                                         // ...

LGreaterEqual (AQNO, 0x10))
                {
                    Store (0x64, Local0)

   1CD78: 95 41 51 4E 4F 0A 10 70 0A 64 60                 // .AQNO..p.d`

                    While (LAnd (Local0, 
   1CD83: A2 11 90 60                                      // ...`


   1CD87: 92                                               // .

LGreaterEqual (AQNO, 0x10)))
                    {
                        Decrement (Local0)

   1CD88: 95 41 51 4E 4F 0A 10 76 60                       // .AQNO..v`

                        Sleep (0x0A)
                    }


   1CD91: 5B 22 0A 0A                                      // ["..

                    If (LAnd (LNot (Local0), 
   1CD95: A0 0E 90 92 60                                   // ....`


   1CD9A: 92                                               // .

LGreaterEqual (AQNO, 0x10)))
                    {

   1CD9B: 95 41 51 4E 4F 0A 10                             // .AQNO..

                        Return (Zero)
                    }
                }

                Increment (AQTI)
                And (AQTI, 0x0F, AQTI) /* \_SB_.ATKD.AQTI */
                Store (Arg0, 
   1CDA2: A4 00 75 41 51 54 49 7B 41 51 54 49 0A 0F 41 51  // ..uAQTI{AQTI..AQ
   1CDB2: 54 49 70 68                                      // TIph

Index (ATKQ, AQTI))
                Increment (AQNO)

   1CDB6: 88 41 54 4B 51 41 51 54 49 00 75 41 51 4E 4F     // .ATKQAQTI.uAQNO

                Return (One)
            }


   1CDC5: A4 01                                            // ..

            Method (GANQ, 0, Serialized)
            {

   1CDC7: 14 32 47 41 4E 51 08                             // .2GANQ.

                If (AQNO)
                {
                    Decrement (AQNO)
                    Store (DerefOf (
   1CDCE: A0 29 41 51 4E 4F 76 41 51 4E 4F 70 83           // .)AQNOvAQNOp.

Index (ATKQ, AQHI)), Local0)
                    Increment (AQHI)
                    And (AQHI, 0x0F, AQHI) /* \_SB_.ATKD.AQHI */

   1CDDB: 88 41 54 4B 51 41 51 48 49 00 60 75 41 51 48 49  // .ATKQAQHI.`uAQHI
   1CDEB: 7B 41 51 48 49 0A 0F 41 51 48 49                 // {AQHI..AQHI

                    Return (Local0)
                }


   1CDF6: A4 60                                            // .`

                Return (Ones)
            }


   1CDF8: A4 FF                                            // ..

            Name (_WDG, 
   1CDFA: 08 5F 57 44 47                                   // ._WDG

Buffer (0x28)
            {
                /* 0000 */  0xD0, 0x5E, 0x84, 0x97, 0x6D, 0x4E, 0xDE, 0x11,  // .^..mN..
                /* 0008 */  0x8A, 0x39, 0x08, 0x00, 0x20, 0x0C, 0x9A, 0x66,  // .9.. ..f
                /* 0010 */  0x4E, 0x42, 0x01, 0x02, 0x35, 0xBB, 0x3C, 0x0B,  // NB..5.<.
                /* 0018 */  0xC2, 0xE3, 0xED, 0x45, 0x91, 0xC2, 0x4C, 0x5A,  // ...E..LZ
                /* 0020 */  0x6D, 0x19, 0x5D, 0x1C, 0xFF, 0x00, 0x01, 0x08   // m.].....
            })

   1CDFF: 11 2B 0A 28 D0 5E 84 97 6D 4E DE 11 8A 39 08 00  // .+.(.^..mN...9..
   1CE0F: 20 0C 9A 66 4E 42 01 02 35 BB 3C 0B C2 E3 ED 45  //  ..fNB..5.<....E
   1CE1F: 91 C2 4C 5A 6D 19 5D 1C FF 00 01 08              // ..LZm.].....

            Method (WMNB, 3, Serialized)
            {

   1CE2B: 14 44 D3 57 4D 4E 42 0B                          // .D.WMNB.

                CreateDWordField (Arg2, Zero, IIA0)

   1CE33: 8A 6A 00 49 49 41 30                             // .j.IIA0

                CreateDWordField (Arg2, 0x04, IIA1)
                And (Arg1, 0xFFFFFFFF, Local0)

   1CE3A: 8A 6A 0A 04 49 49 41 31 7B 69 0C FF FF FF FF 60  // .j..IIA1{i.....`

                If (LEqual (Local0, 0x54494E49))
                {
                    INIT (IIA0)

   1CE4A: A0 12 93 60 0C 49 4E 49 54 49 4E 49 54 49 49 41  // ...`.INITINITIIA
   1CE5A: 30                                               // 0

                    Return (One)
                }


   1CE5B: A4 01                                            // ..

                If (LEqual (Local0, 0x53545342))
                {

   1CE5D: A0 0D 93 60 0C 42 53 54 53                       // ...`.BSTS

                    Return (BSTS ())
                }


   1CE66: A4 42 53 54 53                                   // .BSTS

                If (LEqual (Local0, 0x4E554653))
                {

   1CE6B: A0 0D 93 60 0C 53 46 55 4E                       // ...`.SFUN

                    Return (SFUN ())
                }


   1CE74: A4 53 46 55 4E                                   // .SFUN

                If (LEqual (Local0, 0x43455053))
                {

   1CE79: A0 11 93 60 0C 53 50 45 43                       // ...`.SPEC

                    Return (SPEC (IIA0))
                }


   1CE82: A4 53 50 45 43 49 49 41 30                       // .SPECIIA0

                If (LEqual (Local0, 0x494E424B))
                {

   1CE8B: A0 0D 93 60 0C 4B 42 4E 49                       // ...`.KBNI

                    Return (KBNI ())
                }


   1CE94: A4 4B 42 4E 49                                   // .KBNI

                If (LEqual (Local0, 0x5256534F))
                {
                    OSVR (IIA0)

   1CE99: A0 12 93 60 0C 4F 53 56 52 4F 53 56 52 49 49 41  // ...`.OSVROSVRIIA
   1CEA9: 30                                               // 0

                    Return (Zero)
                }


   1CEAA: A4 00                                            // ..

                If (LEqual (Local0, 0x53545344))
                {

   1CEAC: A0 44 52 93 60 0C 44 53 54 53                    // .DR.`.DSTS

                    If (LEqual (IIA0, 0x00060023))
                    {

   1CEB6: A0 4C 0A 93 49 49 41 30 0C 23 00 06 00           // .L..IIA0.#...

                        Name (LASV, Zero)

   1CEC3: 08 4C 41 53 56 00                                // .LASV.

                        If (LEqual (NVLK, One))
                        {

   1CEC9: A0 0C 93 4E 56 4C 4B 01                          // ...NVLK.

                            Return (LASV) /* \_SB_.ATKD.WMNB.LASV */
                        }

                        Store (Zero, Local0)
                        Store (0xFFFF, FSTA) /* \_SB_.FSTA */
                        Store (0x55534243, FADR) /* \_SB_.FADR */
                        FSMI (0x05)

   1CED1: A4 4C 41 53 56 70 00 60 70 0B FF FF 46 53 54 41  // .LASVp.`p...FSTA
   1CEE1: 70 0C 43 42 53 55 46 41 44 52 46 53 4D 49 0A 05  // p.CBSUFADRFSMI..

                        If (LEqual (FSTA, 0x03))
                        {

   1CEF1: A0 23 93 46 53 54 41 0A 03                       // .#.FSTA..

                            Store (And (^^PCI0.LPCB.EC0.STA8 (Zero), 0x03), Local0)
                        }


   1CEFA: 70 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p{^^/.PCI0LPCBEC
   1CF0A: 30 5F 53 54 41 38 00 0A 03 00 60                 // 0_STA8....`

                        If (Ones)
                        {

   1CF15: A0 07 FF                                         // ...

                            Or (0x04, Local0, Local0)
                        }


   1CF18: 7D 0A 04 60 60                                   // }..``

                        If (LEqual (And (^^PCI0.LPCB.EC0.STA8 (Zero), 0x80), 0x80))
                        {

   1CF1D: A0 3D 93 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // .=.{^^/.PCI0LPCB
   1CF2D: 45 43 30 5F 53 54 41 38 00 0A 80 00 0A 80        // EC0_STA8......

                            If (LEqual (^^PCI0.LPCB.EC0.STA8 (0x02), 0x03))
                            {

   1CF3B: A0 1F 93 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // ...^^/.PCI0LPCBE
   1CF4B: 43 30 5F 53 54 41 38 0A 02 0A 03                 // C0_STA8....

                                Or (0x08, Local0, Local0)
                            }
                        }

                        Store (Local0, LASV) /* \_SB_.ATKD.WMNB.LASV */

   1CF56: 7D 0A 08 60 60 70 60 4C 41 53 56                 // }..``p`LASV

                        Return (Local0)
                    }


   1CF61: A4 60                                            // .`

                    If (LEqual (IIA0, 0x00060024))
                    {

   1CF63: A0 1A 93 49 49 41 30 0C 24 00 06 00              // ...IIA0.$...

                        Return (
   1CF6F: A4                                               // .

Package (0x03)
                        {
                            0xA12F8086, 
                            One, 
                            0xFFFFFFFF
                        })
                    }


   1CF70: 12 0D 03 0C 86 80 2F A1 01 0C FF FF FF FF        // ....../.......

                    If (LEqual (IIA0, 0x00060026))
                    {
                        Store (^^PCI0.LPCB.EC0.STA8 (Zero), Local0)
                        And (Local0, 0x04, Local0)

   1CF7E: A0 41 04 93 49 49 41 30 0C 26 00 06 00 70 5E 5E  // .A..IIA0.&...p^^
   1CF8E: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54  // /.PCI0LPCBEC0_ST
   1CF9E: 41 38 00 60 7B 60 0A 04 60                       // A8.`{`..`

                        If (LEqual (Local0, 0x04))
                        {

   1CFA7: A0 0B 93 60 0A 04                                // ...`..

                            Return (0x00010001)
                        }

   1CFAD: A4 0C 01 00 01 00                                // ......

                        ElseIf
   1CFB3: A1 0C                                            // ..

 (LEqual (Local0, Zero))
                        {

   1CFB5: A0 0A 93 60 00                                   // ...`.

                            Return (0x00010000)
                        }
                    }


   1CFBA: A4 0C 00 00 01 00                                // ......

                    If (LEqual (IIA0, 0x00010002))
                    {

   1CFC0: A0 11 93 49 49 41 30 0C 02 00 01 00              // ...IIA0.....

                        Return (0x00050002)
                    }


   1CFCC: A4 0C 02 00 05 00                                // ......

                    If (LEqual (IIA0, 0x00020011))
                    {

   1CFD2: A0 18 93 49 49 41 30 0C 11 00 02 00              // ...IIA0.....

                        Return (
   1CFDE: A4                                               // .

Or (GALE (One), 0x00050000))
                    }


   1CFDF: 7D 47 41 4C 45 01 0C 00 00 05 00 00              // }GALE.......

                    If (LEqual (IIA0, 0x00020012))
                    {

   1CFEB: A0 19 93 49 49 41 30 0C 12 00 02 00              // ...IIA0.....

                        Return (
   1CFF7: A4                                               // .

Or (GALE (0x02), 0x00050000))
                    }


   1CFF8: 7D 47 41 4C 45 0A 02 0C 00 00 05 00 00           // }GALE........

                    If (LEqual (IIA0, 0x00020013))
                    {

   1D005: A0 19 93 49 49 41 30 0C 13 00 02 00              // ...IIA0.....

                        Return (
   1D011: A4                                               // .

Or (GALE (0x04), 0x00050000))
                    }


   1D012: 7D 47 41 4C 45 0A 04 0C 00 00 05 00 00           // }GALE........

                    If (LEqual (IIA0, 0x00040015))
                    {

   1D01F: A0 19 93 49 49 41 30 0C 15 00 04 00              // ...IIA0.....

                        Return (
   1D02B: A4                                               // .

Or (GALE (0x08), 0x00050000))
                    }


   1D02C: 7D 47 41 4C 45 0A 08 0C 00 00 05 00 00           // }GALE........

                    If (LEqual (IIA0, 0x00020014))
                    {

   1D039: A0 19 93 49 49 41 30 0C 14 00 02 00              // ...IIA0.....

                        Return (
   1D045: A4                                               // .

Or (GALE (0x10), 0x00050000))
                    }


   1D046: 7D 47 41 4C 45 0A 10 0C 00 00 05 00 00           // }GALE........

                    If (LEqual (IIA0, 0x00020015))
                    {

   1D053: A0 19 93 49 49 41 30 0C 15 00 02 00              // ...IIA0.....

                        Return (
   1D05F: A4                                               // .

Or (GALE (0x20), 0x00050000))
                    }


   1D060: 7D 47 41 4C 45 0A 20 0C 00 00 05 00 00           // }GALE. ......

                    If (LEqual (IIA0, 0x00020016))
                    {

   1D06D: A0 19 93 49 49 41 30 0C 16 00 02 00              // ...IIA0.....

                        Return (
   1D079: A4                                               // .

Or (GALE (0x40), 0x00050000))
                    }


   1D07A: 7D 47 41 4C 45 0A 40 0C 00 00 05 00 00           // }GALE.@......

                    If (LEqual (IIA0, 0x00110011))
                    {

   1D087: A0 15 93 49 49 41 30 0C 11 00 11 00              // ...IIA0.....

                        Return (
   1D093: A4                                               // .

And (TMPR (), 0xFFFF))
                    }


   1D094: 7B 54 4D 50 52 0B FF FF 00                       // {TMPR....

                    If (LEqual (IIA0, 0x00110012))
                    {
                        Store (TMPR (), Local0)
                        Store (Local0, Local1)
                        ShiftRight (And (Local0, 0xF0000000), 0x1C, Local0)
                        ShiftRight (And (Local1, 0x0F000000), 0x18, Local1)
                        ShiftLeft (Local1, 0x08, Local1)

   1D09D: A0 36 93 49 49 41 30 0C 12 00 11 00 70 54 4D 50  // .6.IIA0.....pTMP
   1D0AD: 52 60 70 60 61 7A 7B 60 0C 00 00 00 F0 00 0A 1C  // R`p`az{`........
   1D0BD: 60 7A 7B 61 0C 00 00 00 0F 00 0A 18 61 79 61 0A  // `z{a........aya.
   1D0CD: 08 61                                            // .a

                        Return (
   1D0CF: A4                                               // .

Add (Local0, Local1))
                    }


   1D0D0: 72 60 61 00                                      // r`a.

                    If (LEqual (IIA0, 0x00110013))
                    {
                        Store (\_TZ.RFAN (Zero), Local0)

   1D0D4: A0 2F 93 49 49 41 30 0C 13 00 11 00 70 5C 2E 5F  // ./.IIA0.....p\._
   1D0E4: 54 5A 5F 52 46 41 4E 00 60                       // TZ_RFAN.`

                        If (LEqual (Local0, 0xFF))
                        {

   1D0ED: A0 0D 93 60 0A FF                                // ...`..

                            Add (Local0, 0x00080000, Local0)
                        }


   1D0F3: 72 60 0C 00 00 08 00 60                          // r`.....`

                        Return (
   1D0FB: A4                                               // .

Add (0x00010000, Local0))
                    }


   1D0FC: 72 0C 00 00 01 00 60 00                          // r.....`.

                    If (LEqual (IIA0, 0x00110014))
                    {
                        Store (^^PCI0.LPCB.EC0.RRAM (0x0520), Local0)

   1D104: A0 42 05 93 49 49 41 30 0C 14 00 11 00 70 5E 5E  // .B..IIA0.....p^^
   1D114: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 52 52  // /.PCI0LPCBEC0_RR
   1D124: 41 4D 0B 20 05 60                                // AM. .`

                        If (And (Local0, 0x02))
                        {
                            Store (\_TZ.RFAN (One), Local0)

   1D12A: A0 2A 7B 60 0A 02 00 70 5C 2E 5F 54 5A 5F 52 46  // .*{`...p\._TZ_RF
   1D13A: 41 4E 01 60                                      // AN.`

                            If (LEqual (Local0, 0xFF))
                            {

   1D13E: A0 0D 93 60 0A FF                                // ...`..

                                Add (Local0, 0x00080000, Local0)
                            }


   1D144: 72 60 0C 00 00 08 00 60                          // r`.....`

                            Return (
   1D14C: A4                                               // .

Add (0x00010000, Local0))
                        }


   1D14D: 72 0C 00 00 01 00 60 00                          // r.....`.

                        Return (Zero)
                    }


   1D155: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00050012))
                    {

   1D157: A0 3C 93 49 49 41 30 0C 12 00 05 00              // .<.IIA0.....

                        If (
   1D163: A0 1A 92                                         // ...

LGreaterEqual (MSOS (), OSW8))
                        {
                            Subtract (0x64, Zero, Local0)
                            ShiftLeft (Local0, 0x08, Local0)

   1D166: 95 4D 53 4F 53 4F 53 57 38 74 0A 64 00 60 79 60  // .MSOSOSW8t.d.`y`
   1D176: 0A 08 60                                         // ..`

                            Add (Local0, 0x64, Local1)
                        }

   1D179: 72 60 0A 64 61                                   // r`.da

                        Else
                        {
                            Store (0x0A, Local0)
                            ShiftLeft (Local0, 0x08, Local0)

   1D17E: A1 13 70 0A 0A 60 79 60 0A 08 60                 // ..p..`y`..`

                            Store (Add (GPLV (), Local0), Local1)
                        }


   1D189: 70 72 47 50 4C 56 60 00 61                       // prGPLV`.a

                        Return (Local1)
                    }


   1D192: A4 61                                            // .a

                    If (LEqual (IIA0, 0x00010011))
                    {

   1D194: A0 1D 93 49 49 41 30 0C 11 00 01 00              // ...IIA0.....

                        If (WLDP)
                        {

   1D1A0: A0 11 57 4C 44 50                                // ..WLDP

                            Return (
   1D1A6: A4                                               // .

Add (WRST, 0x00030000))
                        }
                    }


   1D1A7: 72 57 52 53 54 0C 00 00 03 00 00                 // rWRST......

                    If (LEqual (IIA0, 0x00010013))
                    {

   1D1B2: A0 1D 93 49 49 41 30 0C 13 00 01 00              // ...IIA0.....

                        If (BTDP)
                        {

   1D1BE: A0 11 42 54 44 50                                // ..BTDP

                            Return (
   1D1C4: A4                                               // .

Add (BRST, 0x00050000))
                        }
                    }


   1D1C5: 72 42 52 53 54 0C 00 00 05 00 00                 // rBRST......

                    If (LEqual (IIA0, 0x00010021))
                    {

   1D1D0: A0 1D 93 49 49 41 30 0C 21 00 01 00              // ...IIA0.!...

                        If (UWDP)
                        {

   1D1DC: A0 11 55 57 44 50                                // ..UWDP

                            Return (
   1D1E2: A4                                               // .

Add (UWST, 0x00050000))
                        }
                    }


   1D1E3: 72 55 57 53 54 0C 00 00 05 00 00                 // rUWST......

                    If (LEqual (IIA0, 0x00010017))
                    {

   1D1EE: A0 1D 93 49 49 41 30 0C 17 00 01 00              // ...IIA0.....

                        If (WMDP)
                        {

   1D1FA: A0 11 57 4D 44 50                                // ..WMDP

                            Return (
   1D200: A4                                               // .

Add (WMST, 0x00050000))
                        }
                    }


   1D201: 72 57 4D 53 54 0C 00 00 05 00 00                 // rWMST......

                    If (LEqual (IIA0, 0x00010015))
                    {

   1D20C: A0 1D 93 49 49 41 30 0C 15 00 01 00              // ...IIA0.....

                        If (GPDP)
                        {

   1D218: A0 11 47 50 44 50                                // ..GPDP

                            Return (
   1D21E: A4                                               // .

Add (GPST, 0x00050000))
                        }
                    }


   1D21F: 72 47 50 53 54 0C 00 00 05 00 00                 // rGPST......

                    If (LEqual (IIA0, 0x00010019))
                    {

   1D22A: A0 1D 93 49 49 41 30 0C 19 00 01 00              // ...IIA0.....

                        If (TGDP)
                        {

   1D236: A0 11 54 47 44 50                                // ..TGDP

                            Return (
   1D23C: A4                                               // .

Add (TGST, 0x00050000))
                        }
                    }


   1D23D: 72 54 47 53 54 0C 00 00 05 00 00                 // rTGST......

                    If (LEqual (IIA0, 0x00010025))
                    {

   1D248: A0 0D 93 49 49 41 30 0C 25 00 01 00              // ...IIA0.%...

                        Return (One)
                    }


   1D254: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00010001))
                    {

   1D256: A0 11 93 49 49 41 30 0C 01 00 01 00              // ...IIA0.....

                        Return (0x00040000)
                    }


   1D262: A4 0C 00 00 04 00                                // ......

                    If (LEqual (IIA0, 0x00120012))
                    {

   1D268: A0 11 93 49 49 41 30 0C 12 00 12 00              // ...IIA0.....

                        Return (PSTC (Zero))
                    }


   1D274: A4 50 53 54 43 00                                // .PSTC.

                    If (LEqual (IIA0, 0x00120015))
                    {
                        Subtract (SLMT, One, Local0)

   1D27A: A0 1B 93 49 49 41 30 0C 15 00 12 00 74 53 4C 4D  // ...IIA0.....tSLM
   1D28A: 54 01 60                                         // T.`

                        Return (
   1D28D: A4                                               // .

Or (Local0, 0x00010000))
                    }


   1D28E: 7D 60 0C 00 00 01 00 00                          // }`......

                    If (LEqual (IIA0, 0x00050021))
                    {

   1D296: A0 36 93 49 49 41 30 0C 21 00 05 00              // .6.IIA0.!...

                        If (GLKB (One))
                        {
                            Store (GLKB (0x03), Local0)
                            ShiftLeft (Local0, 0x08, Local0)
                            Add (GLKB (0x02), Local0, Local0)
                            Or (Local0, 0x00050000, Local0)

   1D2A2: A0 26 47 4C 4B 42 01 70 47 4C 4B 42 0A 03 60 79  // .&GLKB.pGLKB..`y
   1D2B2: 60 0A 08 60 72 47 4C 4B 42 0A 02 60 60 7D 60 0C  // `..`rGLKB..``}`.
   1D2C2: 00 00 05 00 60                                   // ....`

                            Return (Local0)
                        }


   1D2C7: A4 60                                            // .`

                        Return (0x8000)
                    }


   1D2C9: A4 0B 00 80                                      // ....

                    If (LEqual (IIA0, 0x00120031))
                    {

   1D2CD: A0 1F 93 49 49 41 30 0C 31 00 12 00              // ...IIA0.1...

                        If (DP3S)
                        {

   1D2D9: A0 0B 44 50 33 53                                // ..DP3S

                            Return (0x00010001)
                        }

   1D2DF: A4 0C 01 00 01 00                                // ......

                        Else
                        {

   1D2E5: A1 07                                            // ..

                            Return (0x00010000)
                        }
                    }


   1D2E7: A4 0C 00 00 01 00                                // ......

                    If (LEqual (IIA0, 0x00120032))
                    {

   1D2ED: A0 0D 93 49 49 41 30 0C 32 00 12 00              // ...IIA0.2...

                        Return (Zero)
                    }


   1D2F9: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00080041))
                    {

   1D2FB: A0 0D 93 49 49 41 30 0C 41 00 08 00              // ...IIA0.A...

                        Return (Zero)
                    }


   1D307: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00080042))
                    {

   1D309: A0 0D 93 49 49 41 30 0C 42 00 08 00              // ...IIA0.B...

                        Return (Zero)
                    }


   1D315: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00080043))
                    {

   1D317: A0 0D 93 49 49 41 30 0C 43 00 08 00              // ...IIA0.C...

                        Return (Zero)
                    }


   1D323: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00080044))
                    {

   1D325: A0 0D 93 49 49 41 30 0C 44 00 08 00              // ...IIA0.D...

                        Return (Zero)
                    }


   1D331: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00120061))
                    {
                        Store (^^PCI0.LPCB.EC0.RRAM (0x061C), Local1)

   1D333: A0 4D 04 93 49 49 41 30 0C 61 00 12 00 70 5E 5E  // .M..IIA0.a...p^^
   1D343: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 52 52  // /.PCI0LPCBEC0_RR
   1D353: 41 4D 0B 1C 06 61                                // AM...a

                        If (And (Local1, 0x10))
                        {

   1D359: A0 0C 7B 61 0A 10 00                             // ..{a...

                            Return (0x00010001)
                        }


   1D360: A4 0C 01 00 01 00                                // ......

                        If (And (Local1, 0x08))
                        {

   1D366: A0 0C 7B 61 0A 08 00                             // ..{a...

                            Return (0x00010002)
                        }


   1D36D: A4 0C 02 00 01 00                                // ......

                        If (LNot (
   1D373: A0 0D 92                                         // ...

And (Local1, 0x18)))
                        {

   1D376: 7B 61 0A 18 00                                   // {a...

                            Return (0x00010000)
                        }
                    }


   1D37B: A4 0C 00 00 01 00                                // ......

                    If (LEqual (IIA0, 0x00030022))
                    {
                        Store (Zero, Local0)

   1D381: A0 10 93 49 49 41 30 0C 22 00 03 00 70 00 60     // ...IIA0."...p.`

                        Return (Local0)
                    }


   1D390: A4 60                                            // .`

                    If (LEqual (IIA0, 0x00100054))
                    {
                        Store (Zero, Local0)

   1D392: A0 10 93 49 49 41 30 0C 54 00 10 00 70 00 60     // ...IIA0.T...p.`

                        Return (Local0)
                    }


   1D3A1: A4 60                                            // .`

                    If (LEqual (IIA0, 0x00060091))
                    {

   1D3A3: A0 0D 93 49 49 41 30 0C 91 00 06 00              // ...IIA0.....

                        Return (Zero)
                    }


   1D3AF: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00120065))
                    {

   1D3B1: A0 11 93 49 49 41 30 0C 65 00 12 00              // ...IIA0.e...

                        Return (0x00010001)
                    }


   1D3BD: A4 0C 01 00 01 00                                // ......

                    If (LEqual (IIA0, 0x00060061))
                    {

   1D3C3: A0 0D 93 49 49 41 30 0C 61 00 06 00              // ...IIA0.a...

                        Return (Zero)
                    }
                }


   1D3CF: A4 00                                            // ..

                If (LEqual (Local0, 0x53564544))
                {

   1D3D1: A0 4B 5A 93 60 0C 44 45 56 53                    // .KZ.`.DEVS

                    If (LEqual (IIA0, 0x00060023))
                    {

   1D3DB: A0 46 13 93 49 49 41 30 0C 23 00 06 00           // .F..IIA0.#...

                        If (LEqual (NVLK, One))
                        {

   1D3E8: A0 09 93 4E 56 4C 4B 01                          // ...NVLK.

                            Return (Zero)
                        }

                        Store (Zero, Local0)
                        Store (0xFFFF, FSTA) /* \_SB_.FSTA */
                        Store (0x55534243, FADR) /* \_SB_.FADR */
                        FSMI (0x05)
                        ShiftRight (IIA1, 0x09, Local0)

   1D3F0: A4 00 70 00 60 70 0B FF FF 46 53 54 41 70 0C 43  // ..p.`p...FSTAp.C
   1D400: 42 53 55 46 41 44 52 46 53 4D 49 0A 05 7A 49 49  // BSUFADRFSMI..zII
   1D410: 41 31 0A 09 60                                   // A1..`

                        If (LEqual (And (Local0, One), One))
                        {
                            Store (One, VBOF) /* \_SB_.VBOF */
                            ShiftRight (IIA1, 0x18, Local0)
                            Multiply (Local0, 0x0100, Local0)

   1D415: A0 25 93 7B 60 01 00 01 70 01 56 42 4F 46 7A 49  // .%.{`...p.VBOFzI
   1D425: 49 41 31 0A 18 60 77 60 0B 00 01 60              // IA1..`w`...`

                            Or (Local0, VBOF, VBOF) /* \_SB_.VBOF */
                        }

   1D431: 7D 60 56 42 4F 46 56 42 4F 46                    // }`VBOFVBOF

                        Else
                        {

   1D43B: A1 07                                            // ..

                            Store (Zero, VBOF) /* \_SB_.VBOF */
                        }

                        And (IIA1, 0xFF, Local0)
                        ^^PCI0.LPCB.EC0.STA9 (One, Local0)
                        ShiftRight (IIA1, 0x08, Local0)
                        Store (^^PCI0.LPCB.EC0.STA8 (Zero), Local1)

   1D43D: 70 00 56 42 4F 46 7B 49 49 41 31 0A FF 60 5E 5E  // p.VBOF{IIA1..`^^
   1D44D: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54  // /.PCI0LPCBEC0_ST
   1D45D: 41 39 01 60 7A 49 49 41 31 0A 08 60 70 5E 5E 2F  // A9.`zIIA1..`p^^/
   1D46D: 04 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54 41  // .PCI0LPCBEC0_STA
   1D47D: 38 00 61                                         // 8.a

                        If (LEqual (And (Local0, One), One))
                        {
                            Or (Local1, 0x02, Local1)
                            And (Local1, 0x0F, Local2)
                            Store (Local2, USBC) /* \_SB_.USBC */
                            ^^PCI0.LPCB.EC0.STA9 (Zero, Local1)
                        }

   1D480: A0 2D 93 7B 60 01 00 01 7D 61 0A 02 61 7B 61 0A  // .-.{`...}a..a{a.
   1D490: 0F 62 70 62 55 53 42 43 5E 5E 2F 04 50 43 49 30  // .bpbUSBC^^/.PCI0
   1D4A0: 4C 50 43 42 45 43 30 5F 53 54 41 39 00 61        // LPCBEC0_STA9.a

                        Else
                        {
                            And (Local1, 0xFD, Local1)
                            And (Local1, 0x0F, Local2)
                            Store (Local2, USBC) /* \_SB_.USBC */
                            ^^PCI0.LPCB.EC0.STA9 (Zero, Local1)
                        }

                        Store (0xFFFF, FSTA) /* \_SB_.FSTA */
                        Store (0x55534243, FADR) /* \_SB_.FADR */
                        FSMI (0x04)

   1D4AE: A1 27 7B 61 0A FD 61 7B 61 0A 0F 62 70 62 55 53  // .'{a..a{a..bpbUS
   1D4BE: 42 43 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // BC^^/.PCI0LPCBEC
   1D4CE: 30 5F 53 54 41 39 00 61 70 0B FF FF 46 53 54 41  // 0_STA9.ap...FSTA
   1D4DE: 70 0C 43 42 53 55 46 41 44 52 46 53 4D 49 0A 04  // p.CBSUFADRFSMI..

                        If (LEqual (FSTA, 0x03))
                        {
                            Store (0xFFFF, FSTA) /* \_SB_.FSTA */
                            FSMI (0x06)

   1D4EE: A0 21 93 46 53 54 41 0A 03 70 0B FF FF 46 53 54  // .!.FSTA..p...FST
   1D4FE: 41 46 53 4D 49 0A 06                             // AFSMI..

                            If (
   1D505: A0 0A 92                                         // ...

LNotEqual (FSTA, Zero))
                            {

   1D508: 93 46 53 54 41 00                                // .FSTA.

                                Return (Zero)
                            }
                        }


   1D50E: A4 00                                            // ..

                        Return (One)
                    }


   1D510: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00060026))
                    {
                        Store (Zero, Local0)
                        Store (0xFFFF, FSTA) /* \_SB_.FSTA */
                        Store (0x55534243, FADR) /* \_SB_.FADR */
                        FSMI (0x05)
                        Store (^^PCI0.LPCB.EC0.STA8 (Zero), Local0)

   1D512: A0 46 0D 93 49 49 41 30 0C 26 00 06 00 70 00 60  // .F..IIA0.&...p.`
   1D522: 70 0B FF FF 46 53 54 41 70 0C 43 42 53 55 46 41  // p...FSTAp.CBSUFA
   1D532: 44 52 46 53 4D 49 0A 05 70 5E 5E 2F 04 50 43 49  // DRFSMI..p^^/.PCI
   1D542: 30 4C 50 43 42 45 43 30 5F 53 54 41 38 00 60     // 0LPCBEC0_STA8.`

                        If (LEqual (IIA1, One))
                        {
                            Or (0x04, USBC, Local2)
                            Store (Local2, USBC) /* \_SB_.USBC */
                            Or (Local0, 0x04, Local0)
                            ^^PCI0.LPCB.EC0.STA9 (Zero, Local0)
                        }

   1D551: A0 30 93 49 49 41 31 01 7D 0A 04 55 53 42 43 62  // .0.IIA1.}..USBCb
   1D561: 70 62 55 53 42 43 7D 60 0A 04 60 5E 5E 2F 04 50  // pbUSBC}`..`^^/.P
   1D571: 43 49 30 4C 50 43 42 45 43 30 5F 53 54 41 39 00  // CI0LPCBEC0_STA9.
   1D581: 60                                               // `

                        Else
                        {
                            And (0xFB, USBC, Local2)
                            Store (Local2, USBC) /* \_SB_.USBC */
                            And (Local0, 0xFB, Local0)
                            ^^PCI0.LPCB.EC0.STA9 (Zero, Local0)
                        }

                        Store (0xFFFF, FSTA) /* \_SB_.FSTA */
                        Store (0x55534243, FADR) /* \_SB_.FADR */
                        FSMI (0x04)

   1D582: A1 2A 7B 0A FB 55 53 42 43 62 70 62 55 53 42 43  // .*{..USBCbpbUSBC
   1D592: 7B 60 0A FB 60 5E 5E 2F 04 50 43 49 30 4C 50 43  // {`..`^^/.PCI0LPC
   1D5A2: 42 45 43 30 5F 53 54 41 39 00 60 70 0B FF FF 46  // BEC0_STA9.`p...F
   1D5B2: 53 54 41 70 0C 43 42 53 55 46 41 44 52 46 53 4D  // STAp.CBSUFADRFSM
   1D5C2: 49 0A 04                                         // I..

                        If (LEqual (FSTA, 0x03))
                        {
                            Store (0xFFFF, FSTA) /* \_SB_.FSTA */
                            FSMI (0x06)

   1D5C5: A0 21 93 46 53 54 41 0A 03 70 0B FF FF 46 53 54  // .!.FSTA..p...FST
   1D5D5: 41 46 53 4D 49 0A 06                             // AFSMI..

                            If (
   1D5DC: A0 0A 92                                         // ...

LNotEqual (FSTA, Zero))
                            {

   1D5DF: 93 46 53 54 41 00                                // .FSTA.

                                Return (Zero)
                            }
                        }


   1D5E5: A4 00                                            // ..

                        Return (One)
                    }


   1D5E7: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00020011))
                    {

   1D5E9: A0 18 93 49 49 41 30 0C 11 00 02 00              // ...IIA0.....

                        Return (SALE (
   1D5F5: A4 53 41 4C 45                                   // .SALE

Add (IIA1, 0x02)))
                    }


   1D5FA: 72 49 49 41 31 0A 02 00                          // rIIA1...

                    If (LEqual (IIA0, 0x00020012))
                    {

   1D602: A0 18 93 49 49 41 30 0C 12 00 02 00              // ...IIA0.....

                        Return (SALE (
   1D60E: A4 53 41 4C 45                                   // .SALE

Add (IIA1, 0x04)))
                    }


   1D613: 72 49 49 41 31 0A 04 00                          // rIIA1...

                    If (LEqual (IIA0, 0x00020013))
                    {

   1D61B: A0 18 93 49 49 41 30 0C 13 00 02 00              // ...IIA0.....

                        Return (SALE (
   1D627: A4 53 41 4C 45                                   // .SALE

Add (IIA1, 0x08)))
                    }


   1D62C: 72 49 49 41 31 0A 08 00                          // rIIA1...

                    If (LEqual (IIA0, 0x00040015))
                    {

   1D634: A0 18 93 49 49 41 30 0C 15 00 04 00              // ...IIA0.....

                        Return (SALE (
   1D640: A4 53 41 4C 45                                   // .SALE

Add (IIA1, 0x10)))
                    }


   1D645: 72 49 49 41 31 0A 10 00                          // rIIA1...

                    If (LEqual (IIA0, 0x00020014))
                    {

   1D64D: A0 18 93 49 49 41 30 0C 14 00 02 00              // ...IIA0.....

                        Return (SALE (
   1D659: A4 53 41 4C 45                                   // .SALE

Add (IIA1, 0x20)))
                    }


   1D65E: 72 49 49 41 31 0A 20 00                          // rIIA1. .

                    If (LEqual (IIA0, 0x00020015))
                    {

   1D666: A0 18 93 49 49 41 30 0C 15 00 02 00              // ...IIA0.....

                        Return (SALE (
   1D672: A4 53 41 4C 45                                   // .SALE

Add (IIA1, 0x40)))
                    }


   1D677: 72 49 49 41 31 0A 40 00                          // rIIA1.@.

                    If (LEqual (IIA0, 0x00020016))
                    {

   1D67F: A0 18 93 49 49 41 30 0C 16 00 02 00              // ...IIA0.....

                        Return (SALE (
   1D68B: A4 53 41 4C 45                                   // .SALE

Add (IIA1, 0x80)))
                    }


   1D690: 72 49 49 41 31 0A 80 00                          // rIIA1...

                    If (LEqual (IIA0, 0x00050011))
                    {

   1D698: A0 44 04 93 49 49 41 30 0C 11 00 05 00           // .D..IIA0.....

                        If (LEqual (IIA1, 0x02))
                        {
                            ^^PCI0.LPCB.EC0.SPIN (0x72, One)

   1D6A5: A0 35 93 49 49 41 31 0A 02 5E 5E 2F 04 50 43 49  // .5.IIA1..^^/.PCI
   1D6B5: 30 4C 50 43 42 45 43 30 5F 53 50 49 4E 0A 72 01  // 0LPCBEC0_SPIN.r.

                            Store (One, ^^PCI0.LPCB.EC0.BLCT) /* \_SB_.PCI0.LPCB.EC0_.BLCT */
                        }


   1D6C5: 70 01 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
   1D6D5: 30 5F 42 4C 43 54                                // 0_BLCT

                        Return (One)
                    }


   1D6DB: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00050012))
                    {
                        SPLV (IIA1)

   1D6DD: A0 15 93 49 49 41 30 0C 12 00 05 00 53 50 4C 56  // ...IIA0.....SPLV
   1D6ED: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D6F1: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00010002))
                    {
                        OWGD (IIA1)

   1D6F3: A0 15 93 49 49 41 30 0C 02 00 01 00 4F 57 47 44  // ...IIA0.....OWGD
   1D703: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D707: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00010012))
                    {
                        WLED (IIA1)

   1D709: A0 15 93 49 49 41 30 0C 12 00 01 00 57 4C 45 44  // ...IIA0.....WLED
   1D719: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D71D: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00010013))
                    {
                        BLED (IIA1)

   1D71F: A0 15 93 49 49 41 30 0C 13 00 01 00 42 4C 45 44  // ...IIA0.....BLED
   1D72F: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D733: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00010003))
                    {

   1D735: A0 14 93 49 49 41 30 0C 03 00 01 00              // ...IIA0.....

                        Return (CWAP (IIA1))
                    }


   1D741: A4 43 57 41 50 49 49 41 31                       // .CWAPIIA1

                    If (LEqual (IIA0, 0x00010015))
                    {
                        GPSC (IIA1)

   1D74A: A0 15 93 49 49 41 30 0C 15 00 01 00 47 50 53 43  // ...IIA0.....GPSC
   1D75A: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D75E: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00010019))
                    {
                        GSMC (IIA1)

   1D760: A0 15 93 49 49 41 30 0C 19 00 01 00 47 53 4D 43  // ...IIA0.....GSMC
   1D770: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D774: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00010025))
                    {
                        LTEC (IIA1)

   1D776: A0 15 93 49 49 41 30 0C 25 00 01 00 4C 54 45 43  // ...IIA0.%...LTEC
   1D786: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D78A: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00010017))
                    {
                        WMXC (IIA1)

   1D78C: A0 15 93 49 49 41 30 0C 17 00 01 00 57 4D 58 43  // ...IIA0.....WMXC
   1D79C: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D7A0: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00010021))
                    {
                        UWBC (IIA1)

   1D7A2: A0 15 93 49 49 41 30 0C 21 00 01 00 55 57 42 43  // ...IIA0.!...UWBC
   1D7B2: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D7B6: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00120012))
                    {

   1D7B8: A0 17 93 49 49 41 30 0C 12 00 12 00              // ...IIA0.....

                        Return (PSTC (
   1D7C4: A4 50 53 54 43                                   // .PSTC

Add (IIA1, One)))
                    }


   1D7C9: 72 49 49 41 31 01 00                             // rIIA1..

                    If (LEqual (IIA0, 0x00050021))
                    {
                        SLKB (IIA1)

   1D7D0: A0 15 93 49 49 41 30 0C 21 00 05 00 53 4C 4B 42  // ...IIA0.!...SLKB
   1D7E0: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D7E4: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00120031))
                    {
                        DESP (IIA1)

   1D7E6: A0 15 93 49 49 41 30 0C 31 00 12 00 44 45 53 50  // ...IIA0.1...DESP
   1D7F6: 49 49 41 31                                      // IIA1

                        Return (One)
                    }


   1D7FA: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00100022))
                    {

   1D7FC: A0 44 05 93 49 49 41 30 0C 22 00 10 00           // .D..IIA0."...

                        If (And (IIA1, 0x02))
                        {
                            ^^PCI0.LPCB.EC0.STB1 (0x04)
                            ^^PCI0.LPCB.EC0.STB1 (0x05)
                            Store (One, FNIV) /* \_SB_.FNIV */

   1D809: A0 3D 7B 49 49 41 31 0A 02 00 5E 5E 2F 04 50 43  // .={IIA1...^^/.PC
   1D819: 49 30 4C 50 43 42 45 43 30 5F 53 54 42 31 0A 04  // I0LPCBEC0_STB1..
   1D829: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F  // ^^/.PCI0LPCBEC0_
   1D839: 53 54 42 31 0A 05 70 01 46 4E 49 56              // STB1..p.FNIV

                            Return (One)
                        }

   1D845: A4 01                                            // ..

                        Else
                        {
                            KINI ()

   1D847: A1 07 4B 49 4E 49                                // ..KINI

                            Return (One)
                        }


   1D84D: A4 01                                            // ..

                        Return (Zero)
                    }


   1D84F: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00120053))
                    {

   1D851: A0 26 93 49 49 41 30 0C 53 00 12 00              // .&.IIA0.S...

                        If (And (IIA1, One))
                        {
                            BATF (One)

   1D85D: A0 0F 7B 49 49 41 31 01 00 42 41 54 46 01        // ..{IIA1..BATF.

                            Return (One)
                        }

   1D86B: A4 01                                            // ..

                        Else
                        {
                            BATF (Zero)

   1D86D: A1 08 42 41 54 46 00                             // ..BATF.

                            Return (One)
                        }


   1D874: A4 01                                            // ..

                        Return (Zero)
                    }


   1D876: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00100054))
                    {

   1D878: A0 0D 93 49 49 41 30 0C 54 00 10 00              // ...IIA0.T...

                        Return (Zero)
                    }


   1D884: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00110013))
                    {
                        Store (^^PCI0.LPCB.EC0.RRAM (0x0521), Local0)

   1D886: A0 42 06 93 49 49 41 30 0C 13 00 11 00 70 5E 5E  // .B..IIA0.....p^^
   1D896: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 52 52  // /.PCI0LPCBEC0_RR
   1D8A6: 41 4D 0B 21 05 60                                // AM.!.`

                        If (LEqual (IIA1, Zero))
                        {

   1D8AC: A0 13 93 49 49 41 31 00                          // ...IIA1.

                            And (Local0, 0xFFFFFFFFFFFFFFBF, Local1)
                        }

   1D8B4: 7B 60 0E BF FF FF FF FF FF FF FF 61              // {`.........a

                        ElseIf
   1D8C0: A1 0E                                            // ..

 (LEqual (IIA1, One))
                        {

   1D8C2: A0 0C 93 49 49 41 31 01                          // ...IIA1.

                            Or (Local0, 0x40, Local1)
                        }

                        ^^PCI0.LPCB.EC0.WRAM (0x0521, Local1)

   1D8CA: 7D 60 0A 40 61 5E 5E 2F 04 50 43 49 30 4C 50 43  // }`.@a^^/.PCI0LPC
   1D8DA: 42 45 43 30 5F 57 52 41 4D 0B 21 05 61           // BEC0_WRAM.!.a

                        Return (One)
                    }


   1D8E7: A4 01                                            // ..

                    If (LEqual (IIA0, 0x00110014))
                    {
                        Store (^^PCI0.LPCB.EC0.RRAM (0x0520), Local0)

   1D8E9: A0 45 08 93 49 49 41 30 0C 14 00 11 00 70 5E 5E  // .E..IIA0.....p^^
   1D8F9: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 52 52  // /.PCI0LPCBEC0_RR
   1D909: 41 4D 0B 20 05 60                                // AM. .`

                        If (And (Local0, 0x02))
                        {
                            Store (^^PCI0.LPCB.EC0.RRAM (0x0522), Local0)

   1D90F: A0 4D 05 7B 60 0A 02 00 70 5E 5E 2F 04 50 43 49  // .M.{`...p^^/.PCI
   1D91F: 30 4C 50 43 42 45 43 30 5F 52 52 41 4D 0B 22 05  // 0LPCBEC0_RRAM.".
   1D92F: 60                                               // `

                            If (LEqual (IIA1, Zero))
                            {

   1D930: A0 13 93 49 49 41 31 00                          // ...IIA1.

                                And (Local0, 0xFFFFFFFFFFFFFFBF, Local1)
                            }

   1D938: 7B 60 0E BF FF FF FF FF FF FF FF 61              // {`.........a

                            ElseIf
   1D944: A1 0E                                            // ..

 (LEqual (IIA1, One))
                            {

   1D946: A0 0C 93 49 49 41 31 01                          // ...IIA1.

                                Or (Local0, 0x40, Local1)
                            }

                            ^^PCI0.LPCB.EC0.WRAM (0x0522, Local1)

   1D94E: 7D 60 0A 40 61 5E 5E 2F 04 50 43 49 30 4C 50 43  // }`.@a^^/.PCI0LPC
   1D95E: 42 45 43 30 5F 57 52 41 4D 0B 22 05 61           // BEC0_WRAM.".a

                            Return (One)
                        }


   1D96B: A4 01                                            // ..

                        Return (Zero)
                    }


   1D96D: A4 00                                            // ..

                    If (LEqual (IIA0, 0x00120074))
                    {

   1D96F: A0 0D 93 49 49 41 30 0C 74 00 12 00              // ...IIA0.t...

                        Return (Zero)
                    }
                }


   1D97B: A4 00                                            // ..

                If (LEqual (Local0, 0x48534C46))
                {
                    FLSH (IIA0)

   1D97D: A0 12 93 60 0C 46 4C 53 48 46 4C 53 48 49 49 41  // ...`.FLSHFLSHIIA
   1D98D: 30                                               // 0

                    Return (One)
                }


   1D98E: A4 01                                            // ..

                If (LEqual (Local0, 0x494E4946))
                {

   1D990: A0 11 93 60 0C 46 49 4E 49                       // ...`.FINI

                    Return (FINI (IIA0))
                }


   1D999: A4 46 49 4E 49 49 49 41 30                       // .FINIIIA0

                If (LEqual (Local0, 0x53524546))
                {

   1D9A2: A0 11 93 60 0C 46 45 52 53                       // ...`.FERS

                    Return (FERS (IIA0))
                }


   1D9AB: A4 46 45 52 53 49 49 41 30                       // .FERSIIA0

                If (LEqual (Local0, 0x49525746))
                {

   1D9B4: A0 11 93 60 0C 46 57 52 49                       // ...`.FWRI

                    Return (FWRI (IIA0))
                }


   1D9BD: A4 46 57 52 49 49 49 41 30                       // .FWRIIIA0

                If (LEqual (Local0, 0x57504346))
                {

   1D9C6: A0 11 93 60 0C 46 43 50 57                       // ...`.FCPW

                    Return (FCPW (IIA0))
                }


   1D9CF: A4 46 43 50 57 49 49 41 30                       // .FCPWIIA0

                If (LEqual (Local0, 0x50504346))
                {

   1D9D8: A0 0D 93 60 0C 46 43 50 50                       // ...`.FCPP

                    Return (FCPP ())
                }


   1D9E1: A4 46 43 50 50                                   // .FCPP

                If (LEqual (Local0, 0x50525746))
                {

   1D9E6: A0 0D 93 60 0C 46 57 52 50                       // ...`.FWRP

                    Return (FWRP ())
                }


   1D9EF: A4 46 57 52 50                                   // .FWRP

                If (LEqual (Local0, 0x52534345))
                {

   1D9F4: A0 11 93 60 0C 45 43 53 52                       // ...`.ECSR

                    Return (ECSR (IIA0))
                }


   1D9FD: A4 45 43 53 52 49 49 41 30                       // .ECSRIIA0

                If (LEqual (Local0, 0x43534C46))
                {

   1DA06: A0 11 93 60 0C 46 4C 53 43                       // ...`.FLSC

                    Return (FLSC (IIA0))
                }


   1DA0F: A4 46 4C 53 43 49 49 41 30                       // .FLSCIIA0

                If (LEqual (Local0, 0x43455246))
                {

   1DA18: A0 11 93 60 0C 46 52 45 43                       // ...`.FREC

                    Return (FREC (IIA0))
                }


   1DA21: A4 46 52 45 43 49 49 41 30                       // .FRECIIA0

                If (LEqual (Local0, 0x454D4946))
                {

   1DA2A: A0 11 93 60 0C 46 49 4D 45                       // ...`.FIME

                    Return (FIME (IIA0))
                }


   1DA33: A4 46 49 4D 45 49 49 41 30                       // .FIMEIIA0

                If (LEqual (Local0, 0x4C425053))
                {

   1DA3C: A0 41 04 93 60 0C 53 50 42 4C                    // .A..`.SPBL

                    If (LEqual (IIA0, 0x80))
                    {

   1DA46: A0 18 93 49 49 41 30 0A 80                       // ...IIA0..

                        If (
   1DA4F: A0 0D 92                                         // ...

LGreaterEqual (MSOS (), OSVT))
                        {

   1DA52: 95 4D 53 4F 53 4F 53 56 54                       // .MSOSOSVT

                            Return (Zero)
                        }


   1DA5B: A4 00                                            // ..

                        Return (One)
                    }


   1DA5D: A4 01                                            // ..

                    If (LGreater (IIA0, 0x0F))
                    {

   1DA5F: A0 0A 94 49 49 41 30 0A 0F                       // ...IIA0..

                        Return (Zero)
                    }


   1DA68: A4 00                                            // ..

                    If (LLess (IIA0, Zero))
                    {

   1DA6A: A0 09 95 49 49 41 30 00                          // ...IIA0.

                        Return (Zero)
                    }

                    SPLV (IIA0)

   1DA72: A4 00 53 50 4C 56 49 49 41 30                    // ..SPLVIIA0

                    Return (One)
                }


   1DA7C: A4 01                                            // ..

                If (LEqual (Local0, 0x50534453))
                {
                    SDSP (IIA0)

   1DA7E: A0 12 93 60 0C 53 44 53 50 53 44 53 50 49 49 41  // ...`.SDSPSDSPIIA
   1DA8E: 30                                               // 0

                    Return (One)
                }


   1DA8F: A4 01                                            // ..

                If (LEqual (Local0, 0x50534447))
                {

   1DA91: A0 11 93 60 0C 47 44 53 50                       // ...`.GDSP

                    Return (GDSP (IIA0))
                }


   1DA9A: A4 47 44 53 50 49 49 41 30                       // .GDSPIIA0

                If (LEqual (Local0, 0x44495047))
                {

   1DAA3: A0 0D 93 60 0C 47 50 49 44                       // ...`.GPID

                    Return (GPID ())
                }


   1DAAC: A4 47 50 49 44                                   // .GPID

                If (LEqual (Local0, 0x44434C47))
                {

   1DAB1: A0 0D 93 60 0C 47 4C 43 44                       // ...`.GLCD

                    Return (GLCD ())
                }


   1DABA: A4 47 4C 43 44                                   // .GLCD

                If (LEqual (Local0, 0x444F4D51))
                {

   1DABF: A0 11 93 60 0C 51 4D 4F 44                       // ...`.QMOD

                    Return (QMOD (IIA0))
                }


   1DAC8: A4 51 4D 4F 44 49 49 41 30                       // .QMODIIA0

                If (LEqual (Local0, 0x49564E41))
                {

   1DAD1: A0 11 93 60 0C 41 4E 56 49                       // ...`.ANVI

                    Return (ANVI (IIA0))
                }


   1DADA: A4 41 4E 56 49 49 49 41 30                       // .ANVIIIA0

                If (LEqual (Local0, 0x46494243))
                {

   1DAE3: A0 11 93 60 0C 43 42 49 46                       // ...`.CBIF

                    Return (CBIF (IIA0))
                }


   1DAEC: A4 43 42 49 46 49 49 41 30                       // .CBIFIIA0

                If (LEqual (Local0, 0x4E464741))
                {

   1DAF5: A0 11 93 60 0C 41 47 46 4E                       // ...`.AGFN

                    Return (AGFN (IIA0))
                }


   1DAFE: A4 41 47 46 4E 49 49 41 30                       // .AGFNIIA0

                If (LEqual (Local0, 0x46494643))
                {
                    CFIF (IIA0)

   1DB07: A0 12 93 60 0C 43 46 49 46 43 46 49 46 49 49 41  // ...`.CFIFCFIFIIA
   1DB17: 30                                               // 0

                    Return (One)
                }


   1DB18: A4 01                                            // ..

                If (LEqual (Local0, 0x44495046))
                {

   1DB1A: A0 0C 93 60 0C 46 50 49 44                       // ...`.FPID

                    Return (0x0118)
                }


   1DB23: A4 0B 18 01                                      // ....

                If (LEqual (Local0, 0x59454B48))
                {
                    Store (^^PCI0.LPCB.EC0.CDT1, Local0)

   1DB27: A0 20 93 60 0C 48 4B 45 59 70 5E 5E 2F 04 50 43  // . .`.HKEYp^^/.PC
   1DB37: 49 30 4C 50 43 42 45 43 30 5F 43 44 54 31 60     // I0LPCBEC0_CDT1`

                    Return (One)
                }


   1DB46: A4 01                                            // ..

                If (LEqual (Local0, 0x47444353))
                {

   1DB48: A0 11 93 60 0C 53 43 44 47                       // ...`.SCDG

                    Return (SCDG (IIA0))
                }


   1DB51: A4 53 43 44 47 49 49 41 30                       // .SCDGIIA0

                Return (0xFFFFFFFE)
            }


   1DB5A: A4 0C FE FF FF FF                                // ......

            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
            {

   1DB60: 14 13 5F 57 45 44 01                             // .._WED.

                If (LEqual (Arg0, 0xFF))
                {

   1DB67: A0 0A 93 68 0A FF                                // ...h..

                    Return (GANQ ())
                }


   1DB6D: A4 47 41 4E 51                                   // .GANQ

                Return (Ones)
            }


   1DB72: A4 FF                                            // ..

            Method (IANE, 1, Serialized)
            {
                IANQ (Arg0)

   1DB74: 14 12 49 41 4E 45 09 49 41 4E 51 68              // ..IANE.IANQh

                Notify (ATKD, 0xFF) // Hardware-Specific
            }


   1DB80: 86 41 54 4B 44 0A FF                             // .ATKD..

            Method (INIT, 1, NotSerialized)
            {
                Store (One, ATKP) /* \_SB_.ATKP */

   1DB87: 14 11 49 4E 49 54 01 70 01 41 54 4B 50           // ..INIT.p.ATKP

                Return (MNAM) /* \_SB_.MNAM */
            }


   1DB94: A4 4D 4E 41 4D                                   // .MNAM

            Method (BSTS, 0, NotSerialized)
            {
                Store (IKFG, Local0)
                Or (Local0, ShiftLeft (IKF2, 0x08), Local0)

   1DB99: 14 4D 05 42 53 54 53 00 70 49 4B 46 47 60 7D 60  // .M.BSTS.pIKFG`}`
   1DBA9: 79 49 4B 46 32 0A 08 00 60                       // yIKF2...`

                If (ACPF)
                {
                    Store (Zero, Local0)

   1DBB2: A0 0A 41 43 50 46 70 00 60                       // ..ACPFp.`

                    Return (Local0)
                }

   1DBBB: A4 60                                            // .`

                Else
                {
                    Store (^^PCI0.LPCB.EC0.RRAM (0x04FE), Local0)

   1DBBD: A1 31 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .1p^^/.PCI0LPCBE
   1DBCD: 43 30 5F 52 52 41 4D 0B FE 04 60                 // C0_RRAM...`

                    If (LEqual (And (Local0, 0xFF), 0x34))
                    {
                        Store (0x05, Local0)

   1DBD8: A0 0F 93 7B 60 0A FF 00 0A 34 70 0A 05 60        // ...{`....4p..`

                        Return (Local0)
                    }

   1DBE6: A4 60                                            // .`

                    Else
                    {
                        Store (Zero, Local0)

   1DBE8: A1 06 70 00 60                                   // ..p.`

                        Return (Local0)
                    }
                }

                And (Local0, 0xFFDF, Local0)

   1DBED: A4 60 7B 60 0B DF FF 60                          // .`{`...`

                Return (Local0)
            }


   1DBF5: A4 60                                            // .`

            Method (TMPR, 0, NotSerialized)
            {
                Store (\_TZ.RTMP (), Local0)
                Store (\_TZ.RFAN (Zero), Local1)
                ShiftLeft (Local1, 0x10, Local1)
                Add (\_TZ.KELV (Local0), Local1, Local0)
                Store (Zero, Local2)

   1DBF7: 14 45 07 54 4D 50 52 00 70 5C 2E 5F 54 5A 5F 52  // .E.TMPR.p\._TZ_R
   1DC07: 54 4D 50 60 70 5C 2E 5F 54 5A 5F 52 46 41 4E 00  // TMP`p\._TZ_RFAN.
   1DC17: 61 79 61 0A 10 61 72 5C 2E 5F 54 5A 5F 4B 45 4C  // aya..ar\._TZ_KEL
   1DC27: 56 60 61 60 70 00 62                             // V`a`p.b

                If (TENA)
                {

   1DC2E: A0 0B 54 45 4E 41                                // ..TENA

                    Store (TDTY, Local2)
                }

   1DC34: 70 54 44 54 59 62                                // pTDTYb

                Else
                {
                    Store (HKTH (), Local3)

   1DC3A: A1 12 70 48 4B 54 48 63                          // ..pHKTHc

                    If (
   1DC42: A0 0A 92                                         // ...

LNotEqual (Local3, 0xFFFF))
                    {

   1DC45: 93 63 0B FF FF                                   // .c...

                        Store (Local3, Local2)
                    }
                }

                ShiftLeft (Local2, 0x18, Local2)
                Add (Local0, Local2, Local0)
                Store (\_TZ.RFSE (), Local3)
                ShiftLeft (Local3, 0x1C, Local3)
                Add (Local0, Local3, Local0)

   1DC4A: 70 63 62 79 62 0A 18 62 72 60 62 60 70 5C 2E 5F  // pcbyb..br`b`p\._
   1DC5A: 54 5A 5F 52 46 53 45 63 79 63 0A 1C 63 72 60 63  // TZ_RFSEcyc..cr`c
   1DC6A: 60                                               // `

                Return (Local0)
            }


   1DC6B: A4 60                                            // .`

            Method (SFUN, 0, NotSerialized)
            {
                Store (0x37, Local0)
                Or (Local0, 0x40, Local0)
                Or (Local0, 0x00020000, Local0)
                Or (Local0, 0x00080000, Local0)

   1DC6D: 14 21 53 46 55 4E 00 70 0A 37 60 7D 60 0A 40 60  // .!SFUN.p.7`}`.@`
   1DC7D: 7D 60 0C 00 00 02 00 60 7D 60 0C 00 00 08 00 60  // }`.....`}`.....`

                Return (Local0)
            }


   1DC8D: A4 60                                            // .`

            Method (SPEC, 1, NotSerialized)
            {

   1DC8F: 14 20 53 50 45 43 01                             // . SPEC.

                If (LEqual (Arg0, Zero))
                {

   1DC96: A0 0A 93 68 00                                   // ...h.

                    Return (0x00070009)
                }

   1DC9B: A4 0C 09 00 07 00                                // ......

                ElseIf
   1DCA1: A1 08                                            // ..

 (LEqual (Arg0, One))
                {

   1DCA3: A0 06 93 68 01                                   // ...h.

                    Return (One)
                }


   1DCA8: A4 01                                            // ..

                Return (0xFFFFFFFE)
            }


   1DCAA: A4 0C FE FF FF FF                                // ......

            Method (OSVR, 1, NotSerialized)
            {

   1DCB0: 14 14 4F 53 56 52 01                             // ..OSVR.

                If (LEqual (OSFG, Zero))
                {

   1DCB7: A0 0D 93 4F 53 46 47 00                          // ...OSFG.

                    Store (Arg0, OSFG) /* \OSFG */
                }
            }


   1DCBF: 70 68 4F 53 46 47                                // phOSFG

            Method (GPLV, 0, NotSerialized)
            {

   1DCC5: 14 0B 47 50 4C 56 00                             // ..GPLV.

                Return (LBTN) /* \_SB_.LBTN */
            }


   1DCCC: A4 4C 42 54 4E                                   // .LBTN

            Method (SPLV, 1, NotSerialized)
            {
                Store (Arg0, LBTN) /* \_SB_.LBTN */
                ^^PCI0.LPCB.EC0.STBR ()

   1DCD1: 14 22 53 50 4C 56 01 70 68 4C 42 54 4E 5E 5E 2F  // ."SPLV.phLBTN^^/
   1DCE1: 04 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54 42  // .PCI0LPCBEC0_STB
   1DCF1: 52                                               // R

                Return (One)
            }


   1DCF2: A4 01                                            // ..

            Method (SPBL, 1, NotSerialized)
            {

   1DCF4: 14 32 53 50 42 4C 01                             // .2SPBL.

                If (LEqual (Arg0, 0x0100))
                {
                    Subtract (0x0B, One, Local0)

   1DCFB: A0 0D 93 68 0B 00 01 74 0A 0B 01 60              // ...h...t...`

                    Return (Local0)
                }


   1DD07: A4 60                                            // .`

                If (LEqual (Arg0, 0x80))
                {

   1DD09: A0 07 93 68 0A 80                                // ...h..

                    Return (One)
                }


   1DD0F: A4 01                                            // ..

                If (LGreater (Arg0, 0x0F))
                {

   1DD11: A0 07 94 68 0A 0F                                // ...h..

                    Return (Zero)
                }


   1DD17: A4 00                                            // ..

                If (LLess (Arg0, Zero))
                {

   1DD19: A0 06 95 68 00                                   // ...h.

                    Return (Zero)
                }

                SPLV (Arg0)

   1DD1E: A4 00 53 50 4C 56 68                             // ..SPLVh

                Return (One)
            }


   1DD25: A4 01                                            // ..

            Method (WLED, 1, NotSerialized)
            {
                OWLD (Arg0)

   1DD27: 14 0D 57 4C 45 44 01 4F 57 4C 44 68              // ..WLED.OWLDh

                Return (One)
            }


   1DD33: A4 01                                            // ..

            Method (DESP, 1, NotSerialized)
            {
                ODSP (Arg0)

   1DD35: 14 0D 44 45 53 50 01 4F 44 53 50 68              // ..DESP.ODSPh

                Return (One)
            }


   1DD41: A4 01                                            // ..

            Method (KBNI, 0, NotSerialized)
            {

   1DD43: 14 08 4B 42 4E 49 00                             // ..KBNI.

                Return (One)
            }


   1DD4A: A4 01                                            // ..

            Method (GALE, 1, NotSerialized)
            {

   1DD4C: 14 49 04 47 41 4C 45 01                          // .I.GALE.

                If (LEqual (Arg0, 0x04))
                {

   1DD54: A0 14 93 68 0A 04                                // ...h..

                    If (LAnd (LEDS, 0x04))
                    {

   1DD5A: A0 0A 90 4C 45 44 53 0A 04                       // ...LEDS..

                        Return (One)
                    }

   1DD63: A4 01                                            // ..

                    Else
                    {

   1DD65: A1 03                                            // ..

                        Return (Zero)
                    }
                }


   1DD67: A4 00                                            // ..

                If (LEqual (Arg0, 0x08))
                {

   1DD69: A0 14 93 68 0A 08                                // ...h..

                    If (LAnd (LEDS, 0x08))
                    {

   1DD6F: A0 0A 90 4C 45 44 53 0A 08                       // ...LEDS..

                        Return (One)
                    }

   1DD78: A4 01                                            // ..

                    Else
                    {

   1DD7A: A1 03                                            // ..

                        Return (Zero)
                    }
                }


   1DD7C: A4 00                                            // ..

                If (LEqual (Arg0, 0x10))
                {

   1DD7E: A0 14 93 68 0A 10                                // ...h..

                    If (LAnd (LEDS, 0x10))
                    {

   1DD84: A0 0A 90 4C 45 44 53 0A 10                       // ...LEDS..

                        Return (One)
                    }

   1DD8D: A4 01                                            // ..

                    Else
                    {

   1DD8F: A1 03                                            // ..

                        Return (Zero)
                    }
                }


   1DD91: A4 00                                            // ..

                Return (0x02)
            }


   1DD93: A4 0A 02                                         // ...

            Method (SALE, 1, NotSerialized)
            {

   1DD96: 14 14 53 41 4C 45 01                             // ..SALE.

                If (
   1DD9D: A0 05                                            // ..

LEqual (Arg0, 0x10)){}

   1DD9F: 93 68 0A 10                                      // .h..

                If (
   1DDA3: A0 05                                            // ..

LEqual (Arg0, 0x11)){}

   1DDA5: 93 68 0A 11                                      // .h..

                Return (One)
            }


   1DDA9: A4 01                                            // ..

            Method (BLED, 1, NotSerialized)
            {
                OBTD (Arg0)

   1DDAB: 14 0D 42 4C 45 44 01 4F 42 54 44 68              // ..BLED.OBTDh

                Return (One)
            }


   1DDB7: A4 01                                            // ..

            Method (UWBC, 1, NotSerialized)
            {
                OUWD (Arg0)

   1DDB9: 14 0D 55 57 42 43 01 4F 55 57 44 68              // ..UWBC.OUWDh

                Return (One)
            }


   1DDC5: A4 01                                            // ..

            Method (WMXC, 1, NotSerialized)
            {
                OWMD (Arg0)

   1DDC7: 14 0D 57 4D 58 43 01 4F 57 4D 44 68              // ..WMXC.OWMDh

                Return (One)
            }


   1DDD3: A4 01                                            // ..

            Method (GPSC, 1, NotSerialized)
            {
                OGPD (Arg0)

   1DDD5: 14 0D 47 50 53 43 01 4F 47 50 44 68              // ..GPSC.OGPDh

                Return (One)
            }


   1DDE1: A4 01                                            // ..

            Method (GSMC, 1, NotSerialized)
            {
                OTGD (Arg0)

   1DDE3: 14 0D 47 53 4D 43 01 4F 54 47 44 68              // ..GSMC.OTGDh

                Return (One)
            }


   1DDEF: A4 01                                            // ..

            Method (LTEC, 1, NotSerialized)
            {
                OFGD (Arg0)

   1DDF1: 14 0D 4C 54 45 43 01 4F 46 47 44 68              // ..LTEC.OFGDh

                Return (One)
            }


   1DDFD: A4 01                                            // ..

            Method (RSTS, 0, NotSerialized)
            {

   1DDFF: 14 0B 52 53 54 53 00                             // ..RSTS.

                Return (ORST ())
            }


   1DE06: A4 4F 52 53 54                                   // .ORST

            Method (SDSP, 1, NotSerialized)
            {

   1DE0B: 14 14 53 44 53 50 01                             // ..SDSP.

                If (NATK ())
                {

   1DE12: A0 0B 4E 41 54 4B                                // ..NATK

                    Return (SWHG (Arg0))
                }


   1DE18: A4 53 57 48 47 68                                // .SWHGh

                Return (Zero)
            }


   1DE1E: A4 00                                            // ..

            Method (GPID, 0, NotSerialized)
            {

   1DE20: 14 0B 47 50 49 44 00                             // ..GPID.

                Return (LCDR) /* \_SB_.LCDR */
            }


   1DE27: A4 4C 43 44 52                                   // .LCDR

            Method (HWRS, 0, NotSerialized)
            {

   1DE2C: 14 0B 48 57 52 53 00                             // ..HWRS.

                Return (OHWR ())
            }


   1DE33: A4 4F 48 57 52                                   // .OHWR

            Method (GLCD, 0, NotSerialized)
            {

   1DE38: 14 0B 47 4C 43 44 00                             // ..GLCD.

                Return (LCDV) /* \_SB_.LCDV */
            }


   1DE3F: A4 4C 43 44 56                                   // .LCDV

            Name (WAPF, Zero)

   1DE44: 08 57 41 50 46 00                                // .WAPF.

            Method (CWAP, 1, NotSerialized)
            {
                Or (Arg0, WAPF, WAPF) /* \_SB_.ATKD.WAPF */

   1DE4A: 14 12 43 57 41 50 01 7D 68 57 41 50 46 57 41 50  // ..CWAP.}hWAPFWAP
   1DE5A: 46                                               // F

                Return (One)
            }


   1DE5B: A4 01                                            // ..

            Method (QMOD, 1, NotSerialized)
            {

   1DE5D: 14 49 04 51 4D 4F 44 01                          // .I.QMOD.

                If (LEqual (Arg0, Zero))
                {

   1DE65: A0 06 93 68 00                                   // ...h.

                    Return (Zero)
                }


   1DE6A: A4 00                                            // ..

                If (LEqual (Arg0, One))
                {
                    ^^PCI0.LPCB.EC0.ST98 (QFAN)
                }


   1DE6C: A0 1C 93 68 01 5E 5E 2F 04 50 43 49 30 4C 50 43  // ...h.^^/.PCI0LPC
   1DE7C: 42 45 43 30 5F 53 54 39 38 51 46 41 4E           // BEC0_ST98QFAN

                If (LEqual (Arg0, 0x02))
                {
                    ^^PCI0.LPCB.EC0.ST98 (0xFF)
                }


   1DE89: A0 1B 93 68 0A 02 5E 5E 2F 04 50 43 49 30 4C 50  // ...h..^^/.PCI0LP
   1DE99: 43 42 45 43 30 5F 53 54 39 38 0A FF              // CBEC0_ST98..

                Return (One)
            }


   1DEA5: A4 01                                            // ..

            Method (ANVI, 1, Serialized)
            {
                Store (ASMI (Arg0), Local0)

   1DEA7: 14 0F 41 4E 56 49 09 70 41 53 4D 49 68 60        // ..ANVI.pASMIh`

                Return (Local0)
            }


   1DEB5: A4 60                                            // .`

            Method (PSTC, 1, Serialized)
            {

   1DEB7: 14 40 13 50 53 54 43 09                          // .@.PSTC.


   1DEBF: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, Zero))
                {
                    Store (CPUP, Local0)
                    ShiftLeft (Local0, 0x08, Local0)
                    Add (CPUP, Local0, Local0)

   1DEC5: A0 18 93 68 00 70 43 50 55 50 60 79 60 0A 08 60  // ...h.pCPUP`y`..`
   1DED5: 72 43 50 55 50 60 60                             // rCPUP``

                    Return (Local0)
                }


   1DEDC: A4 60                                            // .`

                If (LGreater (Arg0, CPUP))
                {

   1DEDE: A0 0D 94 68 43 50 55 50                          // ...hCPUP

                    Return (0xFFFFFFFE)
                }

                Store (Arg0, SLMT) /* \_SB_.SLMT */

   1DEE6: A4 0C FE FF FF FF 70 68 53 4C 4D 54              // ......phSLMT

                Switch (TCNT)
                {

   1DEF2: A2 43 0F 01 70 54 43 4E 54 5F 54 5F 30           // .C..pTCNT_T_0

                    Case (0x08)
                    {
                        Notify (\_PR.CPU0, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU1, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU2, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU3, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU4, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU5, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU6, 0x80) // Performance Capability Change

   1DEFF: A0 41 07 93 5F 54 5F 30 0A 08 86 5C 2E 5F 50 52  // .A.._T_0...\._PR
   1DF0F: 5F 43 50 55 30 0A 80 86 5C 2E 5F 50 52 5F 43 50  // _CPU0...\._PR_CP
   1DF1F: 55 31 0A 80 86 5C 2E 5F 50 52 5F 43 50 55 32 0A  // U1...\._PR_CPU2.
   1DF2F: 80 86 5C 2E 5F 50 52 5F 43 50 55 33 0A 80 86 5C  // ..\._PR_CPU3...\
   1DF3F: 2E 5F 50 52 5F 43 50 55 34 0A 80 86 5C 2E 5F 50  // ._PR_CPU4...\._P
   1DF4F: 52 5F 43 50 55 35 0A 80 86 5C 2E 5F 50 52 5F 43  // R_CPU5...\._PR_C
   1DF5F: 50 55 36 0A 80                                   // PU6..

                        Notify (\_PR.CPU7, 0x80) // Performance Capability Change
                    }

   1DF64: 86 5C 2E 5F 50 52 5F 43 50 55 37 0A 80           // .\._PR_CPU7..

                    Case
   1DF71: A1 43 07                                         // .C.

 (0x04)
                    {
                        Notify (\_PR.CPU0, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU1, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU2, 0x80) // Performance Capability Change

   1DF74: A0 3C 93 5F 54 5F 30 0A 04 86 5C 2E 5F 50 52 5F  // .<._T_0...\._PR_
   1DF84: 43 50 55 30 0A 80 86 5C 2E 5F 50 52 5F 43 50 55  // CPU0...\._PR_CPU
   1DF94: 31 0A 80 86 5C 2E 5F 50 52 5F 43 50 55 32 0A 80  // 1...\._PR_CPU2..

                        Notify (\_PR.CPU3, 0x80) // Performance Capability Change
                    }

   1DFA4: 86 5C 2E 5F 50 52 5F 43 50 55 33 0A 80           // .\._PR_CPU3..

                    Case
   1DFB1: A1 33                                            // .3

 (0x02)
                    {
                        Notify (\_PR.CPU0, 0x80) // Performance Capability Change

   1DFB3: A0 22 93 5F 54 5F 30 0A 02 86 5C 2E 5F 50 52 5F  // ."._T_0...\._PR_
   1DFC3: 43 50 55 30 0A 80                                // CPU0..

                        Notify (\_PR.CPU1, 0x80) // Performance Capability Change
                    }

   1DFC9: 86 5C 2E 5F 50 52 5F 43 50 55 31 0A 80           // .\._PR_CPU1..

                    Default
                    {

   1DFD6: A1 0E                                            // ..

                        Notify (\_PR.CPU0, 0x80) // Performance Capability Change
                    }


   1DFD8: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 80           // .\._PR_CPU0..

                }


   1DFE5: A5                                               // .

                Return (Zero)
            }


   1DFE6: A4 00                                            // ..

            Method (SMBB, 1, Serialized)
            {
                ShiftRight (Arg0, 0x10, Local0)
                And (Local0, 0xFF, Local0)
                ShiftRight (Arg0, 0x18, Local1)
                And (Arg0, 0xFF, Local2)

   1DFE8: 14 31 53 4D 42 42 09 7A 68 0A 10 60 7B 60 0A FF  // .1SMBB.zh..`{`..
   1DFF8: 60 7A 68 0A 18 61 7B 68 0A FF 62                 // `zh..a{h..b

                If (And (Local1, One))
                {

   1E003: A0 0C 7B 61 01 00                                // ..{a..

                    Return (RBYT (Local1, Local0))
                }

   1E009: A4 52 42 59 54 61 60                             // .RBYTa`

                Else
                {

   1E010: A1 09                                            // ..

                    Return (WBYT (Local1, Local0, Local2))
                }
            }


   1E012: A4 57 42 59 54 61 60 62                          // .WBYTa`b

            Method (SMBW, 1, Serialized)
            {
                ShiftRight (Arg0, 0x10, Local0)
                And (Local0, 0xFF, Local0)
                ShiftRight (Arg0, 0x18, Local1)
                And (Arg0, 0xFF, Local2)

   1E01A: 14 31 53 4D 42 57 09 7A 68 0A 10 60 7B 60 0A FF  // .1SMBW.zh..`{`..
   1E02A: 60 7A 68 0A 18 61 7B 68 0A FF 62                 // `zh..a{h..b

                If (And (Local1, One))
                {

   1E035: A0 0C 7B 61 01 00                                // ..{a..

                    Return (RWRD (Local1, Local0))
                }

   1E03B: A4 52 57 52 44 61 60                             // .RWRDa`

                Else
                {

   1E042: A1 09                                            // ..

                    Return (WWRD (Local1, Local0, Local2))
                }
            }


   1E044: A4 57 57 52 44 61 60 62                          // .WWRDa`b

            Method (SMBK, 1, Serialized)
            {
                ShiftRight (Arg0, 0x08, Local0)
                And (Local0, 0xFF, Local0)

   1E04C: 14 47 07 53 4D 42 4B 09 7A 68 0A 08 60 7B 60 0A  // .G.SMBK.zh..`{`.
   1E05C: FF 60                                            // .`

                If (Local0)
                {
                    ShiftRight (Arg0, 0x10, Local0)
                    And (Local0, 0xFF, Local0)
                    ShiftRight (Arg0, 0x18, Local1)
                    And (Local1, 0xFF, Local1)
                    And (Arg0, 0x0F, Local3)

   1E05E: A0 33 60 7A 68 0A 10 60 7B 60 0A FF 60 7A 68 0A  // .3`zh..`{`..`zh.
   1E06E: 18 61 7B 61 0A FF 61 7B 68 0A 0F 63              // .a{a..a{h..c

                    If (And (Local1, One))
                    {
                        RBLK (Local1, Local0, Local3)
                    }

   1E07A: A0 0C 7B 61 01 00 52 42 4C 4B 61 60 63           // ..{a..RBLKa`c

                    Else
                    {
                        WBLK (Local1, Local0, Local3)
                    }


   1E087: A1 08 57 42 4C 4B 61 60 63                       // ..WBLKa`c

                    Return (Zero)
                }

   1E090: A4 00                                            // ..

                Else
                {
                    ShiftRight (Arg0, 0x10, Local2)
                    And (Local2, 0xFF, Local2)
                    ShiftRight (Arg0, 0x18, Local1)

   1E092: A1 31 7A 68 0A 10 62 7B 62 0A FF 62 7A 68 0A 18  // .1zh..b{b..bzh..
   1E0A2: 61                                               // a

                    If (And (Local1, One))
                    {

   1E0A3: A0 0E 7B 61 01 00                                // ..{a..

                        Return (
   1E0A9: A4                                               // .

DerefOf (
   1E0AA: 83                                               // .

Index (RBUF, Local2)))
                    }

   1E0AB: 88 52 42 55 46 62 00                             // .RBUFb.

                    Else
                    {
                        And (Arg0, 0xFF, Local1)
                        Store (Local1, 
   1E0B2: A1 11 7B 68 0A FF 61 70 61                       // ..{h..apa

Index (RBUF, Local2))

   1E0BB: 88 52 42 55 46 62 00                             // .RBUFb.

                        Return (Zero)
                    }
                }
            }


   1E0C2: A4 00                                            // ..

            Method (ECRW, 1, Serialized)
            {
                ShiftRight (Arg0, 0x18, Local0)
                And (Local0, 0xFF, Local0)
                ShiftRight (Arg0, 0x10, Local1)
                And (Local1, 0xFF, Local1)
                ShiftRight (Arg0, 0x08, Local2)
                And (Local2, 0xFF, Local2)
                And (Arg0, 0xFF, Local3)
                Acquire (^^PCI0.LPCB.EC0.MUEC, 0xFFFF)
                Store (Local0, ^^PCI0.LPCB.EC0.CDT3) /* \_SB_.PCI0.LPCB.EC0_.CDT3 */
                Store (Local1, ^^PCI0.LPCB.EC0.CDT2) /* \_SB_.PCI0.LPCB.EC0_.CDT2 */
                Store (Local2, ^^PCI0.LPCB.EC0.CDT1) /* \_SB_.PCI0.LPCB.EC0_.CDT1 */
                Store (Local3, ^^PCI0.LPCB.EC0.CMD1) /* \_SB_.PCI0.LPCB.EC0_.CMD1 */
                Store (0x05, Local0)

   1E0C4: 14 46 14 45 43 52 57 09 7A 68 0A 18 60 7B 60 0A  // .F.ECRW.zh..`{`.
   1E0D4: FF 60 7A 68 0A 10 61 7B 61 0A FF 61 7A 68 0A 08  // .`zh..a{a..azh..
   1E0E4: 62 7B 62 0A FF 62 7B 68 0A FF 63 5B 23 5E 5E 2F  // b{b..b{h..c[#^^/
   1E0F4: 04 50 43 49 30 4C 50 43 42 45 43 30 5F 4D 55 45  // .PCI0LPCBEC0_MUE
   1E104: 43 FF FF 70 60 5E 5E 2F 04 50 43 49 30 4C 50 43  // C..p`^^/.PCI0LPC
   1E114: 42 45 43 30 5F 43 44 54 33 70 61 5E 5E 2F 04 50  // BEC0_CDT3pa^^/.P
   1E124: 43 49 30 4C 50 43 42 45 43 30 5F 43 44 54 32 70  // CI0LPCBEC0_CDT2p
   1E134: 62 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30  // b^^/.PCI0LPCBEC0
   1E144: 5F 43 44 54 31 70 63 5E 5E 2F 04 50 43 49 30 4C  // _CDT1pc^^/.PCI0L
   1E154: 50 43 42 45 43 30 5F 43 4D 44 31 70 0A 05 60     // PCBEC0_CMD1p..`

                While (LAnd (Local0, ^^PCI0.LPCB.EC0.CMD1))
                {
                    Sleep (One)

   1E163: A2 1C 90 60 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // ...`^^/.PCI0LPCB
   1E173: 45 43 30 5F 43 4D 44 31 5B 22 01                 // EC0_CMD1[".

                    Decrement (Local0)
                }

                Store (^^PCI0.LPCB.EC0.CDT3, Local0)
                Store (^^PCI0.LPCB.EC0.CDT2, Local1)
                Store (^^PCI0.LPCB.EC0.CDT1, Local2)
                Store (^^PCI0.LPCB.EC0.CMD1, Local3)
                Release (^^PCI0.LPCB.EC0.MUEC)
                ShiftLeft (Local0, 0x08, Local0)
                Or (Local0, Local1, Local0)
                ShiftLeft (Local0, 0x08, Local0)
                Or (Local0, Local2, Local0)
                ShiftLeft (Local0, 0x08, Local0)
                Or (Local0, Local3, Local0)

   1E17E: 76 60 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // v`p^^/.PCI0LPCBE
   1E18E: 43 30 5F 43 44 54 33 60 70 5E 5E 2F 04 50 43 49  // C0_CDT3`p^^/.PCI
   1E19E: 30 4C 50 43 42 45 43 30 5F 43 44 54 32 61 70 5E  // 0LPCBEC0_CDT2ap^
   1E1AE: 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 43  // ^/.PCI0LPCBEC0_C
   1E1BE: 44 54 31 62 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // DT1bp^^/.PCI0LPC
   1E1CE: 42 45 43 30 5F 43 4D 44 31 63 5B 27 5E 5E 2F 04  // BEC0_CMD1c['^^/.
   1E1DE: 50 43 49 30 4C 50 43 42 45 43 30 5F 4D 55 45 43  // PCI0LPCBEC0_MUEC
   1E1EE: 79 60 0A 08 60 7D 60 61 60 79 60 0A 08 60 7D 60  // y`..`}`a`y`..`}`
   1E1FE: 62 60 79 60 0A 08 60 7D 60 63 60                 // b`y`..`}`c`

                Return (Local0)
            }


   1E209: A4 60                                            // .`

            Method (CBIF, 1, Serialized)
            {
                Store (Arg0, TMPB) /* \_SB_.TMPB */
                Store (0x03, ALPR) /* \_SB_.ALPR */
                ISMI (0xA3)

   1E20B: 14 1B 43 42 49 46 09 70 68 54 4D 50 42 70 0A 03  // ..CBIF.phTMPBp..
   1E21B: 41 4C 50 52 49 53 4D 49 0A A3                    // ALPRISMI..

                Return (One)
            }


   1E225: A4 01                                            // ..

            Method (CFIF, 1, Serialized)
            {
                Store (Arg0, TMPB) /* \_SB_.TMPB */
                ISMI (0xA6)

   1E227: 14 14 43 46 49 46 09 70 68 54 4D 50 42 49 53 4D  // ..CFIF.phTMPBISM
   1E237: 49 0A A6                                         // I..

                Return (One)
            }


   1E23A: A4 01                                            // ..

            Method (GLKB, 1, NotSerialized)
            {

   1E23C: 14 4D 04 47 4C 4B 42 01                          // .M.GLKB.

                If (LEqual (Arg0, One))
                {
                    Store (^^PCI0.LPCB.EC0.RRAM (0x04B0), Local0)
                    And (Local0, 0x80, Local0)

   1E244: A0 2B 93 68 01 70 5E 5E 2F 04 50 43 49 30 4C 50  // .+.h.p^^/.PCI0LP
   1E254: 43 42 45 43 30 5F 52 52 41 4D 0B B0 04 60 7B 60  // CBEC0_RRAM...`{`
   1E264: 0A 80 60                                         // ..`

                    If (Local0)
                    {

   1E267: A0 04 60                                         // ..`

                        Return (One)
                    }

   1E26A: A4 01                                            // ..

                    Else
                    {

   1E26C: A1 03                                            // ..

                        Return (Zero)
                    }
                }

   1E26E: A4 00                                            // ..

                ElseIf
   1E270: A1 17                                            // ..

 (LEqual (Arg0, 0x02))
                {

   1E272: A0 0A 93 68 0A 02                                // ...h..

                    Return (KBLV) /* \_SB_.KBLV */
                }

   1E278: A4 4B 42 4C 56                                   // .KBLV

                ElseIf
   1E27D: A1 0A                                            // ..

 (LEqual (Arg0, 0x03))
                {

   1E27F: A0 08 93 68 0A 03                                // ...h..

                    Return (0x80)
                }


   1E285: A4 0A 80                                         // ...

                Return (Ones)
            }


   1E288: A4 FF                                            // ..

            Name (PWKB, 
   1E28A: 08 50 57 4B 42                                   // .PWKB

Buffer (0x04)
            {
                 0x00, 0x55, 0xAA, 0xFF                           // .U..
            })

   1E28F: 11 07 0A 04 00 55 AA FF                          // .....U..

            Method (SLKB, 1, NotSerialized)
            {
                Store (And (Arg0, 0x7F), KBLV) /* \_SB_.KBLV */

   1E297: 14 44 04 53 4C 4B 42 01 70 7B 68 0A 7F 00 4B 42  // .D.SLKB.p{h...KB
   1E2A7: 4C 56                                            // LV

                If (And (Arg0, 0x80))
                {

   1E2A9: A0 13 7B 68 0A 80 00                             // ..{h...

                    Store (DerefOf (
   1E2B0: 70 83                                            // p.

Index (PWKB, KBLV)), Local0)
                }

   1E2B2: 88 50 57 4B 42 4B 42 4C 56 00 60                 // .PWKBKBLV.`

                Else
                {

   1E2BD: A1 04                                            // ..

                    Store (Zero, Local0)
                }

                ^^PCI0.LPCB.EC0.WRAM (0x04B1, Local0)

   1E2BF: 70 00 60 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p.`^^/.PCI0LPCBE
   1E2CF: 43 30 5F 57 52 41 4D 0B B1 04 60                 // C0_WRAM...`

                Return (One)
            }


   1E2DA: A4 01                                            // ..

            Method (GDSP, 1, NotSerialized)
            {

   1E2DC: 14 27 47 44 53 50 01                             // .'GDSP.

                If (NATK ())
                {

   1E2E3: A0 1E 4E 41 54 4B                                // ..NATK

                    If (LEqual (Arg0, 0x80))
                    {

   1E2E9: A0 07 93 68 0A 80                                // ...h..

                        Return (One)
                    }

   1E2EF: A4 01                                            // ..

                    ElseIf
   1E2F1: A1 10                                            // ..

 (LEqual (Arg0, 0x02))
                    {

   1E2F3: A0 0A 93 68 0A 02                                // ...h..

                        Return (GCDM ())
                    }

   1E2F9: A4 47 43 44 4D                                   // .GCDM

                    Else
                    {

   1E2FE: A1 03                                            // ..

                        Return (Zero)
                    }
                }


   1E300: A4 00                                            // ..

                Return (Zero)
            }


   1E302: A4 00                                            // ..

            Name (CA1M, Zero)

   1E304: 08 43 41 31 4D 00                                // .CA1M.

            Method (RMEM, 1, NotSerialized)
            {

   1E30A: 14 25 52 4D 45 4D 01                             // .%RMEM.

                OperationRegion (VMEM, SystemMemory, Arg0, 0x04)

   1E311: 5B 80 56 4D 45 4D 00 68 0A 04                    // [.VMEM.h..

                Field (VMEM, ByteAcc, NoLock, Preserve)
                {
                    MEMI,   32
                }

                Store (MEMI, Local0)

   1E31B: 5B 81 0B 56 4D 45 4D 01 4D 45 4D 49 20 70 4D 45  // [..VMEM.MEMI pME
   1E32B: 4D 49 60                                         // MI`

                Return (Local0)
            }


   1E32E: A4 60                                            // .`

            Method (WMEM, 2, NotSerialized)
            {

   1E330: 14 23 57 4D 45 4D 02                             // .#WMEM.

                OperationRegion (VMEM, SystemMemory, Arg0, 0x04)

   1E337: 5B 80 56 4D 45 4D 00 68 0A 04                    // [.VMEM.h..

                Field (VMEM, ByteAcc, NoLock, Preserve)
                {
                    MEMI,   32
                }


   1E341: 5B 81 0B 56 4D 45 4D 01 4D 45 4D 49 20           // [..VMEM.MEMI 

                Store (Arg1, MEMI) /* \_SB_.ATKD.WMEM.MEMI */
            }


   1E34E: 70 69 4D 45 4D 49                                // piMEMI

            Name (MEMD, 
   1E354: 08 4D 45 4D 44                                   // .MEMD

Package (0x41)
            {
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF
            })

   1E359: 12 48 14 41 0C FF FF FF FF 0C FF FF FF FF 0C FF  // .H.A............
   1E369: FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF  // ................
   1E379: FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF  // ................
   1E389: FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF  // ................
   1E399: 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C  // ................
   1E3A9: FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF  // ................
   1E3B9: FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF  // ................
   1E3C9: FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF  // ................
   1E3D9: FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF  // ................
   1E3E9: 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C  // ................
   1E3F9: FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF  // ................
   1E409: FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF  // ................
   1E419: FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF  // ................
   1E429: FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF  // ................
   1E439: 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C  // ................
   1E449: FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF  // ................
   1E459: FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF  // ................
   1E469: FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF  // ................
   1E479: FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF  // ................
   1E489: 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C  // ................
   1E499: FF FF FF FF 0C FF FF FF FF                       // .........

            Method (SCDG, 1, NotSerialized)
            {
                Store (CALB, CA1M) /* \_SB_.ATKD.CA1M */

   1E4A2: 14 4D 07 53 43 44 47 01 70 43 41 4C 42 43 41 31  // .M.SCDG.pCALBCA1
   1E4B2: 4D                                               // M

                If (LNot (
   1E4B3: A0 1E 92                                         // ...

LAnd (
   1E4B6: 90 92                                            // ..

LGreaterEqual (ToInteger (Arg0), Zero), 
   1E4B8: 95 99 68 00 00                                   // ..h..


   1E4BD: 92                                               // .

LLessEqual (ToInteger (
                    Arg0), 0x09))))
                {
                    Store (Zero, 
   1E4BE: 94 99 68 00 0A 09 70 00                          // ..h...p.

Index (MEMD, Zero))

   1E4C6: 88 4D 45 4D 44 00 00                             // .MEMD..

                    Return (MEMD) /* \_SB_.ATKD.MEMD */
                }

                Store (Add (CALB, Multiply (0x0100, ToInteger (Arg0))), CA1M) /* \_SB_.ATKD.CA1M */
                Store (Zero, Local2)
                Store (One, Local3)
                Store (CA1M, Local1)
                Store (0x0100, 
   1E4CD: A4 4D 45 4D 44 70 72 43 41 4C 42 77 0B 00 01 99  // .MEMDprCALBw....
   1E4DD: 68 00 00 00 43 41 31 4D 70 00 62 70 01 63 70 43  // h...CA1Mp.bp.cpC
   1E4ED: 41 31 4D 61 70 0B 00 01                          // A1Map...

Index (MEMD, Zero))

   1E4F5: 88 4D 45 4D 44 00 00                             // .MEMD..

                While (LLess (Local3, 0x41))
                {
                    Store (RMEM (
   1E4FC: A2 1E 95 63 0A 41 70 52 4D 45 4D                 // ...c.ApRMEM

Add (Local1, Local2)), 
   1E507: 72 61 62 00                                      // rab.

Index (MEMD, Local3))
                    Add (Local2, 0x04, Local2)

   1E50B: 88 4D 45 4D 44 63 00 72 62 0A 04 62              // .MEMDc.rb..b

                    Add (Local3, One, Local3)
                }


   1E517: 72 63 01 63                                      // rc.c

                Return (MEMD) /* \_SB_.ATKD.MEMD */
            }
        }
    }


   1E51B: A4 4D 45 4D 44                                   // .MEMD

    Scope (_SB)
    {

   1E520: 10 4D 08 5F 53 42 5F                             // .M._SB_

        Device (ASHS)
        {

   1E527: 5B 82 45 08 41 53 48 53                          // [.E.ASHS

            Name (_HID, "ATK4002")  // _HID: Hardware ID

   1E52F: 08 5F 48 49 44 0D 41 54 4B 34 30 30 32 00        // ._HID.ATK4002.

            Method (HSWC, 1, Serialized)
            {

   1E53D: 14 46 05 48 53 57 43 09                          // .F.HSWC.

                If (LLess (Arg0, 0x02))
                {
                    OWGD (Arg0)

   1E545: A0 0C 95 68 0A 02 4F 57 47 44 68                 // ...h..OWGDh

                    Return (One)
                }


   1E550: A4 01                                            // ..

                If (LEqual (Arg0, 0x04))
                {
                    OWGD (Zero)

   1E552: A0 0C 93 68 0A 04 4F 57 47 44 00                 // ...h..OWGD.

                    Return (One)
                }


   1E55D: A4 01                                            // ..

                If (LEqual (Arg0, 0x05))
                {
                    OWGD (One)

   1E55F: A0 0C 93 68 0A 05 4F 57 47 44 01                 // ...h..OWGD.

                    Return (One)
                }


   1E56A: A4 01                                            // ..

                If (LEqual (Arg0, 0x02))
                {
                    Store (OWGS (), Local0)

   1E56C: A0 16 93 68 0A 02 70 4F 57 47 53 60              // ...h..pOWGS`

                    If (Local0)
                    {

   1E578: A0 05 60                                         // ..`

                        Return (0x05)
                    }

   1E57B: A4 0A 05                                         // ...

                    Else
                    {

   1E57E: A1 04                                            // ..

                        Return (0x04)
                    }
                }


   1E580: A4 0A 04                                         // ...

                If (LEqual (Arg0, 0x03))
                {

   1E583: A0 08 93 68 0A 03                                // ...h..

                    Return (0xFF)
                }


   1E589: A4 0A FF                                         // ...

                If (LEqual (Arg0, 0x80))
                {

   1E58C: A0 07 93 68 0A 80                                // ...h..

                    Return (One)
                }
            }


   1E592: A4 01                                            // ..

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

   1E594: 14 19 5F 53 54 41 00                             // .._STA.

                If (
   1E59B: A0 0E 92                                         // ...

LGreaterEqual (MSOS (), OSW8))
                {

   1E59E: 95 4D 53 4F 53 4F 53 57 38                       // .MSOSOSW8

                    Return (0x0F)
                }

   1E5A7: A4 0A 0F                                         // ...

                Else
                {

   1E5AA: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


   1E5AC: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

   1E5AE: 10 45 04 2E 5F 53 42 5F 50 43 49 30              // .E.._SB_PCI0

        Device (AC0)
        {

   1E5BA: 5B 82 38 41 43 30 5F                             // [.8AC0_

            Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID

   1E5C1: 08 5F 48 49 44 0D 41 43 50 49 30 30 30 33 00     // ._HID.ACPI0003.

            Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
            {

   1E5D0: 14 17 5F 50 53 52 00                             // .._PSR.

                Return (^^LPCB.EC0.ACAP ())
            }


   1E5D7: A4 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 41 43 41  // .^^/.LPCBEC0_ACA
   1E5E7: 50                                               // P

            Name (_PCL, 
   1E5E8: 08 5F 50 43 4C                                   // ._PCL

Package (0x01)  // _PCL: Power Consumer List
            {
                PCI0
            })
        }
    }


   1E5ED: 12 06 01 50 43 49 30                             // ...PCI0

    Scope (_SB.PCI0.LPCB.EC0)
    {

   1E5F4: 10 1F 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43 42  // ../._SB_PCI0LPCB
   1E604: 45 43 30 5F                                      // EC0_

        Method (ACAP, 0, Serialized)
        {

   1E608: 14 0B 41 43 41 50 08                             // ..ACAP.

            Return (ACPF) /* \_SB_.ACPF */
        }
    }


   1E60F: A4 41 43 50 46                                   // .ACPF

    Scope (_SB.PCI0)
    {

   1E614: 10 47 9E 2E 5F 53 42 5F 50 43 49 30              // .G.._SB_PCI0

        Device (BAT0)
        {

   1E620: 5B 82 4A 9D 42 41 54 30                          // [.J.BAT0

            Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID

   1E628: 08 5F 48 49 44 0C 41 D0 0C 0A                    // ._HID.A...

            Name (_UID, Zero)  // _UID: Unique ID

   1E632: 08 5F 55 49 44 00                                // ._UID.

            Name (_PCL, 
   1E638: 08 5F 50 43 4C                                   // ._PCL

Package (0x01)  // _PCL: Power Consumer List
            {
                PCI0
            })

   1E63D: 12 06 01 50 43 49 30                             // ...PCI0

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

   1E644: 14 21 5F 53 54 41 00                             // .!_STA.

                If (^^LPCB.EC0.BATP (Zero))
                {

   1E64B: A0 15 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 42 41  // ..^^/.LPCBEC0_BA
   1E65B: 54 50 00                                         // TP.

                    Return (0x1F)
                }

   1E65E: A4 0A 1F                                         // ...

                Else
                {

   1E661: A1 04                                            // ..

                    Return (0x0F)
                }
            }


   1E663: A4 0A 0F                                         // ...

            Name (LOW2, 0x012C)

   1E666: 08 4C 4F 57 32 0B 2C 01                          // .LOW2.,.

            Name (PUNT, One)

   1E66E: 08 50 55 4E 54 01                                // .PUNT.

            Name (LFCC, 0x1770)

   1E674: 08 4C 46 43 43 0B 70 17                          // .LFCC.p.

            Name (NBIF, 
   1E67C: 08 4E 42 49 46                                   // .NBIF

Package (0x0D)
            {
                Zero, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                One, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                "", 
                "", 
                "", 
                ""
            })

   1E681: 12 2F 0D 00 0C FF FF FF FF 0C FF FF FF FF 01 0C  // ./..............
   1E691: FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C FF  // ................
   1E6A1: FF FF FF 0C FF FF FF FF 0D 00 0D 00 0D 00 0D 00  // ................

            Name (PBIF, 
   1E6B1: 08 50 42 49 46                                   // .PBIF

Package (0x0D)
            {
                One, 
                0x1770, 
                0x1770, 
                One, 
                0x39D0, 
                0x0258, 
                0x012C, 
                0x3C, 
                0x3C, 
                "M3N", 
                " ", 
                "LIon", 
                "ASUSTeK"
            })

   1E6B6: 12 2E 0D 01 0B 70 17 0B 70 17 01 0B D0 39 0B 58  // .....p..p....9.X
   1E6C6: 02 0B 2C 01 0A 3C 0A 3C 0D 4D 33 4E 00 0D 20 00  // ..,..<.<.M3N.. .
   1E6D6: 0D 4C 49 6F 6E 00 0D 41 53 55 53 54 65 4B 00     // .LIon..ASUSTeK.

            Name (PBST, 
   1E6E5: 08 50 42 53 54                                   // .PBST

Package (0x04)
            {
                Zero, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF
            })

   1E6EA: 12 12 04 00 0C FF FF FF FF 0C FF FF FF FF 0C FF  // ................
   1E6FA: FF FF FF                                         // ...

            Name (BIXT, 
   1E6FD: 08 42 49 58 54                                   // .BIXT

Package (0x14)
            {
                Zero, 
                Zero, 
                0x1770, 
                0x1770, 
                One, 
                0x39D0, 
                0x0258, 
                0x012C, 
                Zero, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0x3C, 
                0x3C, 
                "M3N", 
                " ", 
                "LIon", 
                "ASUSTeK"
            })

   1E702: 12 4A 04 14 00 00 0B 70 17 0B 70 17 01 0B D0 39  // .J.....p..p....9
   1E712: 0B 58 02 0B 2C 01 00 0C FF FF FF FF 0C FF FF FF  // .X..,...........
   1E722: FF 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF  // ................
   1E732: 0A 3C 0A 3C 0D 4D 33 4E 00 0D 20 00 0D 4C 49 6F  // .<.<.M3N.. ..LIo
   1E742: 6E 00 0D 41 53 55 53 54 65 4B 00                 // n..ASUSTeK.

            Name (NBIX, 
   1E74D: 08 4E 42 49 58                                   // .NBIX

Package (0x14)
            {
                Zero, 
                Zero, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                One, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                Zero, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                "", 
                "", 
                "", 
                ""
            })

   1E752: 12 4B 04 14 00 00 0C FF FF FF FF 0C FF FF FF FF  // .K..............
   1E762: 01 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF  // ................
   1E772: 00 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF  // ................
   1E782: 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C  // ................
   1E792: FF FF FF FF 0D 00 0D 00 0D 00 0D 00              // ............

            Method (FBIF, 5, NotSerialized)
            {
                Store (Arg0, PUNT) /* \_SB_.PCI0.BAT0.PUNT */
                Store (Arg1, Local1)
                Store (Arg2, Local2)

   1E79E: 14 4B 09 46 42 49 46 05 70 68 50 55 4E 54 70 69  // .K.FBIF.phPUNTpi
   1E7AE: 61 70 6A 62                                      // apjb

                If (LEqual (PUNT, Zero))
                {
                    Multiply (Local1, 0x0A, Local1)

   1E7B2: A0 11 93 50 55 4E 54 00 77 61 0A 0A 61           // ...PUNT.wa..a

                    Multiply (Local2, 0x0A, Local2)
                }

                Store (Arg0, 
   1E7BF: 77 62 0A 0A 62 70 68                             // wb..bph

Index (PBIF, Zero))
                Store (Local1, 
   1E7C6: 88 50 42 49 46 00 00 70 61                       // .PBIF..pa

Index (PBIF, One))
                Store (Local2, 
   1E7CF: 88 50 42 49 46 01 00 70 62                       // .PBIF..pb

Index (PBIF, 0x02))
                Store (Local2, LFCC) /* \_SB_.PCI0.BAT0.LFCC */
                Store (Arg3, 
   1E7D8: 88 50 42 49 46 0A 02 00 70 62 4C 46 43 43 70 6B  // .PBIF...pbLFCCpk

Index (PBIF, 0x03))
                Store (Arg4, 
   1E7E8: 88 50 42 49 46 0A 03 00 70 6C                    // .PBIF...pl

Index (PBIF, 0x04))
                Divide (Local1, 0x0A, Local3, Local5)
                Store (Local5, 
   1E7F2: 88 50 42 49 46 0A 04 00 78 61 0A 0A 63 65 70 65  // .PBIF...xa..cepe

Index (PBIF, 0x05))
                Divide (Local1, 0x64, Local3, Local6)
                Store (Local6, 
   1E802: 88 50 42 49 46 0A 05 00 78 61 0A 64 63 66 70 66  // .PBIF...xa.dcfpf

Index (PBIF, 0x06))
                Store (Local6, LOW2) /* \_SB_.PCI0.BAT0.LOW2 */
                Divide (Local1, 0x64, Local3, Local7)
                Store (Local7, 
   1E812: 88 50 42 49 46 0A 06 00 70 66 4C 4F 57 32 78 61  // .PBIF...pfLOW2xa
   1E822: 0A 64 63 67 70 67                                // .dcgpg

Index (PBIF, 0x07))

   1E828: 88 50 42 49 46 0A 07 00                          // .PBIF...

                Store (Local7, 
   1E830: 70 67                                            // pg

Index (PBIF, 0x08))
            }


   1E832: 88 50 42 49 46 0A 08 00                          // .PBIF...

            Method (CBIF, 0, NotSerialized)
            {

   1E83A: 14 44 11 43 42 49 46 00                          // .D.CBIF.

                If (PUNT)
                {
                    Store (DerefOf (
   1E842: A0 4C 10 50 55 4E 54 70 83                       // .L.PUNTp.

Index (PBIF, 0x04)), Local0)
                    Store (Zero, 
   1E84B: 88 50 42 49 46 0A 04 00 60 70 00                 // .PBIF...`p.

Index (PBIF, Zero))
                    Multiply (DerefOf (
   1E856: 88 50 42 49 46 00 00 77 83                       // .PBIF..w.

Index (PBIF, One)), Local0, 
   1E85F: 88 50 42 49 46 01 00 60                          // .PBIF..`

Index (PBIF, One))
                    Multiply (DerefOf (
   1E867: 88 50 42 49 46 01 00 77 83                       // .PBIF..w.

Index (PBIF, 0x02)), Local0, 
   1E870: 88 50 42 49 46 0A 02 00 60                       // .PBIF...`

Index (PBIF, 0x02))
                    Multiply (DerefOf (
   1E879: 88 50 42 49 46 0A 02 00 77 83                    // .PBIF...w.

Index (PBIF, 0x05)), Local0, 
   1E883: 88 50 42 49 46 0A 05 00 60                       // .PBIF...`

Index (PBIF, 0x05))
                    Multiply (DerefOf (
   1E88C: 88 50 42 49 46 0A 05 00 77 83                    // .PBIF...w.

Index (PBIF, 0x06)), Local0, 
   1E896: 88 50 42 49 46 0A 06 00 60                       // .PBIF...`

Index (PBIF, 0x06))
                    Multiply (DerefOf (
   1E89F: 88 50 42 49 46 0A 06 00 77 83                    // .PBIF...w.

Index (PBIF, 0x07)), Local0, 
   1E8A9: 88 50 42 49 46 0A 07 00 60                       // .PBIF...`

Index (PBIF, 0x07))
                    Multiply (DerefOf (
   1E8B2: 88 50 42 49 46 0A 07 00 77 83                    // .PBIF...w.

Index (PBIF, 0x08)), Local0, 
   1E8BC: 88 50 42 49 46 0A 08 00 60                       // .PBIF...`

Index (PBIF, 0x08))
                    Divide (DerefOf (
   1E8C5: 88 50 42 49 46 0A 08 00 78 83                    // .PBIF...x.

Index (PBIF, One)), 0x03E8, Local2, 
   1E8CF: 88 50 42 49 46 01 00 0B E8 03 62                 // .PBIF.....b

Index (PBIF, One))
                    Divide (DerefOf (
   1E8DA: 88 50 42 49 46 01 00 78 83                       // .PBIF..x.

Index (PBIF, 0x02)), 0x03E8, Local2, 
   1E8E3: 88 50 42 49 46 0A 02 00 0B E8 03 62              // .PBIF......b

Index (PBIF, 0x02))
                    Divide (DerefOf (
   1E8EF: 88 50 42 49 46 0A 02 00 78 83                    // .PBIF...x.

Index (PBIF, 0x05)), 0x03E8, Local2, 
   1E8F9: 88 50 42 49 46 0A 05 00 0B E8 03 62              // .PBIF......b

Index (PBIF, 0x05))
                    Divide (DerefOf (
   1E905: 88 50 42 49 46 0A 05 00 78 83                    // .PBIF...x.

Index (PBIF, 0x06)), 0x03E8, Local2, 
   1E90F: 88 50 42 49 46 0A 06 00 0B E8 03 62              // .PBIF......b

Index (PBIF, 0x06))
                    Divide (DerefOf (
   1E91B: 88 50 42 49 46 0A 06 00 78 83                    // .PBIF...x.

Index (PBIF, 0x07)), 0x03E8, Local2, 
   1E925: 88 50 42 49 46 0A 07 00 0B E8 03 62              // .PBIF......b

Index (PBIF, 0x07))

   1E931: 88 50 42 49 46 0A 07 00                          // .PBIF...

                    Divide (DerefOf (
   1E939: 78 83                                            // x.

Index (PBIF, 0x08)), 0x03E8, Local2, 
   1E93B: 88 50 42 49 46 0A 08 00 0B E8 03 62              // .PBIF......b

Index (PBIF, 0x08))
                }
            }


   1E947: 88 50 42 49 46 0A 08 00                          // .PBIF...

            Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
            {

   1E94F: 14 4B 10 5F 42 49 46 00                          // .K._BIF.

                If (LNot (^^LPCB.EC0.BATP (Zero)))
                {

   1E957: A0 18 92 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 42  // ...^^/.LPCBEC0_B
   1E967: 41 54 50 00                                      // ATP.

                    Return (NBIF) /* \_SB_.PCI0.BAT0.NBIF */
                }


   1E96B: A4 4E 42 49 46                                   // .NBIF

                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))
                {

   1E970: A0 1A 93 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 47  // ...^^/.LPCBEC0_G
   1E980: 42 54 54 00 0A FF                                // BTT...

                    Return (NBIF) /* \_SB_.PCI0.BAT0.NBIF */
                }

                BATO ()
                BATS (Zero)
                Store (^^LPCB.EC0.BIF9 (), 
   1E986: A4 4E 42 49 46 42 41 54 4F 42 41 54 53 00 70 5E  // .NBIFBATOBATS.p^
   1E996: 5E 2F 03 4C 50 43 42 45 43 30 5F 42 49 46 39     // ^/.LPCBEC0_BIF9

Index (PBIF, 0x09))
                Store (ONAM, 
   1E9A5: 88 50 42 49 46 0A 09 00 70 4F 4E 41 4D           // .PBIF...pONAM

Index (PBIF, 0x0C))
                Store (^^LPCB.EC0.BIF0 (), Local0)
                Store (^^LPCB.EC0.BIF1 (), Local1)
                Store (^^LPCB.EC0.BIF2 (), Local2)
                Store (^^LPCB.EC0.BIF3 (), Local3)
                Store (^^LPCB.EC0.BIF4 (), Local4)

   1E9B2: 88 50 42 49 46 0A 0C 00 70 5E 5E 2F 03 4C 50 43  // .PBIF...p^^/.LPC
   1E9C2: 42 45 43 30 5F 42 49 46 30 60 70 5E 5E 2F 03 4C  // BEC0_BIF0`p^^/.L
   1E9D2: 50 43 42 45 43 30 5F 42 49 46 31 61 70 5E 5E 2F  // PCBEC0_BIF1ap^^/
   1E9E2: 03 4C 50 43 42 45 43 30 5F 42 49 46 32 62 70 5E  // .LPCBEC0_BIF2bp^
   1E9F2: 5E 2F 03 4C 50 43 42 45 43 30 5F 42 49 46 33 63  // ^/.LPCBEC0_BIF3c
   1EA02: 70 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 42 49 46  // p^^/.LPCBEC0_BIF
   1EA12: 34 64                                            // 4d

                If (
   1EA14: A0 2A 92                                         // .*.

LNotEqual (Local0, Ones))
                {

   1EA17: 93 60 FF                                         // .`.

                    If (
   1EA1A: A0 24 92                                         // .$.

LNotEqual (Local1, Ones))
                    {

   1EA1D: 93 61 FF                                         // .a.

                        If (
   1EA20: A0 1E 92                                         // ...

LNotEqual (Local2, Ones))
                        {

   1EA23: 93 62 FF                                         // .b.

                            If (
   1EA26: A0 18 92                                         // ...

LNotEqual (Local3, Ones))
                            {

   1EA29: 93 63 FF                                         // .c.

                                If (
   1EA2C: A0 12 92                                         // ...

LNotEqual (Local4, Ones))
                                {
                                    FBIF (Local0, Local1, Local2, Local3, Local4)
                                    CBIF ()
                                }
                            }
                        }
                    }
                }


   1EA2F: 93 64 FF 46 42 49 46 60 61 62 63 64 43 42 49 46  // .d.FBIF`abcdCBIF

                If (LEqual (PUNT, Zero))
                {

   1EA3F: A0 0C 93 50 55 4E 54 00                          // ...PUNT.

                    Multiply (Local2, 0x0A, Local2)
                }

                Store (Local2, LFCC) /* \_SB_.PCI0.BAT0.LFCC */
                BATR ()

   1EA47: 77 62 0A 0A 62 70 62 4C 46 43 43 42 41 54 52     // wb..bpbLFCCBATR

                Return (PBIF) /* \_SB_.PCI0.BAT0.PBIF */
            }


   1EA56: A4 50 42 49 46                                   // .PBIF

            Method (FBST, 4, NotSerialized)
            {
                And (Arg1, 0xFFFF, Local1)
                Store (Zero, Local0)

   1EA5B: 14 43 12 46 42 53 54 04 7B 69 0B FF FF 61 70 00  // .C.FBST.{i...ap.
   1EA6B: 60                                               // `

                If (^^LPCB.EC0.ACAP ())
                {

   1EA6C: A0 14 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 41 43  // ..^^/.LPCBEC0_AC
   1EA7C: 41 50                                            // AP

                    Store (One, Local0)
                }


   1EA7E: 70 01 60                                         // p.`

                If (Local0)
                {

   1EA81: A0 12 60                                         // ..`

                    If (CHGS (Zero))
                    {

   1EA84: A0 0A 43 48 47 53 00                             // ..CHGS.

                        Store (0x02, Local0)
                    }

   1EA8B: 70 0A 02 60                                      // p..`

                    Else
                    {

   1EA8F: A1 04                                            // ..

                        Store (One, Local0)
                    }
                }

   1EA91: 70 01 60                                         // p.`

                Else
                {

   1EA94: A1 04                                            // ..

                    Store (One, Local0)
                }


   1EA96: 70 01 60                                         // p.`

                If (BLLO)
                {
                    ShiftLeft (One, 0x02, Local2)

   1EA99: A0 0E 42 4C 4C 4F 79 01 0A 02 62                 // ..BLLOy...b

                    Or (Local0, Local2, Local0)
                }


   1EAA4: 7D 60 62 60                                      // }`b`

                If (And (^^LPCB.EC0.EB0S, 0x08))
                {
                    ShiftLeft (One, 0x02, Local2)

   1EAA8: A0 1E 7B 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 45  // ..{^^/.LPCBEC0_E
   1EAB8: 42 30 53 0A 08 00 79 01 0A 02 62                 // B0S...y...b

                    Or (Local0, Local2, Local0)
                }


   1EAC3: 7D 60 62 60                                      // }`b`

                If (
   1EAC7: A0 0D 92                                         // ...

LGreaterEqual (Local1, 0x8000))
                {

   1EACA: 95 61 0B 00 80                                   // .a...

                    Subtract (0xFFFF, Local1, Local1)
                }

                Store (Arg2, Local2)

   1EACF: 74 0B FF FF 61 61 70 6A 62                       // t...aapjb

                If (LEqual (PUNT, Zero))
                {
                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)

   1EAD8: A0 1F 93 50 55 4E 54 00 77 61 5E 5E 2F 03 4C 50  // ...PUNT.wa^^/.LP
   1EAE8: 43 42 45 43 30 5F 42 30 44 56 61                 // CBEC0_B0DVa

                    Multiply (Local2, 0x0A, Local2)
                }

                And (Local0, 0x02, Local3)

   1EAF3: 77 62 0A 0A 62 7B 60 0A 02 63                    // wb..b{`..c

                If (LNot (Local3))
                {
                    Subtract (LFCC, Local2, Local3)
                    Divide (LFCC, 0xC8, Local4, Local5)

   1EAFD: A0 1E 92 63 74 4C 46 43 43 62 63 78 4C 46 43 43  // ...ctLFCCbcxLFCC
   1EB0D: 0A C8 64 65                                      // ..de

                    If (LLess (Local3, Local5))
                    {

   1EB11: A0 0A 95 63 65                                   // ...ce

                        Store (LFCC, Local2)
                    }
                }

   1EB16: 70 4C 46 43 43 62                                // pLFCCb

                Else
                {
                    Divide (LFCC, 0xC8, Local4, Local5)
                    Subtract (LFCC, Local5, Local4)

   1EB1C: A1 19 78 4C 46 43 43 0A C8 64 65 74 4C 46 43 43  // ..xLFCC..detLFCC
   1EB2C: 65 64                                            // ed

                    If (LGreater (Local2, Local4))
                    {

   1EB2E: A0 07 94 62 64                                   // ...bd

                        Store (Local4, Local2)
                    }
                }


   1EB33: 70 64 62                                         // pdb

                If (LNot (^^LPCB.EC0.ACAP ()))
                {
                    Divide (Local2, MBLF, Local3, Local4)

   1EB36: A0 22 92 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 41  // .".^^/.LPCBEC0_A
   1EB46: 43 41 50 78 62 4D 42 4C 46 63 64                 // CAPxbMBLFcd

                    If (LLess (Local1, Local4))
                    {

   1EB51: A0 07 95 61 64                                   // ...ad

                        Store (Local4, Local1)
                    }
                }

                Store (Local0, 
   1EB56: 70 64 61 70 60                                   // pdap`

Index (PBST, Zero))
                Store (Local1, 
   1EB5B: 88 50 42 53 54 00 00 70 61                       // .PBST..pa

Index (PBST, One))
                Store (Local2, 
   1EB64: 88 50 42 53 54 01 00 70 62                       // .PBST..pb

Index (PBST, 0x02))

   1EB6D: 88 50 42 53 54 0A 02 00                          // .PBST...

                Store (Arg3, 
   1EB75: 70 6B                                            // pk

Index (PBST, 0x03))
            }


   1EB77: 88 50 42 53 54 0A 03 00                          // .PBST...

            Method (CBST, 0, NotSerialized)
            {

   1EB7F: 14 40 08 43 42 53 54 00                          // .@.CBST.

                If (PUNT)
                {
                    Store (^^LPCB.EC0.B0DV, 
   1EB87: A0 48 07 50 55 4E 54 70 5E 5E 2F 03 4C 50 43 42  // .H.PUNTp^^/.LPCB
   1EB97: 45 43 30 5F 42 30 44 56                          // EC0_B0DV

Index (PBST, 0x03))
                    Store (DerefOf (
   1EB9F: 88 50 42 53 54 0A 03 00 70 83                    // .PBST...p.

Index (PBST, 0x03)), Local0)
                    Multiply (DerefOf (
   1EBA9: 88 50 42 53 54 0A 03 00 60 77 83                 // .PBST...`w.

Index (PBST, One)), Local0, 
   1EBB4: 88 50 42 53 54 01 00 60                          // .PBST..`

Index (PBST, One))
                    Divide (DerefOf (
   1EBBC: 88 50 42 53 54 01 00 78 83                       // .PBST..x.

Index (PBST, One)), 0x03E8, Local1, 
   1EBC5: 88 50 42 53 54 01 00 0B E8 03 61                 // .PBST.....a

Index (PBST, One))
                    Multiply (DerefOf (
   1EBD0: 88 50 42 53 54 01 00 77 83                       // .PBST..w.

Index (PBST, 0x02)), Local0, 
   1EBD9: 88 50 42 53 54 0A 02 00 60                       // .PBST...`

Index (PBST, 0x02))

   1EBE2: 88 50 42 53 54 0A 02 00                          // .PBST...

                    Divide (DerefOf (
   1EBEA: 78 83                                            // x.

Index (PBST, 0x02)), 0x03E8, Local1, 
   1EBEC: 88 50 42 53 54 0A 02 00 0B E8 03 61              // .PBST......a

Index (PBST, 0x02))
                }
            }


   1EBF8: 88 50 42 53 54 0A 02 00                          // .PBST...

            Method (_BST, 0, NotSerialized)  // _BST: Battery Status
            {
                Store (Zero, 
   1EC00: 14 48 0F 5F 42 53 54 00 70 00                    // .H._BST.p.

Index (PBST, Zero))
                Store (Ones, 
   1EC0A: 88 50 42 53 54 00 00 70 FF                       // .PBST..p.

Index (PBST, One))
                Store (Ones, 
   1EC13: 88 50 42 53 54 01 00 70 FF                       // .PBST..p.

Index (PBST, 0x02))
                Store (Ones, 
   1EC1C: 88 50 42 53 54 0A 02 00 70 FF                    // .PBST...p.

Index (PBST, 0x03))

   1EC26: 88 50 42 53 54 0A 03 00                          // .PBST...

                If (LNot (^^LPCB.EC0.BATP (Zero)))
                {
                    Store (One, 
   1EC2E: A0 21 92 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 42  // .!.^^/.LPCBEC0_B
   1EC3E: 41 54 50 00 70 01                                // ATP.p.

Index (PBST, Zero))

   1EC44: 88 50 42 53 54 00 00                             // .PBST..

                    Return (PBST) /* \_SB_.PCI0.BAT0.PBST */
                }


   1EC4B: A4 50 42 53 54                                   // .PBST

                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))
                {

   1EC50: A0 1A 93 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 47  // ...^^/.LPCBEC0_G
   1EC60: 42 54 54 00 0A FF                                // BTT...

                    Return (PBST) /* \_SB_.PCI0.BAT0.PBST */
                }


   1EC66: A4 50 42 53 54                                   // .PBST

                If (MES4)
                {
                    Decrement (MES4)

   1EC6B: A0 0F 4D 45 53 34 76 4D 45 53 34                 // ..MES4vMES4

                    Return (PBST) /* \_SB_.PCI0.BAT0.PBST */
                }

                BATO ()
                BATS (Zero)
                Store (^^LPCB.EC0.BSTS (), Local0)
                Store (^^LPCB.EC0.BCRT (), Local1)
                Store (^^LPCB.EC0.BRCP (), Local2)
                Store (^^LPCB.EC0.BVOT (), Local3)

   1EC76: A4 50 42 53 54 42 41 54 4F 42 41 54 53 00 70 5E  // .PBSTBATOBATS.p^
   1EC86: 5E 2F 03 4C 50 43 42 45 43 30 5F 42 53 54 53 60  // ^/.LPCBEC0_BSTS`
   1EC96: 70 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 42 43 52  // p^^/.LPCBEC0_BCR
   1ECA6: 54 61 70 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 42  // Tap^^/.LPCBEC0_B
   1ECB6: 52 43 50 62 70 5E 5E 2F 03 4C 50 43 42 45 43 30  // RCPbp^^/.LPCBEC0
   1ECC6: 5F 42 56 4F 54 63                                // _BVOTc

                If (
   1ECCC: A0 23 92                                         // .#.

LNotEqual (Local0, Ones))
                {

   1ECCF: 93 60 FF                                         // .`.

                    If (
   1ECD2: A0 1D 92                                         // ...

LNotEqual (Local1, Ones))
                    {

   1ECD5: 93 61 FF                                         // .a.

                        If (
   1ECD8: A0 17 92                                         // ...

LNotEqual (Local2, Ones))
                        {

   1ECDB: 93 62 FF                                         // .b.

                            If (
   1ECDE: A0 11 92                                         // ...

LNotEqual (Local3, Ones))
                            {
                                FBST (Local0, Local1, Local2, Local3)
                                CBST ()
                            }
                        }
                    }
                }

                BATR ()

   1ECE1: 93 63 FF 46 42 53 54 60 61 62 63 43 42 53 54 42  // .c.FBST`abcCBSTB
   1ECF1: 41 54 52                                         // ATR

                Return (PBST) /* \_SB_.PCI0.BAT0.PBST */
            }


   1ECF4: A4 50 42 53 54                                   // .PBST

            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended
            {

   1ECF9: 14 49 26 5F 42 49 58 00                          // .I&_BIX.

                If (LNot (^^LPCB.EC0.BATP (Zero)))
                {

   1ED01: A0 18 92 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 42  // ...^^/.LPCBEC0_B
   1ED11: 41 54 50 00                                      // ATP.

                    Return (NBIX) /* \_SB_.PCI0.BAT0.NBIX */
                }


   1ED15: A4 4E 42 49 58                                   // .NBIX

                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))
                {

   1ED1A: A0 1A 93 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 47  // ...^^/.LPCBEC0_G
   1ED2A: 42 54 54 00 0A FF                                // BTT...

                    Return (NBIX) /* \_SB_.PCI0.BAT0.NBIX */
                }

                _BIF ()
                Store (DerefOf (
   1ED30: A4 4E 42 49 58 5F 42 49 46 70 83                 // .NBIX_BIFp.

Index (PBIF, Zero)), 
   1ED3B: 88 50 42 49 46 00 00                             // .PBIF..

Index (BIXT, One))
                Store (DerefOf (
   1ED42: 88 42 49 58 54 01 00 70 83                       // .BIXT..p.

Index (PBIF, One)), 
   1ED4B: 88 50 42 49 46 01 00                             // .PBIF..

Index (BIXT, 0x02))
                Store (DerefOf (
   1ED52: 88 42 49 58 54 0A 02 00 70 83                    // .BIXT...p.

Index (PBIF, 0x02)), 
   1ED5C: 88 50 42 49 46 0A 02 00                          // .PBIF...

Index (BIXT, 0x03))
                Store (DerefOf (
   1ED64: 88 42 49 58 54 0A 03 00 70 83                    // .BIXT...p.

Index (PBIF, 0x03)), 
   1ED6E: 88 50 42 49 46 0A 03 00                          // .PBIF...

Index (BIXT, 0x04))
                Store (DerefOf (
   1ED76: 88 42 49 58 54 0A 04 00 70 83                    // .BIXT...p.

Index (PBIF, 0x04)), 
   1ED80: 88 50 42 49 46 0A 04 00                          // .PBIF...

Index (BIXT, 0x05))
                Store (DerefOf (
   1ED88: 88 42 49 58 54 0A 05 00 70 83                    // .BIXT...p.

Index (PBIF, 0x05)), 
   1ED92: 88 50 42 49 46 0A 05 00                          // .PBIF...

Index (BIXT, 0x06))
                Store (DerefOf (
   1ED9A: 88 42 49 58 54 0A 06 00 70 83                    // .BIXT...p.

Index (PBIF, 0x06)), 
   1EDA4: 88 50 42 49 46 0A 06 00                          // .PBIF...

Index (BIXT, 0x07))
                Store (DerefOf (
   1EDAC: 88 42 49 58 54 0A 07 00 70 83                    // .BIXT...p.

Index (PBIF, 0x07)), 
   1EDB6: 88 50 42 49 46 0A 07 00                          // .PBIF...

Index (BIXT, 0x0E))
                Store (DerefOf (
   1EDBE: 88 42 49 58 54 0A 0E 00 70 83                    // .BIXT...p.

Index (PBIF, 0x08)), 
   1EDC8: 88 50 42 49 46 0A 08 00                          // .PBIF...

Index (BIXT, 0x0F))
                Store (DerefOf (
   1EDD0: 88 42 49 58 54 0A 0F 00 70 83                    // .BIXT...p.

Index (PBIF, 0x09)), 
   1EDDA: 88 50 42 49 46 0A 09 00                          // .PBIF...

Index (BIXT, 0x10))
                Store (DerefOf (
   1EDE2: 88 42 49 58 54 0A 10 00 70 83                    // .BIXT...p.

Index (PBIF, 0x0A)), 
   1EDEC: 88 50 42 49 46 0A 0A 00                          // .PBIF...

Index (BIXT, 0x11))
                Store (DerefOf (
   1EDF4: 88 42 49 58 54 0A 11 00 70 83                    // .BIXT...p.

Index (PBIF, 0x0B)), 
   1EDFE: 88 50 42 49 46 0A 0B 00                          // .PBIF...

Index (BIXT, 0x12))
                Store (DerefOf (
   1EE06: 88 42 49 58 54 0A 12 00 70 83                    // .BIXT...p.

Index (PBIF, 0x0C)), 
   1EE10: 88 50 42 49 46 0A 0C 00                          // .PBIF...

Index (BIXT, 0x13))

   1EE18: 88 42 49 58 54 0A 13 00                          // .BIXT...

                If (LEqual (DerefOf (
   1EE20: A0 46 11 93 83                                   // .F...

Index (BIXT, One)), One))
                {
                    Store (Zero, 
   1EE25: 88 42 49 58 54 01 00 01 70 00                    // .BIXT...p.

Index (BIXT, One))
                    Store (DerefOf (
   1EE2F: 88 42 49 58 54 01 00 70 83                       // .BIXT..p.

Index (BIXT, 0x05)), Local0)
                    Multiply (DerefOf (
   1EE38: 88 42 49 58 54 0A 05 00 60 77 83                 // .BIXT...`w.

Index (BIXT, 0x02)), Local0, 
   1EE43: 88 42 49 58 54 0A 02 00 60                       // .BIXT...`

Index (BIXT, 0x02))
                    Multiply (DerefOf (
   1EE4C: 88 42 49 58 54 0A 02 00 77 83                    // .BIXT...w.

Index (BIXT, 0x03)), Local0, 
   1EE56: 88 42 49 58 54 0A 03 00 60                       // .BIXT...`

Index (BIXT, 0x03))
                    Multiply (DerefOf (
   1EE5F: 88 42 49 58 54 0A 03 00 77 83                    // .BIXT...w.

Index (BIXT, 0x06)), Local0, 
   1EE69: 88 42 49 58 54 0A 06 00 60                       // .BIXT...`

Index (BIXT, 0x06))
                    Multiply (DerefOf (
   1EE72: 88 42 49 58 54 0A 06 00 77 83                    // .BIXT...w.

Index (BIXT, 0x07)), Local0, 
   1EE7C: 88 42 49 58 54 0A 07 00 60                       // .BIXT...`

Index (BIXT, 0x07))
                    Multiply (DerefOf (
   1EE85: 88 42 49 58 54 0A 07 00 77 83                    // .BIXT...w.

Index (BIXT, 0x0E)), Local0, 
   1EE8F: 88 42 49 58 54 0A 0E 00 60                       // .BIXT...`

Index (BIXT, 0x0E))
                    Multiply (DerefOf (
   1EE98: 88 42 49 58 54 0A 0E 00 77 83                    // .BIXT...w.

Index (BIXT, 0x0F)), Local0, 
   1EEA2: 88 42 49 58 54 0A 0F 00 60                       // .BIXT...`

Index (BIXT, 0x0F))
                    Divide (DerefOf (
   1EEAB: 88 42 49 58 54 0A 0F 00 78 83                    // .BIXT...x.

Index (BIXT, 0x02)), 0x03E8, Local0, 
   1EEB5: 88 42 49 58 54 0A 02 00 0B E8 03 60              // .BIXT......`

Index (BIXT, 0x02))
                    Divide (DerefOf (
   1EEC1: 88 42 49 58 54 0A 02 00 78 83                    // .BIXT...x.

Index (BIXT, 0x03)), 0x03E8, Local0, 
   1EECB: 88 42 49 58 54 0A 03 00 0B E8 03 60              // .BIXT......`

Index (BIXT, 0x03))
                    Divide (DerefOf (
   1EED7: 88 42 49 58 54 0A 03 00 78 83                    // .BIXT...x.

Index (BIXT, 0x06)), 0x03E8, Local0, 
   1EEE1: 88 42 49 58 54 0A 06 00 0B E8 03 60              // .BIXT......`

Index (BIXT, 0x06))
                    Divide (DerefOf (
   1EEED: 88 42 49 58 54 0A 06 00 78 83                    // .BIXT...x.

Index (BIXT, 0x07)), 0x03E8, Local0, 
   1EEF7: 88 42 49 58 54 0A 07 00 0B E8 03 60              // .BIXT......`

Index (BIXT, 0x07))
                    Divide (DerefOf (
   1EF03: 88 42 49 58 54 0A 07 00 78 83                    // .BIXT...x.

Index (BIXT, 0x0E)), 0x03E8, Local0, 
   1EF0D: 88 42 49 58 54 0A 0E 00 0B E8 03 60              // .BIXT......`

Index (BIXT, 0x0E))

   1EF19: 88 42 49 58 54 0A 0E 00                          // .BIXT...

                    Divide (DerefOf (
   1EF21: 78 83                                            // x.

Index (BIXT, 0x0F)), 0x03E8, Local0, 
   1EF23: 88 42 49 58 54 0A 0F 00 0B E8 03 60              // .BIXT......`

Index (BIXT, 0x0F))
                }

                Store (^^LPCB.EC0.B0C3, 
   1EF2F: 88 42 49 58 54 0A 0F 00 70 5E 5E 2F 03 4C 50 43  // .BIXT...p^^/.LPC
   1EF3F: 42 45 43 30 5F 42 30 43 33                       // BEC0_B0C3

Index (BIXT, 0x08))
                Store (0x0001869F, 
   1EF48: 88 42 49 58 54 0A 08 00 70 0C 9F 86 01 00        // .BIXT...p.....

Index (BIXT, 0x09))

   1EF56: 88 42 49 58 54 0A 09 00                          // .BIXT...

                Return (BIXT) /* \_SB_.PCI0.BAT0.BIXT */
            }


   1EF5E: A4 42 49 58 54                                   // .BIXT

            Method (_BTP, 1, NotSerialized)  // _BTP: Battery Trip Point
            {
                ^^LPCB.EC0.ST8E (0x29, 0xFF)
                ^^LPCB.EC0.ST8E (0x2A, 0xFF)
                ^^LPCB.EC0.ST8E (0x28, 0x0F)

   1EF63: 14 48 09 5F 42 54 50 01 5E 5E 2F 03 4C 50 43 42  // .H._BTP.^^/.LPCB
   1EF73: 45 43 30 5F 53 54 38 45 0A 29 0A FF 5E 5E 2F 03  // EC0_ST8E.)..^^/.
   1EF83: 4C 50 43 42 45 43 30 5F 53 54 38 45 0A 2A 0A FF  // LPCBEC0_ST8E.*..
   1EF93: 5E 5E 2F 03 4C 50 43 42 45 43 30 5F 53 54 38 45  // ^^/.LPCBEC0_ST8E
   1EFA3: 0A 28 0A 0F                                      // .(..

                If (
   1EFA7: A0 44 05 92                                      // .D..

LNotEqual (Arg0, Zero))
                {
                    Store (DerefOf (
   1EFAB: 93 68 00 70 83                                   // .h.p.

Index (PBIF, 0x04)), Local0)
                    Multiply (Arg0, 0x03E8, Local1)
                    Divide (Local1, Local0, Local2, Local3)
                    ^^LPCB.EC0.ST9E (0x29, 0xFF, 
   1EFB0: 88 50 42 49 46 0A 04 00 60 77 68 0B E8 03 61 78  // .PBIF...`wh...ax
   1EFC0: 61 60 62 63 5E 5E 2F 03 4C 50 43 42 45 43 30 5F  // a`bc^^/.LPCBEC0_
   1EFD0: 53 54 39 45 0A 29 0A FF                          // ST9E.)..

And (Local3, 0xFF))
                    ShiftRight (Local3, 0x08, Local2)
                    And (Local2, 0xFF, Local2)
                    ^^LPCB.EC0.ST9E (0x2A, 0xFF, Local2)
                }
            }
        }
    }


   1EFD8: 7B 63 0A FF 00 7A 63 0A 08 62 7B 62 0A FF 62 5E  // {c...zc..b{b..b^
   1EFE8: 5E 2F 03 4C 50 43 42 45 43 30 5F 53 54 39 45 0A  // ^/.LPCBEC0_ST9E.
   1EFF8: 2A 0A FF 62                                      // *..b

    Scope (_SB.PCI0)
    {

   1EFFC: 10 42 07 2E 5F 53 42 5F 50 43 49 30              // .B.._SB_PCI0

        Name (B0CR, Zero)

   1F008: 08 42 30 43 52 00                                // .B0CR.

        Name (B1CR, Zero)

   1F00E: 08 42 31 43 52 00                                // .B1CR.

        Method (GGCC, 1, Serialized)
        {
            BATO ()
            BATS (Arg0)
            Store (^LPCB.EC0.BCRT (), Local0)
            BATR ()

   1F014: 14 4A 05 47 47 43 43 09 42 41 54 4F 42 41 54 53  // .J.GGCC.BATOBATS
   1F024: 68 70 5E 2F 03 4C 50 43 42 45 43 30 5F 42 43 52  // hp^/.LPCBEC0_BCR
   1F034: 54 60 42 41 54 52                                // T`BATR

            If (LEqual (Local0, Ones))
            {

   1F03A: A0 15 93 60 FF                                   // ...`.

                If (Arg0)
                {

   1F03F: A0 08 68                                         // ..h

                    Store (B1CR, Local0)
                }

   1F042: 70 42 31 43 52 60                                // pB1CR`

                Else
                {

   1F048: A1 07                                            // ..

                    Store (B0CR, Local0)
                }
            }

            And (Local0, 0x8000, Local1)

   1F04A: 70 42 30 43 52 60 7B 60 0B 00 80 61              // pB0CR`{`...a

            If (Local1)
            {

   1F056: A0 05 61                                         // ..a

                Store (Zero, Local0)
            }


   1F059: 70 00 60                                         // p.`

            If (Arg0)
            {

   1F05C: A0 08 68                                         // ..h

                Store (Local0, B1CR) /* \_SB_.PCI0.B1CR */
            }

   1F05F: 70 60 42 31 43 52                                // p`B1CR

            Else
            {

   1F065: A1 07                                            // ..

                Store (Local0, B0CR) /* \_SB_.PCI0.B0CR */
            }


   1F067: 70 60 42 30 43 52                                // p`B0CR

            Return (Local0)
        }
    }


   1F06D: A4 60                                            // .`

    Scope (_SB.PCI0.LPCB.EC0)
    {

   1F06F: 10 4E 23 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43  // .N#/._SB_PCI0LPC
   1F07F: 42 45 43 30 5F                                   // BEC0_

        Name (BADR, 0x0B)

   1F084: 08 42 41 44 52 0A 0B                             // .BADR..

        Name (CADR, 0x09)

   1F08B: 08 43 41 44 52 0A 09                             // .CADR..

        Name (SADR, 0x0A)

   1F092: 08 53 41 44 52 0A 0A                             // .SADR..

        Method (ALMH, 1, NotSerialized)
        {

   1F099: 14 14 41 4C 4D 48 01                             // ..ALMH.

            If (LEqual (Arg0, BADR))
            {
                NBAT (0x80)
            }
        }


   1F0A0: A0 0D 93 68 42 41 44 52 4E 42 41 54 0A 80        // ...hBADRNBAT..

        Method (BIFW, 1, NotSerialized)
        {
            Store (SMBR (RDWD, BADR, Arg0), Local0)
            Store (DerefOf (
   1F0AE: 14 2A 42 49 46 57 01 70 53 4D 42 52 52 44 57 44  // .*BIFW.pSMBRRDWD
   1F0BE: 42 41 44 52 68 60 70 83                          // BADRh`p.

Index (Local0, Zero)), Local1)

   1F0C6: 88 60 00 00 61                                   // .`..a

            If (Local1)
            {

   1F0CB: A0 04 61                                         // ..a

                Return (Ones)
            }

   1F0CE: A4 FF                                            // ..

            Else
            {

   1F0D0: A1 08                                            // ..

                Return (
   1F0D2: A4                                               // .

DerefOf (
   1F0D3: 83                                               // .

Index (Local0, 0x02)))
            }
        }


   1F0D4: 88 60 0A 02 00                                   // .`...

        Method (BIF0, 0, NotSerialized)
        {

   1F0D9: 14 3C 42 49 46 30 00                             // .<BIF0.

            If (ECAV ())
            {

   1F0E0: A0 2E 45 43 41 56                                // ..ECAV

                If (BSLF)
                {

   1F0E6: A0 0B 42 53 4C 46                                // ..BSLF

                    Store (B1MD, Local0)
                }

   1F0EC: 70 42 31 4D 44 60                                // pB1MD`

                Else
                {

   1F0F2: A1 07                                            // ..

                    Store (B0MD, Local0)
                }


   1F0F4: 70 42 30 4D 44 60                                // pB0MD`

                If (
   1F0FA: A0 14 92                                         // ...

LNotEqual (Local0, 0xFFFF))
                {
                    ShiftRight (Local0, 0x0F, Local1)
                    And (Local1, One, Local1)

   1F0FD: 93 60 0B FF FF 7A 60 0A 0F 61 7B 61 01 61        // .`...z`..a{a.a

                    XOr (Local1, One, Local0)
                }
            }

   1F10B: 7F 61 01 60                                      // .a.`

            Else
            {

   1F10F: A1 04                                            // ..

                Store (Ones, Local0)
            }


   1F111: 70 FF 60                                         // p.`

            Return (Local0)
        }


   1F114: A4 60                                            // .`

        Method (BIF1, 0, NotSerialized)
        {

   1F116: 14 2D 42 49 46 31 00                             // .-BIF1.

            If (ECAV ())
            {

   1F11D: A0 1F 45 43 41 56                                // ..ECAV

                If (BSLF)
                {

   1F123: A0 0B 42 53 4C 46                                // ..BSLF

                    Store (B1DC, Local0)
                }

   1F129: 70 42 31 44 43 60                                // pB1DC`

                Else
                {

   1F12F: A1 07                                            // ..

                    Store (B0DC, Local0)
                }


   1F131: 70 42 30 44 43 60                                // pB0DC`

                And (Local0, 0xFFFF, Local0)
            }

   1F137: 7B 60 0B FF FF 60                                // {`...`

            Else
            {

   1F13D: A1 04                                            // ..

                Store (Ones, Local0)
            }


   1F13F: 70 FF 60                                         // p.`

            Return (Local0)
        }


   1F142: A4 60                                            // .`

        Method (BIF2, 0, NotSerialized)
        {

   1F144: 14 2D 42 49 46 32 00                             // .-BIF2.

            If (ECAV ())
            {

   1F14B: A0 1F 45 43 41 56                                // ..ECAV

                If (BSLF)
                {

   1F151: A0 0B 42 53 4C 46                                // ..BSLF

                    Store (B1FC, Local0)
                }

   1F157: 70 42 31 46 43 60                                // pB1FC`

                Else
                {

   1F15D: A1 07                                            // ..

                    Store (B0FC, Local0)
                }


   1F15F: 70 42 30 46 43 60                                // pB0FC`

                And (Local0, 0xFFFF, Local0)
            }

   1F165: 7B 60 0B FF FF 60                                // {`...`

            Else
            {

   1F16B: A1 04                                            // ..

                Store (Ones, Local0)
            }


   1F16D: 70 FF 60                                         // p.`

            Return (Local0)
        }


   1F170: A4 60                                            // .`

        Method (BIF3, 0, NotSerialized)
        {

   1F172: 14 3C 42 49 46 33 00                             // .<BIF3.

            If (ECAV ())
            {

   1F179: A0 2E 45 43 41 56                                // ..ECAV

                If (BSLF)
                {

   1F17F: A0 0B 42 53 4C 46                                // ..BSLF

                    Store (B1MD, Local0)
                }

   1F185: 70 42 31 4D 44 60                                // pB1MD`

                Else
                {

   1F18B: A1 07                                            // ..

                    Store (B0MD, Local0)
                }


   1F18D: 70 42 30 4D 44 60                                // pB0MD`

                If (
   1F193: A0 14 92                                         // ...

LNotEqual (Local0, 0xFFFF))
                {
                    ShiftRight (Local0, 0x09, Local0)
                    And (Local0, One, Local0)

   1F196: 93 60 0B FF FF 7A 60 0A 09 60 7B 60 01 60        // .`...z`..`{`.`

                    XOr (Local0, One, Local0)
                }
            }

   1F1A4: 7F 60 01 60                                      // .`.`

            Else
            {

   1F1A8: A1 04                                            // ..

                Store (Ones, Local0)
            }


   1F1AA: 70 FF 60                                         // p.`

            Return (Local0)
        }


   1F1AD: A4 60                                            // .`

        Method (BIF4, 0, NotSerialized)
        {

   1F1AF: 14 27 42 49 46 34 00                             // .'BIF4.

            If (ECAV ())
            {

   1F1B6: A0 19 45 43 41 56                                // ..ECAV

                If (BSLF)
                {

   1F1BC: A0 0B 42 53 4C 46                                // ..BSLF

                    Store (B1DV, Local0)
                }

   1F1C2: 70 42 31 44 56 60                                // pB1DV`

                Else
                {

   1F1C8: A1 07                                            // ..

                    Store (B0DV, Local0)
                }
            }

   1F1CA: 70 42 30 44 56 60                                // pB0DV`

            Else
            {

   1F1D0: A1 04                                            // ..

                Store (Ones, Local0)
            }


   1F1D2: 70 FF 60                                         // p.`

            Return (Local0)
        }


   1F1D5: A4 60                                            // .`

        Method (BIF9, 0, NotSerialized)
        {

   1F1D7: 14 30 42 49 46 39 00                             // .0BIF9.

            Name (BSTR, 
   1F1DE: 08 42 53 54 52                                   // .BSTR

Buffer (0x20){})

   1F1E3: 11 03 0A 20                                      // ... 

            Name (DDDD, "ASUS Battery")
            Store (DDDD, BSTR) /* \_SB_.PCI0.LPCB.EC0_.BIF9.BSTR */

   1F1E7: 08 44 44 44 44 0D 41 53 55 53 20 42 61 74 74 65  // .DDDD.ASUS Batte
   1F1F7: 72 79 00 70 44 44 44 44 42 53 54 52              // ry.pDDDDBSTR

            Return (BSTR) /* \_SB_.PCI0.LPCB.EC0_.BIF9.BSTR */
        }


   1F203: A4 42 53 54 52                                   // .BSTR

        Method (BIFA, 0, NotSerialized)
        {

   1F208: 14 27 42 49 46 41 00                             // .'BIFA.

            If (ECAV ())
            {

   1F20F: A0 19 45 43 41 56                                // ..ECAV

                If (BSLF)
                {

   1F215: A0 0B 42 53 4C 46                                // ..BSLF

                    Store (B1SN, Local0)
                }

   1F21B: 70 42 31 53 4E 60                                // pB1SN`

                Else
                {

   1F221: A1 07                                            // ..

                    Store (B0SN, Local0)
                }
            }

   1F223: 70 42 30 53 4E 60                                // pB0SN`

            Else
            {

   1F229: A1 04                                            // ..

                Store (Ones, Local0)
            }


   1F22B: 70 FF 60                                         // p.`

            Return (Local0)
        }


   1F22E: A4 60                                            // .`

        Method (BSTS, 0, NotSerialized)
        {

   1F230: 14 1C 42 53 54 53 00                             // ..BSTS.

            If (BSLF)
            {

   1F237: A0 0B 42 53 4C 46                                // ..BSLF

                Store (B1ST, Local0)
            }

   1F23D: 70 42 31 53 54 60                                // pB1ST`

            Else
            {

   1F243: A1 07                                            // ..

                Store (B0ST, Local0)
            }


   1F245: 70 42 30 53 54 60                                // pB0ST`

            Return (Local0)
        }


   1F24B: A4 60                                            // .`

        Method (BCRT, 0, NotSerialized)
        {

   1F24D: 14 1C 42 43 52 54 00                             // ..BCRT.

            If (BSLF)
            {

   1F254: A0 0B 42 53 4C 46                                // ..BSLF

                Store (B1CC, Local0)
            }

   1F25A: 70 42 31 43 43 60                                // pB1CC`

            Else
            {

   1F260: A1 07                                            // ..

                Store (B0CC, Local0)
            }


   1F262: 70 42 30 43 43 60                                // pB0CC`

            Return (Local0)
        }


   1F268: A4 60                                            // .`

        Method (BRCP, 0, NotSerialized)
        {

   1F26A: 14 26 42 52 43 50 00                             // .&BRCP.

            If (BSLF)
            {

   1F271: A0 0B 42 53 4C 46                                // ..BSLF

                Store (B1RC, Local0)
            }

   1F277: 70 42 31 52 43 60                                // pB1RC`

            Else
            {

   1F27D: A1 07                                            // ..

                Store (B0RC, Local0)
            }


   1F27F: 70 42 30 52 43 60                                // pB0RC`

            If (LEqual (Local0, 0xFFFF))
            {

   1F285: A0 09 93 60 0B FF FF                             // ...`...

                Store (Ones, Local0)
            }


   1F28C: 70 FF 60                                         // p.`

            Return (Local0)
        }


   1F28F: A4 60                                            // .`

        Method (BVOT, 0, NotSerialized)
        {

   1F291: 14 1C 42 56 4F 54 00                             // ..BVOT.

            If (BSLF)
            {

   1F298: A0 0B 42 53 4C 46                                // ..BSLF

                Store (B1VL, Local0)
            }

   1F29E: 70 42 31 56 4C 60                                // pB1VL`

            Else
            {

   1F2A4: A1 07                                            // ..

                Store (B0VL, Local0)
            }


   1F2A6: 70 42 30 56 4C 60                                // pB0VL`

            Return (Local0)
        }
    }


   1F2AC: A4 60                                            // .`

    Scope (\)
    {

   1F2AE: 10 4E 06 5C 00                                   // .N.\.

        Method (CHGS, 1, Serialized)
        {
            Store (\_SB.PCI0.LPCB.EC0.BCHG (Arg0), Local0)

   1F2B3: 14 22 43 48 47 53 09 70 5C 2F 05 5F 53 42 5F 50  // ."CHGS.p\/._SB_P
   1F2C3: 43 49 30 4C 50 43 42 45 43 30 5F 42 43 48 47 68  // CI0LPCBEC0_BCHGh
   1F2D3: 60                                               // `

            Return (Local0)
        }


   1F2D4: A4 60                                            // .`

        Name (BSLF, Zero)

   1F2D6: 08 42 53 4C 46 00                                // .BSLF.

        Method (BATS, 1, Serialized)
        {

   1F2DC: 14 17 42 41 54 53 09                             // ..BATS.

            If (Arg0)
            {

   1F2E3: A0 08 68                                         // ..h

                Store (One, BSLF) /* \BSLF */
            }

   1F2E6: 70 01 42 53 4C 46                                // p.BSLF

            Else
            {

   1F2EC: A1 07                                            // ..

                Store (Zero, BSLF) /* \BSLF */
            }
        }


   1F2EE: 70 00 42 53 4C 46                                // p.BSLF

        Mutex (MMPX, 0x00)

   1F2F4: 5B 01 4D 4D 50 58 00                             // [.MMPX.

        Method (BATO, 0, Serialized)
        {

   1F2FB: 14 0E 42 41 54 4F 08                             // ..BATO.

            Acquire (MMPX, 0xFFFF)
        }


   1F302: 5B 23 4D 4D 50 58 FF FF                          // [#MMPX..

        Method (BATR, 0, Serialized)
        {

   1F30A: 14 0C 42 41 54 52 08                             // ..BATR.

            Release (MMPX)
        }


   1F311: 5B 27 4D 4D 50 58                                // ['MMPX

        Name (BLLO, Zero)
    }


   1F317: 08 42 4C 4C 4F 00                                // .BLLO.

    Scope (_SB.PCI0.LPCB.EC0)
    {

   1F31D: 10 4B 0C 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43  // .K./._SB_PCI0LPC
   1F32D: 42 45 43 30 5F                                   // BEC0_

        Method (_QA1, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            Store (DCPS (Zero), DCPF) /* \_SB_.DCPF */

   1F332: 14 29 5F 51 41 31 00 70 44 43 50 53 00 44 43 50  // .)_QA1.pDCPS.DCP
   1F342: 46                                               // F

            If (DCPF)
            {

   1F343: A0 0A 44 43 50 46                                // ..DCPF

                Sleep (0x07D0)
            }

            Notify (BAT0, 0x80) // Status Change

   1F349: 5B 22 0B D0 07 86 42 41 54 30 0A 80              // ["....BAT0..

            Notify (BAT0, 0x81) // Information Change
        }


   1F355: 86 42 41 54 30 0A 81                             // .BAT0..

        Method (_QA5, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            Store (One, BLLO) /* \BLLO */

   1F35C: 14 31 5F 51 41 35 00 70 01 42 4C 4C 4F           // .1_QA5.p.BLLO

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x6E)
            }

   1F369: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   1F379: 41 4E 45 0A 6E                                   // ANE.n

            ElseIf
   1F37E: A1 0F                                            // ..

 (BATP (Zero))
            {

   1F380: A0 0D 42 41 54 50 00                             // ..BATP.

                Notify (BAT0, 0x80) // Status Change
            }
        }


   1F387: 86 42 41 54 30 0A 80                             // .BAT0..

        Method (_QA3, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   1F38E: 14 30 5F 51 41 33 00                             // .0_QA3.

            If (BATP (Zero))
            {
                Store (BCLE (Zero), Local0)

   1F395: A0 29 42 41 54 50 00 70 42 43 4C 45 00 60        // .)BATP.pBCLE.`

                If (LEqual (Local0, Zero))
                {

   1F3A3: A0 0B 93 60 00                                   // ...`.

                    Notify (BAT0, 0x80) // Status Change
                }

   1F3A8: 86 42 41 54 30 0A 80                             // .BAT0..

                Else
                {
                    Notify (BAT0, 0x81) // Information Change

   1F3AF: A1 0F 86 42 41 54 30 0A 81                       // ...BAT0..

                    Notify (AC0, 0x80) // Status Change
                }
            }
        }


   1F3B8: 86 41 43 30 5F 0A 80                             // .AC0_..

        Method (BATP, 1, Serialized)
        {

   1F3BF: 14 15 42 41 54 50 09                             // ..BATP.

            If (Arg0)
            {

   1F3C6: A0 07 68                                         // ..h

                Return (DCP2) /* \_SB_.DCP2 */
            }

   1F3C9: A4 44 43 50 32                                   // .DCP2

            Else
            {

   1F3CE: A1 06                                            // ..

                Return (DCPF) /* \_SB_.DCPF */
            }
        }


   1F3D0: A4 44 43 50 46                                   // .DCPF

        Method (NBAT, 1, NotSerialized)
        {

   1F3D5: 14 13 4E 42 41 54 01                             // ..NBAT.

            If (BATP (Zero))
            {

   1F3DC: A0 0C 42 41 54 50 00                             // ..BATP.

                Notify (BAT0, Arg0)
            }
        }
    }


   1F3E3: 86 42 41 54 30 68                                // .BAT0h

    Scope (\)
    {

   1F3E9: 10 46 1F 5C 00                                   // .F.\.

        Name (MES4, Zero)

   1F3EE: 08 4D 45 53 34 00                                // .MES4.

        Method (OEMS, 1, NotSerialized)
        {

   1F3F4: 14 44 15 4F 45 4D 53 01                          // .D.OEMS.

            If (LEqual (ECUP, Zero))
            {
                \_SB.PCI0.LPCB.EC0.CSEE (0xAF)

   1F3FC: A0 26 93 45 43 55 50 00 5C 2F 05 5F 53 42 5F 50  // .&.ECUP.\/._SB_P
   1F40C: 43 49 30 4C 50 43 42 45 43 30 5F 43 53 45 45 0A  // CI0LPCBEC0_CSEE.
   1F41C: AF                                               // .

                Store (One, ECUP) /* \ECUP */
            }

            \_SB.PCI0.GFX0.OPTS (Arg0)

   1F41D: 70 01 45 43 55 50 5C 2F 04 5F 53 42 5F 50 43 49  // p.ECUP\/._SB_PCI
   1F42D: 30 47 46 58 30 4F 50 54 53 68                    // 0GFX0OPTSh

            If (LEqual (Arg0, 0x03))
            {

   1F437: A0 2B 93 68 0A 03                                // .+.h..

                If (
   1F43D: A0 17 92                                         // ...

LLessEqual (MSOS (), OSME))
                {

   1F440: 94 4D 53 4F 53 4F 53 4D 45                       // .MSOSOSME

                    Store (One, \_SB.WIDE)
                }

   1F449: 70 01 5C 2E 5F 53 42 5F 57 49 44 45              // p.\._SB_WIDE

                Else
                {

   1F455: A1 0D                                            // ..

                    Store (Zero, \_SB.WIDE)
                }
            }

            SBRS (Arg0)
            \_SB.PCI0.LPCB.EC0.EC0S (Arg0)
            Store (Arg0, \_SB.SLPN)
            DIAG (
   1F457: 70 00 5C 2E 5F 53 42 5F 57 49 44 45 53 42 52 53  // p.\._SB_WIDESBRS
   1F467: 68 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // h\/._SB_PCI0LPCB
   1F477: 45 43 30 5F 45 43 30 53 68 70 68 5C 2E 5F 53 42  // EC0_EC0Shph\._SB
   1F487: 5F 53 4C 50 4E 44 49 41 47                       // _SLPNDIAG

Add (Arg0, 0xD0))
            PPRJ (Arg0)
            Store (Arg0, \_SB.SLPT)

   1F490: 72 68 0A D0 00 50 50 52 4A 68 70 68 5C 2E 5F 53  // rh...PPRJhph\._S
   1F4A0: 42 5F 53 4C 50 54                                // B_SLPT

            If (Arg0)
            {
                STRP (One)
            }

            PRJS (Arg0)

   1F4A6: A0 07 68 53 54 52 50 01 50 52 4A 53 68           // ..hSTRP.PRJSh

            If (LEqual (Arg0, 0x03))
            {
                \_SB.PCI0.LPCB.EC0.ST8E (0x12, 0xFF)
                \_SB.PCI0.LPCB.EC0.ST9E (0x12, 0x05, One)

   1F4B3: A0 4F 08 93 68 0A 03 5C 2F 05 5F 53 42 5F 50 43  // .O..h..\/._SB_PC
   1F4C3: 49 30 4C 50 43 42 45 43 30 5F 53 54 38 45 0A 12  // I0LPCBEC0_ST8E..
   1F4D3: 0A FF 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // ..\/._SB_PCI0LPC
   1F4E3: 42 45 43 30 5F 53 54 39 45 0A 12 0A 05 01        // BEC0_ST9E.....

                If (LAnd (LEqual (\_SB.DP3S, One), 
   1F4F1: A0 35 90 93 5C 2E 5F 53 42 5F 44 50 33 53 01     // .5..\._SB_DP3S.

LEqual (\_SB.ACPF, Zero)))
                {
                    \_SB.PCI0.LPCB.EC0.ST9E (Zero, 0x08, One)
                }

   1F500: 93 5C 2E 5F 53 42 5F 41 43 50 46 00 5C 2F 05 5F  // .\._SB_ACPF.\/._
   1F510: 53 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 53  // SB_PCI0LPCBEC0_S
   1F520: 54 39 45 00 0A 08 01                             // T9E....

                Else
                {
                    \_SB.PCI0.LPCB.EC0.ST8E (Zero, 0x08)
                }
            }

            ISMI (0x9D)
        }


   1F527: A1 1B 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // ..\/._SB_PCI0LPC
   1F537: 42 45 43 30 5F 53 54 38 45 00 0A 08 49 53 4D 49  // BEC0_ST8E...ISMI
   1F547: 0A 9D                                            // ..

        Method (OEMW, 1, NotSerialized)
        {
            \_SB.ATKD.GENW (Arg0)
            \_SB.PCI0.GFX0.OWAK (Arg0)
            Store (Zero, \_SB.SLPT)
            \_SB.PCI0.LPCB.EC0.EC0W (Arg0)

   1F549: 14 46 09 4F 45 4D 57 01 5C 2F 03 5F 53 42 5F 41  // .F.OEMW.\/._SB_A
   1F559: 54 4B 44 47 45 4E 57 68 5C 2F 04 5F 53 42 5F 50  // TKDGENWh\/._SB_P
   1F569: 43 49 30 47 46 58 30 4F 57 41 4B 68 70 00 5C 2E  // CI0GFX0OWAKhp.\.
   1F579: 5F 53 42 5F 53 4C 50 54 5C 2F 05 5F 53 42 5F 50  // _SB_SLPT\/._SB_P
   1F589: 43 49 30 4C 50 43 42 45 43 30 5F 45 43 30 57 68  // CI0LPCBEC0_EC0Wh

            If (LEqual (Arg0, 0x04))
            {

   1F599: A0 20 93 68 0A 04                                // . .h..

                If (
   1F59F: A0 12 92                                         // ...

LLessEqual (MSOS (), OSME))
                {

   1F5A2: 94 4D 53 4F 53 4F 53 4D 45                       // .MSOSOSME

                    Store (0x02, MES4) /* \MES4 */
                }

   1F5AB: 70 0A 02 4D 45 53 34                             // p..MES4

                Else
                {

   1F5B2: A1 07                                            // ..

                    Store (Zero, MES4) /* \MES4 */
                }
            }

            SBRW (Arg0)

   1F5B4: 70 00 4D 45 53 34 53 42 52 57 68                 // p.MES4SBRWh

            If (LEqual (Arg0, 0x04))
            {

   1F5BF: A0 12 93 68 0A 04                                // ...h..

                Notify (\_SB.SLPB, 0x02) // Device Wake
            }

            PRJW (Arg0)
            DIAG (
   1F5C5: 86 5C 2E 5F 53 42 5F 53 4C 50 42 0A 02 50 52 4A  // .\._SB_SLPB..PRJ
   1F5D5: 57 68 44 49 41 47                                // WhDIAG

Add (Arg0, 0xF0))
        }
    }


   1F5DB: 72 68 0A F0 00                                   // rh...

    Scope (_SB.PCI0.SBUS)
    {

   1F5E0: 10 4E 0A 2F 03 5F 53 42 5F 50 43 49 30 53 42 55  // .N./._SB_PCI0SBU
   1F5F0: 53                                               // S

        Name (MFLG, 0x03)

   1F5F1: 08 4D 46 4C 47 0A 03                             // .MFLG..

        Method (STMD, 1, NotSerialized)
        {

   1F5F8: 14 46 09 53 54 4D 44 01                          // .F.STMD.

            If (LEqual (Arg0, Zero))
            {
                SWRB (0x90, 0x1E, Zero)
                SWRB (0x90, 0x07, 0x80)

   1F600: A0 1D 93 68 00 53 57 52 42 0A 90 0A 1E 00 53 57  // ...h.SWRB.....SW
   1F610: 52 42 0A 90 0A 07 0A 80                          // RB......

                Store (Zero, MFLG) /* \_SB_.PCI0.SBUS.MFLG */
            }

   1F618: 70 00 4D 46 4C 47                                // p.MFLG

            ElseIf
   1F61E: A1 4E 06                                         // .N.

 (LEqual (Arg0, One))
            {
                SWRB (0x90, 0x1E, Zero)
                SWRB (0x90, 0x07, 0xA0)

   1F621: A0 1D 93 68 01 53 57 52 42 0A 90 0A 1E 00 53 57  // ...h.SWRB.....SW
   1F631: 52 42 0A 90 0A 07 0A A0                          // RB......

                Store (One, MFLG) /* \_SB_.PCI0.SBUS.MFLG */
            }

   1F639: 70 01 4D 46 4C 47                                // p.MFLG

            ElseIf
   1F63F: A1 4D 04                                         // .M.

 (LEqual (Arg0, 0x02))
            {
                SWRB (0x90, 0x1E, Zero)
                SWRB (0x90, 0x07, 0xC0)

   1F642: A0 1F 93 68 0A 02 53 57 52 42 0A 90 0A 1E 00 53  // ...h..SWRB.....S
   1F652: 57 52 42 0A 90 0A 07 0A C0                       // WRB......

                Store (0x02, MFLG) /* \_SB_.PCI0.SBUS.MFLG */
            }

   1F65B: 70 0A 02 4D 46 4C 47                             // p..MFLG

            ElseIf
   1F662: A1 2A                                            // .*

 (LEqual (Arg0, 0x03))
            {
                SWRB (0x90, 0x1E, Zero)
                SWRB (0x90, 0x07, 0xA0)
                SWRB (0x90, 0x1E, One)

   1F664: A0 28 93 68 0A 03 53 57 52 42 0A 90 0A 1E 00 53  // .(.h..SWRB.....S
   1F674: 57 52 42 0A 90 0A 07 0A A0 53 57 52 42 0A 90 0A  // WRB......SWRB...
   1F684: 1E 01                                            // ..

                Store (0x03, MFLG) /* \_SB_.PCI0.SBUS.MFLG */
            }


   1F686: 70 0A 03 4D 46 4C 47                             // p..MFLG

            Return (One)
        }
    }


   1F68D: A4 01                                            // ..

    Scope (_SB)
    {

   1F68F: 10 45 4D 5F 53 42 5F                             // .EM_SB_

        Device (PTID)
        {

   1F696: 5B 82 4D 4C 50 54 49 44                          // [.MLPTID

            Name (CADR, Zero)

   1F69E: 08 43 41 44 52 00                                // .CADR.

            Name (WLEN, Zero)

   1F6A4: 08 57 4C 45 4E 00                                // .WLEN.

            Name (RLEN, Zero)

   1F6AA: 08 52 4C 45 4E 00                                // .RLEN.

            Name (CAMD, Zero)

   1F6B0: 08 43 41 4D 44 00                                // .CAMD.

            Name (OBUF, 
   1F6B6: 08 4F 42 55 46                                   // .OBUF

Buffer (0x10){})

   1F6BB: 11 03 0A 10                                      // ....

            Name (IBUF, 
   1F6BF: 08 49 42 55 46                                   // .IBUF

Buffer (0x0F){})

   1F6C4: 11 03 0A 0F                                      // ....

            Name (ERRN, Zero)

   1F6C8: 08 45 52 52 4E 00                                // .ERRN.

            Name (_HID, EisaId ("INT340E") /* Motherboard Resources */)  // _HID: Hardware ID

   1F6CE: 08 5F 48 49 44 0C 25 D4 34 0E                    // ._HID.%.4.

            Name (_CID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _CID: Compatible ID

   1F6D8: 08 5F 43 49 44 0C 41 D0 0C 02                    // ._CID.A...

            Name (IVER, 0x00030000)

   1F6E2: 08 49 56 45 52 0C 00 00 03 00                    // .IVER.....

            Name (TSDL, 
   1F6EC: 08 54 53 44 4C                                   // .TSDL

Package (0x04)
            {
                Zero, 
                "CPU Temperature", 
                0x05, 
                "PCH Temperature"
            })

   1F6F1: 12 27 04 00 0D 43 50 55 20 54 65 6D 70 65 72 61  // .'...CPU Tempera
   1F701: 74 75 72 65 00 0A 05 0D 50 43 48 20 54 65 6D 70  // ture....PCH Temp
   1F711: 65 72 61 74 75 72 65 00                          // erature.

            Name (TMPV, 
   1F719: 08 54 4D 50 56                                   // .TMPV

Package (0x02)
            {
                0x80000000, 
                0x80000000
            })

   1F71E: 12 0C 02 0C 00 00 00 80 0C 00 00 00 80           // .............

            Name (PSDL, 
   1F72B: 08 50 53 44 4C                                   // .PSDL

Package (0x04)
            {
                Zero, 
                "CPU Power", 
                One, 
                "Gfx Power"
            })

   1F730: 12 1A 04 00 0D 43 50 55 20 50 6F 77 65 72 00 01  // .....CPU Power..
   1F740: 0D 47 66 78 20 50 6F 77 65 72 00                 // .Gfx Power.

            Name (PWRV, 
   1F74B: 08 50 57 52 56                                   // .PWRV

Package (0x02)
            {
                0x80000000, 
                0x80000000
            })

   1F750: 12 0C 02 0C 00 00 00 80 0C 00 00 00 80           // .............

            Name (OSDL, 
   1F75D: 08 4F 53 44 4C                                   // .OSDL

Package (0x06)
            {
                0x04, 
                "Fan RPM", 
                "RPM", 
                0x0C, 
                "Battery Capaciy", 
                "mAh"
            })

   1F762: 12 2A 06 0A 04 0D 46 61 6E 20 52 50 4D 00 0D 52  // .*....Fan RPM..R
   1F772: 50 4D 00 0A 0C 0D 42 61 74 74 65 72 79 20 43 61  // PM....Battery Ca
   1F782: 70 61 63 69 79 00 0D 6D 41 68 00                 // paciy..mAh.

            Name (OSDV, 
   1F78D: 08 4F 53 44 56                                   // .OSDV

Package (0x02)
            {
                0x80000000, 
                0x80000000
            })

   1F792: 12 0C 02 0C 00 00 00 80 0C 00 00 00 80           // .............

            Method (TSDD, 0, NotSerialized)
            {

   1F79F: 14 4C 05 54 53 44 44 00                          // .L.TSDD.

                Name (TMPC, Zero)
                Store (^^PCI0.LPCB.EC0.ECPU, TMPC) /* \_SB_.PTID.TSDD.TMPC */
                Store (TMPC, 
   1F7A7: 08 54 4D 50 43 00 70 5E 5E 2F 04 50 43 49 30 4C  // .TMPC.p^^/.PCI0L
   1F7B7: 50 43 42 45 43 30 5F 45 43 50 55 54 4D 50 43 70  // PCBEC0_ECPUTMPCp
   1F7C7: 54 4D 50 43                                      // TMPC

Index (TMPV, Zero))
                Store (^^PCI0.LPCB.EC0.ECPU, TMPC) /* \_SB_.PTID.TSDD.TMPC */
                Store (TMPC, 
   1F7CB: 88 54 4D 50 56 00 00 70 5E 5E 2F 04 50 43 49 30  // .TMPV..p^^/.PCI0
   1F7DB: 4C 50 43 42 45 43 30 5F 45 43 50 55 54 4D 50 43  // LPCBEC0_ECPUTMPC
   1F7EB: 70 54 4D 50 43                                   // pTMPC

Index (TMPV, One))

   1F7F0: 88 54 4D 50 56 01 00                             // .TMPV..

                Return (TMPV) /* \_SB_.PTID.TMPV */
            }


   1F7F7: A4 54 4D 50 56                                   // .TMPV

            Method (PWRG, 0, NotSerialized)
            {

   1F7FC: 14 08 50 57 52 47 00                             // ..PWRG.

                Return (Ones)
            }


   1F803: A4 FF                                            // ..

            Method (PSDD, 0, NotSerialized)
            {

   1F805: 14 3B 50 53 44 44 00                             // .;PSDD.

                Name (PWRC, Zero)
                Store (PWRG (), PWRC) /* \_SB_.PTID.PSDD.PWRC */
                Store (PWRC, 
   1F80C: 08 50 57 52 43 00 70 50 57 52 47 50 57 52 43 70  // .PWRC.pPWRGPWRCp
   1F81C: 50 57 52 43                                      // PWRC

Index (PWRV, Zero))
                Store (PWRG (), PWRC) /* \_SB_.PTID.PSDD.PWRC */
                Store (PWRC, 
   1F820: 88 50 57 52 56 00 00 70 50 57 52 47 50 57 52 43  // .PWRV..pPWRGPWRC
   1F830: 70 50 57 52 43                                   // pPWRC

Index (PWRV, One))

   1F835: 88 50 57 52 56 01 00                             // .PWRV..

                Return (PWRV) /* \_SB_.PTID.PWRV */
            }


   1F83C: A4 50 57 52 56                                   // .PWRV

            Method (OSDG, 0, NotSerialized)
            {

   1F841: 14 08 4F 53 44 47 00                             // ..OSDG.

                Return (Ones)
            }


   1F848: A4 FF                                            // ..

            Method (OSDD, 0, NotSerialized)
            {

   1F84A: 14 3B 4F 53 44 44 00                             // .;OSDD.

                Name (OSDC, Zero)
                Store (OSDG (), OSDC) /* \_SB_.PTID.OSDD.OSDC */
                Store (OSDC, 
   1F851: 08 4F 53 44 43 00 70 4F 53 44 47 4F 53 44 43 70  // .OSDC.pOSDGOSDCp
   1F861: 4F 53 44 43                                      // OSDC

Index (OSDV, Zero))
                Store (OSDG (), OSDC) /* \_SB_.PTID.OSDD.OSDC */
                Store (OSDC, 
   1F865: 88 4F 53 44 56 00 00 70 4F 53 44 47 4F 53 44 43  // .OSDV..pOSDGOSDC
   1F875: 70 4F 53 44 43                                   // pOSDC

Index (OSDV, One))

   1F87A: 88 4F 53 44 56 01 00                             // .OSDV..

                Return (OSDV) /* \_SB_.PTID.OSDV */
            }


   1F881: A4 4F 53 44 56                                   // .OSDV

            Method (SDSP, 0, NotSerialized)
            {

   1F886: 14 09 53 44 53 50 00                             // ..SDSP.

                Return (0x0A)
            }


   1F88D: A4 0A 0A                                         // ...

            Name (MBOX, 
   1F890: 08 4D 42 4F 58                                   // .MBOX

Buffer (0x1A){})

   1F895: 11 03 0A 1A                                      // ....

            Name (PADA, 
   1F899: 08 50 41 44 41                                   // .PADA

Package (0x0A)
            {
                One, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0x1A, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF
            })

   1F89E: 12 2D 0A 01 0C FF FF FF FF 0C FF FF FF FF 0A 1A  // .-..............
   1F8AE: 0C FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF 0C  // ................
   1F8BE: FF FF FF FF 0C FF FF FF FF 0C FF FF FF FF        // ..............

            Name (PADD, 
   1F8CC: 08 50 41 44 44                                   // .PADD

Package (0x0A)
            {
                0x02, 
                0x0271, 
                0x0270, 
                0x1A, 
                0x62, 
                0x63, 
                0x60, 
                0x61, 
                0x65, 
                0x64
            })

   1F8D1: 12 18 0A 0A 02 0B 71 02 0B 70 02 0A 1A 0A 62 0A  // ......q..p....b.
   1F8E1: 63 0A 60 0A 61 0A 65 0A 64                       // c.`.a.e.d

            Method (PADT, 0, NotSerialized)
            {
                And (^^PCI0.LPCB.EC0.PBSY, 0x80, Local0)

   1F8EA: 14 2D 50 41 44 54 00 7B 5E 5E 2F 04 50 43 49 30  // .-PADT.{^^/.PCI0
   1F8FA: 4C 50 43 42 45 43 30 5F 50 42 53 59 0A 80 60     // LPCBEC0_PBSY..`

                If (LEqual (Local0, Zero))
                {

   1F909: A0 09 93 60 00                                   // ...`.

                    Return (PADD) /* \_SB_.PTID.PADD */
                }


   1F90E: A4 50 41 44 44                                   // .PADD

                Return (PADA) /* \_SB_.PTID.PADA */
            }


   1F913: A4 50 41 44 41                                   // .PADA

            Method (RPMD, 0, NotSerialized)
            {
                Store (Zero, Local0)
                Store (0x0A, Local1)
                Add (WLEN, Local1, Local1)

   1F918: 14 39 52 50 4D 44 00 70 00 60 70 0A 0A 61 72 57  // .9RPMD.p.`p..arW
   1F928: 4C 45 4E 61 61                                   // LENaa

                While (LLess (Local0, RLEN))
                {
                    Store (DerefOf (
   1F92D: A2 1F 95 60 52 4C 45 4E 70 83                    // ...`RLENp.

Index (IBUF, Local0)), 
   1F937: 88 49 42 55 46 60 00                             // .IBUF`.

Index (MBOX, Local1))
                    Add (One, Local0, Local0)

   1F93E: 88 4D 42 4F 58 61 00 72 01 60 60                 // .MBOXa.r.``

                    Add (One, Local1, Local1)
                }


   1F949: 72 01 61 61                                      // r.aa

                Return (MBOX) /* \_SB_.PTID.MBOX */
            }


   1F94D: A4 4D 42 4F 58                                   // .MBOX

            Method (WPMD, 1, NotSerialized)
            {

   1F952: 14 46 09 57 50 4D 44 01                          // .F.WPMD.

                If (
   1F95A: A0 0D 92                                         // ...

LNotEqual (SizeOf (Arg0), 0x1A))
                {

   1F95D: 93 87 68 0A 1A                                   // ..h..

                    Return (0xFFFFFFFF)
                }

                Store (Zero, Local0)

   1F962: A4 0C FF FF FF FF 70 00 60                       // ......p.`

                While (LLess (Local0, 0x1A))
                {
                    Store (DerefOf (
   1F96B: A2 16 95 60 0A 1A 70 83                          // ...`..p.

Index (Arg0, Local0)), 
   1F973: 88 68 60 00                                      // .h`.

Index (MBOX, Local0))

   1F977: 88 4D 42 4F 58 60 00                             // .MBOX`.

                    Add (One, Local0, Local0)
                }

                Store (DerefOf (
   1F97E: 72 01 60 60 70 83                                // r.``p.

Index (Arg0, 0x06)), CADR) /* \_SB_.PTID.CADR */
                Store (DerefOf (
   1F984: 88 68 0A 06 00 43 41 44 52 70 83                 // .h...CADRp.

Index (Arg0, 0x07)), WLEN) /* \_SB_.PTID.WLEN */
                Store (DerefOf (
   1F98F: 88 68 0A 07 00 57 4C 45 4E 70 83                 // .h...WLENp.

Index (Arg0, 0x08)), RLEN) /* \_SB_.PTID.RLEN */
                Store (DerefOf (
   1F99A: 88 68 0A 08 00 52 4C 45 4E 70 83                 // .h...RLENp.

Index (Arg0, 0x09)), CAMD) /* \_SB_.PTID.CAMD */

   1F9A5: 88 68 0A 09 00 43 41 4D 44                       // .h...CAMD

                Name (CUNT, Zero)
                Store (Zero, CUNT) /* \_SB_.PTID.WPMD.CUNT */
                Store (0x0A, Local0)

   1F9AE: 08 43 55 4E 54 00 70 00 43 55 4E 54 70 0A 0A 60  // .CUNT.p.CUNTp..`

                While (LLess (CUNT, WLEN))
                {
                    Store (DerefOf (
   1F9BE: A2 28 95 43 55 4E 54 57 4C 45 4E 70 83           // .(.CUNTWLENp.

Index (Arg0, Local0)), 
   1F9CB: 88 68 60 00                                      // .h`.

Index (OBUF, CUNT))
                    Add (CUNT, One, CUNT) /* \_SB_.PTID.WPMD.CUNT */

   1F9CF: 88 4F 42 55 46 43 55 4E 54 00 72 43 55 4E 54 01  // .OBUFCUNT.rCUNT.
   1F9DF: 43 55 4E 54                                      // CUNT

                    Add (Local0, One, Local0)
                }


   1F9E3: 72 60 01 60                                      // r`.`

                Return (Zero)
            }


   1F9E7: A4 00                                            // ..

            Name (CYCT, Zero)

   1F9E9: 08 43 59 43 54 00                                // .CYCT.

            Method (ISPC, 0, NotSerialized)
            {
                Store (DerefOf (
   1F9EF: 14 41 12 49 53 50 43 00 70 83                    // .A.ISPC.p.

Index (MBOX, 0x03)), CYCT) /* \_SB_.PTID.CYCT */
                ShiftLeft (CYCT, 0x08, CYCT) /* \_SB_.PTID.CYCT */
                Add (CYCT, DerefOf (
   1F9F9: 88 4D 42 4F 58 0A 03 00 43 59 43 54 79 43 59 43  // .MBOX...CYCTyCYC
   1FA09: 54 0A 08 43 59 43 54 72 43 59 43 54 83           // T..CYCTrCYCT.

Index (MBOX, 0x02)), CYCT) /* \_SB_.PTID.CYCT */
                ShiftLeft (CYCT, 0x08, CYCT) /* \_SB_.PTID.CYCT */
                Add (CYCT, DerefOf (
   1FA16: 88 4D 42 4F 58 0A 02 00 43 59 43 54 79 43 59 43  // .MBOX...CYCTyCYC
   1FA26: 54 0A 08 43 59 43 54 72 43 59 43 54 83           // T..CYCTrCYCT.

Index (MBOX, One)), CYCT) /* \_SB_.PTID.CYCT */
                ShiftLeft (CYCT, 0x08, CYCT) /* \_SB_.PTID.CYCT */
                Add (CYCT, DerefOf (
   1FA33: 88 4D 42 4F 58 01 00 43 59 43 54 79 43 59 43 54  // .MBOX..CYCTyCYCT
   1FA43: 0A 08 43 59 43 54 72 43 59 43 54 83              // ..CYCTrCYCT.

Index (MBOX, Zero)), CYCT) /* \_SB_.PTID.CYCT */

   1FA4F: 88 4D 42 4F 58 00 00 43 59 43 54                 // .MBOX..CYCT

                If (
   1FA5A: A0 1B 92                                         // ...

LGreaterEqual (CYCT, One))
                {
                    Store (DerefOf (
   1FA5D: 95 43 59 43 54 01 70 83                          // .CYCT.p.

Index (MBOX, 0x04)), Local0)
                    Multiply (Local0, 0x0A, Local0)

   1FA65: 88 4D 42 4F 58 0A 04 00 60 77 60 0A 0A 60        // .MBOX...`w`..`

                    Sleep (Local0)
                }

                Store (^^PCI0.LPCB.EC0.PECI (CADR, WLEN, RLEN, CAMD, OBUF, IBUF, ERRN), Local0)

   1FA73: 5B 22 60 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // ["`p^^/.PCI0LPCB
   1FA83: 45 43 30 5F 50 45 43 49 43 41 44 52 57 4C 45 4E  // EC0_PECICADRWLEN
   1FA93: 52 4C 45 4E 43 41 4D 44 4F 42 55 46 49 42 55 46  // RLENCAMDOBUFIBUF
   1FAA3: 45 52 52 4E 60                                   // ERRN`

                If (LEqual (Local0, One))
                {

   1FAA8: A0 48 06 93 60 01                                // .H..`.

                    If (LGreater (CYCT, Zero))
                    {
                        Subtract (CYCT, One, CYCT) /* \_SB_.PTID.CYCT */
                        And (CYCT, 0xFF, 
   1FAAE: A0 42 06 94 43 59 43 54 00 74 43 59 43 54 01 43  // .B..CYCT.tCYCT.C
   1FABE: 59 43 54 7B 43 59 43 54 0A FF                    // YCT{CYCT..

Index (MBOX, Zero))
                        And (CYCT, 0xFF00, Local0)
                        ShiftRight (Local0, 0x08, 
   1FAC8: 88 4D 42 4F 58 00 00 7B 43 59 43 54 0B 00 FF 60  // .MBOX..{CYCT...`
   1FAD8: 7A 60 0A 08                                      // z`..

Index (MBOX, One))
                        And (CYCT, 0x00FF0000, Local0)
                        ShiftRight (Local0, 0x10, 
   1FADC: 88 4D 42 4F 58 01 00 7B 43 59 43 54 0C 00 00 FF  // .MBOX..{CYCT....
   1FAEC: 00 60 7A 60 0A 10                                // .`z`..

Index (MBOX, 0x02))
                        And (CYCT, 0xFF000000, Local0)

   1FAF2: 88 4D 42 4F 58 0A 02 00 7B 43 59 43 54 0C 00 00  // .MBOX...{CYCT...
   1FB02: 00 FF 60                                         // ..`

                        ShiftRight (Local0, 0x18, 
   1FB05: 7A 60 0A 18                                      // z`..

Index (MBOX, 0x03))
                    }
                }
            }


   1FB09: 88 4D 42 4F 58 0A 03 00                          // .MBOX...

            Method (ENPC, 0, NotSerialized)
            {

   1FB11: 14 0C 45 4E 50 43 00                             // ..ENPC.

                Store (Zero, CYCT) /* \_SB_.PTID.CYCT */
            }


   1FB18: 70 00 43 59 43 54                                // p.CYCT

            Method (RPCS, 0, NotSerialized)
            {

   1FB1E: 14 2B 52 50 43 53 00                             // .+RPCS.

                Name (TPCS, Zero)

   1FB25: 08 54 50 43 53 00                                // .TPCS.

                If (LGreater (CYCT, Zero))
                {
                    Store (One, TPCS) /* \_SB_.PTID.RPCS.TPCS */
                    ISPC ()
                }

   1FB2B: A0 11 94 43 59 43 54 00 70 01 54 50 43 53 49 53  // ...CYCT.p.TPCSIS
   1FB3B: 50 43                                            // PC

                Else
                {

   1FB3D: A1 07                                            // ..

                    Store (Zero, TPCS) /* \_SB_.PTID.RPCS.TPCS */
                }


   1FB3F: 70 00 54 50 43 53                                // p.TPCS

                Return (TPCS) /* \_SB_.PTID.RPCS.TPCS */
            }


   1FB45: A4 54 50 43 53                                   // .TPCS

            Method (RPEC, 0, NotSerialized)
            {

   1FB4A: 14 1A 52 50 45 43 00                             // ..RPEC.

                Name (TPEC, Zero)
                Store (ERRN, TPEC) /* \_SB_.PTID.RPEC.TPEC */

   1FB51: 08 54 50 45 43 00 70 45 52 52 4E 54 50 45 43     // .TPEC.pERRNTPEC

                Return (TPEC) /* \_SB_.PTID.RPEC.TPEC */
            }
        }
    }


   1FB60: A4 54 50 45 43                                   // .TPEC

    Scope (_SB.ATKD)
    {

   1FB65: 10 43 3A 2E 5F 53 42 5F 41 54 4B 44              // .C:._SB_ATKD

        Method (AGFN, 1, Serialized)
        {

   1FB71: 14 43 11 41 47 46 4E 09                          // .C.AGFN.

            If (LEqual (Arg0, Zero))
            {

   1FB79: A0 09 93 68 00                                   // ...h.

                Return (GNBF) /* \_SB_.GNBF */
            }

            Store (Zero, Local0)

   1FB7E: A4 47 4E 42 46 70 00 60                          // .GNBFp.`

            OperationRegion (\PARM, SystemMemory, Arg0, 0x08)

   1FB86: 5B 80 5C 50 41 52 4D 00 68 0A 08                 // [.\PARM.h..

            Field (PARM, DWordAcc, NoLock, Preserve)
            {
                MFUN,   16, 
                SFUN,   16, 
                LEN,    16, 
                STAS,   8, 
                EROR,   8
            }

            Store (Zero, EROR) /* \_SB_.ATKD.AGFN.EROR */
            Store (One, STAS) /* \_SB_.ATKD.AGFN.STAS */

   1FB91: 5B 81 1F 50 41 52 4D 03 4D 46 55 4E 10 53 46 55  // [..PARM.MFUN.SFU
   1FBA1: 4E 10 4C 45 4E 5F 10 53 54 41 53 08 45 52 4F 52  // N.LEN_.STAS.EROR
   1FBB1: 08 70 00 45 52 4F 52 70 01 53 54 41 53           // .p.ERORp.STAS

            If (LEqual (MFUN, 0x02))
            {
                BSMI (Arg0)

   1FBBE: A0 18 93 4D 46 55 4E 0A 02 42 53 4D 49 68        // ...MFUN..BSMIh

                And (STAS, 0xFE, STAS) /* \_SB_.ATKD.AGFN.STAS */
            }

            And (MFUN, 0xF0, Local0)

   1FBCC: 7B 53 54 41 53 0A FE 53 54 41 53 7B 4D 46 55 4E  // {STAS..STAS{MFUN
   1FBDC: 0A F0 60                                         // ..`

            If (LEqual (Local0, 0x10))
            {
                MF1X (Arg0, LEN, MFUN, SFUN)
            }


   1FBDF: A0 16 93 60 0A 10 4D 46 31 58 68 4C 45 4E 5F 4D  // ...`..MF1XhLEN_M
   1FBEF: 46 55 4E 53 46 55 4E                             // FUNSFUN

            If (LEqual (MFUN, 0x42))
            {
                MF42 (Arg0, SFUN, LEN)

   1FBF6: A0 20 93 4D 46 55 4E 0A 42 4D 46 34 32 68 53 46  // . .MFUN.BMF42hSF
   1FC06: 55 4E 4C 45 4E 5F                                // UNLEN_

                And (STAS, 0xFE, STAS) /* \_SB_.ATKD.AGFN.STAS */
            }


   1FC0C: 7B 53 54 41 53 0A FE 53 54 41 53                 // {STAS..STAS

            If (LEqual (MFUN, One))
            {
                GVER (Arg0, LEN)

   1FC17: A0 1B 93 4D 46 55 4E 01 47 56 45 52 68 4C 45 4E  // ...MFUN.GVERhLEN
   1FC27: 5F                                               // _

                And (STAS, 0xFE, STAS) /* \_SB_.ATKD.AGFN.STAS */
            }


   1FC28: 7B 53 54 41 53 0A FE 53 54 41 53                 // {STAS..STAS

            If (LEqual (MFUN, 0x30))
            {
                MF30 (Arg0, SFUN, LEN)

   1FC33: A0 20 93 4D 46 55 4E 0A 30 4D 46 33 30 68 53 46  // . .MFUN.0MF30hSF
   1FC43: 55 4E 4C 45 4E 5F                                // UNLEN_

                And (STAS, 0xFE, STAS) /* \_SB_.ATKD.AGFN.STAS */
            }


   1FC49: 7B 53 54 41 53 0A FE 53 54 41 53                 // {STAS..STAS

            If (LEqual (STAS, One))
            {
                Store (One, EROR) /* \_SB_.ATKD.AGFN.EROR */

   1FC54: A0 18 93 53 54 41 53 01 70 01 45 52 4F 52        // ...STAS.p.EROR

                Or (STAS, 0x02, STAS) /* \_SB_.ATKD.AGFN.STAS */
            }

            And (STAS, 0xFE, STAS) /* \_SB_.ATKD.AGFN.STAS */
            Or (STAS, 0x80, STAS) /* \_SB_.ATKD.AGFN.STAS */

   1FC62: 7D 53 54 41 53 0A 02 53 54 41 53 7B 53 54 41 53  // }STAS..STAS{STAS
   1FC72: 0A FE 53 54 41 53 7D 53 54 41 53 0A 80 53 54 41  // ..STAS}STAS..STA
   1FC82: 53                                               // S

            Return (Zero)
        }


   1FC83: A4 00                                            // ..

        Method (GVER, 2, NotSerialized)
        {

   1FC85: 14 27 47 56 45 52 02                             // .'GVER.

            OperationRegion (\FGVR, SystemMemory, Arg0, Arg1)

   1FC8C: 5B 80 5C 46 47 56 52 00 68 69                    // [.\FGVR.hi

            Field (FGVR, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                APID,   16, 
                APRV,   32
            }


   1FC96: 5B 81 13 46 47 56 52 03 00 40 04 41 50 49 44 10  // [..FGVR..@.APID.
   1FCA6: 41 50 52 56 20                                   // APRV 

            Return (Zero)
        }


   1FCAB: A4 00                                            // ..

        Method (MF30, 3, NotSerialized)
        {

   1FCAD: 14 41 07 4D 46 33 30 03                          // .A.MF30.

            OperationRegion (FM30, SystemMemory, Arg0, 0x08)

   1FCB5: 5B 80 46 4D 33 30 00 68 0A 08                    // [.FM30.h..

            Field (FM30, DWordAcc, NoLock, Preserve)
            {
                Offset (0x06), 
                SM30,   8, 
                EM30,   8
            }

            Store (One, Local0)

   1FCBF: 5B 81 12 46 4D 33 30 03 00 30 53 4D 33 30 08 45  // [..FM30..0SM30.E
   1FCCF: 4D 33 30 08 70 01 60                             // M30.p.`

            If (LEqual (Arg1, Zero))
            {

   1FCD6: A0 0C 93 69 00                                   // ...i.

                Store (G30V (Arg0, Arg2), Local0)
            }


   1FCDB: 70 47 33 30 56 68 6A 60                          // pG30Vhj`

            If (LEqual (Arg1, One))
            {

   1FCE3: A0 0C 93 69 01                                   // ...i.

                Store (EC01 (Arg0, Arg2), Local0)
            }


   1FCE8: 70 45 43 30 31 68 6A 60                          // pEC01hj`

            If (LEqual (Arg1, 0x02))
            {

   1FCF0: A0 0D 93 69 0A 02                                // ...i..

                Store (EC02 (Arg0, Arg2), Local0)
            }


   1FCF6: 70 45 43 30 32 68 6A 60                          // pEC02hj`

            If (Local0)
            {
                Store (Local0, EM30) /* \_SB_.ATKD.MF30.EM30 */

   1FCFE: A0 13 60 70 60 45 4D 33 30                       // ..`p`EM30

                Or (SM30, 0x02, SM30) /* \_SB_.ATKD.MF30.SM30 */
            }

            Or (SM30, 0x80, SM30) /* \_SB_.ATKD.MF30.SM30 */

   1FD07: 7D 53 4D 33 30 0A 02 53 4D 33 30 7D 53 4D 33 30  // }SM30..SM30}SM30
   1FD17: 0A 80 53 4D 33 30                                // ..SM30

            Return (Zero)
        }


   1FD1D: A4 00                                            // ..

        Method (G30V, 2, NotSerialized)
        {

   1FD1F: 14 3C 47 33 30 56 02                             // .<G30V.

            If (LLess (Arg1, 0x0C))
            {

   1FD26: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   1FD2C: A4 0A 02                                         // ...

            OperationRegion (\F300, SystemMemory, Arg0, Arg1)

   1FD2F: 5B 80 5C 46 33 30 30 00 68 69                    // [.\F300.hi

            Field (F300, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G30V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G30V.SVER */

   1FD39: 5B 81 13 46 33 30 30 03 00 40 04 53 56 45 52 10  // [..F300..@.SVER.
   1FD49: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   1FD59: 52                                               // R

            Return (Zero)
        }


   1FD5A: A4 00                                            // ..

        Method (EC01, 2, NotSerialized)
        {

   1FD5C: 14 4C 0A 45 43 30 31 02                          // .L.EC01.

            If (LLess (Arg1, 0x10))
            {

   1FD64: A0 08 95 69 0A 10                                // ...i..

                Return (0x02)
            }


   1FD6A: A4 0A 02                                         // ...

            OperationRegion (FEC1, SystemMemory, Arg0, Arg1)

   1FD6D: 5B 80 46 45 43 31 00 68 69                       // [.FEC1.hi

            Field (FEC1, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                ECMD,   8, 
                EDA1,   8, 
                EDA2,   8, 
                EDA3,   8, 
                EDA4,   8, 
                EDA5,   8
            }

            Store (^^PCI0.LPCB.EC0.ECXT (ECMD, EDA1, EDA2, EDA3, EDA4, EDA5), Local0)
            Store (DerefOf (
   1FD76: 5B 81 27 46 45 43 31 03 00 40 04 45 43 4D 44 08  // [.'FEC1..@.ECMD.
   1FD86: 45 44 41 31 08 45 44 41 32 08 45 44 41 33 08 45  // EDA1.EDA2.EDA3.E
   1FD96: 44 41 34 08 45 44 41 35 08 70 5E 5E 2F 04 50 43  // DA4.EDA5.p^^/.PC
   1FDA6: 49 30 4C 50 43 42 45 43 30 5F 45 43 58 54 45 43  // I0LPCBEC0_ECXTEC
   1FDB6: 4D 44 45 44 41 31 45 44 41 32 45 44 41 33 45 44  // MDEDA1EDA2EDA3ED
   1FDC6: 41 34 45 44 41 35 60 70 83                       // A4EDA5`p.

Index (Local0, One)), EDA1) /* \_SB_.ATKD.EC01.EDA1 */
            Store (DerefOf (
   1FDCF: 88 60 01 00 45 44 41 31 70 83                    // .`..EDA1p.

Index (Local0, 0x02)), EDA2) /* \_SB_.ATKD.EC01.EDA2 */
            Store (DerefOf (
   1FDD9: 88 60 0A 02 00 45 44 41 32 70 83                 // .`...EDA2p.

Index (Local0, 0x03)), EDA3) /* \_SB_.ATKD.EC01.EDA3 */
            Store (DerefOf (
   1FDE4: 88 60 0A 03 00 45 44 41 33 70 83                 // .`...EDA3p.

Index (Local0, 0x04)), EDA4) /* \_SB_.ATKD.EC01.EDA4 */
            Store (DerefOf (
   1FDEF: 88 60 0A 04 00 45 44 41 34 70 83                 // .`...EDA4p.

Index (Local0, 0x05)), EDA5) /* \_SB_.ATKD.EC01.EDA5 */

   1FDFA: 88 60 0A 05 00 45 44 41 35                       // .`...EDA5

            Return (
   1FE03: A4                                               // .

DerefOf (
   1FE04: 83                                               // .

Index (Local0, Zero)))
        }


   1FE05: 88 60 00 00                                      // .`..

        Method (EC02, 2, NotSerialized)
        {

   1FE09: 14 4F 0D 45 43 30 32 02                          // .O.EC02.

            If (LLess (Arg1, 0x30))
            {

   1FE11: A0 08 95 69 0A 30                                // ...i.0

                Return (0x02)
            }


   1FE17: A4 0A 02                                         // ...

            OperationRegion (FEC2, SystemMemory, Arg0, Arg1)

   1FE1A: 5B 80 46 45 43 32 00 68 69                       // [.FEC2.hi

            Field (FEC2, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                BUSN,   8, 
                PROT,   8, 
                DADD,   8, 
                DREG,   8, 
                DAT0,   8, 
                DAT1,   8, 
                BLEN,   8, 
                REVB,   8, 
                BLKK,   256
            }

            Store (
   1FE23: 5B 81 37 46 45 43 32 03 00 40 04 42 55 53 4E 08  // [.7FEC2..@.BUSN.
   1FE33: 50 52 4F 54 08 44 41 44 44 08 44 52 45 47 08 44  // PROT.DADD.DREG.D
   1FE43: 41 54 30 08 44 41 54 31 08 42 4C 45 4E 08 52 45  // AT0.DAT1.BLEN.RE
   1FE53: 56 42 08 42 4C 4B 4B 40 10 70                    // VB.BLKK@.p

Package (0x02)
                {
                    Zero, 

   1FE5D: 12 07 02 00                                      // ....

                    Buffer (0x20){}
                }, Local1)
            Store (BLEN, 
   1FE61: 11 03 0A 20 61 70 42 4C 45 4E                    // ... apBLEN

Index (Local1, Zero))
            Store (BLKK, 
   1FE6B: 88 61 00 00 70 42 4C 4B 4B                       // .a..pBLKK

Index (Local1, One))
            Store (^^PCI0.LPCB.EC0.ECSB (BUSN, PROT, DADD, DREG, DAT0, DAT1, Local1), Local0)

   1FE74: 88 61 01 00 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .a..p^^/.PCI0LPC
   1FE84: 42 45 43 30 5F 45 43 53 42 42 55 53 4E 50 52 4F  // BEC0_ECSBBUSNPRO
   1FE94: 54 44 41 44 44 44 52 45 47 44 41 54 30 44 41 54  // TDADDDREGDAT0DAT
   1FEA4: 31 61 60                                         // 1a`

            If (LEqual (DerefOf (
   1FEA7: A0 33 93 83                                      // .3..

Index (Local0, Zero)), Zero))
            {
                Store (DerefOf (
   1FEAB: 88 60 00 00 00 70 83                             // .`...p.

Index (Local0, One)), DAT0) /* \_SB_.ATKD.EC02.DAT0 */
                Store (DerefOf (
   1FEB2: 88 60 01 00 44 41 54 30 70 83                    // .`..DAT0p.

Index (Local0, 0x02)), DAT1) /* \_SB_.ATKD.EC02.DAT1 */
                Store (DerefOf (
   1FEBC: 88 60 0A 02 00 44 41 54 31 70 83                 // .`...DAT1p.

Index (Local0, 0x03)), BLEN) /* \_SB_.ATKD.EC02.BLEN */

   1FEC7: 88 60 0A 03 00 42 4C 45 4E                       // .`...BLEN

                Store (DerefOf (
   1FED0: 70 83                                            // p.

Index (Local0, 0x04)), BLKK) /* \_SB_.ATKD.EC02.BLKK */
            }

            Store (DerefOf (
   1FED2: 88 60 0A 04 00 42 4C 4B 4B 70 83                 // .`...BLKKp.

Index (Local0, Zero)), Local2)
            And (Local2, 0x3F, Local2)

   1FEDD: 88 60 00 00 62 7B 62 0A 3F 62                    // .`..b{b.?b

            Return (Local2)
        }


   1FEE7: A4 62                                            // .b

        Method (GENW, 1, NotSerialized)
        {

   1FEE9: 14 0C 47 45 4E 57 01                             // ..GENW.

            Store (Zero, RTCW) /* \_SB_.RTCW */
        }


   1FEF0: 70 00 52 54 43 57                                // p.RTCW

        Method (BSMI, 1, Serialized)
        {
            Store (Arg0, BIPA) /* \_SB_.BIPA */
            ISMI (0xA1)
        }
    }


   1FEF6: 14 12 42 53 4D 49 09 70 68 42 49 50 41 49 53 4D  // ..BSMI.phBIPAISM
   1FF06: 49 0A A1                                         // I..

    Scope (_SB.ATKD)
    {

   1FF09: 10 89 38 01 2E 5F 53 42 5F 41 54 4B 44           // ..8.._SB_ATKD

        Method (MF1X, 4, NotSerialized)
        {

   1FF16: 14 47 0F 4D 46 31 58 04                          // .G.MF1X.

            OperationRegion (FM1X, SystemMemory, Arg0, 0x08)

   1FF1E: 5B 80 46 4D 31 58 00 68 0A 08                    // [.FM1X.h..

            Field (FM1X, DWordAcc, NoLock, Preserve)
            {
                Offset (0x06), 
                SM1X,   8, 
                EM1X,   8
            }

            Store (One, Local0)

   1FF28: 5B 81 12 46 4D 31 58 03 00 30 53 4D 31 58 08 45  // [..FM1X..0SM1X.E
   1FF38: 4D 31 58 08 70 01 60                             // M1X.p.`

            If (LEqual (Arg2, 0x10))
            {

   1FF3F: A0 0E 93 6A 0A 10                                // ...j..

                Store (MF10 (Arg0, Arg1, Arg3), Local0)
            }


   1FF45: 70 4D 46 31 30 68 69 6B 60                       // pMF10hik`

            If (LEqual (Arg2, 0x11))
            {

   1FF4E: A0 0E 93 6A 0A 11                                // ...j..

                Store (MF11 (Arg0, Arg1, Arg3), Local0)
            }


   1FF54: 70 4D 46 31 31 68 69 6B 60                       // pMF11hik`

            If (LEqual (Arg2, 0x12))
            {

   1FF5D: A0 0E 93 6A 0A 12                                // ...j..

                Store (MF12 (Arg0, Arg1, Arg3), Local0)
            }


   1FF63: 70 4D 46 31 32 68 69 6B 60                       // pMF12hik`

            If (LEqual (Arg2, 0x13))
            {

   1FF6C: A0 0E 93 6A 0A 13                                // ...j..

                Store (MF13 (Arg0, Arg1, Arg3), Local0)
            }


   1FF72: 70 4D 46 31 33 68 69 6B 60                       // pMF13hik`

            If (LEqual (Arg2, 0x14))
            {

   1FF7B: A0 0E 93 6A 0A 14                                // ...j..

                Store (MF14 (Arg0, Arg1, Arg3), Local0)
            }


   1FF81: 70 4D 46 31 34 68 69 6B 60                       // pMF14hik`

            If (LEqual (Arg2, 0x15))
            {

   1FF8A: A0 0E 93 6A 0A 15                                // ...j..

                Store (MF15 (Arg0, Arg1, Arg3), Local0)
            }


   1FF90: 70 4D 46 31 35 68 69 6B 60                       // pMF15hik`

            If (LEqual (Arg2, 0x16))
            {

   1FF99: A0 0E 93 6A 0A 16                                // ...j..

                Store (MF16 (Arg0, Arg1, Arg3), Local0)
            }


   1FF9F: 70 4D 46 31 36 68 69 6B 60                       // pMF16hik`

            If (LEqual (Arg2, 0x17))
            {

   1FFA8: A0 0E 93 6A 0A 17                                // ...j..

                Store (MF17 (Arg0, Arg1, Arg3), Local0)
            }


   1FFAE: 70 4D 46 31 37 68 69 6B 60                       // pMF17hik`

            If (LEqual (Arg2, 0x18))
            {

   1FFB7: A0 0E 93 6A 0A 18                                // ...j..

                Store (MF18 (Arg0, Arg1, Arg3), Local0)
            }


   1FFBD: 70 4D 46 31 38 68 69 6B 60                       // pMF18hik`

            If (LEqual (Arg2, 0x19))
            {

   1FFC6: A0 0E 93 6A 0A 19                                // ...j..

                Store (MF19 (Arg0, Arg1, Arg3), Local0)
            }


   1FFCC: 70 4D 46 31 39 68 69 6B 60                       // pMF19hik`

            If (LEqual (Arg2, 0x1F))
            {

   1FFD5: A0 0E 93 6A 0A 1F                                // ...j..

                Store (MF1F (Arg0, Arg1, Arg3), Local0)
            }

            And (SM1X, 0xFE, SM1X) /* \_SB_.ATKD.MF1X.SM1X */

   1FFDB: 70 4D 46 31 46 68 69 6B 60 7B 53 4D 31 58 0A FE  // pMF1Fhik`{SM1X..
   1FFEB: 53 4D 31 58                                      // SM1X

            If (Local0)
            {
                Store (Local0, EM1X) /* \_SB_.ATKD.MF1X.EM1X */

   1FFEF: A0 13 60 70 60 45 4D 31 58                       // ..`p`EM1X

                Or (SM1X, 0x02, SM1X) /* \_SB_.ATKD.MF1X.SM1X */
            }


   1FFF8: 7D 53 4D 31 58 0A 02 53 4D 31 58                 // }SM1X..SM1X

            Or (SM1X, 0x80, SM1X) /* \_SB_.ATKD.MF1X.SM1X */
        }


   20003: 7D 53 4D 31 58 0A 80 53 4D 31 58                 // }SM1X..SM1X

        Method (MF10, 3, NotSerialized)
        {
            Store (One, Local0)

   2000E: 14 25 4D 46 31 30 03 70 01 60                    // .%MF10.p.`

            If (LEqual (Arg2, Zero))
            {

   20018: A0 0C 93 6A 00                                   // ...j.

                Store (G10V (Arg0, Arg1), Local0)
            }


   2001D: 70 47 31 30 56 68 69 60                          // pG10Vhi`

            If (LEqual (Arg2, One))
            {

   20025: A0 0C 93 6A 01                                   // ...j.

                Store (SRTC (Arg0, Arg1), Local0)
            }


   2002A: 70 53 52 54 43 68 69 60                          // pSRTChi`

            Return (Local0)
        }


   20032: A4 60                                            // .`

        Method (G10V, 2, NotSerialized)
        {

   20034: 14 3C 47 31 30 56 02                             // .<G10V.

            If (LLess (Arg1, 0x0C))
            {

   2003B: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20041: A4 0A 02                                         // ...

            OperationRegion (\F100, SystemMemory, Arg0, Arg1)

   20044: 5B 80 5C 46 31 30 30 00 68 69                    // [.\F100.hi

            Field (F100, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G10V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G10V.SVER */

   2004E: 5B 81 13 46 31 30 30 03 00 40 04 53 56 45 52 10  // [..F100..@.SVER.
   2005E: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   2006E: 52                                               // R

            Return (Zero)
        }


   2006F: A4 00                                            // ..

        Method (SRTC, 2, NotSerialized)
        {

   20071: 14 34 53 52 54 43 02                             // .4SRTC.

            If (LLess (Arg1, 0x0C))
            {

   20078: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   2007E: A4 0A 02                                         // ...

            OperationRegion (\F101, SystemMemory, Arg0, Arg1)

   20081: 5B 80 5C 46 31 30 31 00 68 69                    // [.\F101.hi

            Field (F101, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                DLTM,   16
            }

            Store (DLTM, RTCW) /* \_SB_.RTCW */

   2008B: 5B 81 0E 46 31 30 31 03 00 40 04 44 4C 54 4D 10  // [..F101..@.DLTM.
   2009B: 70 44 4C 54 4D 52 54 43 57                       // pDLTMRTCW

            Return (Zero)
        }


   200A4: A4 00                                            // ..

        Method (MF11, 3, NotSerialized)
        {
            Store (One, Local0)

   200A6: 14 40 05 4D 46 31 31 03 70 01 60                 // .@.MF11.p.`

            If (LEqual (Arg2, Zero))
            {

   200B1: A0 0C 93 6A 00                                   // ...j.

                Store (G11V (Arg0, Arg1), Local0)
            }


   200B6: 70 47 31 31 56 68 69 60                          // pG11Vhi`

            If (LEqual (Arg2, One))
            {

   200BE: A0 0C 93 6A 01                                   // ...j.

                Store (GBAT (Arg0, Arg1), Local0)
            }


   200C3: 70 47 42 41 54 68 69 60                          // pGBAThi`

            If (LEqual (Arg2, 0x02))
            {

   200CB: A0 0D 93 6A 0A 02                                // ...j..

                Store (ASBR (Arg0, Arg1), Local0)
            }


   200D1: 70 41 53 42 52 68 69 60                          // pASBRhi`

            If (LEqual (Arg2, 0x03))
            {

   200D9: A0 0D 93 6A 0A 03                                // ...j..

                Store (ASBE (Arg0, Arg1), Local0)
            }


   200DF: 70 41 53 42 45 68 69 60                          // pASBEhi`

            If (LEqual (Arg2, 0x04))
            {

   200E7: A0 0D 93 6A 0A 04                                // ...j..

                Store (BTCR (Arg0, Arg1), Local0)
            }


   200ED: 70 42 54 43 52 68 69 60                          // pBTCRhi`

            Return (Local0)
        }


   200F5: A4 60                                            // .`

        Method (G11V, 2, NotSerialized)
        {

   200F7: 14 3C 47 31 31 56 02                             // .<G11V.

            If (LLess (Arg1, 0x0C))
            {

   200FE: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20104: A4 0A 02                                         // ...

            OperationRegion (\F110, SystemMemory, Arg0, Arg1)

   20107: 5B 80 5C 46 31 31 30 00 68 69                    // [.\F110.hi

            Field (F100, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G11V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G11V.SVER */

   20111: 5B 81 13 46 31 30 30 03 00 40 04 53 56 45 52 10  // [..F100..@.SVER.
   20121: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   20131: 52                                               // R

            Return (Zero)
        }


   20132: A4 00                                            // ..

        Method (GBAT, 2, NotSerialized)
        {

   20134: 14 3C 47 42 41 54 02                             // .<GBAT.

            If (LLess (Arg1, 0x0A))
            {

   2013B: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   20141: A4 0A 02                                         // ...

            OperationRegion (\F111, SystemMemory, Arg0, Arg1)

   20144: 5B 80 5C 46 31 31 31 00 68 69                    // [.\F111.hi

            Field (F111, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                BTNM,   8, 
                BTTP,   8
            }

            Store (One, BTNM) /* \_SB_.ATKD.GBAT.BTNM */
            Store (Zero, BTTP) /* \_SB_.ATKD.GBAT.BTTP */

   2014E: 5B 81 13 46 31 31 31 03 00 40 04 42 54 4E 4D 08  // [..F111..@.BTNM.
   2015E: 42 54 54 50 08 70 01 42 54 4E 4D 70 00 42 54 54  // BTTP.p.BTNMp.BTT
   2016E: 50                                               // P

            Return (Zero)
        }


   2016F: A4 00                                            // ..

        Method (ASBR, 2, NotSerialized)
        {

   20171: 14 4D 26 41 53 42 52 02                          // .M&ASBR.

            If (LLess (Arg1, 0x30))
            {

   20179: A0 08 95 69 0A 30                                // ...i.0

                Return (0x02)
            }


   2017F: A4 0A 02                                         // ...

            OperationRegion (\F112, SystemMemory, Arg0, Arg1)

   20182: 5B 80 5C 46 31 31 32 00 68 69                    // [.\F112.hi

            Field (F112, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                BATN,   8, 
                BATA,   8, 
                REGS,   8, 
                BDAT,   16, 
                BLEN,   8, 
                BREV,   16, 
                BLK1,   32, 
                BLK2,   32, 
                BLK3,   32, 
                BLK4,   32, 
                BLK5,   32, 
                BLK6,   32, 
                BLK7,   32, 
                BLK8,   32
            }


   2018C: 5B 81 40 05 46 31 31 32 03 00 40 04 42 41 54 4E  // [.@.F112..@.BATN
   2019C: 08 42 41 54 41 08 52 45 47 53 08 42 44 41 54 10  // .BATA.REGS.BDAT.
   201AC: 42 4C 45 4E 08 42 52 45 56 10 42 4C 4B 31 20 42  // BLEN.BREV.BLK1 B
   201BC: 4C 4B 32 20 42 4C 4B 33 20 42 4C 4B 34 20 42 4C  // LK2 BLK3 BLK4 BL
   201CC: 4B 35 20 42 4C 4B 36 20 42 4C 4B 37 20 42 4C 4B  // K5 BLK6 BLK7 BLK
   201DC: 38 20                                            // 8 

            If (
   201DE: A0 0B 92                                         // ...

LGreaterEqual (BATN, One))
            {

   201E1: 95 42 41 54 4E 01                                // .BATN.

                Return (0x11)
            }


   201E7: A4 0A 11                                         // ...

            If (LEqual (BATA, Zero))
            {
                Store (^^PCI0.LPCB.EC0.SMBR (^^PCI0.LPCB.EC0.RDWD, ^^PCI0.LPCB.EC0.BADR, REGS), Local0)
                Store (DerefOf (
   201EA: A0 4B 06 93 42 41 54 41 00 70 5E 5E 2F 04 50 43  // .K..BATA.p^^/.PC
   201FA: 49 30 4C 50 43 42 45 43 30 5F 53 4D 42 52 5E 5E  // I0LPCBEC0_SMBR^^
   2020A: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 52 44  // /.PCI0LPCBEC0_RD
   2021A: 57 44 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // WD^^/.PCI0LPCBEC
   2022A: 30 5F 42 41 44 52 52 45 47 53 60 70 83           // 0_BADRREGS`p.

Index (Local0, 0x02)), BDAT) /* \_SB_.ATKD.ASBR.BDAT */
                Store (DerefOf (
   20237: 88 60 0A 02 00 42 44 41 54 70 83                 // .`...BDATp.

Index (Local0, Zero)), Local2)
                And (Local2, 0x1F, Local2)

   20242: 88 60 00 00 62 7B 62 0A 1F 62                    // .`..b{b..b

                If (Local2)
                {

   2024C: A0 07 62                                         // ..b

                    Add (Local2, 0x10, Local2)
                }


   2024F: 72 62 0A 10 62                                   // rb..b

                Return (Local2)
            }


   20254: A4 62                                            // .b

            If (LEqual (BATA, One))
            {
                Store (^^PCI0.LPCB.EC0.SMBW (^^PCI0.LPCB.EC0.WRWD, ^^PCI0.LPCB.EC0.BADR, REGS, 0x02, BDAT), Local0)
                Store (DerefOf (
   20256: A0 46 06 93 42 41 54 41 01 70 5E 5E 2F 04 50 43  // .F..BATA.p^^/.PC
   20266: 49 30 4C 50 43 42 45 43 30 5F 53 4D 42 57 5E 5E  // I0LPCBEC0_SMBW^^
   20276: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 57 52  // /.PCI0LPCBEC0_WR
   20286: 57 44 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // WD^^/.PCI0LPCBEC
   20296: 30 5F 42 41 44 52 52 45 47 53 0A 02 42 44 41 54  // 0_BADRREGS..BDAT
   202A6: 60 70 83                                         // `p.

Index (Local0, Zero)), Local2)
                And (Local2, 0x1F, Local2)

   202A9: 88 60 00 00 62 7B 62 0A 1F 62                    // .`..b{b..b

                If (Local2)
                {

   202B3: A0 07 62                                         // ..b

                    Add (Local2, 0x10, Local2)
                }


   202B6: 72 62 0A 10 62                                   // rb..b

                Return (Local2)
            }


   202BB: A4 62                                            // .b

            If (LEqual (BATA, 0x02))
            {
                Store (^^PCI0.LPCB.EC0.SMBR (^^PCI0.LPCB.EC0.RDBL, ^^PCI0.LPCB.EC0.BADR, REGS), Local0)

   202BD: A0 4E 11 93 42 41 54 41 0A 02 70 5E 5E 2F 04 50  // .N..BATA..p^^/.P
   202CD: 43 49 30 4C 50 43 42 45 43 30 5F 53 4D 42 52 5E  // CI0LPCBEC0_SMBR^
   202DD: 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 52  // ^/.PCI0LPCBEC0_R
   202ED: 44 42 4C 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // DBL^^/.PCI0LPCBE
   202FD: 43 30 5F 42 41 44 52 52 45 47 53 60              // C0_BADRREGS`

                Name (BKUF, 
   20309: 08 42 4B 55 46                                   // .BKUF

Buffer (0x20){})

   2030E: 11 03 0A 20                                      // ... 

                CreateDWordField (BKUF, Zero, DAT1)

   20312: 8A 42 4B 55 46 00 44 41 54 31                    // .BKUF.DAT1

                CreateDWordField (BKUF, 0x04, DAT2)

   2031C: 8A 42 4B 55 46 0A 04 44 41 54 32                 // .BKUF..DAT2

                CreateDWordField (BKUF, 0x08, DAT3)

   20327: 8A 42 4B 55 46 0A 08 44 41 54 33                 // .BKUF..DAT3

                CreateDWordField (BKUF, 0x0C, DAT4)

   20332: 8A 42 4B 55 46 0A 0C 44 41 54 34                 // .BKUF..DAT4

                CreateDWordField (BKUF, 0x10, DAT5)

   2033D: 8A 42 4B 55 46 0A 10 44 41 54 35                 // .BKUF..DAT5

                CreateDWordField (BKUF, 0x14, DAT6)

   20348: 8A 42 4B 55 46 0A 14 44 41 54 36                 // .BKUF..DAT6

                CreateDWordField (BKUF, 0x18, DAT7)

   20353: 8A 42 4B 55 46 0A 18 44 41 54 37                 // .BKUF..DAT7

                CreateDWordField (BKUF, 0x1C, DAT8)
                Store (DerefOf (
   2035E: 8A 42 4B 55 46 0A 1C 44 41 54 38 70 83           // .BKUF..DAT8p.

Index (Local0, 0x02)), BKUF) /* \_SB_.ATKD.ASBR.BKUF */
                Store (DAT1, BLK1) /* \_SB_.ATKD.ASBR.BLK1 */
                Store (DAT2, BLK2) /* \_SB_.ATKD.ASBR.BLK2 */
                Store (DAT3, BLK3) /* \_SB_.ATKD.ASBR.BLK3 */
                Store (DAT4, BLK4) /* \_SB_.ATKD.ASBR.BLK4 */
                Store (DAT5, BLK5) /* \_SB_.ATKD.ASBR.BLK5 */
                Store (DAT6, BLK6) /* \_SB_.ATKD.ASBR.BLK6 */
                Store (DAT7, BLK7) /* \_SB_.ATKD.ASBR.BLK7 */
                Store (DAT8, BLK8) /* \_SB_.ATKD.ASBR.BLK8 */
                Store (DerefOf (
   2036B: 88 60 0A 02 00 42 4B 55 46 70 44 41 54 31 42 4C  // .`...BKUFpDAT1BL
   2037B: 4B 31 70 44 41 54 32 42 4C 4B 32 70 44 41 54 33  // K1pDAT2BLK2pDAT3
   2038B: 42 4C 4B 33 70 44 41 54 34 42 4C 4B 34 70 44 41  // BLK3pDAT4BLK4pDA
   2039B: 54 35 42 4C 4B 35 70 44 41 54 36 42 4C 4B 36 70  // T5BLK5pDAT6BLK6p
   203AB: 44 41 54 37 42 4C 4B 37 70 44 41 54 38 42 4C 4B  // DAT7BLK7pDAT8BLK
   203BB: 38 70 83                                         // 8p.

Index (Local0, One)), BLEN) /* \_SB_.ATKD.ASBR.BLEN */
                Store (DerefOf (
   203BE: 88 60 01 00 42 4C 45 4E 70 83                    // .`..BLENp.

Index (Local0, Zero)), Local2)
                And (Local2, 0x1F, Local2)

   203C8: 88 60 00 00 62 7B 62 0A 1F 62                    // .`..b{b..b

                If (Local2)
                {

   203D2: A0 07 62                                         // ..b

                    Add (Local2, 0x10, Local2)
                }


   203D5: 72 62 0A 10 62                                   // rb..b

                Return (Local2)
            }


   203DA: A4 62                                            // .b

            Return (0x10)
        }


   203DC: A4 0A 10                                         // ...

        Method (ASBE, 2, Serialized)
        {

   203DF: 14 4E 0B 41 53 42 45 0A                          // .N.ASBE.

            If (LLess (Arg1, 0x0C))
            {

   203E7: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   203ED: A4 0A 02                                         // ...

            OperationRegion (\F113, SystemMemory, Arg0, Arg1)

   203F0: 5B 80 5C 46 31 31 33 00 68 69                    // [.\F113.hi

            Field (F113, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                BATN,   8, 
                BATA,   8, 
                REGS,   8, 
                BDAT,   8
            }


   203FA: 5B 81 1D 46 31 31 33 03 00 40 04 42 41 54 4E 08  // [..F113..@.BATN.
   2040A: 42 41 54 41 08 52 45 47 53 08 42 44 41 54 08     // BATA.REGS.BDAT.

            If (LGreater (BATN, One))
            {

   20419: A0 0A 94 42 41 54 4E 01                          // ...BATN.

                Return (0x11)
            }


   20421: A4 0A 11                                         // ...

            If (LEqual (BATA, Zero))
            {
                Store (^^PCI0.LPCB.EC0.RBEP (REGS), Local2)
                And (Local2, 0xFF, Local3)
                Store (Local3, BDAT) /* \_SB_.ATKD.ASBE.BDAT */
                ShiftRight (Local2, 0x08, Local2)
                And (Local2, 0x1F, Local2)

   20424: A0 41 04 93 42 41 54 41 00 70 5E 5E 2F 04 50 43  // .A..BATA.p^^/.PC
   20434: 49 30 4C 50 43 42 45 43 30 5F 52 42 45 50 52 45  // I0LPCBEC0_RBEPRE
   20444: 47 53 62 7B 62 0A FF 63 70 63 42 44 41 54 7A 62  // GSb{b..cpcBDATzb
   20454: 0A 08 62 7B 62 0A 1F 62                          // ..b{b..b

                If (Local2)
                {

   2045C: A0 07 62                                         // ..b

                    Add (Local2, 0x10, Local2)
                }


   2045F: 72 62 0A 10 62                                   // rb..b

                Return (Local2)
            }


   20464: A4 62                                            // .b

            If (LEqual (BATA, One))
            {
                Store (^^PCI0.LPCB.EC0.WBEP (REGS, BDAT), Local2)
                And (Local2, 0x1F, Local2)

   20466: A0 34 93 42 41 54 41 01 70 5E 5E 2F 04 50 43 49  // .4.BATA.p^^/.PCI
   20476: 30 4C 50 43 42 45 43 30 5F 57 42 45 50 52 45 47  // 0LPCBEC0_WBEPREG
   20486: 53 42 44 41 54 62 7B 62 0A 1F 62                 // SBDATb{b..b

                If (Local2)
                {

   20491: A0 07 62                                         // ..b

                    Add (Local2, 0x10, Local2)
                }


   20494: 72 62 0A 10 62                                   // rb..b

                Return (Local2)
            }


   20499: A4 62                                            // .b

            Return (0x10)
        }


   2049B: A4 0A 10                                         // ...

        Method (BTCR, 2, NotSerialized)
        {

   2049E: 14 33 42 54 43 52 02                             // .3BTCR.

            If (LLess (Arg1, 0x09))
            {

   204A5: A0 08 95 69 0A 09                                // ...i..

                Return (0x02)
            }


   204AB: A4 0A 02                                         // ...

            OperationRegion (\F114, SystemMemory, Arg0, Arg1)

   204AE: 5B 80 5C 46 31 31 34 00 68 69                    // [.\F114.hi

            Field (F114, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                BCDC,   8
            }

            SBTL (BCDC)

   204B8: 5B 81 0E 46 31 31 34 03 00 40 04 42 43 44 43 08  // [..F114..@.BCDC.
   204C8: 53 42 54 4C 42 43 44 43                          // SBTLBCDC

            Return (Zero)
        }


   204D0: A4 00                                            // ..

        Method (MF12, 3, NotSerialized)
        {
            Store (One, Local0)

   204D2: 14 33 4D 46 31 32 03 70 01 60                    // .3MF12.p.`

            If (LEqual (Arg2, Zero))
            {

   204DC: A0 0C 93 6A 00                                   // ...j.

                Store (G12V (Arg0, Arg1), Local0)
            }


   204E1: 70 47 31 32 56 68 69 60                          // pG12Vhi`

            If (LEqual (Arg2, One))
            {

   204E9: A0 0C 93 6A 01                                   // ...j.

                Store (GLDI (Arg0, Arg1), Local0)
            }


   204EE: 70 47 4C 44 49 68 69 60                          // pGLDIhi`

            If (LEqual (Arg2, 0x02))
            {

   204F6: A0 0D 93 6A 0A 02                                // ...j..

                Store (LDCR (Arg0, Arg1), Local0)
            }


   204FC: 70 4C 44 43 52 68 69 60                          // pLDCRhi`

            Return (Local0)
        }


   20504: A4 60                                            // .`

        Method (G12V, 2, NotSerialized)
        {

   20506: 14 3C 47 31 32 56 02                             // .<G12V.

            If (LLess (Arg1, 0x0C))
            {

   2050D: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20513: A4 0A 02                                         // ...

            OperationRegion (\F120, SystemMemory, Arg0, Arg1)

   20516: 5B 80 5C 46 31 32 30 00 68 69                    // [.\F120.hi

            Field (F120, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G12V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G12V.SVER */

   20520: 5B 81 13 46 31 32 30 03 00 40 04 53 56 45 52 10  // [..F120..@.SVER.
   20530: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   20540: 52                                               // R

            Return (Zero)
        }


   20541: A4 00                                            // ..

        Method (GLDI, 2, NotSerialized)
        {

   20543: 14 44 04 47 4C 44 49 02                          // .D.GLDI.

            If (LLess (Arg1, 0x10))
            {

   2054B: A0 08 95 69 0A 10                                // ...i..

                Return (0x02)
            }


   20551: A4 0A 02                                         // ...

            OperationRegion (\F121, SystemMemory, Arg0, Arg1)

   20554: 5B 80 5C 46 31 32 31 00 68 69                    // [.\F121.hi

            Field (F121, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                LDI0,   32, 
                LDI1,   32
            }

            Store (Zero, Local0)
            Or (Local0, 0x10, Local0)
            Or (Local0, 0x20, Local0)
            Store (Local0, LDI0) /* \_SB_.ATKD.GLDI.LDI0 */

   2055E: 5B 81 13 46 31 32 31 03 00 40 04 4C 44 49 30 20  // [..F121..@.LDI0 
   2056E: 4C 44 49 31 20 70 00 60 7D 60 0A 10 60 7D 60 0A  // LDI1 p.`}`..`}`.
   2057E: 20 60 70 60 4C 44 49 30                          //  `p`LDI0

            Return (Zero)
        }


   20586: A4 00                                            // ..

        Method (LDCR, 2, NotSerialized)
        {

   20588: 14 45 04 4C 44 43 52 02                          // .E.LDCR.

            If (LLess (Arg1, 0x0A))
            {

   20590: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   20596: A4 0A 02                                         // ...

            OperationRegion (\F122, SystemMemory, Arg0, Arg1)

   20599: 5B 80 5C 46 31 32 32 00 68 69                    // [.\F122.hi

            Field (F122, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                LDNM,   8, 
                LCRT,   8
            }


   205A3: 5B 81 13 46 31 32 32 03 00 40 04 4C 44 4E 4D 08  // [..F122..@.LDNM.
   205B3: 4C 43 52 54 08                                   // LCRT.

            If (LEqual (LDNM, 0x04))
            {
                WLED (LCRT)

   205B8: A0 12 93 4C 44 4E 4D 0A 04 57 4C 45 44 4C 43 52  // ...LDNM..WLEDLCR
   205C8: 54                                               // T

                Return (Zero)
            }


   205C9: A4 00                                            // ..

            Return (0x10)
        }


   205CB: A4 0A 10                                         // ...

        Method (MF13, 3, NotSerialized)
        {
            Store (One, Local0)

   205CE: 14 4A 07 4D 46 31 33 03 70 01 60                 // .J.MF13.p.`

            If (LEqual (Arg2, Zero))
            {

   205D9: A0 0C 93 6A 00                                   // ...j.

                Store (G13V (Arg0, Arg1), Local0)
            }


   205DE: 70 47 31 33 56 68 69 60                          // pG13Vhi`

            If (LEqual (Arg2, One))
            {

   205E6: A0 0C 93 6A 01                                   // ...j.

                Store (GTSI (Arg0, Arg1), Local0)
            }


   205EB: 70 47 54 53 49 68 69 60                          // pGTSIhi`

            If (LEqual (Arg2, 0x02))
            {

   205F3: A0 0D 93 6A 0A 02                                // ...j..

                Store (GTSV (Arg0, Arg1), Local0)
            }


   205F9: 70 47 54 53 56 68 69 60                          // pGTSVhi`

            If (LEqual (Arg2, 0x03))
            {

   20601: A0 0D 93 6A 0A 03                                // ...j..

                Store (GVSN (Arg0, Arg1), Local0)
            }


   20607: 70 47 56 53 4E 68 69 60                          // pGVSNhi`

            If (LEqual (Arg2, 0x04))
            {

   2060F: A0 0D 93 6A 0A 04                                // ...j..

                Store (GVSV (Arg0, Arg1), Local0)
            }


   20615: 70 47 56 53 56 68 69 60                          // pGVSVhi`

            If (LEqual (Arg2, 0x05))
            {

   2061D: A0 0D 93 6A 0A 05                                // ...j..

                Store (GFNN (Arg0, Arg1), Local0)
            }


   20623: 70 47 46 4E 4E 68 69 60                          // pGFNNhi`

            If (LEqual (Arg2, 0x06))
            {

   2062B: A0 0D 93 6A 0A 06                                // ...j..

                Store (GFNS (Arg0, Arg1), Local0)
            }


   20631: 70 47 46 4E 53 68 69 60                          // pGFNShi`

            If (LEqual (Arg2, 0x07))
            {

   20639: A0 0D 93 6A 0A 07                                // ...j..

                Store (SFNS (Arg0, Arg1), Local0)
            }


   2063F: 70 53 46 4E 53 68 69 60                          // pSFNShi`

            Return (Local0)
        }


   20647: A4 60                                            // .`

        Method (G13V, 2, NotSerialized)
        {

   20649: 14 3C 47 31 33 56 02                             // .<G13V.

            If (LLess (Arg1, 0x0C))
            {

   20650: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20656: A4 0A 02                                         // ...

            OperationRegion (\F130, SystemMemory, Arg0, Arg1)

   20659: 5B 80 5C 46 31 33 30 00 68 69                    // [.\F130.hi

            Field (F130, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G13V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G13V.SVER */

   20663: 5B 81 13 46 31 33 30 03 00 40 04 53 56 45 52 10  // [..F130..@.SVER.
   20673: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   20683: 52                                               // R

            Return (Zero)
        }


   20684: A4 00                                            // ..

        Method (GTSI, 2, NotSerialized)
        {

   20686: 14 40 08 47 54 53 49 02                          // .@.GTSI.

            If (LLess (Arg1, 0x0C))
            {

   2068E: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20694: A4 0A 02                                         // ...

            OperationRegion (\F131, SystemMemory, Arg0, Arg1)

   20697: 5B 80 5C 46 31 33 31 00 68 69                    // [.\F131.hi

            Field (F131, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                THRI,   32
            }

            Store (Zero, Local0)
            Or (Local0, One, Local0)

   206A1: 5B 81 0E 46 31 33 31 03 00 40 04 54 48 52 49 20  // [..F131..@.THRI 
   206B1: 70 00 60 7D 60 01 60                             // p.`}`.`

            If (
   206B8: A0 0E 92                                         // ...

LGreaterEqual (CPUN, One))
            {

   206BB: 95 43 50 55 4E 01                                // .CPUN.

                Or (Local0, 0x0100, Local0)
            }


   206C1: 7D 60 0B 00 01 60                                // }`...`

            If (
   206C7: A0 0F 92                                         // ...

LGreaterEqual (CPUN, 0x02))
            {

   206CA: 95 43 50 55 4E 0A 02                             // .CPUN..

                Or (Local0, 0x0200, Local0)
            }


   206D1: 7D 60 0B 00 02 60                                // }`...`

            If (
   206D7: A0 0F 92                                         // ...

LGreaterEqual (CPUN, 0x03))
            {

   206DA: 95 43 50 55 4E 0A 03                             // .CPUN..

                Or (Local0, 0x0400, Local0)
            }


   206E1: 7D 60 0B 00 04 60                                // }`...`

            If (
   206E7: A0 0F 92                                         // ...

LGreaterEqual (CPUN, 0x04))
            {

   206EA: 95 43 50 55 4E 0A 04                             // .CPUN..

                Or (Local0, 0x0800, Local0)
            }

            Or (Local0, 0x01000000, Local0)
            Store (Local0, THRI) /* \_SB_.ATKD.GTSI.THRI */

   206F1: 7D 60 0B 00 08 60 7D 60 0C 00 00 00 01 60 70 60  // }`...`}`.....`p`
   20701: 54 48 52 49                                      // THRI

            Return (Zero)
        }


   20705: A4 00                                            // ..

        Method (GTSV, 2, NotSerialized)
        {

   20707: 14 46 09 47 54 53 56 02                          // .F.GTSV.

            If (LLess (Arg1, 0x0A))
            {

   2070F: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   20715: A4 0A 02                                         // ...

            OperationRegion (\F132, SystemMemory, Arg0, Arg1)

   20718: 5B 80 5C 46 31 33 32 00 68 69                    // [.\F132.hi

            Field (F132, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                TSNM,   8, 
                TSVL,   8, 
                TSST,   8
            }

            Store (Zero, TSST) /* \_SB_.ATKD.GTSV.TSST */

   20722: 5B 81 18 46 31 33 32 03 00 40 04 54 53 4E 4D 08  // [..F132..@.TSNM.
   20732: 54 53 56 4C 08 54 53 53 54 08 70 00 54 53 53 54  // TSVL.TSST.p.TSST

            If (LEqual (TSNM, Zero))
            {
                Store (\_TZ.RTMP (), TSVL) /* \_SB_.ATKD.GTSV.TSVL */

   20742: A0 18 93 54 53 4E 4D 00 70 5C 2E 5F 54 5A 5F 52  // ...TSNM.p\._TZ_R
   20752: 54 4D 50 54 53 56 4C                             // TMPTSVL

                Return (Zero)
            }


   20759: A4 00                                            // ..

            If (LEqual (TSNM, 0x08))
            {
                BSMI (Arg0)

   2075B: A0 0F 93 54 53 4E 4D 0A 08 42 53 4D 49 68        // ...TSNM..BSMIh

                Return (Zero)
            }


   20769: A4 00                                            // ..

            If (LEqual (TSNM, 0x09))
            {
                BSMI (Arg0)

   2076B: A0 0F 93 54 53 4E 4D 0A 09 42 53 4D 49 68        // ...TSNM..BSMIh

                Return (Zero)
            }


   20779: A4 00                                            // ..

            If (LEqual (TSNM, 0x0A))
            {
                BSMI (Arg0)

   2077B: A0 0F 93 54 53 4E 4D 0A 0A 42 53 4D 49 68        // ...TSNM..BSMIh

                Return (Zero)
            }


   20789: A4 00                                            // ..

            If (LEqual (TSNM, 0x0B))
            {
                BSMI (Arg0)

   2078B: A0 0F 93 54 53 4E 4D 0A 0B 42 53 4D 49 68        // ...TSNM..BSMIh

                Return (Zero)
            }


   20799: A4 00                                            // ..

            Return (0x10)
        }


   2079B: A4 0A 10                                         // ...

        Method (GVSN, 2, NotSerialized)
        {

   2079E: 14 31 47 56 53 4E 02                             // .1GVSN.

            If (LLess (Arg1, 0x09))
            {

   207A5: A0 08 95 69 0A 09                                // ...i..

                Return (0x02)
            }


   207AB: A4 0A 02                                         // ...

            OperationRegion (\F133, SystemMemory, Arg0, Arg1)

   207AE: 5B 80 5C 46 31 33 33 00 68 69                    // [.\F133.hi

            Field (F133, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                NMVS,   8
            }

            Store (Zero, NMVS) /* \_SB_.ATKD.GVSN.NMVS */

   207B8: 5B 81 0E 46 31 33 33 03 00 40 04 4E 4D 56 53 08  // [..F133..@.NMVS.
   207C8: 70 00 4E 4D 56 53                                // p.NMVS

            Return (Zero)
        }


   207CE: A4 00                                            // ..

        Method (GVSV, 2, NotSerialized)
        {

   207D0: 14 3B 47 56 53 56 02                             // .;GVSV.

            If (LLess (Arg1, 0x0B))
            {

   207D7: A0 08 95 69 0A 0B                                // ...i..

                Return (0x02)
            }


   207DD: A4 0A 02                                         // ...

            OperationRegion (\F134, SystemMemory, Arg0, Arg1)

   207E0: 5B 80 5C 46 31 33 34 00 68 69                    // [.\F134.hi

            Field (F134, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                VSNM,   8, 
                VSVL,   16
            }


   207EA: 5B 81 13 46 31 33 34 03 00 40 04 56 53 4E 4D 08  // [..F134..@.VSNM.
   207FA: 56 53 56 4C 10                                   // VSVL.

            If (LGreater (VSNM, Zero))
            {

   207FF: A0 0A 94 56 53 4E 4D 00                          // ...VSNM.

                Return (0x10)
            }


   20807: A4 0A 10                                         // ...

            Return (Zero)
        }


   2080A: A4 00                                            // ..

        Method (GFNN, 2, NotSerialized)
        {

   2080C: 14 31 47 46 4E 4E 02                             // .1GFNN.

            If (LLess (Arg1, 0x09))
            {

   20813: A0 08 95 69 0A 09                                // ...i..

                Return (0x02)
            }


   20819: A4 0A 02                                         // ...

            OperationRegion (\F135, SystemMemory, Arg0, Arg1)

   2081C: 5B 80 5C 46 31 33 35 00 68 69                    // [.\F135.hi

            Field (F135, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                NMFN,   32
            }

            Store (One, NMFN) /* \_SB_.ATKD.GFNN.NMFN */

   20826: 5B 81 0E 46 31 33 35 03 00 40 04 4E 4D 46 4E 20  // [..F135..@.NMFN 
   20836: 70 01 4E 4D 46 4E                                // p.NMFN

            Return (Zero)
        }


   2083C: A4 00                                            // ..

        Method (GFNS, 2, NotSerialized)
        {

   2083E: 14 4B 05 47 46 4E 53 02                          // .K.GFNS.

            If (LLess (Arg1, 0x0D))
            {

   20846: A0 08 95 69 0A 0D                                // ...i..

                Return (0x02)
            }


   2084C: A4 0A 02                                         // ...

            OperationRegion (\F136, SystemMemory, Arg0, Arg1)

   2084F: 5B 80 5C 46 31 33 36 00 68 69                    // [.\F136.hi

            Field (F136, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                FNNM,   8, 
                GFNS,   32
            }


   20859: 5B 81 13 46 31 33 36 03 00 40 04 46 4E 4E 4D 08  // [..F136..@.FNNM.
   20869: 47 46 4E 53 20                                   // GFNS 

            If (Or (LEqual (FNNM, Zero), LGreater (FNNM, One)))
            {

   2086E: A0 12 7D 93 46 4E 4E 4D 00 94 46 4E 4E 4D 01 00  // ..}.FNNM..FNNM..

                Return (0x10)
            }

            Store (FNNM, Local0)
            Store (\_TZ.RFAN (
   2087E: A4 0A 10 70 46 4E 4E 4D 60 70 5C 2E 5F 54 5A 5F  // ...pFNNM`p\._TZ_
   2088E: 52 46 41 4E                                      // RFAN

Decrement (Local0)), GFNS) /* \_SB_.ATKD.GFNS.GFNS */

   20892: 76 60 47 46 4E 53                                // v`GFNS

            Return (Zero)
        }


   20898: A4 00                                            // ..

        Method (SFNS, 2, NotSerialized)
        {

   2089A: 14 48 05 53 46 4E 53 02                          // .H.SFNS.

            If (LLess (Arg1, 0x0A))
            {

   208A2: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   208A8: A4 0A 02                                         // ...

            OperationRegion (\F137, SystemMemory, Arg0, Arg1)

   208AB: 5B 80 5C 46 31 33 37 00 68 69                    // [.\F137.hi

            Field (F137, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                FNNB,   8, 
                FNSP,   8
            }


   208B5: 5B 81 13 46 31 33 37 03 00 40 04 46 4E 4E 42 08  // [..F137..@.FNNB.
   208C5: 46 4E 53 50 08                                   // FNSP.

            If (LGreater (FNNB, One))
            {

   208CA: A0 0A 94 46 4E 4E 42 01                          // ...FNNB.

                Return (0x10)
            }

            ^^PCI0.LPCB.EC0.SFNV (FNNB, FNSP)

   208D2: A4 0A 10 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // ...^^/.PCI0LPCBE
   208E2: 43 30 5F 53 46 4E 56 46 4E 4E 42 46 4E 53 50     // C0_SFNVFNNBFNSP

            Return (Zero)
        }


   208F1: A4 00                                            // ..

        Method (MF14, 3, NotSerialized)
        {
            Store (One, Local0)

   208F3: 14 33 4D 46 31 34 03 70 01 60                    // .3MF14.p.`

            If (LEqual (Arg2, Zero))
            {

   208FD: A0 0C 93 6A 00                                   // ...j.

                Store (G14V (Arg0, Arg1), Local0)
            }


   20902: 70 47 31 34 56 68 69 60                          // pG14Vhi`

            If (LEqual (Arg2, One))
            {

   2090A: A0 0C 93 6A 01                                   // ...j.

                Store (GNBT (Arg0, Arg1), Local0)
            }


   2090F: 70 47 4E 42 54 68 69 60                          // pGNBThi`

            If (LEqual (Arg2, 0x02))
            {

   20917: A0 0D 93 6A 0A 02                                // ...j..

                Store (GBTS (Arg0, Arg1), Local0)
            }


   2091D: 70 47 42 54 53 68 69 60                          // pGBTShi`

            Return (Local0)
        }


   20925: A4 60                                            // .`

        Method (G14V, 2, NotSerialized)
        {

   20927: 14 3C 47 31 34 56 02                             // .<G14V.

            If (LLess (Arg1, 0x0C))
            {

   2092E: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20934: A4 0A 02                                         // ...

            OperationRegion (\F140, SystemMemory, Arg0, Arg1)

   20937: 5B 80 5C 46 31 34 30 00 68 69                    // [.\F140.hi

            Field (F140, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G14V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G14V.SVER */

   20941: 5B 81 13 46 31 34 30 03 00 40 04 53 56 45 52 10  // [..F140..@.SVER.
   20951: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   20961: 52                                               // R

            Return (Zero)
        }


   20962: A4 00                                            // ..

        Method (GNBT, 2, NotSerialized)
        {

   20964: 14 32 47 4E 42 54 02                             // .2GNBT.

            If (LLess (Arg1, 0x09))
            {

   2096B: A0 08 95 69 0A 09                                // ...i..

                Return (0x02)
            }


   20971: A4 0A 02                                         // ...

            OperationRegion (\F141, SystemMemory, Arg0, Arg1)

   20974: 5B 80 5C 46 31 34 31 00 68 69                    // [.\F141.hi

            Field (F141, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                NBBT,   8
            }

            Store (0x05, NBBT) /* \_SB_.ATKD.GNBT.NBBT */

   2097E: 5B 81 0E 46 31 34 31 03 00 40 04 4E 42 42 54 08  // [..F141..@.NBBT.
   2098E: 70 0A 05 4E 42 42 54                             // p..NBBT

            Return (Zero)
        }


   20995: A4 00                                            // ..

        Method (GBTS, 2, NotSerialized)
        {

   20997: 14 44 0D 47 42 54 53 02                          // .D.GBTS.

            If (LLess (Arg1, 0x0A))
            {

   2099F: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   209A5: A4 0A 02                                         // ...

            OperationRegion (\F142, SystemMemory, Arg0, Arg1)

   209A8: 5B 80 5C 46 31 34 32 00 68 69                    // [.\F142.hi

            Field (F142, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                BTNM,   8, 
                BTST,   8
            }


   209B2: 5B 81 13 46 31 34 32 03 00 40 04 42 54 4E 4D 08  // [..F142..@.BTNM.
   209C2: 42 54 53 54 08                                   // BTST.

            Name (BTTB, 
   209C7: 08 42 54 54 42                                   // .BTTB

Package (0x05)
            {

   209CC: 12 25 05                                         // .%.

                Package (0x03)
                {
                    0x0C, 
                    Zero, 
                    Zero
                }, 


   209CF: 12 06 03 0A 0C 00 00                             // .......

                Package (0x03)
                {
                    0x0D, 
                    Zero, 
                    Zero
                }, 


   209D6: 12 06 03 0A 0D 00 00                             // .......

                Package (0x03)
                {
                    0x0E, 
                    Zero, 
                    Zero
                }, 


   209DD: 12 06 03 0A 0E 00 00                             // .......

                Package (0x03)
                {
                    0x0F, 
                    Zero, 
                    Zero
                }, 


   209E4: 12 06 03 0A 0F 00 00                             // .......

                Package (0x03)
                {
                    0x15, 
                    Zero, 
                    Zero
                }
            })

   209EB: 12 06 03 0A 15 00 00                             // .......

            If (LGreater (BTNM, 0x05))
            {

   209F2: A0 0B 94 42 54 4E 4D 0A 05                       // ...BTNM..

                Return (0x10)
            }

            Store (BTNM, Local0)
            Decrement (Local0)
            Store (DerefOf (
   209FB: A4 0A 10 70 42 54 4E 4D 60 76 60 70 83           // ...pBTNM`v`p.

Index (BTTB, Local0)), Local1)

   20A08: 88 42 54 54 42 60 00 61                          // .BTTB`.a

            If (LEqual (DerefOf (
   20A10: A0 23 93 83                                      // .#..

Index (Local1, One)), Zero))
            {

   20A14: 88 61 01 00 00                                   // .a...

                Store (^^PCI0.LPCB.EC0.RPIN (
   20A19: 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30  // p^^/.PCI0LPCBEC0
   20A29: 5F 52 50 49 4E                                   // _RPIN

DerefOf (
   20A2E: 83                                               // .

Index (Local1, Zero))), Local2)
            }


   20A2F: 88 61 00 00 62                                   // .a..b

            If (LEqual (DerefOf (
   20A34: A0 13 93 83                                      // ....

Index (Local1, One)), One))
            {

   20A38: 88 61 01 00 01                                   // .a...

                Store (RGPL (
   20A3D: 70 52 47 50 4C                                   // pRGPL

DerefOf (
   20A42: 83                                               // .

Index (Local1, Zero))), Local2)
            }


   20A43: 88 61 00 00 62                                   // .a..b

            If (
   20A48: A0 09                                            // ..

LEqual (DerefOf (
   20A4A: 93 83                                            // ..

Index (Local1, One)), 0x03)){}

   20A4C: 88 61 01 00 0A 03                                // .a....

            If (LEqual (DerefOf (
   20A52: A0 0F 93 83                                      // ....

Index (Local1, 0x02)), Local2))
            {

   20A56: 88 61 0A 02 00 62                                // .a...b

                Store (Zero, BTST) /* \_SB_.ATKD.GBTS.BTST */
            }

   20A5C: 70 00 42 54 53 54                                // p.BTST

            Else
            {

   20A62: A1 07                                            // ..

                Store (One, BTST) /* \_SB_.ATKD.GBTS.BTST */
            }


   20A64: 70 01 42 54 53 54                                // p.BTST

            Return (Zero)
        }


   20A6A: A4 00                                            // ..

        Method (MF15, 3, NotSerialized)
        {
            Store (One, Local0)

   20A6C: 14 40 05 4D 46 31 35 03 70 01 60                 // .@.MF15.p.`

            If (LEqual (Arg2, Zero))
            {

   20A77: A0 0C 93 6A 00                                   // ...j.

                Store (G15V (Arg0, Arg1), Local0)
            }


   20A7C: 70 47 31 35 56 68 69 60                          // pG15Vhi`

            If (LEqual (Arg2, One))
            {

   20A84: A0 0C 93 6A 01                                   // ...j.

                Store (GLDB (Arg0, Arg1), Local0)
            }


   20A89: 70 47 4C 44 42 68 69 60                          // pGLDBhi`

            If (LEqual (Arg2, 0x02))
            {

   20A91: A0 0D 93 6A 0A 02                                // ...j..

                Store (SLDB (Arg0, Arg1), Local0)
            }


   20A97: 70 53 4C 44 42 68 69 60                          // pSLDBhi`

            If (LEqual (Arg2, 0x03))
            {

   20A9F: A0 0D 93 6A 0A 03                                // ...j..

                Store (GDPI (Arg0, Arg1), Local0)
            }


   20AA5: 70 47 44 50 49 68 69 60                          // pGDPIhi`

            If (LEqual (Arg2, 0x04))
            {

   20AAD: A0 0D 93 6A 0A 04                                // ...j..

                Store (SODP (Arg0, Arg1), Local0)
            }


   20AB3: 70 53 4F 44 50 68 69 60                          // pSODPhi`

            Return (Local0)
        }


   20ABB: A4 60                                            // .`

        Method (G15V, 2, NotSerialized)
        {

   20ABD: 14 3C 47 31 35 56 02                             // .<G15V.

            If (LLess (Arg1, 0x0C))
            {

   20AC4: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20ACA: A4 0A 02                                         // ...

            OperationRegion (\F150, SystemMemory, Arg0, Arg1)

   20ACD: 5B 80 5C 46 31 35 30 00 68 69                    // [.\F150.hi

            Field (F150, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G15V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G15V.SVER */

   20AD7: 5B 81 13 46 31 35 30 03 00 40 04 53 56 45 52 10  // [..F150..@.SVER.
   20AE7: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   20AF7: 52                                               // R

            Return (Zero)
        }


   20AF8: A4 00                                            // ..

        Method (GLDB, 2, NotSerialized)
        {

   20AFA: 14 41 04 47 4C 44 42 02                          // .A.GLDB.

            If (LLess (Arg1, 0x0A))
            {

   20B02: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   20B08: A4 0A 02                                         // ...

            OperationRegion (\F151, SystemMemory, Arg0, Arg1)

   20B0B: 5B 80 5C 46 31 35 31 00 68 69                    // [.\F151.hi

            Field (F151, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                LCDB,   8, 
                MLDB,   8
            }

            Store (GPLV (), LCDB) /* \_SB_.ATKD.GLDB.LCDB */
            Store (0x0B, MLDB) /* \_SB_.ATKD.GLDB.MLDB */

   20B15: 5B 81 13 46 31 35 31 03 00 40 04 4C 43 44 42 08  // [..F151..@.LCDB.
   20B25: 4D 4C 44 42 08 70 47 50 4C 56 4C 43 44 42 70 0A  // MLDB.pGPLVLCDBp.
   20B35: 0B 4D 4C 44 42                                   // .MLDB

            Return (Zero)
        }


   20B3A: A4 00                                            // ..

        Method (SLDB, 2, NotSerialized)
        {

   20B3C: 14 42 07 53 4C 44 42 02                          // .B.SLDB.

            If (LLess (Arg1, 0x0A))
            {

   20B44: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   20B4A: A4 0A 02                                         // ...

            OperationRegion (\F152, SystemMemory, Arg0, Arg1)

   20B4D: 5B 80 5C 46 31 35 32 00 68 69                    // [.\F152.hi

            Field (F152, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                LCDL,   8, 
                LTPE,   8
            }


   20B57: 5B 81 13 46 31 35 32 03 00 40 04 4C 43 44 4C 08  // [..F152..@.LCDL.
   20B67: 4C 54 50 45 08                                   // LTPE.

            If (LEqual (LTPE, Zero))
            {

   20B6C: A0 1D 93 4C 54 50 45 00                          // ...LTPE.

                If (LGreater (LCDL, 0x0B))
                {

   20B74: A0 0B 94 4C 43 44 4C 0A 0B                       // ...LCDL..

                    Return (0x10)
                }

                SPLV (LCDL)

   20B7D: A4 0A 10 53 50 4C 56 4C 43 44 4C                 // ...SPLVLCDL

                Return (Zero)
            }


   20B88: A4 00                                            // ..

            If (LEqual (LTPE, One))
            {
                ^^PCI0.LPCB.EC0.SBRV (LCDL)

   20B8A: A0 21 93 4C 54 50 45 01 5E 5E 2F 04 50 43 49 30  // .!.LTPE.^^/.PCI0
   20B9A: 4C 50 43 42 45 43 30 5F 53 42 52 56 4C 43 44 4C  // LPCBEC0_SBRVLCDL

                Return (Zero)
            }


   20BAA: A4 00                                            // ..

            Return (0x11)
        }


   20BAC: A4 0A 11                                         // ...

        Method (GDPI, 2, NotSerialized)
        {

   20BAF: 14 48 04 47 44 50 49 02                          // .H.GDPI.

            If (LLess (Arg1, 0x10))
            {

   20BB7: A0 08 95 69 0A 10                                // ...i..

                Return (0x02)
            }


   20BBD: A4 0A 02                                         // ...

            OperationRegion (\F153, SystemMemory, Arg0, Arg1)

   20BC0: 5B 80 5C 46 31 35 33 00 68 69                    // [.\F153.hi

            Field (F153, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                ODPI,   32, 
                ODPC,   8
            }

            Store (Zero, Local0)
            Or (Local0, One, Local0)
            Or (Local0, 0x02, Local0)
            Store (Local0, ODPI) /* \_SB_.ATKD.GDPI.ODPI */
            BSMI (Arg0)

   20BCA: 5B 81 13 46 31 35 33 03 00 40 04 4F 44 50 49 20  // [..F153..@.ODPI 
   20BDA: 4F 44 50 43 08 70 00 60 7D 60 01 60 7D 60 0A 02  // ODPC.p.`}`.`}`..
   20BEA: 60 70 60 4F 44 50 49 42 53 4D 49 68              // `p`ODPIBSMIh

            Return (Zero)
        }


   20BF6: A4 00                                            // ..

        Method (SODP, 2, NotSerialized)
        {

   20BF8: 14 42 05 53 4F 44 50 02                          // .B.SODP.

            If (LLess (Arg1, 0x0C))
            {

   20C00: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20C06: A4 0A 02                                         // ...

            OperationRegion (\F154, SystemMemory, Arg0, Arg1)

   20C09: 5B 80 5C 46 31 35 34 00 68 69                    // [.\F154.hi

            Field (F154, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                ODPM,   32
            }

            Store (Zero, Local0)
            Or (Local0, One, Local0)
            Or (Local0, 0x02, Local0)
            And (ODPM, Local0, Local0)

   20C13: 5B 81 0E 46 31 35 34 03 00 40 04 4F 44 50 4D 20  // [..F154..@.ODPM 
   20C23: 70 00 60 7D 60 01 60 7D 60 0A 02 60 7B 4F 44 50  // p.`}`.`}`..`{ODP
   20C33: 4D 60 60                                         // M``

            If (LEqual (Local0, ODPM))
            {
                SDSP (ODPM)

   20C36: A0 11 93 60 4F 44 50 4D 53 44 53 50 4F 44 50 4D  // ...`ODPMSDSPODPM

                Return (Zero)
            }


   20C46: A4 00                                            // ..

            Return (0x10)
        }


   20C48: A4 0A 10                                         // ...

        Method (MF16, 3, NotSerialized)
        {
            Store (One, Local0)

   20C4B: 14 33 4D 46 31 36 03 70 01 60                    // .3MF16.p.`

            If (LEqual (Arg2, Zero))
            {

   20C55: A0 0C 93 6A 00                                   // ...j.

                Store (G16V (Arg0, Arg1), Local0)
            }


   20C5A: 70 47 31 36 56 68 69 60                          // pG16Vhi`

            If (LEqual (Arg2, One))
            {

   20C62: A0 0C 93 6A 01                                   // ...j.

                Store (SFBD (Arg0, Arg1), Local0)
            }


   20C67: 70 53 46 42 44 68 69 60                          // pSFBDhi`

            If (LEqual (Arg2, 0x02))
            {

   20C6F: A0 0D 93 6A 0A 02                                // ...j..

                Store (LCMD (Arg0, Arg1), Local0)
            }


   20C75: 70 4C 43 4D 44 68 69 60                          // pLCMDhi`

            Return (Local0)
        }


   20C7D: A4 60                                            // .`

        Method (G16V, 2, NotSerialized)
        {

   20C7F: 14 3C 47 31 36 56 02                             // .<G16V.

            If (LLess (Arg1, 0x0C))
            {

   20C86: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20C8C: A4 0A 02                                         // ...

            OperationRegion (\F160, SystemMemory, Arg0, Arg1)

   20C8F: 5B 80 5C 46 31 36 30 00 68 69                    // [.\F160.hi

            Field (F160, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G16V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G16V.SVER */

   20C99: 5B 81 13 46 31 36 30 03 00 40 04 53 56 45 52 10  // [..F160..@.SVER.
   20CA9: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   20CB9: 52                                               // R

            Return (Zero)
        }


   20CBA: A4 00                                            // ..

        Method (SFBD, 2, NotSerialized)
        {

   20CBC: 14 44 04 53 46 42 44 02                          // .D.SFBD.

            If (LLess (Arg1, 0x0A))
            {

   20CC4: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   20CCA: A4 0A 02                                         // ...

            OperationRegion (\F161, SystemMemory, Arg0, Arg1)

   20CCD: 5B 80 5C 46 31 36 31 00 68 69                    // [.\F161.hi

            Field (F161, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                NXBD,   8
            }


   20CD7: 5B 81 0E 46 31 36 31 03 00 40 04 4E 58 42 44 08  // [..F161..@.NXBD.

            If (OFBD (NXBD))
            {
                Store (NXBD, UHDB) /* \_SB_.UHDB */

   20CE7: A0 14 4F 46 42 44 4E 58 42 44 70 4E 58 42 44 55  // ..OFBDNXBDpNXBDU
   20CF7: 48 44 42                                         // HDB

                Return (Zero)
            }

   20CFA: A4 00                                            // ..

            Else
            {

   20CFC: A1 04                                            // ..

                Return (0x10)
            }
        }


   20CFE: A4 0A 10                                         // ...

        Method (LCMD, 2, NotSerialized)
        {

   20D01: 14 16 4C 43 4D 44 02                             // ..LCMD.

            If (LLess (Arg1, 0x0A))
            {

   20D08: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }

            BSMI (Arg0)

   20D0E: A4 0A 02 42 53 4D 49 68                          // ...BSMIh

            Return (Zero)
        }


   20D16: A4 00                                            // ..

        Method (MF17, 3, NotSerialized)
        {
            Store (One, Local0)

   20D18: 14 40 05 4D 46 31 37 03 70 01 60                 // .@.MF17.p.`

            If (LEqual (Arg2, Zero))
            {

   20D23: A0 0C 93 6A 00                                   // ...j.

                Store (G17V (Arg0, Arg1), Local0)
            }


   20D28: 70 47 31 37 56 68 69 60                          // pG17Vhi`

            If (LEqual (Arg2, One))
            {

   20D30: A0 0C 93 6A 01                                   // ...j.

                Store (GMDL (Arg0, Arg1), Local0)
            }


   20D35: 70 47 4D 44 4C 68 69 60                          // pGMDLhi`

            If (LEqual (Arg2, 0x02))
            {

   20D3D: A0 0D 93 6A 0A 02                                // ...j..

                Store (GBSI (Arg0, Arg1), Local0)
            }


   20D43: 70 47 42 53 49 68 69 60                          // pGBSIhi`

            If (LEqual (Arg2, 0x03))
            {

   20D4B: A0 0D 93 6A 0A 03                                // ...j..

                Store (GECI (Arg0, Arg1), Local0)
            }


   20D51: 70 47 45 43 49 68 69 60                          // pGECIhi`

            If (LEqual (Arg2, 0x04))
            {

   20D59: A0 0D 93 6A 0A 04                                // ...j..

                Store (GFII (Arg0, Arg1), Local0)
            }


   20D5F: 70 47 46 49 49 68 69 60                          // pGFIIhi`

            Return (Local0)
        }


   20D67: A4 60                                            // .`

        Method (G17V, 2, NotSerialized)
        {

   20D69: 14 3C 47 31 37 56 02                             // .<G17V.

            If (LLess (Arg1, 0x0C))
            {

   20D70: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   20D76: A4 0A 02                                         // ...

            OperationRegion (\F170, SystemMemory, Arg0, Arg1)

   20D79: 5B 80 5C 46 31 37 30 00 68 69                    // [.\F170.hi

            Field (F170, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G17V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G17V.SVER */

   20D83: 5B 81 13 46 31 37 30 03 00 40 04 53 56 45 52 10  // [..F170..@.SVER.
   20D93: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   20DA3: 52                                               // R

            Return (Zero)
        }


   20DA4: A4 00                                            // ..

        Method (GMDL, 2, NotSerialized)
        {

   20DA6: 14 46 0C 47 4D 44 4C 02                          // .F.GMDL.

            If (LLess (Arg1, 0x19))
            {

   20DAE: A0 08 95 69 0A 19                                // ...i..

                Return (0x02)
            }


   20DB4: A4 0A 02                                         // ...

            OperationRegion (\F171, SystemMemory, Arg0, Arg1)

   20DB7: 5B 80 5C 46 31 37 31 00 68 69                    // [.\F171.hi

            Field (F171, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                MLEN,   8, 
                MDL1,   32, 
                MDL2,   32, 
                MDL3,   32, 
                MDL4,   32
            }

            Store (Zero, MDL1) /* \_SB_.ATKD.GMDL.MDL1 */
            Store (Zero, MDL2) /* \_SB_.ATKD.GMDL.MDL2 */
            Store (Zero, MDL3) /* \_SB_.ATKD.GMDL.MDL3 */
            Store (Zero, MDL4) /* \_SB_.ATKD.GMDL.MDL4 */

   20DC1: 5B 81 22 46 31 37 31 03 00 40 04 4D 4C 45 4E 08  // [."F171..@.MLEN.
   20DD1: 4D 44 4C 31 20 4D 44 4C 32 20 4D 44 4C 33 20 4D  // MDL1 MDL2 MDL3 M
   20DE1: 44 4C 34 20 70 00 4D 44 4C 31 70 00 4D 44 4C 32  // DL4 p.MDL1p.MDL2
   20DF1: 70 00 4D 44 4C 33 70 00 4D 44 4C 34              // p.MDL3p.MDL4

            Name (BBUF, 
   20DFD: 08 42 42 55 46                                   // .BBUF

Buffer (0x10){})

   20E02: 11 03 0A 10                                      // ....

            CreateDWordField (BBUF, Zero, DAT1)

   20E06: 8A 42 42 55 46 00 44 41 54 31                    // .BBUF.DAT1

            CreateDWordField (BBUF, 0x04, DAT2)

   20E10: 8A 42 42 55 46 0A 04 44 41 54 32                 // .BBUF..DAT2

            CreateDWordField (BBUF, 0x08, DAT3)

   20E1B: 8A 42 42 55 46 0A 08 44 41 54 33                 // .BBUF..DAT3

            CreateDWordField (BBUF, 0x0C, DAT4)
            Store (GBMN (), Local0)
            Store (SizeOf (Local0), MLEN) /* \_SB_.ATKD.GMDL.MLEN */
            Store (GBMN (), BBUF) /* \_SB_.ATKD.GMDL.BBUF */
            Store (DAT1, MDL1) /* \_SB_.ATKD.GMDL.MDL1 */
            Store (DAT2, MDL2) /* \_SB_.ATKD.GMDL.MDL2 */
            Store (DAT3, MDL3) /* \_SB_.ATKD.GMDL.MDL3 */
            Store (DAT4, MDL4) /* \_SB_.ATKD.GMDL.MDL4 */

   20E26: 8A 42 42 55 46 0A 0C 44 41 54 34 70 47 42 4D 4E  // .BBUF..DAT4pGBMN
   20E36: 60 70 87 60 4D 4C 45 4E 70 47 42 4D 4E 42 42 55  // `p.`MLENpGBMNBBU
   20E46: 46 70 44 41 54 31 4D 44 4C 31 70 44 41 54 32 4D  // FpDAT1MDL1pDAT2M
   20E56: 44 4C 32 70 44 41 54 33 4D 44 4C 33 70 44 41 54  // DL2pDAT3MDL3pDAT
   20E66: 34 4D 44 4C 34                                   // 4MDL4

            Return (Zero)
        }


   20E6B: A4 00                                            // ..

        Method (GBSI, 2, NotSerialized)
        {

   20E6D: 14 46 0C 47 42 53 49 02                          // .F.GBSI.

            If (LLess (Arg1, 0x19))
            {

   20E75: A0 08 95 69 0A 19                                // ...i..

                Return (0x02)
            }


   20E7B: A4 0A 02                                         // ...

            OperationRegion (\F172, SystemMemory, Arg0, Arg1)

   20E7E: 5B 80 5C 46 31 37 32 00 68 69                    // [.\F172.hi

            Field (F172, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                BLEN,   8, 
                BDL1,   32, 
                BDL2,   32, 
                BDL3,   32, 
                BDL4,   32
            }

            Store (Zero, BDL1) /* \_SB_.ATKD.GBSI.BDL1 */
            Store (Zero, BDL2) /* \_SB_.ATKD.GBSI.BDL2 */
            Store (Zero, BDL3) /* \_SB_.ATKD.GBSI.BDL3 */
            Store (Zero, BDL4) /* \_SB_.ATKD.GBSI.BDL4 */

   20E88: 5B 81 22 46 31 37 32 03 00 40 04 42 4C 45 4E 08  // [."F172..@.BLEN.
   20E98: 42 44 4C 31 20 42 44 4C 32 20 42 44 4C 33 20 42  // BDL1 BDL2 BDL3 B
   20EA8: 44 4C 34 20 70 00 42 44 4C 31 70 00 42 44 4C 32  // DL4 p.BDL1p.BDL2
   20EB8: 70 00 42 44 4C 33 70 00 42 44 4C 34              // p.BDL3p.BDL4

            Name (BBUF, 
   20EC4: 08 42 42 55 46                                   // .BBUF

Buffer (0x10){})

   20EC9: 11 03 0A 10                                      // ....

            CreateDWordField (BBUF, Zero, DAT1)

   20ECD: 8A 42 42 55 46 00 44 41 54 31                    // .BBUF.DAT1

            CreateDWordField (BBUF, 0x04, DAT2)

   20ED7: 8A 42 42 55 46 0A 04 44 41 54 32                 // .BBUF..DAT2

            CreateDWordField (BBUF, 0x08, DAT3)

   20EE2: 8A 42 42 55 46 0A 08 44 41 54 33                 // .BBUF..DAT3

            CreateDWordField (BBUF, 0x0C, DAT4)
            Store (GBRV (), Local0)
            Store (SizeOf (Local0), BLEN) /* \_SB_.ATKD.GBSI.BLEN */
            Store (GBRV (), BBUF) /* \_SB_.ATKD.GBSI.BBUF */
            Store (DAT1, BDL1) /* \_SB_.ATKD.GBSI.BDL1 */
            Store (DAT2, BDL2) /* \_SB_.ATKD.GBSI.BDL2 */
            Store (DAT3, BDL3) /* \_SB_.ATKD.GBSI.BDL3 */
            Store (DAT4, BDL4) /* \_SB_.ATKD.GBSI.BDL4 */

   20EED: 8A 42 42 55 46 0A 0C 44 41 54 34 70 47 42 52 56  // .BBUF..DAT4pGBRV
   20EFD: 60 70 87 60 42 4C 45 4E 70 47 42 52 56 42 42 55  // `p.`BLENpGBRVBBU
   20F0D: 46 70 44 41 54 31 42 44 4C 31 70 44 41 54 32 42  // FpDAT1BDL1pDAT2B
   20F1D: 44 4C 32 70 44 41 54 33 42 44 4C 33 70 44 41 54  // DL2pDAT3BDL3pDAT
   20F2D: 34 42 44 4C 34                                   // 4BDL4

            Return (Zero)
        }


   20F32: A4 00                                            // ..

        Method (GECI, 2, NotSerialized)
        {

   20F34: 14 4D 05 47 45 43 49 02                          // .M.GECI.

            If (LLess (Arg1, 0x19))
            {

   20F3C: A0 08 95 69 0A 19                                // ...i..

                Return (0x02)
            }


   20F42: A4 0A 02                                         // ...

            OperationRegion (\F173, SystemMemory, Arg0, Arg1)

   20F45: 5B 80 5C 46 31 37 33 00 68 69                    // [.\F173.hi

            Field (F173, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                ELEN,   8, 
                EDL1,   32, 
                EDL2,   32, 
                EDL3,   32, 
                EDL4,   32
            }

            Store (Zero, EDL1) /* \_SB_.ATKD.GECI.EDL1 */
            Store (Zero, EDL2) /* \_SB_.ATKD.GECI.EDL2 */
            Store (Zero, EDL3) /* \_SB_.ATKD.GECI.EDL3 */
            Store (Zero, EDL4) /* \_SB_.ATKD.GECI.EDL4 */
            BSMI (Arg0)

   20F4F: 5B 81 22 46 31 37 33 03 00 40 04 45 4C 45 4E 08  // [."F173..@.ELEN.
   20F5F: 45 44 4C 31 20 45 44 4C 32 20 45 44 4C 33 20 45  // EDL1 EDL2 EDL3 E
   20F6F: 44 4C 34 20 70 00 45 44 4C 31 70 00 45 44 4C 32  // DL4 p.EDL1p.EDL2
   20F7F: 70 00 45 44 4C 33 70 00 45 44 4C 34 42 53 4D 49  // p.EDL3p.EDL4BSMI
   20F8F: 68                                               // h

            Return (Zero)
        }


   20F90: A4 00                                            // ..

        Method (GFII, 2, NotSerialized)
        {

   20F92: 14 34 47 46 49 49 02                             // .4GFII.

            If (LLess (Arg1, 0x10))
            {

   20F99: A0 08 95 69 0A 10                                // ...i..

                Return (0x02)
            }


   20F9F: A4 0A 02                                         // ...

            OperationRegion (\F174, SystemMemory, Arg0, Arg1)

   20FA2: 5B 80 5C 46 31 37 34 00 68 69                    // [.\F174.hi

            Field (F174, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SFII,   8
            }

            Store (BECF, SFII) /* \_SB_.ATKD.GFII.SFII */

   20FAC: 5B 81 0E 46 31 37 34 03 00 40 04 53 46 49 49 08  // [..F174..@.SFII.
   20FBC: 70 42 45 43 46 53 46 49 49                       // pBECFSFII

            Return (Zero)
        }


   20FC5: A4 00                                            // ..

        Method (MF18, 3, NotSerialized)
        {
            Store (One, Local0)

   20FC7: 14 42 04 4D 46 31 38 03 70 01 60                 // .B.MF18.p.`

            If (LEqual (Arg2, Zero))
            {

   20FD2: A0 0C 93 6A 00                                   // ...j.

                Store (G18V (Arg0, Arg1), Local0)
            }


   20FD7: 70 47 31 38 56 68 69 60                          // pG18Vhi`

            If (LEqual (Arg2, One))
            {

   20FDF: A0 0C 93 6A 01                                   // ...j.

                Store (GDVI (Arg0, Arg1), Local0)
            }


   20FE4: 70 47 44 56 49 68 69 60                          // pGDVIhi`

            If (LEqual (Arg2, 0x02))
            {

   20FEC: A0 0D 93 6A 0A 02                                // ...j..

                Store (GDVS (Arg0, Arg1), Local0)
            }


   20FF2: 70 47 44 56 53 68 69 60                          // pGDVShi`

            If (LEqual (Arg2, 0x03))
            {

   20FFA: A0 0D 93 6A 0A 03                                // ...j..

                Store (SDPW (Arg0, Arg1), Local0)
            }


   21000: 70 53 44 50 57 68 69 60                          // pSDPWhi`

            Return (Local0)
        }


   21008: A4 60                                            // .`

        Method (G18V, 2, NotSerialized)
        {

   2100A: 14 3C 47 31 38 56 02                             // .<G18V.

            If (LLess (Arg1, 0x0C))
            {

   21011: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   21017: A4 0A 02                                         // ...

            OperationRegion (\F180, SystemMemory, Arg0, Arg1)

   2101A: 5B 80 5C 46 31 38 30 00 68 69                    // [.\F180.hi

            Field (F180, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G18V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G18V.SVER */

   21024: 5B 81 13 46 31 38 30 03 00 40 04 53 56 45 52 10  // [..F180..@.SVER.
   21034: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   21044: 52                                               // R

            Return (Zero)
        }


   21045: A4 00                                            // ..

        Method (GDVI, 2, NotSerialized)
        {

   21047: 14 39 47 44 56 49 02                             // .9GDVI.

            If (LLess (Arg1, 0x18))
            {

   2104E: A0 08 95 69 0A 18                                // ...i..

                Return (0x02)
            }


   21054: A4 0A 02                                         // ...

            OperationRegion (\F181, SystemMemory, Arg0, Arg1)

   21057: 5B 80 5C 46 31 38 31 00 68 69                    // [.\F181.hi

            Field (F181, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                LDI0,   32, 
                LDI1,   32
            }

            Store (FEBL, LDI0) /* \_SB_.ATKD.GDVI.LDI0 */

   21061: 5B 81 13 46 31 38 31 03 00 40 04 4C 44 49 30 20  // [..F181..@.LDI0 
   21071: 4C 44 49 31 20 70 46 45 42 4C 4C 44 49 30        // LDI1 pFEBLLDI0

            Return (Zero)
        }


   2107F: A4 00                                            // ..

        Method (GDVS, 2, NotSerialized)
        {

   21081: 14 46 04 47 44 56 53 02                          // .F.GDVS.

            If (LLess (Arg1, 0x0A))
            {

   21089: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   2108F: A4 0A 02                                         // ...

            OperationRegion (\F182, SystemMemory, Arg0, Arg1)

   21092: 5B 80 5C 46 31 38 32 00 68 69                    // [.\F182.hi

            Field (F182, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                DNUM,   8, 
                DSTS,   8
            }

            ShiftLeft (One, DNUM, Local0)

   2109C: 5B 81 13 46 31 38 32 03 00 40 04 44 4E 55 4D 08  // [..F182..@.DNUM.
   210AC: 44 53 54 53 08 79 01 44 4E 55 4D 60              // DSTS.y.DNUM`

            If (LEqual (And (Local0, FEBL), Zero))
            {

   210B8: A0 0D 93 7B 60 46 45 42 4C 00 00                 // ...{`FEBL..

                Return (0x10)
            }


   210C3: A4 0A 10                                         // ...

            Return (Zero)
        }


   210C6: A4 00                                            // ..

        Method (SDPW, 2, NotSerialized)
        {

   210C8: 14 41 05 53 44 50 57 02                          // .A.SDPW.

            If (LLess (Arg1, 0x0A))
            {

   210D0: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   210D6: A4 0A 02                                         // ...

            OperationRegion (\F183, SystemMemory, Arg0, Arg1)

   210D9: 5B 80 5C 46 31 38 33 00 68 69                    // [.\F183.hi

            Field (F183, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                DNUM,   8, 
                DCTR,   8
            }

            ShiftLeft (One, DNUM, Local0)

   210E3: 5B 81 13 46 31 38 33 03 00 40 04 44 4E 55 4D 08  // [..F183..@.DNUM.
   210F3: 44 43 54 52 08 79 01 44 4E 55 4D 60              // DCTR.y.DNUM`

            If (LEqual (And (Local0, FEBL), Zero))
            {

   210FF: A0 0D 93 7B 60 46 45 42 4C 00 00                 // ...{`FEBL..

                Return (0x10)
            }


   2110A: A4 0A 10                                         // ...

            If (LGreater (DCTR, One))
            {

   2110D: A0 0A 94 44 43 54 52 01                          // ...DCTR.

                Return (0x11)
            }


   21115: A4 0A 11                                         // ...

            Return (Zero)
        }


   21118: A4 00                                            // ..

        Method (MF19, 3, NotSerialized)
        {
            Store (One, Local0)

   2111A: 14 33 4D 46 31 39 03 70 01 60                    // .3MF19.p.`

            If (LEqual (Arg2, Zero))
            {

   21124: A0 0C 93 6A 00                                   // ...j.

                Store (G19V (Arg0, Arg1), Local0)
            }


   21129: 70 47 31 39 56 68 69 60                          // pG19Vhi`

            If (LEqual (Arg2, One))
            {

   21131: A0 0C 93 6A 01                                   // ...j.

                Store (ACMS (Arg0, Arg1), Local0)
            }


   21136: 70 41 43 4D 53 68 69 60                          // pACMShi`

            If (LEqual (Arg2, 0x02))
            {

   2113E: A0 0D 93 6A 0A 02                                // ...j..

                Store (CSIN (Arg0, Arg1), Local0)
            }


   21144: 70 43 53 49 4E 68 69 60                          // pCSINhi`

            Return (Local0)
        }


   2114C: A4 60                                            // .`

        Method (G19V, 2, NotSerialized)
        {

   2114E: 14 3C 47 31 39 56 02                             // .<G19V.

            If (LLess (Arg1, 0x0C))
            {

   21155: A0 08 95 69 0A 0C                                // ...i..

                Return (0x02)
            }


   2115B: A4 0A 02                                         // ...

            OperationRegion (\F190, SystemMemory, Arg0, Arg1)

   2115E: 5B 80 5C 46 31 39 30 00 68 69                    // [.\F190.hi

            Field (F190, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SVER,   16, 
                MVER,   16
            }

            Store (Zero, MVER) /* \_SB_.ATKD.G19V.MVER */
            Store (Zero, SVER) /* \_SB_.ATKD.G19V.SVER */

   21168: 5B 81 13 46 31 39 30 03 00 40 04 53 56 45 52 10  // [..F190..@.SVER.
   21178: 4D 56 45 52 10 70 00 4D 56 45 52 70 00 53 56 45  // MVER.p.MVERp.SVE
   21188: 52                                               // R

            Return (Zero)
        }


   21189: A4 00                                            // ..

        Method (ACMS, 2, NotSerialized)
        {
            BSMI (Arg0)

   2118B: 14 0D 41 43 4D 53 02 42 53 4D 49 68              // ..ACMS.BSMIh

            Return (Zero)
        }


   21197: A4 00                                            // ..

        Method (CSIN, 2, NotSerialized)
        {

   21199: 14 32 43 53 49 4E 02                             // .2CSIN.

            If (LLess (Arg1, 0x0A))
            {

   211A0: A0 08 95 69 0A 0A                                // ...i..

                Return (0x02)
            }


   211A6: A4 0A 02                                         // ...

            OperationRegion (\F192, SystemMemory, Arg0, Arg1)

   211A9: 5B 80 5C 46 31 39 32 00 68 69                    // [.\F192.hi

            Field (F192, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                CMAX,   16
            }

            Store (0xFF, CMAX) /* \_SB_.ATKD.CSIN.CMAX */

   211B3: 5B 81 0E 46 31 39 32 03 00 40 04 43 4D 41 58 10  // [..F192..@.CMAX.
   211C3: 70 0A FF 43 4D 41 58                             // p..CMAX

            Return (Zero)
        }


   211CA: A4 00                                            // ..

        Method (NVIN, 2, NotSerialized)
        {

   211CC: 14 28 4E 56 49 4E 02                             // .(NVIN.

            OperationRegion (FM1F, SystemMemory, Arg0, Arg1)

   211D3: 5B 80 46 4D 31 46 00 68 69                       // [.FM1F.hi

            Field (FM1F, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                AM1F,   32
            }


   211DC: 5B 81 0E 46 4D 31 46 03 00 40 04 41 4D 31 46 20  // [..FM1F..@.AM1F 

            Return (ANVI (AM1F))
        }


   211EC: A4 41 4E 56 49 41 4D 31 46                       // .ANVIAM1F

        Method (BATF, 1, NotSerialized)
        {
            Store (GNBF, Local0)

   211F5: 14 42 08 42 41 54 46 01 70 47 4E 42 46 60        // .B.BATF.pGNBF`

            OperationRegion (FMAD, SystemMemory, Local0, 0x10)

   21203: 5B 80 46 4D 41 44 00 60 0A 10                    // [.FMAD.`..

            Field (FMAD, DWordAcc, NoLock, Preserve)
            {
                MFUN,   16, 
                SFUN,   16, 
                LEN,    16, 
                SM1X,   8, 
                EM1X,   8, 
                BATE,   8, 
                Offset (0x10)
            }

            Store (0x1F, MFUN) /* \_SB_.ATKD.BATF.MFUN */
            Store (0x14, SFUN) /* \_SB_.ATKD.BATF.SFUN */
            Store (0x10, LEN) /* \_SB_.ATKD.BATF.LEN_ */

   2120D: 5B 81 26 46 4D 41 44 03 4D 46 55 4E 10 53 46 55  // [.&FMAD.MFUN.SFU
   2121D: 4E 10 4C 45 4E 5F 10 53 4D 31 58 08 45 4D 31 58  // N.LEN_.SM1X.EM1X
   2122D: 08 42 41 54 45 08 00 38 70 0A 1F 4D 46 55 4E 70  // .BATE..8p..MFUNp
   2123D: 0A 14 53 46 55 4E 70 0A 10 4C 45 4E 5F           // ..SFUNp..LEN_

            If (Arg0)
            {

   2124A: A0 08 68                                         // ..h

                Store (One, BATE) /* \_SB_.ATKD.BATF.BATE */
            }

   2124D: 70 01 42 41 54 45                                // p.BATE

            Else
            {

   21253: A1 07                                            // ..

                Store (Zero, BATE) /* \_SB_.ATKD.BATF.BATE */
            }

            Store (Zero, EM1X) /* \_SB_.ATKD.BATF.EM1X */
            Store (One, SM1X) /* \_SB_.ATKD.BATF.SM1X */
            MF1X (Local0, LEN, MFUN, SFUN)
        }


   21255: 70 00 42 41 54 45 70 00 45 4D 31 58 70 01 53 4D  // p.BATEp.EM1Xp.SM
   21265: 31 58 4D 46 31 58 60 4C 45 4E 5F 4D 46 55 4E 53  // 1XMF1X`LEN_MFUNS
   21275: 46 55 4E                                         // FUN

        Method (MF1F, 3, NotSerialized)
        {

   21278: 14 1A 4D 46 31 46 03                             // ..MF1F.

            If (LEqual (Arg2, 0x11))
            {

   2127F: A0 0C 93 6A 0A 11                                // ...j..

                Return (NVIN (Arg0, Arg1))
            }

            BSMI (Arg0)

   21285: A4 4E 56 49 4E 68 69 42 53 4D 49 68              // .NVINhiBSMIh

            Return (Zero)
        }
    }


   21291: A4 00                                            // ..

    Scope (_SB.ATKD)
    {

   21293: 10 4B 22 2E 5F 53 42 5F 41 54 4B 44              // .K"._SB_ATKD

        Method (OFBD, 1, NotSerialized)
        {

   2129F: 14 44 0C 4F 46 42 44 01                          // .D.OFBD.

            Name (FBDT, 
   212A7: 08 46 42 44 54                                   // .FBDT

Package (0x52)
            {
                0x88, 
                0x89, 
                0x8A, 
                0x8B, 
                0x8C, 
                0x8D, 
                0x8E, 
                0x8F, 
                0x70, 
                0x71, 
                0x72, 
                0x73, 
                0x74, 
                0x75, 
                0x76, 
                0x77, 
                0x78, 
                0x79, 
                0x7A, 
                0x7B, 
                0x7C, 
                0x7D, 
                0x7E, 
                0x7F, 
                0x60, 
                0x61, 
                0x62, 
                0x63, 
                0x64, 
                0x65, 
                0x66, 
                0x67, 
                0x91, 
                0x92, 
                0x93, 
                0x96, 
                0xE0, 
                0xE1, 
                0xE2, 
                0xE3, 
                0xE4, 
                0xE5, 
                0xE6, 
                0xE7, 
                0xE8, 
                0xE9, 
                0xEA, 
                0xEB, 
                0xEC, 
                0xED, 
                0xEE, 
                0xEF, 
                0xD0, 
                0xD1, 
                0xD2, 
                0xD3, 
                0xD4, 
                0xD5, 
                0xD6, 
                0xD7, 
                0xD8, 
                0xD9, 
                0xDA, 
                0xDB, 
                0xDC, 
                0xDD, 
                0xDE, 
                0xDF, 
                0xC0, 
                0xC1, 
                0xC2, 
                0xC3, 
                0xC4, 
                0xC5, 
                0xC6, 
                0xC7, 
                0xF1, 
                0xF2, 
                0xF3, 
                0xF6, 
                0xF7, 
                0xFA
            })
            Store (Match (FBDT, MEQ, Arg0, MTR, Zero, Zero), Local0)
            Increment (Local0)

   212AC: 12 47 0A 52 0A 88 0A 89 0A 8A 0A 8B 0A 8C 0A 8D  // .G.R............
   212BC: 0A 8E 0A 8F 0A 70 0A 71 0A 72 0A 73 0A 74 0A 75  // .....p.q.r.s.t.u
   212CC: 0A 76 0A 77 0A 78 0A 79 0A 7A 0A 7B 0A 7C 0A 7D  // .v.w.x.y.z.{.|.}
   212DC: 0A 7E 0A 7F 0A 60 0A 61 0A 62 0A 63 0A 64 0A 65  // .~...`.a.b.c.d.e
   212EC: 0A 66 0A 67 0A 91 0A 92 0A 93 0A 96 0A E0 0A E1  // .f.g............
   212FC: 0A E2 0A E3 0A E4 0A E5 0A E6 0A E7 0A E8 0A E9  // ................
   2130C: 0A EA 0A EB 0A EC 0A ED 0A EE 0A EF 0A D0 0A D1  // ................
   2131C: 0A D2 0A D3 0A D4 0A D5 0A D6 0A D7 0A D8 0A D9  // ................
   2132C: 0A DA 0A DB 0A DC 0A DD 0A DE 0A DF 0A C0 0A C1  // ................
   2133C: 0A C2 0A C3 0A C4 0A C5 0A C6 0A C7 0A F1 0A F2  // ................
   2134C: 0A F3 0A F6 0A F7 0A FA 70 89 46 42 44 54 01 68  // ........p.FBDT.h
   2135C: 00 00 00 60 75 60                                // ...`u`

            Return (Local0)
        }


   21362: A4 60                                            // .`

        Method (GBRV, 0, NotSerialized)
        {
            Store ("304", Local0)

   21364: 14 0F 47 42 52 56 00 70 0D 33 30 34 00 60        // ..GBRV.p.304.`

            Return (Local0)
        }


   21372: A4 60                                            // .`

        Method (GBMN, 0, NotSerialized)
        {
            Store ("GL552VW", Local0)

   21374: 14 13 47 42 4D 4E 00 70 0D 47 4C 35 35 32 56 57  // ..GBMN.p.GL552VW
   21384: 00 60                                            // .`

            Return (Local0)
        }


   21386: A4 60                                            // .`

        Method (OGDP, 1, NotSerialized)
        {
            Store (Arg0, Local0)
            Store (0x02, Local1)

   21388: 14 0F 4F 47 44 50 01 70 68 60 70 0A 02 61        // ..OGDP.ph`p..a

            Return (Local1)
        }


   21396: A4 61                                            // .a

        Method (RSID, 0, NotSerialized)
        {

   21398: 14 08 52 53 49 44 00                             // ..RSID.

            Return (Zero)
        }


   2139F: A4 00                                            // ..

        Method (OSDP, 2, NotSerialized)
        {
            Store (Arg0, Local0)

   213A1: 14 0C 4F 53 44 50 02 70 68 60                    // ..OSDP.ph`

            Store (Arg1, Local1)
        }


   213AB: 70 69 61                                         // pia

        Method (MF42, 3, NotSerialized)
        {

   213AE: 14 42 07 4D 46 34 32 03                          // .B.MF42.

            OperationRegion (FM42, SystemMemory, Arg0, 0x08)

   213B6: 5B 80 46 4D 34 32 00 68 0A 08                    // [.FM42.h..

            Field (FM42, DWordAcc, NoLock, Preserve)
            {
                Offset (0x06), 
                SM42,   8, 
                EM42,   8
            }

            Store (One, Local0)

   213C0: 5B 81 12 46 4D 34 32 03 00 30 53 4D 34 32 08 45  // [..FM42..0SM42.E
   213D0: 4D 34 32 08 70 01 60                             // M42.p.`

            If (LEqual (Arg1, One))
            {

   213D7: A0 0C 93 69 01                                   // ...i.

                Store (SFBO (Arg0, Arg2), Local0)
            }


   213DC: 70 53 46 42 4F 68 6A 60                          // pSFBOhj`

            If (LEqual (Arg1, 0x02))
            {

   213E4: A0 0D 93 69 0A 02                                // ...i..

                Store (SAOC (Arg0, Arg2), Local0)
            }


   213EA: 70 53 41 4F 43 68 6A 60                          // pSAOChj`

            If (LEqual (Arg1, 0x03))
            {

   213F2: A0 0D 93 69 0A 03                                // ...i..

                Store (GBST (Arg0, Arg2), Local0)
            }


   213F8: 70 47 42 53 54 68 6A 60                          // pGBSThj`

            If (Local0)
            {
                Store (Local0, EM42) /* \_SB_.ATKD.MF42.EM42 */

   21400: A0 13 60 70 60 45 4D 34 32                       // ..`p`EM42

                Or (SM42, 0x02, SM42) /* \_SB_.ATKD.MF42.SM42 */
            }

            Or (SM42, 0x80, SM42) /* \_SB_.ATKD.MF42.SM42 */

   21409: 7D 53 4D 34 32 0A 02 53 4D 34 32 7D 53 4D 34 32  // }SM42..SM42}SM42
   21419: 0A 80 53 4D 34 32                                // ..SM42

            Return (Zero)
        }


   2141F: A4 00                                            // ..

        Method (SFBO, 2, NotSerialized)
        {

   21421: 14 22 53 46 42 4F 02                             // ."SFBO.

            OperationRegion (\F421, SystemMemory, Arg0, Arg1)

   21428: 5B 80 5C 46 34 32 31 00 68 69                    // [.\F421.hi

            Field (F421, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                SOPT,   8
            }


   21432: 5B 81 0E 46 34 32 31 03 00 40 04 53 4F 50 54 08  // [..F421..@.SOPT.

            Return (Zero)
        }


   21442: A4 00                                            // ..

        Method (SAOC, 2, NotSerialized)
        {

   21444: 14 22 53 41 4F 43 02                             // ."SAOC.

            OperationRegion (\F422, SystemMemory, Arg0, Arg1)

   2144B: 5B 80 5C 46 34 32 32 00 68 69                    // [.\F422.hi

            Field (F422, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                CNTF,   8
            }


   21455: 5B 81 0E 46 34 32 32 03 00 40 04 43 4E 54 46 08  // [..F422..@.CNTF.

            Return (Zero)
        }


   21465: A4 00                                            // ..

        Method (GBST, 2, NotSerialized)
        {

   21467: 14 47 05 47 42 53 54 02                          // .G.GBST.

            OperationRegion (\F423, SystemMemory, Arg0, Arg1)

   2146F: 5B 80 5C 46 34 32 33 00 68 69                    // [.\F423.hi

            Field (F423, DWordAcc, NoLock, Preserve)
            {
                Offset (0x08), 
                BOT1,   64, 
                BOT2,   64
            }

            Store (TBOT, BOT1) /* \_SB_.ATKD.GBST.BOT1 */
            Store (RTC3, Local0)
            ShiftLeft (Local0, 0x08, Local0)
            Add (RTC2, Local0, Local0)
            ShiftLeft (Local0, 0x08, Local0)
            Add (RTC1, Local0, Local0)
            Store (Local0, BOT2) /* \_SB_.ATKD.GBST.BOT2 */

   21479: 5B 81 15 46 34 32 33 03 00 40 04 42 4F 54 31 40  // [..F423..@.BOT1@
   21489: 04 42 4F 54 32 40 04 70 54 42 4F 54 42 4F 54 31  // .BOT2@.pTBOTBOT1
   21499: 70 52 54 43 33 60 79 60 0A 08 60 72 52 54 43 32  // pRTC3`y`..`rRTC2
   214A9: 60 60 79 60 0A 08 60 72 52 54 43 31 60 60 70 60  // ``y`..`rRTC1``p`
   214B9: 42 4F 54 32                                      // BOT2

            Return (Zero)
        }
    }


   214BD: A4 00                                            // ..

    Scope (_SB.PCI0.LPCB)
    {

   214BF: 10 4A 4C 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .JL/._SB_PCI0LPC
   214CF: 42                                               // B

        Device (ADBG)
        {

   214D0: 5B 82 48 4B 41 44 42 47                          // [.HKADBG

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

   214D8: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, 0x13)  // _UID: Unique ID

   214E2: 08 5F 55 49 44 0A 13                             // ._UID..

            Name (CRS1, 
   214E9: 08 43 52 53 31                                   // .CRS1

ResourceTemplate ()
            {
                IO (Decode16,
                    0x0240,             // Range Minimum
                    0x0240,             // Range Maximum
                    0x01,               // Alignment
                    0x1A,               // Length
                    )
            })

   214EE: 11 0D 0A 0A 47 01 40 02 40 02 01 1A 79 00        // ....G.@.@...y.

            OperationRegion (DBGC, SystemIO, 0x0259, 0x10)

   214FC: 5B 80 44 42 47 43 01 0B 59 02 0A 10              // [.DBGC..Y...

            Field (DBGC, ByteAcc, Lock, Preserve)
            {
                DBGP,   8
            }


   21508: 5B 81 0B 44 42 47 43 11 44 42 47 50 08           // [..DBGC.DBGP.

            OperationRegion (DBPP, SystemIO, 0x0250, 0x02)

   21515: 5B 80 44 42 50 50 01 0B 50 02 0A 02              // [.DBPP..P...

            Field (DBPP, ByteAcc, Lock, Preserve)
            {
                PPDT,   8, 
                PPST,   8
            }


   21521: 5B 81 10 44 42 50 50 11 50 50 44 54 08 50 50 53  // [..DBPP.PPDT.PPS
   21531: 54 08                                            // T.

            OperationRegion (DB80, SystemIO, 0x80, One)

   21533: 5B 80 44 42 38 30 01 0A 80 01                    // [.DB80....

            Field (DB80, ByteAcc, Lock, Preserve)
            {
                DP80,   8
            }


   2153D: 5B 81 0B 44 42 38 30 11 44 50 38 30 08           // [..DB80.DP80.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

   2154A: 14 0B 5F 43 52 53 00                             // .._CRS.

                Return (CRS1) /* \_SB_.PCI0.LPCB.ADBG.CRS1 */
            }


   21551: A4 43 52 53 31                                   // .CRS1

            Method (CALL, 0, Serialized)
            {
                ISMI (0x96)
            }


   21556: 14 0C 43 41 4C 4C 08 49 53 4D 49 0A 96           // ..CALL.ISMI..

            Method (PUTD, 1, Serialized)
            {
                Or (And (Arg0, 0x0F), 0x10, Local0)
                And (ShiftRight (Arg0, 0x04), 0x0F, Local1)
                And (Not (Local1), 0x0F, Local2)
                Store (0x3FFF, Local4)
                Store (Local0, PPDT) /* \_SB_.PCI0.LPCB.ADBG.PPDT */
                Store (ShiftRight (XOr (PPST, 0x80), 0x03), Local3)

   21563: 14 43 0B 50 55 54 44 09 7D 7B 68 0A 0F 00 0A 10  // .C.PUTD.}{h.....
   21573: 60 7B 7A 68 0A 04 00 0A 0F 61 7B 80 61 00 0A 0F  // `{zh.....a{.a...
   21583: 62 70 0B FF 3F 64 70 60 50 50 44 54 70 7A 7F 50  // bp..?dp`PPDTpz.P
   21593: 50 53 54 0A 80 00 0A 03 00 63                    // PST......c

                While (LAnd (
   2159D: A2 1F 90 92                                      // ....

LNotEqual (Local3, 0x10), 
   215A1: 93 63 0A 10                                      // .c..


   215A5: 92                                               // .

LNotEqual (Local4, Zero)))
                {
                    Store (ShiftRight (XOr (PPST, 0x80), 0x03), Local3)
                    Decrement (Local4)

   215A6: 93 64 00 70 7A 7F 50 50 53 54 0A 80 00 0A 03 00  // .d.pz.PPST......
   215B6: 63 76 64                                         // cvd

                    Stall (0x1E)
                }


   215B9: 5B 21 0A 1E                                      // [!..

                If (LEqual (Local4, Zero))
                {
                    Store (Zero, PPDT) /* \_SB_.PCI0.LPCB.ADBG.PPDT */

   215BD: A0 0C 93 64 00 70 00 50 50 44 54                 // ...d.p.PPDT

                    Return (Zero)
                }

                Store (0x3FFF, Local4)
                Store (Local1, PPDT) /* \_SB_.PCI0.LPCB.ADBG.PPDT */
                Store (ShiftRight (XOr (PPST, 0x80), 0x03), Local3)

   215C8: A4 00 70 0B FF 3F 64 70 61 50 50 44 54 70 7A 7F  // ..p..?dpaPPDTpz.
   215D8: 50 50 53 54 0A 80 00 0A 03 00 63                 // PPST......c

                While (LAnd (
   215E3: A2 1E 90 92                                      // ....

LNotEqual (Local3, Zero), 
   215E7: 93 63 00                                         // .c.


   215EA: 92                                               // .

LNotEqual (Local4, Zero)))
                {
                    Store (ShiftRight (XOr (PPST, 0x80), 0x03), Local3)
                    Decrement (Local4)

   215EB: 93 64 00 70 7A 7F 50 50 53 54 0A 80 00 0A 03 00  // .d.pz.PPST......
   215FB: 63 76 64                                         // cvd

                    Stall (0x1E)
                }


   215FE: 5B 21 0A 1E                                      // [!..

                If (LEqual (Local4, Zero))
                {
                    Store (Zero, PPDT) /* \_SB_.PCI0.LPCB.ADBG.PPDT */

   21602: A0 0C 93 64 00 70 00 50 50 44 54                 // ...d.p.PPDT

                    Return (Zero)
                }

                Store (Local2, PPDT) /* \_SB_.PCI0.LPCB.ADBG.PPDT */

   2160D: A4 00 70 62 50 50 44 54                          // ..pbPPDT

                Return (One)
            }


   21615: A4 01                                            // ..

            Method (OUTS, 1, Serialized)
            {

   21617: 14 49 06 4F 55 54 53 09                          // .I.OUTS.

                If (
   2161F: A0 4D 05 92                                      // .M..

LNotEqual (DBGP, 0xFF))
                {
                    Add (SizeOf (Arg0), One, Local0)
                    Store (Zero, Local1)

   21623: 93 44 42 47 50 0A FF 72 87 68 01 60 70 00 61     // .DBGP..r.h.`p.a

                    Name (BUFF, 
   21632: 08 42 55 46 46                                   // .BUFF

Buffer (Local0){})
                    Store (Arg0, BUFF) /* \_SB_.PCI0.LPCB.ADBG.OUTS.BUFF */
                    Subtract (Local0, One, Local0)

   21637: 11 02 60 70 68 42 55 46 46 74 60 01 60           // ..`phBUFFt`.`

                    If (LEqual (PUTD (0x53), Zero))
                    {

   21644: A0 0B 93 50 55 54 44 0A 53 00                    // ...PUTD.S.

                        Return (Zero)
                    }


   2164E: A4 00                                            // ..

                    While (
   21650: A2 25 92                                         // .%.

LNotEqual (DerefOf (
   21653: 93 83                                            // ..

Index (BUFF, Local1)), Zero))
                    {

   21655: 88 42 55 46 46 61 00 00                          // .BUFFa..

                        If (LEqual (PUTD (
   2165D: A0 16 93 50 55 54 44                             // ...PUTD

DerefOf (
   21664: 83                                               // .

Index (BUFF, Local1))), Zero))
                        {
                            PUTD (Zero)

   21665: 88 42 55 46 46 61 00 00 50 55 54 44 00           // .BUFFa..PUTD.

                            Return (Zero)
                        }


   21672: A4 00                                            // ..

                        Increment (Local1)
                    }

                    PUTD (Zero)

   21674: 75 61 50 55 54 44 00                             // uaPUTD.

                    Return (One)
                }

   2167B: A4 01                                            // ..

                Else
                {

   2167D: A1 03                                            // ..

                    Return (Zero)
                }
            }


   2167F: A4 00                                            // ..

            Method (OUTD, 1, Serialized)
            {

   21681: 14 48 09 4F 55 54 44 09                          // .H.OUTD.

                Name (DEC, 
   21689: 08 44 45 43 5F                                   // .DEC_

Buffer (0x0B)
                {
                    "0123456789"
                })

   2168E: 11 0E 0A 0B 30 31 32 33 34 35 36 37 38 39 00     // ....0123456789.

                Name (TMP, 
   2169D: 08 54 4D 50 5F                                   // .TMP_

Buffer (0x0B){})
                Store (Zero, Local0)
                Store (Arg0, Local1)

   216A2: 11 03 0A 0B 70 00 60 70 68 61                    // ....p.`pha

                If (LEqual (Local1, Zero))
                {
                    OUTS ("0")
                }

   216AC: A0 0B 93 61 00 4F 55 54 53 0D 30 00              // ...a.OUTS.0.

                Else
                {

   216B8: A1 41 06                                         // .A.

                    While (LGreater (Local1, Zero))
                    {
                        Divide (Local1, 0x0A, Local2, Local1)
                        Store (DerefOf (
   216BB: A2 25 94 61 00 78 61 0A 0A 62 61 70 83           // .%.a.xa..bap.

Index (DEC, Local2)), 
   216C8: 88 44 45 43 5F 62 00                             // .DEC_b.

Index (TMP, Local0))
                        Increment (Local0)

   216CF: 88 54 4D 50 5F 60 00 75 60                       // .TMP_`.u`

                        Store (Zero, 
   216D8: 70 00                                            // p.

Index (TMP, Local0))
                    }

                    Store (Zero, Local2)
                    Decrement (Local0)

   216DA: 88 54 4D 50 5F 60 00 70 00 62 76 60              // .TMP_`.p.bv`

                    While (LLess (Local2, Local0))
                    {
                        Store (DerefOf (
   216E6: A2 2B 95 62 60 70 83                             // .+.b`p.

Index (TMP, Local2)), Local3)
                        Store (DerefOf (
   216ED: 88 54 4D 50 5F 62 00 63 70 83                    // .TMP_b.cp.

Index (TMP, Local0)), 
   216F7: 88 54 4D 50 5F 60 00                             // .TMP_`.

Index (TMP, Local2))
                        Store (Local3, 
   216FE: 88 54 4D 50 5F 62 00 70 63                       // .TMP_b.pc

Index (TMP, Local0))
                        Increment (Local2)

   21707: 88 54 4D 50 5F 60 00 75 62                       // .TMP_`.ub

                        Decrement (Local0)
                    }

                    OUTS (TMP)
                }
            }


   21710: 76 60 4F 55 54 53 54 4D 50 5F                    // v`OUTSTMP_

            Method (OUTH, 1, Serialized)
            {

   2171A: 14 44 09 4F 55 54 48 09                          // .D.OUTH.

                Name (HEX, 
   21722: 08 48 45 58 5F                                   // .HEX_

Buffer (0x11)
                {
                    "0123456789ABCDEF"
                })

   21727: 11 14 0A 11 30 31 32 33 34 35 36 37 38 39 41 42  // ....0123456789AB
   21737: 43 44 45 46 00                                   // CDEF.

                Name (TMP, 
   2173C: 08 54 4D 50 5F                                   // .TMP_

Buffer (0x0A){})
                Store (Zero, Local0)
                Store (Arg0, Local1)

   21741: 11 03 0A 0A 70 00 60 70 68 61                    // ....p.`pha

                While (LLess (Local0, 0x08))
                {
                    And (Local1, 0x0F, Local2)
                    Store (DerefOf (
   2174B: A2 2A 95 60 0A 08 7B 61 0A 0F 62 70 83           // .*.`..{a..bp.

Index (HEX, Local2)), 
   21758: 88 48 45 58 5F 62 00                             // .HEX_b.

Index (TMP, Local0))
                    ShiftRight (Local1, 0x04, Local1)
                    Increment (Local0)

   2175F: 88 54 4D 50 5F 60 00 7A 61 0A 04 61 75 60        // .TMP_`.za..au`

                    Store (Zero, 
   2176D: 70 00                                            // p.

Index (TMP, Local0))
                }

                Store (Zero, Local2)
                Decrement (Local0)

   2176F: 88 54 4D 50 5F 60 00 70 00 62 76 60              // .TMP_`.p.bv`

                While (LLess (Local2, Local0))
                {
                    Store (DerefOf (
   2177B: A2 2B 95 62 60 70 83                             // .+.b`p.

Index (TMP, Local2)), Local3)
                    Store (DerefOf (
   21782: 88 54 4D 50 5F 62 00 63 70 83                    // .TMP_b.cp.

Index (TMP, Local0)), 
   2178C: 88 54 4D 50 5F 60 00                             // .TMP_`.

Index (TMP, Local2))
                    Store (Local3, 
   21793: 88 54 4D 50 5F 62 00 70 63                       // .TMP_b.pc

Index (TMP, Local0))
                    Increment (Local2)

   2179C: 88 54 4D 50 5F 60 00 75 62                       // .TMP_`.ub

                    Decrement (Local0)
                }

                OUTS (TMP)
            }


   217A5: 76 60 4F 55 54 53 54 4D 50 5F                    // v`OUTSTMP_

            OperationRegion (SIO1, SystemIO, 0x0240, 0x08)

   217AF: 5B 80 53 49 4F 31 01 0B 40 02 0A 08              // [.SIO1..@...

            Field (SIO1, ByteAcc, NoLock, Preserve)
            {
                SOUT,   8, 
                Offset (0x05), 
                SSAT,   8
            }


   217BB: 5B 81 12 53 49 4F 31 01 53 4F 55 54 08 00 20 53  // [..SIO1.SOUT.. S
   217CB: 53 41 54 08                                      // SAT.

            Method (THRE, 0, NotSerialized)
            {
                And (SSAT, 0x20, Local0)

   217CF: 14 1B 54 48 52 45 00 7B 53 53 41 54 0A 20 60     // ..THRE.{SSAT. `

                While (LEqual (Local0, Zero))
                {

   217DE: A2 0C 93 60 00                                   // ...`.

                    And (SSAT, 0x20, Local0)
                }
            }


   217E3: 7B 53 53 41 54 0A 20 60                          // {SSAT. `

            Method (OUTX, 1, NotSerialized)
            {
                THRE ()

   217EB: 14 10 4F 55 54 58 01 54 48 52 45                 // ..OUTX.THRE

                Store (Arg0, SOUT) /* \_SB_.PCI0.LPCB.ADBG.SOUT */
            }


   217F6: 70 68 53 4F 55 54                                // phSOUT

            Method (OUTC, 1, NotSerialized)
            {

   217FC: 14 17 4F 55 54 43 01                             // ..OUTC.

                If (LEqual (Arg0, 0x0A))
                {
                    OUTX (0x0D)
                }

                OUTX (Arg0)
            }


   21803: A0 0B 93 68 0A 0A 4F 55 54 58 0A 0D 4F 55 54 58  // ...h..OUTX..OUTX
   21813: 68                                               // h

            Method (DBGN, 1, NotSerialized)
            {
                And (Arg0, 0x0F, Local0)

   21814: 14 22 44 42 47 4E 01 7B 68 0A 0F 60              // ."DBGN.{h..`

                If (LLess (Local0, 0x0A))
                {

   21820: A0 0A 95 60 0A 0A                                // ...`..

                    Add (Local0, 0x30, Local0)
                }

   21826: 72 60 0A 30 60                                   // r`.0`

                Else
                {

   2182B: A1 06                                            // ..

                    Add (Local0, 0x37, Local0)
                }

                OUTC (Local0)
            }


   2182D: 72 60 0A 37 60 4F 55 54 43 60                    // r`.7`OUTC`

            Method (DBGB, 1, NotSerialized)
            {
                ShiftRight (Arg0, 0x04, Local0)
                DBGN (Local0)
                DBGN (Arg0)
            }


   21837: 14 15 44 42 47 42 01 7A 68 0A 04 60 44 42 47 4E  // ..DBGB.zh..`DBGN
   21847: 60 44 42 47 4E 68                                // `DBGNh

            Method (DBGW, 1, NotSerialized)
            {
                ShiftRight (Arg0, 0x08, Local0)
                DBGB (Local0)
                DBGB (Arg0)
            }


   2184D: 14 15 44 42 47 57 01 7A 68 0A 08 60 44 42 47 42  // ..DBGW.zh..`DBGB
   2185D: 60 44 42 47 42 68                                // `DBGBh

            Method (DBGD, 1, NotSerialized)
            {
                ShiftRight (Arg0, 0x10, Local0)
                DBGW (Local0)
                DBGW (Arg0)
            }


   21863: 14 15 44 42 47 44 01 7A 68 0A 10 60 44 42 47 57  // ..DBGD.zh..`DBGW
   21873: 60 44 42 47 57 68                                // `DBGWh

            Method (DBGQ, 1, NotSerialized)
            {
                ShiftRight (Arg0, 0x30, Local0)
                DBGW (Local0)
                ShiftRight (Arg0, 0x20, Local0)
                DBGW (Local0)
                ShiftRight (Arg0, 0x10, Local0)
                DBGW (Local0)
                DBGW (Arg0)
            }


   21879: 14 29 44 42 47 51 01 7A 68 0A 30 60 44 42 47 57  // .)DBGQ.zh.0`DBGW
   21889: 60 7A 68 0A 20 60 44 42 47 57 60 7A 68 0A 10 60  // `zh. `DBGW`zh..`
   21899: 44 42 47 57 60 44 42 47 57 68                    // DBGW`DBGWh

            Name (DBGZ, 
   218A3: 08 44 42 47 5A                                   // .DBGZ

Buffer (0x50){})

   218A8: 11 03 0A 50                                      // ...P

            Method (GETC, 2, NotSerialized)
            {

   218AC: 14 12 47 45 54 43 02                             // ..GETC.

                CreateByteField (Arg0, Arg1, DBGC)

   218B3: 8C 68 69 44 42 47 43                             // .hiDBGC

                Return (DBGC) /* \_SB_.PCI0.LPCB.ADBG.GETC.DBGC */
            }


   218BA: A4 44 42 47 43                                   // .DBGC

            Method (MNIO, 1, NotSerialized)
            {

   218BF: 14 4A 0C 4D 4E 49 4F 01                          // .J.MNIO.

                If (LEqual (ObjectType (Arg0), One))
                {

   218C7: A0 37 93 8E 68 01                                // .7..h.

                    If (LGreater (Arg0, 0xFFFFFFFF))
                    {
                        DBGQ (Arg0)
                    }

   218CD: A0 0D 94 68 0C FF FF FF FF 44 42 47 51 68        // ...h.....DBGQh

                    ElseIf
   218DB: A1 21                                            // .!

 (LGreater (Arg0, 0xFFFF))
                    {
                        DBGD (Arg0)
                    }

   218DD: A0 0B 94 68 0B FF FF 44 42 47 44 68              // ...h...DBGDh

                    ElseIf
   218E9: A1 13                                            // ..

 (LGreater (Arg0, 0xFF))
                    {
                        DBGW (Arg0)
                    }

   218EB: A0 0A 94 68 0A FF 44 42 47 57 68                 // ...h..DBGWh

                    Else
                    {
                        DBGB (Arg0)
                    }


   218F6: A1 06 44 42 47 42 68                             // ..DBGBh

                    Return (Zero)
                }


   218FD: A4 00                                            // ..

                If (LEqual (ObjectType (Arg0), 0x02))
                {
                    Store (Arg0, DBGZ) /* \_SB_.PCI0.LPCB.ADBG.DBGZ */
                    Store (Zero, Local1)

   218FF: A0 2D 93 8E 68 0A 02 70 68 44 42 47 5A 70 00 61  // .-..h..phDBGZp.a

                    While (One)
                    {
                        Store (GETC (DBGZ, Local1), Local0)

   2190F: A2 1B 01 70 47 45 54 43 44 42 47 5A 61 60        // ...pGETCDBGZa`

                        If (LEqual (Local0, Zero))
                        {

   2191D: A0 06 93 60 00                                   // ...`.

                            Return (Zero)
                        }

                        OUTC (Local0)

   21922: A4 00 4F 55 54 43 60                             // ..OUTC`

                        Increment (Local1)
                    }


   21929: 75 61                                            // ua

                    Return (Zero)
                }


   2192B: A4 00                                            // ..

                If (LEqual (ObjectType (Arg0), 0x03))
                {
                    Store (Zero, Local0)

   2192D: A0 2B 93 8E 68 0A 03 70 00 60                    // .+..h..p.`

                    While (LLess (Local0, 
   21937: A2 1F 95 60                                      // ...`

SizeOf (Arg0)))
                    {
                        Store (GETC (Arg0, Local0), Local1)

   2193B: 87 68 70 47 45 54 43 68 60 61                    // .hpGETCh`a

                        If (LGreater (Local0, Zero))
                        {
                            OUTC (0x20)
                        }

                        DBGB (Local1)

   21945: A0 0A 94 60 00 4F 55 54 43 0A 20 44 42 47 42 61  // ...`.OUTC. DBGBa

                        Increment (Local0)
                    }


   21955: 75 60                                            // u`

                    Return (Zero)
                }


   21957: A4 00                                            // ..

                If (LEqual (ObjectType (Arg0), 0x04))
                {
                    Store (Zero, Local0)

   21959: A0 2E 93 8E 68 0A 04 70 00 60                    // ....h..p.`

                    While (LLess (Local0, 
   21963: A2 22 95 60                                      // .".`

SizeOf (Arg0)))
                    {
                        OUTC (0x20)
                        OUTC (0x20)
                        MNIO (
   21967: 87 68 4F 55 54 43 0A 20 4F 55 54 43 0A 20 4D 4E  // .hOUTC. OUTC. MN
   21977: 49 4F                                            // IO

DerefOf (
   21979: 83                                               // .

Index (Arg0, Local0)))
                        OUTC (0x0A)

   2197A: 88 68 60 00 4F 55 54 43 0A 0A                    // .h`.OUTC..

                        Increment (Local0)
                    }


   21984: 75 60                                            // u`

                    Return (Zero)
                }


   21986: A4 00                                            // ..

                Return (One)
            }
        }
    }


   21988: A4 01                                            // ..

    Scope (\)
    {

   2198A: 10 22 5C 00                                      // ."\.

        Method (MNIO, 1, NotSerialized)
        {
            \_SB.PCI0.LPCB.ADBG.MNIO (Arg0)
        }
    }


   2198E: 14 1E 4D 4E 49 4F 01 5C 2F 05 5F 53 42 5F 50 43  // ..MNIO.\/._SB_PC
   2199E: 49 30 4C 50 43 42 41 44 42 47 4D 4E 49 4F 68     // I0LPCBADBGMNIOh

    Scope (_SB.PCI0.LPCB.EC0)
    {

   219AD: 10 8D 03 01 2F 04 5F 53 42 5F 50 43 49 30 4C 50  // ..../._SB_PCI0LP
   219BD: 43 42 45 43 30 5F                                // CBEC0_

        OperationRegion (ECAD, SystemMemory, GNBF, 0x10)

   219C3: 5B 80 45 43 41 44 00 47 4E 42 46 0A 10           // [.ECAD.GNBF..

        Field (ECAD, DWordAcc, NoLock, Preserve)
        {
            MFUN,   16, 
            SFUN,   16, 
            LEN,    16, 
            STAS,   8, 
            EROR,   8, 
            CMD,    8, 
            EDA1,   8, 
            EDA2,   8, 
            EDA3,   8, 
            EDA4,   8, 
            EDA5,   8, 
            Offset (0x10)
        }


   219D0: 5B 81 3F 45 43 41 44 03 4D 46 55 4E 10 53 46 55  // [.?ECAD.MFUN.SFU
   219E0: 4E 10 4C 45 4E 5F 10 53 54 41 53 08 45 52 4F 52  // N.LEN_.STAS.EROR
   219F0: 08 43 4D 44 5F 08 45 44 41 31 08 45 44 41 32 08  // .CMD_.EDA1.EDA2.
   21A00: 45 44 41 33 08 45 44 41 34 08 45 44 41 35 08 00  // EDA3.EDA4.EDA5..
   21A10: 10                                               // .

        Method (WEIE, 0, Serialized)
        {
            Store (One, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
            ECAC ()

   21A11: 14 1D 57 45 49 45 08 70 01 45 44 41 31 45 43 41  // ..WEIE.p.EDA1ECA
   21A21: 43                                               // C

            If (LEqual (EDA1, 0xFF))
            {

   21A22: A0 0A 93 45 44 41 31 0A FF                       // ...EDA1..

                Return (Ones)
            }


   21A2B: A4 FF                                            // ..

            Return (Zero)
        }


   21A2D: A4 00                                            // ..

        Method (WEOF, 0, Serialized)
        {
            Store (0x02, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
            ECAC ()

   21A2F: 14 1E 57 45 4F 46 08 70 0A 02 45 44 41 31 45 43  // ..WEOF.p..EDA1EC
   21A3F: 41 43                                            // AC

            If (LEqual (EDA1, 0xFF))
            {

   21A41: A0 0A 93 45 44 41 31 0A FF                       // ...EDA1..

                Return (Ones)
            }


   21A4A: A4 FF                                            // ..

            Return (Zero)
        }


   21A4C: A4 00                                            // ..

        Method (WEOE, 0, NotSerialized)
        {
            Store (0x03, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
            ECAC ()

   21A4E: 14 1E 57 45 4F 45 00 70 0A 03 45 44 41 31 45 43  // ..WEOE.p..EDA1EC
   21A5E: 41 43                                            // AC

            If (LEqual (EDA1, 0xFF))
            {

   21A60: A0 0A 93 45 44 41 31 0A FF                       // ...EDA1..

                Return (Ones)
            }


   21A69: A4 FF                                            // ..

            Return (Zero)
        }


   21A6B: A4 00                                            // ..

        Method (ST83, 1, Serialized)
        {

   21A6D: 14 39 53 54 38 33 09                             // .9ST83.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x83, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                ECAC ()
                Release (MU4T)

   21A74: A0 30 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .0ECAV[#MU4T..p.
   21A84: FF 43 4D 44 5F 70 0A 83 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21A94: 41 32 45 43 41 43 5B 27 4D 55 34 54              // A2ECAC['MU4T

                Return (EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
            }


   21AA0: A4 45 44 41 31                                   // .EDA1

            Return (Ones)
        }


   21AA5: A4 FF                                            // ..

        Method (ST84, 2, Serialized)
        {

   21AA7: 14 3C 53 54 38 34 0A                             // .<ST84.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x84, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                ECAC ()
                Release (MU4T)

   21AAE: A0 33 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .3ECAV[#MU4T..p.
   21ABE: FF 43 4D 44 5F 70 0A 84 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21ACE: 41 32 70 69 45 44 41 33 45 43 41 43 5B 27 4D 55  // A2piEDA3ECAC['MU
   21ADE: 34 54                                            // 4T

                Return (Zero)
            }


   21AE0: A4 00                                            // ..

            Return (Ones)
        }


   21AE2: A4 FF                                            // ..

        Method (ST85, 1, Serialized)
        {

   21AE4: 14 39 53 54 38 35 09                             // .9ST85.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x85, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                ECAC ()
                Release (MU4T)

   21AEB: A0 30 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .0ECAV[#MU4T..p.
   21AFB: FF 43 4D 44 5F 70 0A 85 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21B0B: 41 32 45 43 41 43 5B 27 4D 55 34 54              // A2ECAC['MU4T

                Return (EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
            }


   21B17: A4 45 44 41 31                                   // .EDA1

            Return (Ones)
        }


   21B1C: A4 FF                                            // ..

        Method (ST86, 2, Serialized)
        {

   21B1E: 14 3C 53 54 38 36 0A                             // .<ST86.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x86, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                ECAC ()
                Release (MU4T)

   21B25: A0 33 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .3ECAV[#MU4T..p.
   21B35: FF 43 4D 44 5F 70 0A 86 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21B45: 41 32 70 69 45 44 41 33 45 43 41 43 5B 27 4D 55  // A2piEDA3ECAC['MU
   21B55: 34 54                                            // 4T

                Return (Zero)
            }


   21B57: A4 00                                            // ..

            Return (Ones)
        }


   21B59: A4 FF                                            // ..

        Method (ST87, 2, Serialized)
        {

   21B5B: 14 47 04 53 54 38 37 0A                          // .G.ST87.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x87, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                ECAC ()
                Release (MU4T)

   21B63: A0 3D 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .=ECAV[#MU4T..p.
   21B73: FF 43 4D 44 5F 70 0A 87 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21B83: 41 32 70 69 45 44 41 33 45 43 41 43 5B 27 4D 55  // A2piEDA3ECAC['MU
   21B93: 34 54                                            // 4T

                If (LEqual (Arg0, Zero))
                {

   21B95: A0 09 93 68 00                                   // ...h.

                    Return (EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                }


   21B9A: A4 45 44 41 31                                   // .EDA1

                Return (Zero)
            }


   21B9F: A4 00                                            // ..

            Return (Ones)
        }


   21BA1: A4 FF                                            // ..

        Method (ST8E, 2, Serialized)
        {

   21BA3: 14 3F 53 54 38 45 0A                             // .?ST8E.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x8E, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                ECAC ()
                Release (MU4T)

   21BAA: A0 36 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .6ECAV[#MU4T..p.
   21BBA: FF 43 4D 44 5F 70 0A 8E 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21BCA: 41 32 70 69 45 44 41 33 45 43 41 43 5B 27 4D 55  // A2piEDA3ECAC['MU
   21BDA: 34 54                                            // 4T

                Return (EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
            }


   21BDC: A4 45 44 41 31                                   // .EDA1

            Return (Ones)
        }


   21BE1: A4 FF                                            // ..

        Method (ST95, 2, Serialized)
        {

   21BE3: 14 47 04 53 54 39 35 0A                          // .G.ST95.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x95, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                ECAC ()
                Release (MU4T)

   21BEB: A0 3D 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .=ECAV[#MU4T..p.
   21BFB: FF 43 4D 44 5F 70 0A 95 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21C0B: 41 32 70 69 45 44 41 33 45 43 41 43 5B 27 4D 55  // A2piEDA3ECAC['MU
   21C1B: 34 54                                            // 4T

                If (LEqual (Arg0, Zero))
                {

   21C1D: A0 09 93 68 00                                   // ...h.

                    Return (EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                }


   21C22: A4 45 44 41 31                                   // .EDA1

                Return (Zero)
            }


   21C27: A4 00                                            // ..

            Return (Ones)
        }


   21C29: A4 FF                                            // ..

        Method (ST98, 1, Serialized)
        {

   21C2B: 14 36 53 54 39 38 09                             // .6ST98.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x98, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                ECAC ()
                Release (MU4T)

   21C32: A0 2D 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .-ECAV[#MU4T..p.
   21C42: FF 43 4D 44 5F 70 0A 98 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21C52: 41 32 45 43 41 43 5B 27 4D 55 34 54              // A2ECAC['MU4T

                Return (Zero)
            }


   21C5E: A4 00                                            // ..

            Return (Ones)
        }


   21C60: A4 FF                                            // ..

        Method (ST9E, 3, Serialized)
        {

   21C62: 14 43 04 53 54 39 45 0B                          // .C.ST9E.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x9E, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                Store (Arg2, EDA4) /* \_SB_.PCI0.LPCB.EC0_.EDA4 */
                ECAC ()
                Release (MU4T)

   21C6A: A0 39 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .9ECAV[#MU4T..p.
   21C7A: FF 43 4D 44 5F 70 0A 9E 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21C8A: 41 32 70 69 45 44 41 33 70 6A 45 44 41 34 45 43  // A2piEDA3pjEDA4EC
   21C9A: 41 43 5B 27 4D 55 34 54                          // AC['MU4T

                Return (Zero)
            }


   21CA2: A4 00                                            // ..

            Return (Ones)
        }


   21CA4: A4 FF                                            // ..

        Method (STA8, 1, Serialized)
        {

   21CA6: 14 39 53 54 41 38 09                             // .9STA8.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0xA8, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                ECAC ()
                Release (MU4T)

   21CAD: A0 30 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .0ECAV[#MU4T..p.
   21CBD: FF 43 4D 44 5F 70 0A A8 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21CCD: 41 32 45 43 41 43 5B 27 4D 55 34 54              // A2ECAC['MU4T

                Return (EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
            }


   21CD9: A4 45 44 41 31                                   // .EDA1

            Return (Ones)
        }


   21CDE: A4 FF                                            // ..

        Method (ST9F, 3, Serialized)
        {

   21CE0: 14 43 04 53 54 39 46 0B                          // .C.ST9F.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x9F, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                Store (Arg2, EDA4) /* \_SB_.PCI0.LPCB.EC0_.EDA4 */
                ECAC ()
                Release (MU4T)

   21CE8: A0 39 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .9ECAV[#MU4T..p.
   21CF8: FF 43 4D 44 5F 70 0A 9F 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21D08: 41 32 70 69 45 44 41 33 70 6A 45 44 41 34 45 43  // A2piEDA3pjEDA4EC
   21D18: 41 43 5B 27 4D 55 34 54                          // AC['MU4T

                Return (Zero)
            }


   21D20: A4 00                                            // ..

            Return (Ones)
        }


   21D22: A4 FF                                            // ..

        Method (STA9, 2, Serialized)
        {

   21D24: 14 3C 53 54 41 39 0A                             // .<STA9.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0xA9, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                ECAC ()
                Release (MU4T)

   21D2B: A0 33 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .3ECAV[#MU4T..p.
   21D3B: FF 43 4D 44 5F 70 0A A9 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21D4B: 41 32 70 69 45 44 41 33 45 43 41 43 5B 27 4D 55  // A2piEDA3ECAC['MU
   21D5B: 34 54                                            // 4T

                Return (Zero)
            }


   21D5D: A4 00                                            // ..

            Return (Ones)
        }


   21D5F: A4 FF                                            // ..

        Method (STB0, 1, Serialized)
        {

   21D61: 14 36 53 54 42 30 09                             // .6STB0.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0xB0, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                ECAC ()
                Release (MU4T)

   21D68: A0 2D 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .-ECAV[#MU4T..p.
   21D78: FF 43 4D 44 5F 70 0A B0 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21D88: 41 32 45 43 41 43 5B 27 4D 55 34 54              // A2ECAC['MU4T

                Return (Zero)
            }


   21D94: A4 00                                            // ..

            Return (Ones)
        }


   21D96: A4 FF                                            // ..

        Method (STB1, 1, Serialized)
        {

   21D98: 14 36 53 54 42 31 09                             // .6STB1.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0xB1, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                ECAC ()
                Release (MU4T)

   21D9F: A0 2D 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .-ECAV[#MU4T..p.
   21DAF: FF 43 4D 44 5F 70 0A B1 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21DBF: 41 32 45 43 41 43 5B 27 4D 55 34 54              // A2ECAC['MU4T

                Return (Zero)
            }


   21DCB: A4 00                                            // ..

            Return (Ones)
        }


   21DCD: A4 FF                                            // ..

        Method (STB2, 1, Serialized)
        {

   21DCF: 14 36 53 54 42 32 09                             // .6STB2.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0xB2, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                ECAC ()
                Release (MU4T)

   21DD6: A0 2D 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .-ECAV[#MU4T..p.
   21DE6: FF 43 4D 44 5F 70 0A B2 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   21DF6: 41 32 45 43 41 43 5B 27 4D 55 34 54              // A2ECAC['MU4T

                Return (Zero)
            }


   21E02: A4 00                                            // ..

            Return (Ones)
        }


   21E04: A4 FF                                            // ..

        Method (GBTT, 1, Serialized)
        {

   21E06: 14 1B 47 42 54 54 09                             // ..GBTT.

            If (LEqual (Arg0, Zero))
            {

   21E0D: A0 0A 93 68 00                                   // ...h.

                Store (EB0T, Local0)
            }

   21E12: 70 45 42 30 54 60                                // pEB0T`

            Else
            {

   21E18: A1 07                                            // ..

                Store (EB1T, Local0)
            }


   21E1A: 70 45 42 31 54 60                                // pEB1T`

            Return (Local0)
        }


   21E20: A4 60                                            // .`

        Method (WCMD, 1, Serialized)
        {

   21E22: 14 20 57 43 4D 44 09                             // . WCMD.

            If (ECAV ())
            {
                Acquire (MUEC, 0xFFFF)
                Store (Arg0, CMD1) /* \_SB_.PCI0.LPCB.EC0_.CMD1 */

   21E29: A0 19 45 43 41 56 5B 23 4D 55 45 43 FF FF 70 68  // ..ECAV[#MUEC..ph
   21E39: 43 4D 44 31                                      // CMD1

                Release (MUEC)
            }
        }


   21E3D: 5B 27 4D 55 45 43                                // ['MUEC

        Method (DLY0, 1, Serialized)
        {

   21E43: 14 4C 05 44 4C 59 30 09                          // .L.DLY0.

            If (LNot (ECAV ()))
            {

   21E4B: A0 08 92 45 43 41 56                             // ...ECAV

                Return (Ones)
            }

            Store (Ones, Local0)
            Acquire (MUEC, 0xFFFF)
            Store (Arg0, CDT1) /* \_SB_.PCI0.LPCB.EC0_.CDT1 */
            Store (0x6B, CDT2) /* \_SB_.PCI0.LPCB.EC0_.CDT2 */
            Store (Zero, CDT3) /* \_SB_.PCI0.LPCB.EC0_.CDT3 */
            Store (0xBB, CMD1) /* \_SB_.PCI0.LPCB.EC0_.CMD1 */
            Store (0x7F, Local1)

   21E52: A4 FF 70 FF 60 5B 23 4D 55 45 43 FF FF 70 68 43  // ..p.`[#MUEC..phC
   21E62: 44 54 31 70 0A 6B 43 44 54 32 70 00 43 44 54 33  // DT1p.kCDT2p.CDT3
   21E72: 70 0A BB 43 4D 44 31 70 0A 7F 61                 // p..CMD1p..a

            While (LAnd (Local1, CMD1))
            {
                Sleep (One)

   21E7D: A2 0C 90 61 43 4D 44 31 5B 22 01                 // ...aCMD1[".

                Decrement (Local1)
            }


   21E88: 76 61                                            // va

            If (LEqual (CMD1, Zero))
            {

   21E8A: A0 0D 93 43 4D 44 31 00                          // ...CMD1.

                Store (CDT1, Local0)
            }

            Release (MUEC)

   21E92: 70 43 44 54 31 60 5B 27 4D 55 45 43              // pCDT1`['MUEC

            Return (Local0)
        }


   21E9E: A4 60                                            // .`

        Method (RRAM, 1, Serialized)
        {

   21EA0: 14 43 05 52 52 41 4D 09                          // .C.RRAM.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (Arg0, Local0)
                And (Local0, 0xFF, Local1)
                ShiftRight (Local0, 0x08, Local0)
                And (Local0, 0xFF, Local0)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x80, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Local0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Local1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                ECAC ()
                Release (MU4T)

   21EA8: A0 49 04 45 43 41 56 5B 23 4D 55 34 54 FF FF 70  // .I.ECAV[#MU4T..p
   21EB8: 68 60 7B 60 0A FF 61 7A 60 0A 08 60 7B 60 0A FF  // h`{`..az`..`{`..
   21EC8: 60 70 0A FF 43 4D 44 5F 70 0A 80 45 44 41 31 70  // `p..CMD_p..EDA1p
   21ED8: 60 45 44 41 32 70 61 45 44 41 33 45 43 41 43 5B  // `EDA2paEDA3ECAC[
   21EE8: 27 4D 55 34 54                                   // 'MU4T

                Return (EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
            }


   21EED: A4 45 44 41 31                                   // .EDA1

            Return (Ones)
        }


   21EF2: A4 FF                                            // ..

        Method (WRAM, 2, Serialized)
        {

   21EF4: 14 46 05 57 52 41 4D 0A                          // .F.WRAM.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (Arg0, Local0)
                And (Local0, 0xFF, Local1)
                ShiftRight (Local0, 0x08, Local0)
                And (Local0, 0xFF, Local0)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0x81, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Local0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Local1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                Store (Arg1, EDA4) /* \_SB_.PCI0.LPCB.EC0_.EDA4 */
                ECAC ()
                Release (MU4T)

   21EFC: A0 4C 04 45 43 41 56 5B 23 4D 55 34 54 FF FF 70  // .L.ECAV[#MU4T..p
   21F0C: 68 60 7B 60 0A FF 61 7A 60 0A 08 60 7B 60 0A FF  // h`{`..az`..`{`..
   21F1C: 60 70 0A FF 43 4D 44 5F 70 0A 81 45 44 41 31 70  // `p..CMD_p..EDA1p
   21F2C: 60 45 44 41 32 70 61 45 44 41 33 70 69 45 44 41  // `EDA2paEDA3piEDA
   21F3C: 34 45 43 41 43 5B 27 4D 55 34 54                 // 4ECAC['MU4T

                Return (One)
            }


   21F47: A4 01                                            // ..

            Return (Ones)
        }


   21F49: A4 FF                                            // ..

        Method (STBR, 0, Serialized)
        {
            Store (Zero, Local0)
            Store (Zero, Local1)
            Store (Zero, Local2)

   21F4B: 14 4E 09 53 54 42 52 08 70 00 60 70 00 61 70 00  // .N.STBR.p.`p.ap.
   21F5B: 62                                               // b

            If (And (VGAF, One))
            {

   21F5C: A0 0B 7B 56 47 41 46 01 00                       // ..{VGAF..

                Store (One, Local0)
            }


   21F65: 70 01 60                                         // p.`

            If (Local0)
            {

   21F68: A0 05 60                                         // ..`

                Store (One, Local2)
            }


   21F6B: 70 01 62                                         // p.b

            If (Local1){}

   21F6E: A0 02 61                                         // ..a

            ElseIf
   21F71: A1 48 07                                         // .H.

 (LEqual (Local2, One))
            {

   21F74: A0 4A 05 93 62 01                                // .J..b.

                If (
   21F7A: A0 4C 04 92                                      // .L..

LNotEqual (MSOS (), OSEG))
                {

   21F7E: 93 4D 53 4F 53 4F 53 45 47                       // .MSOSOSEG

                    If (LLess (MSOS (), OSW8))
                    {
                        Store (BRTI, Local4)
                        ShiftLeft (Local4, 0x04, Local4)
                        Store (LBTN, Local3)
                        Store (Add (Local4, Local3), Local3)
                        ^^^GFX0.AINT (One, 
   21F87: A0 3F 95 4D 53 4F 53 4F 53 57 38 70 42 52 54 49  // .?.MSOSOSW8pBRTI
   21F97: 64 79 64 0A 04 64 70 4C 42 54 4E 63 70 72 64 63  // dyd..dpLBTNcprdc
   21FA7: 00 63 5E 5E 5E 2E 47 46 58 30 41 49 4E 54 01     // .c^^^.GFX0AINT.

Divide (Multiply (DerefOf (
   21FB6: 78 77 83                                         // xw.

Index (PWAC, Local3)), 0x64), 0xFF, 
                            ))
                    }
                }

   21FB9: 88 50 57 41 43 63 00 0A 64 00 0A FF 00 00        // .PWACc..d.....

                Else
                {
                    ISMI (0x9A)
                }
            }

   21FC7: A1 07 49 53 4D 49 0A 9A                          // ..ISMI..

            ElseIf
   21FCF: A1 1A                                            // ..

 (LEqual (Local2, Zero))
            {
                ECCB ()
            }

   21FD1: A0 08 93 62 00 45 43 43 42                       // ...b.ECCB

            ElseIf
   21FDA: A1 0F                                            // ..

 (LEqual (Local2, 0x02))
            {
                ISMI (0x9A)
            }

   21FDC: A0 0B 93 62 0A 02 49 53 4D 49 0A 9A              // ...b..ISMI..

            Else
            {
            }
        }


   21FE8: A1 01                                            // ..

        Method (ECCB, 0, Serialized)
        {

   21FEA: 14 43 04 45 43 43 42 08                          // .C.ECCB.

            If (LOr (ACAP (), 
   21FF2: A0 15 91 41 43 41 50                             // ...ACAP

LEqual (MSOS (), OSVT)))
            {

   21FF9: 93 4D 53 4F 53 4F 53 56 54                       // .MSOSOSVT

                Store (LBTN, Local0)
            }

   22002: 70 4C 42 54 4E 60                                // pLBTN`

            Else
            {

   22008: A1 07                                            // ..

                Store (LBTN, Local0)
            }

            Store (BRTI, Local1)
            ShiftLeft (Local1, 0x04, Local1)
            Add (Local0, Local1, Local1)
            Store (DerefOf (
   2200A: 70 4C 42 54 4E 60 70 42 52 54 49 61 79 61 0A 04  // pLBTN`pBRTIaya..
   2201A: 61 72 60 61 61 70 83                             // ar`aap.

Index (PWAC, Local1)), Local0)
            SADC (Local0)
        }


   22021: 88 50 57 41 43 61 00 60 53 41 44 43 60           // .PWACa.`SADC`

        Method (SBRV, 1, Serialized)
        {
            ST86 (Zero, Arg0)
        }


   2202E: 14 0C 53 42 52 56 09 53 54 38 36 00 68           // ..SBRV.ST86.h

        Name (DECF, Zero)

   2203B: 08 44 45 43 46 00                                // .DECF.

        Method (SFNV, 2, Serialized)
        {

   22041: 14 42 0B 53 46 4E 56 0A                          // .B.SFNV.

            If (LEqual (Arg0, Zero))
            {

   22049: A0 4C 04 93 68 00                                // .L..h.

                If (And (DECF, One))
                {
                    Store (RRAM (0x0521), Local0)
                    Or (Local0, 0x80, Local0)
                    WRAM (0x0521, Local0)
                }


   2204F: A0 1E 7B 44 45 43 46 01 00 70 52 52 41 4D 0B 21  // ..{DECF..pRRAM.!
   2205F: 05 60 7D 60 0A 80 60 57 52 41 4D 0B 21 05 60     // .`}`..`WRAM.!.`

                If (And (DECF, 0x02))
                {
                    Store (RRAM (0x0522), Local0)
                    Or (Local0, 0x80, Local0)
                    WRAM (0x0522, Local0)
                }

                Store (Zero, DECF) /* \_SB_.PCI0.LPCB.EC0_.DECF */

   2206E: A0 1F 7B 44 45 43 46 0A 02 00 70 52 52 41 4D 0B  // ..{DECF...pRRAM.
   2207E: 22 05 60 7D 60 0A 80 60 57 52 41 4D 0B 22 05 60  // ".`}`..`WRAM.".`
   2208E: 70 00 44 45 43 46                                // p.DECF

                Return (Zero)
            }


   22094: A4 00                                            // ..

            If (LEqual (Arg0, One))
            {
                Store (RRAM (0x0521), Local0)
                And (Local0, 0x7F, Local0)
                WRAM (0x0521, Local0)
                Or (DECF, One, DECF) /* \_SB_.PCI0.LPCB.EC0_.DECF */
                ST84 (Zero, Arg1)

   22096: A0 2C 93 68 01 70 52 52 41 4D 0B 21 05 60 7B 60  // .,.h.pRRAM.!.`{`
   220A6: 0A 7F 60 57 52 41 4D 0B 21 05 60 7D 44 45 43 46  // ..`WRAM.!.`}DECF
   220B6: 01 44 45 43 46 53 54 38 34 00 69                 // .DECFST84.i

                Return (Zero)
            }


   220C1: A4 00                                            // ..

            If (LEqual (Arg0, 0x02))
            {
                Store (RRAM (0x0522), Local0)
                And (Local0, 0x7F, Local0)
                WRAM (0x0522, Local0)
                Or (DECF, 0x02, DECF) /* \_SB_.PCI0.LPCB.EC0_.DECF */
                ST84 (One, Arg1)

   220C3: A0 2E 93 68 0A 02 70 52 52 41 4D 0B 22 05 60 7B  // ...h..pRRAM.".`{
   220D3: 60 0A 7F 60 57 52 41 4D 0B 22 05 60 7D 44 45 43  // `..`WRAM.".`}DEC
   220E3: 46 0A 02 44 45 43 46 53 54 38 34 01 69           // F..DECFST84.i

                Return (Zero)
            }


   220F0: A4 00                                            // ..

            Return (Zero)
        }


   220F2: A4 00                                            // ..

        Method (SADC, 1, Serialized)
        {

   220F4: 14 0D 53 41 44 43 09                             // ..SADC.

            Return (ST86 (Zero, Arg0))
        }


   220FB: A4 53 54 38 36 00 68                             // .ST86.h

        Method (SPIN, 2, Serialized)
        {

   22102: 14 1B 53 50 49 4E 0A                             // ..SPIN.

            If (Arg1)
            {
                ST87 (0x20, Arg0)
            }

   22109: A0 09 69 53 54 38 37 0A 20 68                    // ..iST87. h

            Else
            {
                ST87 (0x40, Arg0)
            }


   22113: A1 08 53 54 38 37 0A 40 68                       // ..ST87.@h

            Return (One)
        }


   2211C: A4 01                                            // ..

        Method (RPIN, 1, Serialized)
        {
            Store (ST87 (Zero, Arg0), Local1)

   2211E: 14 10 52 50 49 4E 09 70 53 54 38 37 00 68 61     // ..RPIN.pST87.ha

            Return (Local1)
        }


   2212D: A4 61                                            // .a

        Method (RBAT, 2, Serialized)
        {

   2212F: 14 4B 06 52 42 41 54 0A                          // .K.RBAT.

            If (LNot (ECAV ()))
            {

   22137: A0 08 92 45 43 41 56                             // ...ECAV

                Return (Ones)
            }

            Acquire (MUEC, 0xFFFF)
            Store (0x03, Local0)

   2213E: A4 FF 5B 23 4D 55 45 43 FF FF 70 0A 03 60        // ..[#MUEC..p..`

            While (Local0)
            {
                Store (Arg0, CDT2) /* \_SB_.PCI0.LPCB.EC0_.CDT2 */
                Store (Arg1, Local1)
                ShiftLeft (Local1, One, Local1)
                Add (Local1, 0xDA, Local1)
                Store (Local1, CMD1) /* \_SB_.PCI0.LPCB.EC0_.CMD1 */
                Store (0x7F, Local1)

   2214C: A2 44 04 60 70 68 43 44 54 32 70 69 61 79 61 01  // .D.`phCDT2piaya.
   2215C: 61 72 61 0A DA 61 70 61 43 4D 44 31 70 0A 7F 61  // ara..apaCMD1p..a

                While (LAnd (CMD1, Local1))
                {
                    Decrement (Local1)

   2216C: A2 0C 90 43 4D 44 31 61 76 61                    // ...CMD1ava

                    Sleep (One)
                }


   22176: 5B 22 01                                         // [".

                If (LEqual (CMD1, Zero))
                {
                    Store (CDT1, Local1)

   22179: A0 10 93 43 4D 44 31 00 70 43 44 54 31 61        // ...CMD1.pCDT1a

                    Store (Zero, Local0)
                }

   22187: 70 00 60                                         // p.`

                Else
                {
                    Store (Ones, Local1)

   2218A: A1 06 70 FF 61                                   // ..p.a

                    Decrement (Local0)
                }
            }

            Release (MUEC)

   2218F: 76 60 5B 27 4D 55 45 43                          // v`['MUEC

            Return (Local1)

   22197: A4 61                                            // .a

            Return (Ones)
        }


   22199: A4 FF                                            // ..

        Method (WBAT, 3, Serialized)
        {
            Or (Arg0, 0x80, Local3)

   2219B: 14 4D 05 57 42 41 54 0B 7D 68 0A 80 63           // .M.WBAT.}h..c

            If (LNot (ECAV ()))
            {

   221A8: A0 08 92 45 43 41 56                             // ...ECAV

                Return (Ones)
            }

            Acquire (MUEC, 0xFFFF)
            Store (0x03, Local0)

   221AF: A4 FF 5B 23 4D 55 45 43 FF FF 70 0A 03 60        // ..[#MUEC..p..`

            While (Local0)
            {
                Store (Arg2, CDT1) /* \_SB_.PCI0.LPCB.EC0_.CDT1 */
                Store (Local3, CDT2) /* \_SB_.PCI0.LPCB.EC0_.CDT2 */
                Store (Arg1, Local1)
                ShiftLeft (Local1, One, Local1)
                Add (Local1, 0xDA, Local1)
                Store (Local1, CMD1) /* \_SB_.PCI0.LPCB.EC0_.CMD1 */
                Store (0x7F, Local1)

   221BD: A2 31 60 70 6A 43 44 54 31 70 63 43 44 54 32 70  // .1`pjCDT1pcCDT2p
   221CD: 69 61 79 61 01 61 72 61 0A DA 61 70 61 43 4D 44  // iaya.ara..apaCMD
   221DD: 31 70 0A 7F 61                                   // 1p..a

                While (LAnd (CMD1, Local1))
                {
                    Decrement (Local1)

   221E2: A2 0C 90 43 4D 44 31 61 76 61                    // ...CMD1ava

                    Sleep (One)
                }
            }

            Release (MUEC)

   221EC: 5B 22 01 5B 27 4D 55 45 43                       // [".['MUEC

            Return (Local1)

   221F5: A4 61                                            // .a

            Return (Ones)
        }


   221F7: A4 FF                                            // ..

        Method (FNCT, 2, Serialized)
        {

   221F9: 14 3E 46 4E 43 54 0A                             // .>FNCT.

            If (ECAV ())
            {
                Acquire (MUEC, 0xFFFF)
                Store (Arg0, CDT2) /* \_SB_.PCI0.LPCB.EC0_.CDT2 */
                Store (Arg1, CDT1) /* \_SB_.PCI0.LPCB.EC0_.CDT1 */
                Store (0xC4, CMD1) /* \_SB_.PCI0.LPCB.EC0_.CMD1 */
                Store (0x7F, Local0)

   22200: A0 37 45 43 41 56 5B 23 4D 55 45 43 FF FF 70 68  // .7ECAV[#MUEC..ph
   22210: 43 44 54 32 70 69 43 44 54 31 70 0A C4 43 4D 44  // CDT2piCDT1p..CMD
   22220: 31 70 0A 7F 60                                   // 1p..`

                While (LAnd (Local0, CMD1))
                {
                    Sleep (One)

   22225: A2 0C 90 60 43 4D 44 31 5B 22 01                 // ...`CMD1[".

                    Decrement (Local0)
                }


   22230: 76 60                                            // v`

                Release (MUEC)
            }
        }


   22232: 5B 27 4D 55 45 43                                // ['MUEC

        Name (WRQK, 0x02)

   22238: 08 57 52 51 4B 0A 02                             // .WRQK..

        Name (RDQK, 0x03)

   2223F: 08 52 44 51 4B 0A 03                             // .RDQK..

        Name (SDBT, 0x04)

   22246: 08 53 44 42 54 0A 04                             // .SDBT..

        Name (RCBT, 0x05)

   2224D: 08 52 43 42 54 0A 05                             // .RCBT..

        Name (WRBT, 0x06)

   22254: 08 57 52 42 54 0A 06                             // .WRBT..

        Name (RDBT, 0x07)

   2225B: 08 52 44 42 54 0A 07                             // .RDBT..

        Name (WRWD, 0x08)

   22262: 08 57 52 57 44 0A 08                             // .WRWD..

        Name (RDWD, 0x09)

   22269: 08 52 44 57 44 0A 09                             // .RDWD..

        Name (WRBL, 0x0A)

   22270: 08 57 52 42 4C 0A 0A                             // .WRBL..

        Name (RDBL, 0x0B)

   22277: 08 52 44 42 4C 0A 0B                             // .RDBL..

        Name (PCLL, 0x0C)

   2227E: 08 50 43 4C 4C 0A 0C                             // .PCLL..

        Name (GOOD, Zero)

   22285: 08 47 4F 4F 44 00                                // .GOOD.

        Name (UKER, 0x07)

   2228B: 08 55 4B 45 52 0A 07                             // .UKER..

        Name (DAER, 0x10)

   22292: 08 44 41 45 52 0A 10                             // .DAER..

        Name (CMDN, 0x12)

   22299: 08 43 4D 44 4E 0A 12                             // .CMDN..

        Name (UKE2, 0x13)

   222A0: 08 55 4B 45 32 0A 13                             // .UKE2..

        Name (DADN, 0x17)

   222A7: 08 44 41 44 4E 0A 17                             // .DADN..

        Name (SBTO, 0x18)

   222AE: 08 53 42 54 4F 0A 18                             // .SBTO..

        Name (USPT, 0x19)

   222B5: 08 55 53 50 54 0A 19                             // .USPT..

        Name (SBBY, 0x1A)

   222BC: 08 53 42 42 59 0A 1A                             // .SBBY..

        Method (SWTC, 1, Serialized)
        {
            Store (UKER, Local0)
            Store (0x03, Local1)

   222C3: 14 4C 04 53 57 54 43 09 70 55 4B 45 52 60 70 0A  // .L.SWTC.pUKER`p.
   222D3: 03 61                                            // .a

            While (LAnd (Local0, Local1))
            {
                Store (0x23, Local2)

   222D5: A2 38 90 60 61 70 0A 23 62                       // .8.`ap.#b

                While (Local2)
                {

   222DE: A2 18 62                                         // ..b

                    If (PRTC)
                    {
                        Sleep (One)

   222E1: A0 0A 50 52 54 43 5B 22 01                       // ..PRTC[".

                        Decrement (Local2)
                    }

   222EA: 76 62                                            // vb

                    Else
                    {
                        Store (Zero, Local2)

   222EC: A1 0A 70 00 62                                   // ..p.b

                        Store (SSTS, Local0)
                    }
                }


   222F1: 70 53 53 54 53 60                                // pSSTS`

                If (Local0)
                {
                    Store (Zero, PRTC) /* \_SB_.PCI0.LPCB.EC0_.PRTC */
                    Decrement (Local1)

   222F7: A0 16 60 70 00 50 52 54 43 76 61                 // ..`p.PRTCva

                    If (Local1)
                    {
                        Sleep (One)

   22302: A0 0B 61 5B 22 01                                // ..a[".

                        Store (Arg0, PRTC) /* \_SB_.PCI0.LPCB.EC0_.PRTC */
                    }
                }
            }


   22308: 70 68 50 52 54 43                                // phPRTC

            Return (Local0)
        }


   2230E: A4 60                                            // .`

        Method (SMBR, 3, Serialized)
        {
            Store (
   22310: 14 4B 13 53 4D 42 52 0B 70                       // .K.SMBR.p

Package (0x03)
                {
                    0x07, 
                    Zero, 
                    Zero
                }, Local0)

   22319: 12 06 03 0A 07 00 00 60                          // .......`

            If (LNot (ECAV ()))
            {

   22321: A0 08 92 45 43 41 56                             // ...ECAV

                Return (Local0)
            }


   22328: A4 60                                            // .`

            If (
   2232A: A0 2E 92                                         // ...

LNotEqual (Arg0, RDBL))
            {

   2232D: 93 68 52 44 42 4C                                // .hRDBL

                If (
   22333: A0 25 92                                         // .%.

LNotEqual (Arg0, RDWD))
                {

   22336: 93 68 52 44 57 44                                // .hRDWD

                    If (
   2233C: A0 1C 92                                         // ...

LNotEqual (Arg0, RDBT))
                    {

   2233F: 93 68 52 44 42 54                                // .hRDBT

                        If (
   22345: A0 13 92                                         // ...

LNotEqual (Arg0, RCBT))
                        {

   22348: 93 68 52 43 42 54                                // .hRCBT

                            If (
   2234E: A0 0A 92                                         // ...

LNotEqual (Arg0, RDQK))
                            {

   22351: 93 68 52 44 51 4B                                // .hRDQK

                                Return (Local0)
                            }
                        }
                    }
                }
            }

            Acquire (MUEC, 0xFFFF)
            Store (PRTC, Local1)
            Store (Zero, Local2)

   22357: A4 60 5B 23 4D 55 45 43 FF FF 70 50 52 54 43 61  // .`[#MUEC..pPRTCa
   22367: 70 00 62                                         // p.b

            While (
   2236A: A2 26 92                                         // .&.

LNotEqual (Local1, Zero))
            {
                Stall (0x0A)
                Increment (Local2)

   2236D: 93 61 00 5B 21 0A 0A 75 62                       // .a.[!..ub

                If (LGreater (Local2, 0x03E8))
                {
                    Store (SBBY, 
   22376: A0 12 94 62 0B E8 03 70 53 42 42 59              // ...b...pSBBY

Index (Local0, Zero))

   22382: 88 60 00 00                                      // .`..

                    Store (Zero, Local1)
                }

   22386: 70 00 61                                         // p.a

                Else
                {

   22389: A1 07                                            // ..

                    Store (PRTC, Local1)
                }
            }


   2238B: 70 50 52 54 43 61                                // pPRTCa

            If (
   22391: A0 42 0B 92                                      // .B..

LLessEqual (Local2, 0x03E8))
            {
                ShiftLeft (Arg1, One, Local3)
                Or (Local3, One, Local3)
                Store (Local3, ADDR) /* \_SB_.PCI0.LPCB.EC0_.ADDR */

   22395: 94 62 0B E8 03 79 69 01 63 7D 63 01 63 70 63 41  // .b...yi.c}c.cpcA
   223A5: 44 44 52                                         // DDR

                If (
   223A8: A0 17 92                                         // ...

LNotEqual (Arg0, RDQK))
                {

   223AB: 93 68 52 44 51 4B                                // .hRDQK

                    If (
   223B1: A0 0E 92                                         // ...

LNotEqual (Arg0, RCBT))
                    {

   223B4: 93 68 52 43 42 54                                // .hRCBT

                        Store (Arg2, CMDB) /* \_SB_.PCI0.LPCB.EC0_.CMDB */
                    }
                }

                Store (Zero, BDAT) /* \_SB_.PCI0.LPCB.EC0_.BDAT */
                Store (Arg0, PRTC) /* \_SB_.PCI0.LPCB.EC0_.PRTC */
                Store (SWTC (Arg0), 
   223BA: 70 6A 43 4D 44 42 70 00 42 44 41 54 70 68 50 52  // pjCMDBp.BDATphPR
   223CA: 54 43 70 53 57 54 43 68                          // TCpSWTCh

Index (Local0, Zero))

   223D2: 88 60 00 00                                      // .`..

                If (LEqual (DerefOf (
   223D6: A0 4D 06 93 83                                   // .M...

Index (Local0, Zero)), Zero))
                {

   223DB: 88 60 00 00 00                                   // .`...

                    If (LEqual (Arg0, RDBL))
                    {
                        Store (BCNT, 
   223E0: A0 1A 93 68 52 44 42 4C 70 42 43 4E 54           // ...hRDBLpBCNT

Index (Local0, One))

   223ED: 88 60 01 00                                      // .`..

                        Store (BDAT, 
   223F1: 70 42 44 41 54                                   // pBDAT

Index (Local0, 0x02))
                    }


   223F6: 88 60 0A 02 00                                   // .`...

                    If (LEqual (Arg0, RDWD))
                    {
                        Store (0x02, 
   223FB: A0 18 93 68 52 44 57 44 70 0A 02                 // ...hRDWDp..

Index (Local0, One))

   22406: 88 60 01 00                                      // .`..

                        Store (DT2B, 
   2240A: 70 44 54 32 42                                   // pDT2B

Index (Local0, 0x02))
                    }


   2240F: 88 60 0A 02 00                                   // .`...

                    If (LEqual (Arg0, RDBT))
                    {
                        Store (One, 
   22414: A0 17 93 68 52 44 42 54 70 01                    // ...hRDBTp.

Index (Local0, One))

   2241E: 88 60 01 00                                      // .`..

                        Store (DAT0, 
   22422: 70 44 41 54 30                                   // pDAT0

Index (Local0, 0x02))
                    }


   22427: 88 60 0A 02 00                                   // .`...

                    If (LEqual (Arg0, RCBT))
                    {
                        Store (One, 
   2242C: A0 17 93 68 52 43 42 54 70 01                    // ...hRCBTp.

Index (Local0, One))

   22436: 88 60 01 00                                      // .`..

                        Store (DAT0, 
   2243A: 70 44 41 54 30                                   // pDAT0

Index (Local0, 0x02))
                    }
                }
            }

            Release (MUEC)

   2243F: 88 60 0A 02 00 5B 27 4D 55 45 43                 // .`...['MUEC

            Return (Local0)
        }


   2244A: A4 60                                            // .`

        Method (SMBW, 5, Serialized)
        {
            Store (
   2244C: 14 45 10 53 4D 42 57 0D 70                       // .E.SMBW.p

Package (0x01)
                {
                    0x07
                }, Local0)

   22455: 12 04 01 0A 07 60                                // .....`

            If (LNot (ECAV ()))
            {

   2245B: A0 08 92 45 43 41 56                             // ...ECAV

                Return (Local0)
            }


   22462: A4 60                                            // .`

            If (
   22464: A0 2E 92                                         // ...

LNotEqual (Arg0, WRBL))
            {

   22467: 93 68 57 52 42 4C                                // .hWRBL

                If (
   2246D: A0 25 92                                         // .%.

LNotEqual (Arg0, WRWD))
                {

   22470: 93 68 57 52 57 44                                // .hWRWD

                    If (
   22476: A0 1C 92                                         // ...

LNotEqual (Arg0, WRBT))
                    {

   22479: 93 68 57 52 42 54                                // .hWRBT

                        If (
   2247F: A0 13 92                                         // ...

LNotEqual (Arg0, SDBT))
                        {

   22482: 93 68 53 44 42 54                                // .hSDBT

                            If (
   22488: A0 0A 92                                         // ...

LNotEqual (Arg0, WRQK))
                            {

   2248B: 93 68 57 52 51 4B                                // .hWRQK

                                Return (Local0)
                            }
                        }
                    }
                }
            }

            Acquire (MUEC, 0xFFFF)
            Store (PRTC, Local1)
            Store (Zero, Local2)

   22491: A4 60 5B 23 4D 55 45 43 FF FF 70 50 52 54 43 61  // .`[#MUEC..pPRTCa
   224A1: 70 00 62                                         // p.b

            While (
   224A4: A2 26 92                                         // .&.

LNotEqual (Local1, Zero))
            {
                Stall (0x0A)
                Increment (Local2)

   224A7: 93 61 00 5B 21 0A 0A 75 62                       // .a.[!..ub

                If (LGreater (Local2, 0x03E8))
                {
                    Store (SBBY, 
   224B0: A0 12 94 62 0B E8 03 70 53 42 42 59              // ...b...pSBBY

Index (Local0, Zero))

   224BC: 88 60 00 00                                      // .`..

                    Store (Zero, Local1)
                }

   224C0: 70 00 61                                         // p.a

                Else
                {

   224C3: A1 07                                            // ..

                    Store (PRTC, Local1)
                }
            }


   224C5: 70 50 52 54 43 61                                // pPRTCa

            If (
   224CB: A0 4E 07 92                                      // .N..

LLessEqual (Local2, 0x03E8))
            {
                Store (Zero, BDAT) /* \_SB_.PCI0.LPCB.EC0_.BDAT */
                ShiftLeft (Arg1, One, Local3)
                Store (Local3, ADDR) /* \_SB_.PCI0.LPCB.EC0_.ADDR */

   224CF: 94 62 0B E8 03 70 00 42 44 41 54 79 69 01 63 70  // .b...p.BDATyi.cp
   224DF: 63 41 44 44 52                                   // cADDR

                If (
   224E4: A0 17 92                                         // ...

LNotEqual (Arg0, WRQK))
                {

   224E7: 93 68 57 52 51 4B                                // .hWRQK

                    If (
   224ED: A0 0E 92                                         // ...

LNotEqual (Arg0, SDBT))
                    {

   224F0: 93 68 53 44 42 54                                // .hSDBT

                        Store (Arg2, CMDB) /* \_SB_.PCI0.LPCB.EC0_.CMDB */
                    }
                }


   224F6: 70 6A 43 4D 44 42                                // pjCMDB

                If (LEqual (Arg0, WRBL))
                {
                    Store (Arg3, BCNT) /* \_SB_.PCI0.LPCB.EC0_.BCNT */

   224FC: A0 13 93 68 57 52 42 4C 70 6B 42 43 4E 54        // ...hWRBLpkBCNT

                    Store (Arg4, BDAT) /* \_SB_.PCI0.LPCB.EC0_.BDAT */
                }


   2250A: 70 6C 42 44 41 54                                // plBDAT

                If (LEqual (Arg0, WRWD))
                {

   22510: A0 0D 93 68 57 52 57 44                          // ...hWRWD

                    Store (Arg4, DT2B) /* \_SB_.PCI0.LPCB.EC0_.DT2B */
                }


   22518: 70 6C 44 54 32 42                                // plDT2B

                If (LEqual (Arg0, WRBT))
                {

   2251E: A0 0D 93 68 57 52 42 54                          // ...hWRBT

                    Store (Arg4, DAT0) /* \_SB_.PCI0.LPCB.EC0_.DAT0 */
                }


   22526: 70 6C 44 41 54 30                                // plDAT0

                If (LEqual (Arg0, SDBT))
                {

   2252C: A0 0D 93 68 53 44 42 54                          // ...hSDBT

                    Store (Arg4, DAT0) /* \_SB_.PCI0.LPCB.EC0_.DAT0 */
                }

                Store (Arg0, PRTC) /* \_SB_.PCI0.LPCB.EC0_.PRTC */

   22534: 70 6C 44 41 54 30 70 68 50 52 54 43              // plDAT0phPRTC

                Store (SWTC (Arg0), 
   22540: 70 53 57 54 43 68                                // pSWTCh

Index (Local0, Zero))
            }

            Release (MUEC)

   22546: 88 60 00 00 5B 27 4D 55 45 43                    // .`..['MUEC

            Return (Local0)
        }


   22550: A4 60                                            // .`

        Mutex (MUEP, 0x00)

   22552: 5B 01 4D 55 45 50 00                             // [.MUEP.

        Method (RBEP, 1, NotSerialized)
        {
            Store (0xFFFF, Local1)
            Acquire (MUEP, 0xFFFF)
            Store (RRAM (0x0620), Local3)
            And (Local3, 0x7F, Local4)
            WRAM (0x0620, Local4)
            Store (0x10, Local2)
            Store (0x10, Local1)

   22559: 14 47 09 52 42 45 50 01 70 0B FF FF 61 5B 23 4D  // .G.RBEP.p...a[#M
   22569: 55 45 50 FF FF 70 52 52 41 4D 0B 20 06 63 7B 63  // UEP..pRRAM. .c{c
   22579: 0A 7F 64 57 52 41 4D 0B 20 06 64 70 0A 10 62 70  // ..dWRAM. .dp..bp
   22589: 0A 10 61                                         // ..a

            While (And (LEqual (Local1, 0x10), 
   2258C: A2 46 04 7B 93 61 0A 10 92                       // .F.{.a...

LNotEqual (Local2, Zero)))
            {
                SMBW (WRWD, BADR, Zero, 0x02, 0x0635)
                SMBW (WRWD, BADR, Zero, 0x02, 0x0606)
                Store (SMBR (RDBT, 0x50, Arg0), Local0)
                Store (DerefOf (
   22595: 93 62 00 00 53 4D 42 57 57 52 57 44 42 41 44 52  // .b..SMBWWRWDBADR
   225A5: 00 0A 02 0B 35 06 53 4D 42 57 57 52 57 44 42 41  // ....5.SMBWWRWDBA
   225B5: 44 52 00 0A 02 0B 06 06 70 53 4D 42 52 52 44 42  // DR......pSMBRRDB
   225C5: 54 0A 50 68 60 70 83                             // T.Ph`p.

Index (Local0, Zero)), Local1)

   225CC: 88 60 00 00 61                                   // .`..a

                Decrement (Local2)
            }

            WRAM (0x0620, Local3)
            ShiftLeft (Local1, 0x08, Local1)
            Or (Local1, DerefOf (
   225D1: 76 62 57 52 41 4D 0B 20 06 63 79 61 0A 08 61 7D  // vbWRAM. .cya..a}
   225E1: 61 83                                            // a.

Index (Local0, 0x02)), Local1)
            Release (MUEP)

   225E3: 88 60 0A 02 00 61 5B 27 4D 55 45 50              // .`...a['MUEP

            Return (Local1)
        }


   225EF: A4 61                                            // .a

        Method (WBEP, 2, NotSerialized)
        {
            Store (0xFFFF, Local1)
            Acquire (MUEP, 0xFFFF)
            Store (RRAM (0x0620), Local3)
            And (Local3, 0x7F, Local4)
            WRAM (0x0620, Local4)
            Store (0x10, Local2)
            Store (0x10, Local1)

   225F1: 14 4B 08 57 42 45 50 02 70 0B FF FF 61 5B 23 4D  // .K.WBEP.p...a[#M
   22601: 55 45 50 FF FF 70 52 52 41 4D 0B 20 06 63 7B 63  // UEP..pRRAM. .c{c
   22611: 0A 7F 64 57 52 41 4D 0B 20 06 64 70 0A 10 62 70  // ..dWRAM. .dp..bp
   22621: 0A 10 61                                         // ..a

            While (And (LEqual (Local1, 0x10), 
   22624: A2 48 04 7B 93 61 0A 10 92                       // .H.{.a...

LNotEqual (Local2, Zero)))
            {
                SMBW (WRWD, BADR, Zero, 0x02, 0x0635)
                SMBW (WRWD, BADR, Zero, 0x02, 0x0606)
                Store (SMBW (WRBT, 0x50, Arg0, One, Arg1), Local0)
                Store (DerefOf (
   2262D: 93 62 00 00 53 4D 42 57 57 52 57 44 42 41 44 52  // .b..SMBWWRWDBADR
   2263D: 00 0A 02 0B 35 06 53 4D 42 57 57 52 57 44 42 41  // ....5.SMBWWRWDBA
   2264D: 44 52 00 0A 02 0B 06 06 70 53 4D 42 57 57 52 42  // DR......pSMBWWRB
   2265D: 54 0A 50 68 01 69 60 70 83                       // T.Ph.i`p.

Index (Local0, Zero)), Local1)

   22666: 88 60 00 00 61                                   // .`..a

                Decrement (Local2)
            }

            WRAM (0x0620, Local3)
            Release (MUEP)

   2266B: 76 62 57 52 41 4D 0B 20 06 63 5B 27 4D 55 45 50  // vbWRAM. .c['MUEP

            Return (Local1)
        }


   2267B: A4 61                                            // .a

        Method (ECXT, 6, NotSerialized)
        {

   2267D: 14 4C 08 45 43 58 54 06                          // .L.ECXT.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (
   22685: A0 44 08 45 43 41 56 5B 23 4D 55 34 54 FF FF 70  // .D.ECAV[#MU4T..p

Package (0x06)
                    {
                        0x10, 
                        Zero, 
                        Zero, 
                        Zero, 
                        Zero, 
                        Zero
                    }, Local0)
                Store (Arg0, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (Arg1, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg2, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg3, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                Store (Arg4, EDA4) /* \_SB_.PCI0.LPCB.EC0_.EDA4 */
                Store (Arg5, EDA5) /* \_SB_.PCI0.LPCB.EC0_.EDA5 */
                ECAC ()
                Store (CMD, 
   22695: 12 09 06 0A 10 00 00 00 00 00 60 70 68 43 4D 44  // ..........`phCMD
   226A5: 5F 70 69 45 44 41 31 70 6A 45 44 41 32 70 6B 45  // _piEDA1pjEDA2pkE
   226B5: 44 41 33 70 6C 45 44 41 34 70 6D 45 44 41 35 45  // DA3plEDA4pmEDA5E
   226C5: 43 41 43 70 43 4D 44 5F                          // CACpCMD_

Index (Local0, Zero))
                Store (EDA1, 
   226CD: 88 60 00 00 70 45 44 41 31                       // .`..pEDA1

Index (Local0, One))
                Store (EDA2, 
   226D6: 88 60 01 00 70 45 44 41 32                       // .`..pEDA2

Index (Local0, 0x02))
                Store (EDA3, 
   226DF: 88 60 0A 02 00 70 45 44 41 33                    // .`...pEDA3

Index (Local0, 0x03))
                Store (EDA4, 
   226E9: 88 60 0A 03 00 70 45 44 41 34                    // .`...pEDA4

Index (Local0, 0x04))
                Store (EDA5, 
   226F3: 88 60 0A 04 00 70 45 44 41 35                    // .`...pEDA5

Index (Local0, 0x05))
                Release (MU4T)

   226FD: 88 60 0A 05 00 5B 27 4D 55 34 54                 // .`...['MU4T

                Return (Local0)
            }
        }


   22708: A4 60                                            // .`

        Method (ECSB, 7, NotSerialized)
        {
            Store (
   2270A: 14 4F 1A 45 43 53 42 07 70                       // .O.ECSB.p

Package (0x05)
                {
                    0x11, 
                    Zero, 
                    Zero, 
                    Zero, 

   22713: 12 0B 05 0A 11 00 00 00                          // ........

                    Buffer (0x20){}
                }, Local1)

   2271B: 11 03 0A 20 61                                   // ... a

            If (LGreater (Arg0, One))
            {

   22720: A0 06 94 68 01                                   // ...h.

                Return (Local1)
            }


   22725: A4 61                                            // .a

            If (ECAV ())
            {
                Acquire (MUEC, 0xFFFF)

   22727: A0 40 19 45 43 41 56 5B 23 4D 55 45 43 FF FF     // .@.ECAV[#MUEC..

                If (LEqual (Arg0, Zero))
                {

   22736: A0 0A 93 68 00                                   // ...h.

                    Store (PRTC, Local0)
                }

   2273B: 70 50 52 54 43 60                                // pPRTC`

                Else
                {

   22741: A1 07                                            // ..

                    Store (PRT2, Local0)
                }

                Store (Zero, Local2)

   22743: 70 50 52 54 32 60 70 00 62                       // pPRT2`p.b

                While (
   2274C: A2 33 92                                         // .3.

LNotEqual (Local0, Zero))
                {
                    Stall (0x0A)
                    Increment (Local2)

   2274F: 93 60 00 5B 21 0A 0A 75 62                       // .`.[!..ub

                    If (LGreater (Local2, 0x03E8))
                    {
                        Store (SBBY, 
   22758: A0 12 94 62 0B E8 03 70 53 42 42 59              // ...b...pSBBY

Index (Local1, Zero))

   22764: 88 61 00 00                                      // .a..

                        Store (Zero, Local0)
                    }

   22768: 70 00 60                                         // p.`

                    ElseIf
   2276B: A1 14                                            // ..

 (LEqual (Arg0, Zero))
                    {

   2276D: A0 0A 93 68 00                                   // ...h.

                        Store (PRTC, Local0)
                    }

   22772: 70 50 52 54 43 60                                // pPRTC`

                    Else
                    {

   22778: A1 07                                            // ..

                        Store (PRT2, Local0)
                    }
                }


   2277A: 70 50 52 54 32 60                                // pPRT2`

                If (
   22780: A0 41 13 92                                      // .A..

LLessEqual (Local2, 0x03E8))
                {

   22784: 94 62 0B E8 03                                   // .b...

                    If (LEqual (Arg0, Zero))
                    {
                        Store (Arg2, ADDR) /* \_SB_.PCI0.LPCB.EC0_.ADDR */
                        Store (Arg3, CMDB) /* \_SB_.PCI0.LPCB.EC0_.CMDB */

   22789: A0 44 04 93 68 00 70 6A 41 44 44 52 70 6B 43 4D  // .D..h.pjADDRpkCM
   22799: 44 42                                            // DB

                        If (LOr (LEqual (Arg1, 0x0A), 
   2279B: A0 1E 91 93 69 0A 0A                             // ....i..

LEqual (Arg1, 0x0B)))
                        {
                            Store (DerefOf (
   227A2: 93 69 0A 0B 70 83                                // .i..p.

Index (Arg6, Zero)), BCNT) /* \_SB_.PCI0.LPCB.EC0_.BCNT */

   227A8: 88 6E 00 00 42 43 4E 54                          // .n..BCNT

                            Store (DerefOf (
   227B0: 70 83                                            // p.

Index (Arg6, One)), BDAT) /* \_SB_.PCI0.LPCB.EC0_.BDAT */
                        }

   227B2: 88 6E 01 00 42 44 41 54                          // .n..BDAT

                        Else
                        {
                            Store (Arg4, DAT0) /* \_SB_.PCI0.LPCB.EC0_.DAT0 */

   227BA: A1 0D 70 6C 44 41 54 30                          // ..plDAT0

                            Store (Arg5, DAT1) /* \_SB_.PCI0.LPCB.EC0_.DAT1 */
                        }


   227C2: 70 6D 44 41 54 31                                // pmDAT1

                        Store (Arg1, PRTC) /* \_SB_.PCI0.LPCB.EC0_.PRTC */
                    }

   227C8: 70 69 50 52 54 43                                // piPRTC

                    Else
                    {
                        Store (Arg2, ADD2) /* \_SB_.PCI0.LPCB.EC0_.ADD2 */
                        Store (Arg3, CMD2) /* \_SB_.PCI0.LPCB.EC0_.CMD2 */

   227CE: A1 41 04 70 6A 41 44 44 32 70 6B 43 4D 44 32     // .A.pjADD2pkCMD2

                        If (LOr (LEqual (Arg1, 0x0A), 
   227DD: A0 1E 91 93 69 0A 0A                             // ....i..

LEqual (Arg1, 0x0B)))
                        {
                            Store (DerefOf (
   227E4: 93 69 0A 0B 70 83                                // .i..p.

Index (Arg6, Zero)), BCN2) /* \_SB_.PCI0.LPCB.EC0_.BCN2 */

   227EA: 88 6E 00 00 42 43 4E 32                          // .n..BCN2

                            Store (DerefOf (
   227F2: 70 83                                            // p.

Index (Arg6, One)), BDA2) /* \_SB_.PCI0.LPCB.EC0_.BDA2 */
                        }

   227F4: 88 6E 01 00 42 44 41 32                          // .n..BDA2

                        Else
                        {
                            Store (Arg4, DA20) /* \_SB_.PCI0.LPCB.EC0_.DA20 */

   227FC: A1 0D 70 6C 44 41 32 30                          // ..plDA20

                            Store (Arg5, DA21) /* \_SB_.PCI0.LPCB.EC0_.DA21 */
                        }


   22804: 70 6D 44 41 32 31                                // pmDA21

                        Store (Arg1, PRT2) /* \_SB_.PCI0.LPCB.EC0_.PRT2 */
                    }

                    Store (0x7F, Local0)

   2280A: 70 69 50 52 54 32 70 0A 7F 60                    // piPRT2p..`

                    If (LEqual (Arg0, Zero))
                    {

   22814: A0 0F 93 68 00                                   // ...h.

                        While (PRTC)
                        {
                            Sleep (One)

   22819: A2 0A 50 52 54 43 5B 22 01                       // ..PRTC[".

                            Decrement (Local0)
                        }
                    }

   22822: 76 60                                            // v`

                    Else
                    {

   22824: A1 0C                                            // ..

                        While (PRT2)
                        {
                            Sleep (One)

   22826: A2 0A 50 52 54 32 5B 22 01                       // ..PRT2[".

                            Decrement (Local0)
                        }
                    }


   2282F: 76 60                                            // v`

                    If (Local0)
                    {

   22831: A0 47 07 60                                      // .G.`

                        If (LEqual (Arg0, Zero))
                        {
                            Store (SSTS, Local0)
                            Store (DAT0, 
   22835: A0 31 93 68 00 70 53 53 54 53 60 70 44 41 54 30  // .1.h.pSSTS`pDAT0

Index (Local1, One))
                            Store (DAT1, 
   22845: 88 61 01 00 70 44 41 54 31                       // .a..pDAT1

Index (Local1, 0x02))
                            Store (BCNT, 
   2284E: 88 61 0A 02 00 70 42 43 4E 54                    // .a...pBCNT

Index (Local1, 0x03))

   22858: 88 61 0A 03 00                                   // .a...

                            Store (BDAT, 
   2285D: 70 42 44 41 54                                   // pBDAT

Index (Local1, 0x04))
                        }

   22862: 88 61 0A 04 00                                   // .a...

                        Else
                        {
                            Store (SST2, Local0)
                            Store (DA20, 
   22867: A1 2E 70 53 53 54 32 60 70 44 41 32 30           // ..pSST2`pDA20

Index (Local1, One))
                            Store (DA21, 
   22874: 88 61 01 00 70 44 41 32 31                       // .a..pDA21

Index (Local1, 0x02))
                            Store (BCN2, 
   2287D: 88 61 0A 02 00 70 42 43 4E 32                    // .a...pBCN2

Index (Local1, 0x03))

   22887: 88 61 0A 03 00                                   // .a...

                            Store (BDA2, 
   2288C: 70 42 44 41 32                                   // pBDA2

Index (Local1, 0x04))
                        }

                        And (Local0, 0x1F, Local0)

   22891: 88 61 0A 04 00 7B 60 0A 1F 60                    // .a...{`..`

                        If (Local0)
                        {

   2289B: A0 07 60                                         // ..`

                            Add (Local0, 0x10, Local0)
                        }


   2289E: 72 60 0A 10 60                                   // r`..`

                        Store (Local0, 
   228A3: 70 60                                            // p`

Index (Local1, Zero))
                    }

   228A5: 88 61 00 00                                      // .a..

                    Else
                    {

   228A9: A1 08                                            // ..

                        Store (0x10, 
   228AB: 70 0A 10                                         // p..

Index (Local1, Zero))
                    }
                }


   228AE: 88 61 00 00                                      // .a..

                Release (MUEC)
            }


   228B2: 5B 27 4D 55 45 43                                // ['MUEC

            Return (Local1)
        }


   228B8: A4 61                                            // .a

        Method (TPSW, 1, NotSerialized)
        {
            And (Arg0, One, Local0)

   228BA: 14 28 54 50 53 57 01 7B 68 01 60                 // .(TPSW.{h.`

            If (Local0)
            {
                ECXT (0xB6, 0xB8, One, One, Zero, Zero)
            }

   228C5: A0 0E 60 45 43 58 54 0A B6 0A B8 01 01 00 00     // ..`ECXT........

            Else
            {
                ECXT (0xB6, 0xB8, One, 0x02, Zero, Zero)
            }
        }


   228D4: A1 0E 45 43 58 54 0A B6 0A B8 01 0A 02 00 00     // ..ECXT.........

        Method (TPST, 0, NotSerialized)
        {
            Store (ECXT (0xB6, 0xB8, 0x02, Zero, Zero, Zero), Local0)
            Store (DerefOf (
   228E3: 14 27 54 50 53 54 00 70 45 43 58 54 0A B6 0A B8  // .'TPST.pECXT....
   228F3: 0A 02 00 00 00 60 70 83                          // .....`p.

Index (Local0, One)), Local1)

   228FB: 88 60 01 00 61                                   // .`..a

            If (LEqual (Local1, Zero))
            {

   22900: A0 06 93 61 00                                   // ...a.

                Return (One)
            }

   22905: A4 01                                            // ..

            Else
            {

   22907: A1 03                                            // ..

                Return (Zero)
            }
        }


   22909: A4 00                                            // ..

        Method (LBSW, 1, NotSerialized)
        {

   2290B: 14 26 4C 42 53 57 01                             // .&LBSW.

            If (LEqual (Arg0, One))
            {
                ECXT (0xB6, 0xB9, One, Zero, Zero, Zero)
            }

   22912: A0 10 93 68 01 45 43 58 54 0A B6 0A B9 01 00 00  // ...h.ECXT.......
   22922: 00                                               // .

            Else
            {
                ECXT (0xB6, 0xB9, 0x02, Zero, Zero, Zero)
            }
        }


   22923: A1 0E 45 43 58 54 0A B6 0A B9 0A 02 00 00 00     // ..ECXT.........

        Method (LBST, 0, NotSerialized)
        {
            Store (RRAM (0x044A), Local0)
            And (Local0, 0x03, Local0)

   22932: 14 16 4C 42 53 54 00 70 52 52 41 4D 0B 4A 04 60  // ..LBST.pRRAM.J.`
   22942: 7B 60 0A 03 60                                   // {`..`

            Return (Local0)
        }


   22947: A4 60                                            // .`

        Method (ECAC, 0, NotSerialized)
        {
            Store (GNBF, BIPA) /* \_SB_.BIPA */
            Store (0x30, MFUN) /* \_SB_.PCI0.LPCB.EC0_.MFUN */
            Store (One, SFUN) /* \_SB_.PCI0.LPCB.EC0_.SFUN */
            Store (0x10, LEN) /* \_SB_.PCI0.LPCB.EC0_.LEN_ */
            Store (Zero, EROR) /* \_SB_.PCI0.LPCB.EC0_.EROR */
            Store (One, STAS) /* \_SB_.PCI0.LPCB.EC0_.STAS */
            ISMI (0xA1)
        }


   22949: 14 35 45 43 41 43 00 70 47 4E 42 46 42 49 50 41  // .5ECAC.pGNBFBIPA
   22959: 70 0A 30 4D 46 55 4E 70 01 53 46 55 4E 70 0A 10  // p.0MFUNp.SFUNp..
   22969: 4C 45 4E 5F 70 00 45 52 4F 52 70 01 53 54 41 53  // LEN_p.ERORp.STAS
   22979: 49 53 4D 49 0A A1                                // ISMI..

        Method (CSEE, 1, Serialized)
        {

   2297F: 14 2E 43 53 45 45 09                             // ..CSEE.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (Arg0, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (Arg0, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                ECAC ()
                Release (MU4T)

   22986: A0 25 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 68  // .%ECAV[#MU4T..ph
   22996: 43 4D 44 5F 70 68 45 44 41 31 45 43 41 43 5B 27  // CMD_phEDA1ECAC['
   229A6: 4D 55 34 54                                      // MU4T

                Return (Zero)
            }


   229AA: A4 00                                            // ..

            Return (Ones)
        }


   229AC: A4 FF                                            // ..

        Method (SCTF, 2, Serialized)
        {

   229AE: 14 3C 53 43 54 46 0A                             // .<SCTF.

            If (ECAV ())
            {
                Acquire (MU4T, 0xFFFF)
                Store (0xFF, CMD) /* \_SB_.PCI0.LPCB.EC0_.CMD_ */
                Store (0xB3, EDA1) /* \_SB_.PCI0.LPCB.EC0_.EDA1 */
                Store (Arg0, EDA2) /* \_SB_.PCI0.LPCB.EC0_.EDA2 */
                Store (Arg1, EDA3) /* \_SB_.PCI0.LPCB.EC0_.EDA3 */
                ECAC ()
                Release (MU4T)

   229B5: A0 33 45 43 41 56 5B 23 4D 55 34 54 FF FF 70 0A  // .3ECAV[#MU4T..p.
   229C5: FF 43 4D 44 5F 70 0A B3 45 44 41 31 70 68 45 44  // .CMD_p..EDA1phED
   229D5: 41 32 70 69 45 44 41 33 45 43 41 43 5B 27 4D 55  // A2piEDA3ECAC['MU
   229E5: 34 54                                            // 4T

                Return (Zero)
            }


   229E7: A4 00                                            // ..

            Return (Ones)
        }
    }


   229E9: A4 FF                                            // ..

    Scope (\)
    {

   229EB: 10 18 5C 00                                      // ..\.

        Name (TSP, 0x0A)

   229EF: 08 54 53 50 5F 0A 0A                             // .TSP_..

        Name (TC1, 0x02)

   229F6: 08 54 43 31 5F 0A 02                             // .TC1_..

        Name (TC2, 0x0A)
    }


   229FD: 08 54 43 32 5F 0A 0A                             // .TC2_..

    Scope (_TZ)
    {

   22A04: 10 43 14 5F 54 5A 5F                             // .C._TZ_

        Method (KELV, 1, NotSerialized)
        {
            And (Arg0, 0xFF, Local0)

   22A0B: 14 32 4B 45 4C 56 01 7B 68 0A FF 60              // .2KELV.{h..`

            If (
   22A17: A0 19 92                                         // ...

LGreaterEqual (Local0, 0x80))
            {
                Subtract (0x0100, Local0, Local0)
                Multiply (Local0, 0x0A, Local0)
                Subtract (0x0AAC, Local0, Local0)

   22A1A: 95 60 0A 80 74 0B 00 01 60 60 77 60 0A 0A 60 74  // .`..t...``w`..`t
   22A2A: 0B AC 0A 60 60                                   // ...``

                Return (Local0)
            }

            Multiply (Local0, 0x0A, Local0)
            Add (Local0, 0x0AAC, Local0)

   22A2F: A4 60 77 60 0A 0A 60 72 60 0B AC 0A 60           // .`w`..`r`...`

            Return (Local0)
        }


   22A3C: A4 60                                            // .`

        Method (CELC, 1, NotSerialized)
        {
            Subtract (Arg0, 0x0AAC, Local0)
            Divide (Local0, 0x0A, Local1, Local0)

   22A3E: 14 14 43 45 4C 43 01 74 68 0B AC 0A 60 78 60 0A  // ..CELC.th...`x`.
   22A4E: 0A 61 60                                         // .a`

            Return (Local0)
        }


   22A51: A4 60                                            // .`

        Name (PLCY, Zero)

   22A53: 08 50 4C 43 59 00                                // .PLCY.

        ThermalZone (THRM)
        {

   22A59: 5B 85 4D 0E 54 48 52 4D                          // [.M.THRM

            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                RCRT ()

   22A61: 14 19 5F 43 52 54 00 52 43 52 54                 // .._CRT.RCRT

                Return (KELV (\_SB.TCRT))
            }


   22A6C: A4 4B 45 4C 56 5C 2E 5F 53 42 5F 54 43 52 54     // .KELV\._SB_TCRT

            Method (_TMP, 0, NotSerialized)  // _TMP: Temperature
            {
                Store (0x05, Local1)

   22A7B: 14 2E 5F 54 4D 50 00 70 0A 05 61                 // .._TMP.p..a

                While (Local1)
                {
                    Store (RTMP (), Local0)

   22A86: A2 1D 61 70 52 54 4D 50 60                       // ..apRTMP`

                    If (LGreater (Local0, \_SB.TCRT))
                    {

   22A8F: A0 0F 94 60 5C 2E 5F 53 42 5F 54 43 52 54        // ...`\._SB_TCRT

                        Decrement (Local1)
                    }

   22A9D: 76 61                                            // va

                    Else
                    {

   22A9F: A1 04                                            // ..

                        Store (Zero, Local1)
                    }
                }


   22AA1: 70 00 61                                         // p.a

                Return (KELV (Local0))
            }


   22AA4: A4 4B 45 4C 56 60                                // .KELV`

            Name (_PSL, 
   22AAA: 08 5F 50 53 4C                                   // ._PSL

Package (0x04)  // _PSL: Passive List
            {
                \_PR.CPU0, 
                \_PR.CPU1, 
                \_PR.CPU2, 
                \_PR.CPU3
            })

   22AAF: 12 2A 04 5C 2E 5F 50 52 5F 43 50 55 30 5C 2E 5F  // .*.\._PR_CPU0\._
   22ABF: 50 52 5F 43 50 55 31 5C 2E 5F 50 52 5F 43 50 55  // PR_CPU1\._PR_CPU
   22ACF: 32 5C 2E 5F 50 52 5F 43 50 55 33                 // 2\._PR_CPU3

            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Multiply (TSP, 0x0A, Local0)

   22ADA: 14 10 5F 54 53 50 00 77 54 53 50 5F 0A 0A 60     // .._TSP.wTSP_..`

                Return (Local0)
            }


   22AE9: A4 60                                            // .`

            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {

   22AEB: 14 0B 5F 54 43 31 00                             // .._TC1.

                Return (TC1) /* \TC1_ */
            }


   22AF2: A4 54 43 31 5F                                   // .TC1_

            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {

   22AF7: 14 0B 5F 54 43 32 00                             // .._TC2.

                Return (TC2) /* \TC2_ */
            }


   22AFE: A4 54 43 32 5F                                   // .TC2_

            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                RPSV ()

   22B03: 14 30 5F 50 53 56 00 52 50 53 56                 // .0_PSV.RPSV

                If (PLCY)
                {

   22B0E: A0 14 50 4C 43 59                                // ..PLCY

                    Return (KELV (\_SB.PPSV))
                }

   22B14: A4 4B 45 4C 56 5C 2E 5F 53 42 5F 50 50 53 56     // .KELV\._SB_PPSV

                Else
                {

   22B23: A1 10                                            // ..

                    Return (KELV (\_SB.TPSV))
                }
            }


   22B25: A4 4B 45 4C 56 5C 2E 5F 53 42 5F 54 50 53 56     // .KELV\._SB_TPSV

            Method (_SCP, 1, NotSerialized)  // _SCP: Set Cooling Policy
            {
                Store (Zero, PLCY) /* \_TZ_.PLCY */

   22B34: 14 13 5F 53 43 50 01 70 00 50 4C 43 59           // .._SCP.p.PLCY

                Notify (THRM, 0x81) // Thermal Trip Point Change
            }
        }
    }


   22B41: 86 54 48 52 4D 0A 81                             // .THRM..

    Scope (_TZ)
    {

   22B48: 10 48 20 5F 54 5A 5F                             // .H _TZ_

        Name (ATMP, 0x3C)

   22B4F: 08 41 54 4D 50 0A 3C                             // .ATMP.<

        Name (LTMP, 0x3C)

   22B56: 08 4C 54 4D 50 0A 3C                             // .LTMP.<

        Name (FANS, Zero)

   22B5D: 08 46 41 4E 53 00                                // .FANS.

        Method (RTMP, 0, NotSerialized)
        {

   22B63: 14 4A 04 52 54 4D 50 00                          // .J.RTMP.

            If (\_SB.PCI0.LPCB.EC0.ECAV ())
            {
                Store (\_SB.PCI0.LPCB.EC0.ECPU, Local0)

   22B6B: A0 3D 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // .=\/._SB_PCI0LPC
   22B7B: 42 45 43 30 5F 45 43 41 56 70 5C 2F 05 5F 53 42  // BEC0_ECAVp\/._SB
   22B8B: 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 45 43 50  // _PCI0LPCBEC0_ECP
   22B9B: 55 60                                            // U`

                If (LLess (Local0, 0x80))
                {

   22B9D: A0 0B 95 60 0A 80                                // ...`..

                    Store (Local0, LTMP) /* \_TZ_.LTMP */
                }
            }


   22BA3: 70 60 4C 54 4D 50                                // p`LTMP

            Return (LTMP) /* \_TZ_.LTMP */
        }


   22BA9: A4 4C 54 4D 50                                   // .LTMP

        Method (RCRT, 0, NotSerialized)
        {

   22BAE: 14 4C 04 52 43 52 54 00                          // .L.RCRT.

            If (\_SB.PCI0.LPCB.EC0.ECAV ())
            {
                Store (\_SB.PCI0.LPCB.EC0.ECRT, Local0)

   22BB6: A0 44 04 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // .D.\/._SB_PCI0LP
   22BC6: 43 42 45 43 30 5F 45 43 41 56 70 5C 2F 05 5F 53  // CBEC0_ECAVp\/._S
   22BD6: 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 45 43  // B_PCI0LPCBEC0_EC
   22BE6: 52 54 60                                         // RT`

                If (LLess (Local0, 0x80))
                {

   22BE9: A0 11 95 60 0A 80                                // ...`..

                    Store (Local0, \_SB.TCRT)
                }
            }
        }


   22BEF: 70 60 5C 2E 5F 53 42 5F 54 43 52 54              // p`\._SB_TCRT

        Method (RPSV, 0, NotSerialized)
        {

   22BFB: 14 4C 04 52 50 53 56 00                          // .L.RPSV.

            If (\_SB.PCI0.LPCB.EC0.ECAV ())
            {
                Store (\_SB.PCI0.LPCB.EC0.EPSV, Local0)

   22C03: A0 44 04 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // .D.\/._SB_PCI0LP
   22C13: 43 42 45 43 30 5F 45 43 41 56 70 5C 2F 05 5F 53  // CBEC0_ECAVp\/._S
   22C23: 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 45 50  // B_PCI0LPCBEC0_EP
   22C33: 53 56 60                                         // SV`

                If (LLess (Local0, 0x80))
                {

   22C36: A0 11 95 60 0A 80                                // ...`..

                    Store (Local0, \_SB.TPSV)
                }
            }
        }


   22C3C: 70 60 5C 2E 5F 53 42 5F 54 50 53 56              // p`\._SB_TPSV

        Method (RFAN, 1, NotSerialized)
        {

   22C48: 14 43 08 52 46 41 4E 01                          // .C.RFAN.

            If (\_SB.PCI0.LPCB.EC0.ECAV ())
            {
                Store (\_SB.PCI0.LPCB.EC0.ST83 (Arg0), Local0)

   22C50: A0 44 07 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // .D.\/._SB_PCI0LP
   22C60: 43 42 45 43 30 5F 45 43 41 56 70 5C 2F 05 5F 53  // CBEC0_ECAVp\/._S
   22C70: 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54  // B_PCI0LPCBEC0_ST
   22C80: 38 33 68 60                                      // 83h`

                If (LEqual (Local0, 0xFF))
                {

   22C84: A0 07 93 60 0A FF                                // ...`..

                    Return (Local0)
                }

                Store (\_SB.PCI0.LPCB.EC0.TACH (Arg0), Local0)
                Divide (Local0, 0x64, Local1, Local0)
                Add (Local0, One, Local0)

   22C8A: A4 60 70 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // .`p\/._SB_PCI0LP
   22C9A: 43 42 45 43 30 5F 54 41 43 48 68 60 78 60 0A 64  // CBEC0_TACHh`x`.d
   22CAA: 61 60 72 60 01 60                                // a`r`.`

                If (
   22CB0: A0 0C 92                                         // ...

LLessEqual (Local0, 0x3C))
                {

   22CB3: 94 60 0A 3C                                      // .`.<

                    Store (Local0, FANS) /* \_TZ_.FANS */
                }

   22CB7: 70 60 46 41 4E 53                                // p`FANS

                Else
                {

   22CBD: A1 07                                            // ..

                    Store (FANS, Local0)
                }
            }

   22CBF: 70 46 41 4E 53 60                                // pFANS`

            Else
            {

   22CC5: A1 04                                            // ..

                Store (Zero, Local0)
            }


   22CC7: 70 00 60                                         // p.`

            Return (Local0)
        }


   22CCA: A4 60                                            // .`

        Method (RFSE, 0, NotSerialized)
        {

   22CCC: 14 48 06 52 46 53 45 00                          // .H.RFSE.

            If (\_SB.PCI0.LPCB.EC0.ECAV ())
            {
                Store (\_SB.PCI0.LPCB.EC0.ST83 (Zero), Local1)

   22CD4: A0 49 05 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // .I.\/._SB_PCI0LP
   22CE4: 43 42 45 43 30 5F 45 43 41 56 70 5C 2F 05 5F 53  // CBEC0_ECAVp\/._S
   22CF4: 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54  // B_PCI0LPCBEC0_ST
   22D04: 38 33 00 61                                      // 83.a

                If (LLess (Local1, 0x80))
                {

   22D08: A0 13 95 61 0A 80                                // ...a..

                    If (LLess (Local1, 0x0A))
                    {

   22D0E: A0 08 95 61 0A 0A                                // ...a..

                        Store (Zero, Local0)
                    }

   22D14: 70 00 60                                         // p.`

                    Else
                    {

   22D17: A1 04                                            // ..

                        Store (One, Local0)
                    }
                }

   22D19: 70 01 60                                         // p.`

                ElseIf
   22D1C: A1 11                                            // ..

 (LLess (Local1, 0xF5))
                {

   22D1E: A0 09 95 61 0A F5                                // ...a..

                    Store (0x02, Local0)
                }

   22D24: 70 0A 02 60                                      // p..`

                Else
                {

   22D28: A1 05                                            // ..

                    Store (0x03, Local0)
                }
            }

   22D2A: 70 0A 03 60                                      // p..`

            Else
            {

   22D2E: A1 04                                            // ..

                Store (Zero, Local0)
            }


   22D30: 70 00 60                                         // p.`

            Return (Local0)
        }


   22D33: A4 60                                            // .`

        Method (TCHG, 0, NotSerialized)
        {
        }


   22D35: 14 06 54 43 48 47 00                             // ..TCHG.

        Method (THDL, 0, NotSerialized)
        {
        }


   22D3C: 14 06 54 48 44 4C 00                             // ..THDL.

        Method (TMSS, 1, NotSerialized)
        {
        }


   22D43: 14 06 54 4D 53 53 01                             // ..TMSS.

        Method (TMSW, 1, NotSerialized)
        {
        }
    }


   22D4A: 14 06 54 4D 53 57 01                             // ..TMSW.

    Scope (_SB.PCI0.LPCB.EC0)
    {

   22D51: 10 81 30 01 2F 04 5F 53 42 5F 50 43 49 30 4C 50  // ..0./._SB_PCI0LP
   22D61: 43 42 45 43 30 5F                                // CBEC0_

        Name (PWAC, 
   22D67: 08 50 57 41 43                                   // .PWAC

Buffer (0x40)
        {
            /* 0000 */  0x0E, 0x2E, 0x3B, 0x48, 0x55, 0x61, 0x6E, 0x7B,  // ..;HUan{
            /* 0008 */  0x9A, 0xC5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
            /* 0010 */  0x0E, 0x21, 0x2F, 0x40, 0x4E, 0x5F, 0x6D, 0x7B,  // .!/@N_m{
            /* 0018 */  0x9A, 0xC5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
            /* 0020 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
            /* 0028 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
            /* 0030 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
            /* 0038 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF   // ........
        })

   22D6C: 11 44 04 0A 40 0E 2E 3B 48 55 61 6E 7B 9A C5 FF  // .D..@..;HUan{...
   22D7C: FF FF FF FF FF 0E 21 2F 40 4E 5F 6D 7B 9A C5 FF  // ......!/@N_m{...
   22D8C: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
   22D9C: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
   22DAC: FF FF FF FF FF                                   // .....

        Name (F8FG, Zero)

   22DB1: 08 46 38 46 47 00                                // .F8FG.

        Name (BLCT, Zero)

   22DB7: 08 42 4C 43 54 00                                // .BLCT.

        Method (ACPS, 0, Serialized)
        {

   22DBD: 14 0E 41 43 50 53 08                             // ..ACPS.

            Return (
   22DC4: A4                                               // .

And (GPWS (), One))
        }


   22DC5: 7B 47 50 57 53 01 00                             // {GPWS..

        Method (DCPS, 1, Serialized)
        {
            Store (GPWS (), Local0)

   22DCC: 14 28 44 43 50 53 09 70 47 50 57 53 60           // .(DCPS.pGPWS`

            If (Arg0)
            {

   22DD9: A0 07 68                                         // ..h

                And (Local0, 0x04, Local0)
            }

   22DDC: 7B 60 0A 04 60                                   // {`..`

            Else
            {

   22DE1: A1 06                                            // ..

                And (Local0, 0x02, Local0)
            }


   22DE3: 7B 60 0A 02 60                                   // {`..`

            If (Local0)
            {

   22DE8: A0 05 60                                         // ..`

                Store (One, Local0)
            }

   22DEB: 70 01 60                                         // p.`

            Else
            {

   22DEE: A1 04                                            // ..

                Store (Zero, Local0)
            }


   22DF0: 70 00 60                                         // p.`

            Return (Local0)
        }


   22DF3: A4 60                                            // .`

        Method (GPWS, 0, Serialized)
        {
            Store (EPWS, Local0)

   22DF5: 14 0E 47 50 57 53 08 70 45 50 57 53 60           // ..GPWS.pEPWS`

            Return (Local0)
        }


   22E02: A4 60                                            // .`

        Method (BCHG, 1, Serialized)
        {

   22E04: 14 48 04 42 43 48 47 09                          // .H.BCHG.

            If (Arg0)
            {
                Store (EB1S, Local0)
                And (Local0, 0xFF, Local0)

   22E0C: A0 20 68 70 45 42 31 53 60 7B 60 0A FF 60        // . hpEB1S`{`..`

                If (
   22E1A: A0 0B 92                                         // ...

LNotEqual (Local0, 0xFF))
                {

   22E1D: 93 60 0A FF                                      // .`..

                    And (Local0, 0x02, Local0)
                }

   22E21: 7B 60 0A 02 60                                   // {`..`

                Else
                {

   22E26: A1 04                                            // ..

                    Store (Zero, Local0)
                }


   22E28: 70 00 60                                         // p.`

                Return (Local0)
            }

   22E2B: A4 60                                            // .`

            Else
            {
                Store (EB0S, Local0)
                And (Local0, 0xFF, Local0)

   22E2D: A1 1F 70 45 42 30 53 60 7B 60 0A FF 60           // ..pEB0S`{`..`

                If (
   22E3A: A0 0B 92                                         // ...

LNotEqual (Local0, 0xFF))
                {

   22E3D: 93 60 0A FF                                      // .`..

                    And (Local0, 0x02, Local0)
                }

   22E41: 7B 60 0A 02 60                                   // {`..`

                Else
                {

   22E46: A1 04                                            // ..

                    Store (Zero, Local0)
                }


   22E48: 70 00 60                                         // p.`

                Return (Local0)
            }
        }


   22E4B: A4 60                                            // .`

        Method (BCLE, 1, Serialized)
        {

   22E4D: 14 40 0A 42 43 4C 45 09                          // .@.BCLE.

            If (Arg0)
            {

   22E55: A0 4C 04 68                                      // .L.h

                If (ECAV ())
                {
                    Store (Ones, Local0)
                    Store (EB1S, Local1)
                    And (Local1, 0xFFFF, Local1)

   22E59: A0 41 04 45 43 41 56 70 FF 60 70 45 42 31 53 61  // .A.ECAVp.`pEB1Sa
   22E69: 7B 61 0B FF FF 61                                // {a...a

                    If (
   22E6F: A0 2B 92                                         // .+.

LNotEqual (Local1, 0xFFFF))
                    {
                        And (Local1, 0x16, Local1)

   22E72: 93 61 0B FF FF 7B 61 0A 16 61                    // .a...{a..a

                        If (LEqual (Local1, 0x04))
                        {

   22E7C: A0 08 93 61 0A 04                                // ...a..

                            Store (Zero, Local0)
                        }

   22E82: 70 00 60                                         // p.`

                        ElseIf
   22E85: A1 15                                            // ..

 (LEqual (Local1, 0x02))
                        {

   22E87: A0 08 93 61 0A 02                                // ...a..

                            Store (One, Local0)
                        }

   22E8D: 70 01 60                                         // p.`

                        ElseIf
   22E90: A1 0A                                            // ..

 (LEqual (Local1, 0x10))
                        {

   22E92: A0 08 93 61 0A 10                                // ...a..

                            Store (One, Local0)
                        }
                    }
                }

   22E98: 70 01 60                                         // p.`

                Else
                {

   22E9B: A1 04                                            // ..

                    Store (Ones, Local0)
                }


   22E9D: 70 FF 60                                         // p.`

                Return (Local0)
            }

   22EA0: A4 60                                            // .`

            Else
            {

   22EA2: A1 4B 04                                         // .K.

                If (ECAV ())
                {
                    Store (Ones, Local0)
                    Store (EB0S, Local1)
                    And (Local1, 0xFFFF, Local1)

   22EA5: A0 41 04 45 43 41 56 70 FF 60 70 45 42 30 53 61  // .A.ECAVp.`pEB0Sa
   22EB5: 7B 61 0B FF FF 61                                // {a...a

                    If (
   22EBB: A0 2B 92                                         // .+.

LNotEqual (Local1, 0xFFFF))
                    {
                        And (Local1, 0x16, Local1)

   22EBE: 93 61 0B FF FF 7B 61 0A 16 61                    // .a...{a..a

                        If (LEqual (Local1, 0x04))
                        {

   22EC8: A0 08 93 61 0A 04                                // ...a..

                            Store (Zero, Local0)
                        }

   22ECE: 70 00 60                                         // p.`

                        ElseIf
   22ED1: A1 15                                            // ..

 (LEqual (Local1, 0x02))
                        {

   22ED3: A0 08 93 61 0A 02                                // ...a..

                            Store (One, Local0)
                        }

   22ED9: 70 01 60                                         // p.`

                        ElseIf
   22EDC: A1 0A                                            // ..

 (LEqual (Local1, 0x10))
                        {

   22EDE: A0 08 93 61 0A 10                                // ...a..

                            Store (One, Local0)
                        }
                    }
                }

   22EE4: 70 01 60                                         // p.`

                Else
                {

   22EE7: A1 04                                            // ..

                    Store (Ones, Local0)
                }


   22EE9: 70 FF 60                                         // p.`

                Return (Local0)
            }
        }


   22EEC: A4 60                                            // .`

        Method (CHBT, 1, Serialized)
        {

   22EEE: 14 33 43 48 42 54 09                             // .3CHBT.

            If (ECAV ())
            {
                Store (GBTT (Arg0), Local1)

   22EF5: A0 22 45 43 41 56 70 47 42 54 54 68 61           // ."ECAVpGBTTha

                If (LEqual (Local1, 0xFF))
                {

   22F02: A0 08 93 61 0A FF                                // ...a..

                    Store (Zero, Local0)
                }

   22F08: 70 00 60                                         // p.`

                Else
                {
                    And (Local1, 0x10, Local0)

   22F0B: A1 0C 7B 61 0A 10 60                             // ..{a..`

                    If (Local0)
                    {

   22F12: A0 05 60                                         // ..`

                        Store (One, Local0)
                    }
                }
            }

   22F15: 70 01 60                                         // p.`

            Else
            {

   22F18: A1 07                                            // ..

                Store (DCTP, Local0)
            }


   22F1A: 70 44 43 54 50 60                                // pDCTP`

            Return (Local0)
        }


   22F20: A4 60                                            // .`

        Method (RTAH, 1, NotSerialized)
        {

   22F22: 14 4E 07 52 54 41 48 01                          // .N.RTAH.

            If (LEqual (Arg0, Zero))
            {
                Store (Acquire (CMUT, 0xFFFF), Local2)

   22F2A: A0 35 93 68 00 70 5B 23 43 4D 55 54 FF FF 62     // .5.h.p[#CMUT..b

                If (LEqual (Local2, Zero))
                {
                    Store (0x09, CRAH) /* \_SB_.PCI0.LPCB.EC0_.CRAH */
                    Store (THH0, Local0)
                    ShiftLeft (Local0, 0x08, Local0)
                    Store (THL0, Local1)
                    Or (Local0, Local1, Local0)

   22F39: A0 26 93 62 00 70 0A 09 43 52 41 48 70 54 48 48  // .&.b.p..CRAHpTHH
   22F49: 30 60 79 60 0A 08 60 70 54 48 4C 30 61 7D 60 61  // 0`y`..`pTHL0a}`a
   22F59: 60                                               // `

                    Release (CMUT)
                }
            }

   22F5A: 5B 27 43 4D 55 54                                // ['CMUT

            ElseIf
   22F60: A1 3E                                            // .>

 (LEqual (Arg0, One))
            {
                Store (Acquire (CMUT, 0xFFFF), Local2)

   22F62: A0 35 93 68 01 70 5B 23 43 4D 55 54 FF FF 62     // .5.h.p[#CMUT..b

                If (LEqual (Local2, Zero))
                {
                    Store (0x09, CRAH) /* \_SB_.PCI0.LPCB.EC0_.CRAH */
                    Store (THH1, Local0)
                    ShiftLeft (Local0, 0x08, Local0)
                    Store (THL1, Local1)
                    Or (Local0, Local1, Local0)

   22F71: A0 26 93 62 00 70 0A 09 43 52 41 48 70 54 48 48  // .&.b.p..CRAHpTHH
   22F81: 31 60 79 60 0A 08 60 70 54 48 4C 31 61 7D 60 61  // 1`y`..`pTHL1a}`a
   22F91: 60                                               // `

                    Release (CMUT)
                }
            }

   22F92: 5B 27 43 4D 55 54                                // ['CMUT

            Else
            {

   22F98: A1 06                                            // ..

                Store (0xFFFF, Local0)
            }


   22F9A: 70 0B FF FF 60                                   // p...`

            Return (Local0)
        }


   22F9F: A4 60                                            // .`

        Method (RP2E, 1, NotSerialized)
        {
            Store (Acquire (CMUT, 0xFFFF), Local1)

   22FA1: 14 30 52 50 32 45 01 70 5B 23 43 4D 55 54 FF FF  // .0RP2E.p[#CMUT..
   22FB1: 61                                               // a

            If (LEqual (Local1, Zero))
            {
                Store (0x09, CRAH) /* \_SB_.PCI0.LPCB.EC0_.CRAH */
                Store (Arg0, CRAI) /* \_SB_.PCI0.LPCB.EC0_.CRAI */
                Store (CRAD, Local0)

   22FB2: A0 1D 93 61 00 70 0A 09 43 52 41 48 70 68 43 52  // ...a.p..CRAHphCR
   22FC2: 41 49 70 43 52 41 44 60                          // AIpCRAD`

                Release (CMUT)
            }


   22FCA: 5B 27 43 4D 55 54                                // ['CMUT

            Return (Local0)
        }


   22FD0: A4 60                                            // .`

        Method (WP2E, 2, NotSerialized)
        {
            Store (Acquire (CMUT, 0xFFFF), Local1)

   22FD2: 14 2E 57 50 32 45 02 70 5B 23 43 4D 55 54 FF FF  // ..WP2E.p[#CMUT..
   22FE2: 61                                               // a

            If (LEqual (Local1, Zero))
            {
                Store (0x09, CRAH) /* \_SB_.PCI0.LPCB.EC0_.CRAH */
                Store (Arg0, CRAI) /* \_SB_.PCI0.LPCB.EC0_.CRAI */
                Store (Arg1, CRAD) /* \_SB_.PCI0.LPCB.EC0_.CRAD */

   22FE3: A0 1D 93 61 00 70 0A 09 43 52 41 48 70 68 43 52  // ...a.p..CRAHphCR
   22FF3: 41 49 70 69 43 52 41 44                          // AIpiCRAD

                Release (CMUT)
            }
        }


   22FFB: 5B 27 43 4D 55 54                                // ['CMUT

        Method (TACH, 1, Serialized)
        {

   23001: 14 42 06 54 41 43 48 09                          // .B.TACH.


   23009: 08 5F 54 5F 30 00                                // ._T_0.

            If (ECAV ())
            {

   2300F: A0 40 05 45 43 41 56                             // .@.ECAV

                Switch (Arg0)
                {

   23016: A2 2F 01 70 68 5F 54 5F 30                       // ./.ph_T_0

                    Case (Zero)
                    {
                        Store (RTAH (Zero), Local0)

   2301F: A0 0F 93 5F 54 5F 30 00 70 52 54 41 48 00 60     // ..._T_0.pRTAH.`

                        Break
                    }

   2302E: A5                                               // .

                    Case
   2302F: A1 15                                            // ..

 (One)
                    {
                        Store (RTAH (One), Local0)

   23031: A0 0F 93 5F 54 5F 30 01 70 52 54 41 48 01 60     // ..._T_0.pRTAH.`

                        Break
                    }

   23040: A5                                               // .

                    Default
                    {

   23041: A1 03                                            // ..

                        Return (Ones)
                    }


   23043: A4 FF                                            // ..

                }

                Multiply (Local0, 0x02, Local0)

   23045: A5 77 60 0A 02 60                                // .w`..`

                If (
   2304B: A0 10 92                                         // ...

LNotEqual (Local0, Zero))
                {
                    Divide (0x0041CDB4, Local0, Local1, Local0)

   2304E: 93 60 00 78 0C B4 CD 41 00 60 61 60              // .`.x...A.`a`

                    Return (Local0)
                }

   2305A: A4 60                                            // .`

                Else
                {

   2305C: A1 03                                            // ..

                    Return (Ones)
                }
            }

   2305E: A4 FF                                            // ..

            Else
            {

   23060: A1 03                                            // ..

                Return (Ones)
            }
        }


   23062: A4 FF                                            // ..

        Name (HKFG, Zero)

   23064: 08 48 4B 46 47 00                                // .HKFG.

        Name (KBST, Zero)

   2306A: 08 4B 42 53 54 00                                // .KBST.

        Name (KBBR, Zero)

   23070: 08 4B 42 42 52 00                                // .KBBR.

        Method (EC0S, 1, NotSerialized)
        {

   23076: 14 4E 06 45 43 30 53 01                          // .N.EC0S.

            If (LEqual (Arg0, 0x03))
            {
                Store (RRAM (0x04B0), KBST) /* \_SB_.PCI0.LPCB.EC0_.KBST */

   2307E: A0 1D 93 68 0A 03 70 52 52 41 4D 0B B0 04 4B 42  // ...h..pRRAM...KB
   2308E: 53 54                                            // ST

                Store (RRAM (0x04B1), KBBR) /* \_SB_.PCI0.LPCB.EC0_.KBBR */
            }


   23090: 70 52 52 41 4D 0B B1 04 4B 42 42 52              // pRRAM...KBBR

            If (LOr (LEqual (Arg0, 0x03), 
   2309C: A0 23 91 93 68 0A 03                             // .#..h..

LEqual (Arg0, 0x04)))
            {
                Store (RRAM (0x04B0), Local0)
                And (Local0, 0x80, Local1)

   230A3: 93 68 0A 04 70 52 52 41 4D 0B B0 04 60 7B 60 0A  // .h..pRRAM...`{`.
   230B3: 80 61                                            // .a

                If (Local1)
                {
                    WRAM (0x04B1, Zero)
                }
            }


   230B5: A0 0A 61 57 52 41 4D 0B B1 04 00                 // ..aWRAM....

            If (LEqual (Arg0, 0x05))
            {
                Store (RRAM (0x04B0), Local0)
                And (Local0, 0x07, Local1)

   230C0: A0 1E 93 68 0A 05 70 52 52 41 4D 0B B0 04 60 7B  // ...h..pRRAM...`{
   230D0: 60 0A 07 61                                      // `..a

                If (Local1)
                {
                    WRAM (0x04B1, Zero)
                }
            }


   230D4: A0 0A 61 57 52 41 4D 0B B1 04 00                 // ..aWRAM....

            If (
   230DF: A0 05                                            // ..

LGreater (Arg0, 0x04)){}
        }


   230E1: 94 68 0A 04                                      // .h..

        Method (EC0W, 1, NotSerialized)
        {

   230E5: 14 48 09 45 43 30 57 01                          // .H.EC0W.

            If (LEqual (Arg0, 0x03))
            {
                WRAM (0x04B0, KBST)
                WRAM (0x04B1, KBBR)
            }


   230ED: A0 1B 93 68 0A 03 57 52 41 4D 0B B0 04 4B 42 53  // ...h..WRAM...KBS
   230FD: 54 57 52 41 4D 0B B1 04 4B 42 42 52              // TWRAM...KBBR

            If (
   23109: A0 2C 92                                         // .,.

LLessEqual (Arg0, 0x04))
            {
                Store (DCPS (Zero), DCPF) /* \_SB_.DCPF */
                Store (ACPS (), Local0)

   2310C: 94 68 0A 04 70 44 43 50 53 00 44 43 50 46 70 41  // .h..pDCPS.DCPFpA
   2311C: 43 50 53 60                                      // CPS`

                If (
   23120: A0 15 92                                         // ...

LNotEqual (Local0, ACPF))
                {
                    Store (ACPS (), ACPF) /* \_SB_.ACPF */
                    PNOT ()
                }
            }


   23123: 93 60 41 43 50 46 70 41 43 50 53 41 43 50 46 50  // .`ACPFpACPSACPFP
   23133: 4E 4F 54                                         // NOT

            If (
   23136: A0 0A                                            // ..

LOr (LEqual (Arg0, 0x03), 
   23138: 91 93 68 0A 03                                   // ..h..

LEqual (Arg0, 0x04))){}

   2313D: 93 68 0A 04                                      // .h..

            If (
   23141: A0 05                                            // ..

LEqual (Arg0, 0x05)){}

   23143: 93 68 0A 05                                      // .h..

            If (And (WOLO, One))
            {
                Store (0x0580, Local0)
                Add (Local0, Zero, Local0)
                Store (RRAM (Local0), Local1)
                Or (Local1, 0x05, Local1)
                WRAM (Local0, Local1)
            }


   23147: A0 23 7B 57 4F 4C 4F 01 00 70 0B 80 05 60 72 60  // .#{WOLO..p...`r`
   23157: 00 60 70 52 52 41 4D 60 61 7D 61 0A 05 61 57 52  // .`pRRAM`a}a..aWR
   23167: 41 4D 60 61                                      // AM`a

            If (And (DSYN, One))
            {
                ST9F (0x2B, 0x20, 0x20)
            }
        }


   2316B: A0 12 7B 44 53 59 4E 01 00 53 54 39 46 0A 2B 0A  // ..{DSYN..ST9F.+.
   2317B: 20 0A 20                                         //  . 

        Name (FHKM, One)

   2317E: 08 46 48 4B 4D 01                                // .FHKM.

        Method (FHKW, 0, Serialized)
        {

   23184: 14 17 46 48 4B 57 08                             // ..FHKW.

            While (LNot (FHKM))
            {

   2318B: A2 0A 92 46 48 4B 4D                             // ...FHKM

                Sleep (0x0A)
            }


   23192: 5B 22 0A 0A                                      // ["..

            Store (Zero, FHKM) /* \_SB_.PCI0.LPCB.EC0_.FHKM */
        }


   23196: 70 00 46 48 4B 4D                                // p.FHKM

        Method (FHKS, 0, Serialized)
        {

   2319C: 14 0C 46 48 4B 53 08                             // ..FHKS.

            Store (One, FHKM) /* \_SB_.PCI0.LPCB.EC0_.FHKM */
        }


   231A3: 70 01 46 48 4B 4D                                // p.FHKM

        Method (_Q01, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   231A9: 14 1B 5F 51 30 31 00                             // .._Q01.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x52)
            }
        }


   231B0: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   231C0: 41 4E 45 0A 52                                   // ANE.R

        Method (_Q02, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   231C5: 14 1B 5F 51 30 32 00                             // .._Q02.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x53)
            }
        }


   231CC: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   231DC: 41 4E 45 0A 53                                   // ANE.S

        Method (_Q03, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   231E1: 14 1B 5F 51 30 33 00                             // .._Q03.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x54)
            }
        }


   231E8: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   231F8: 41 4E 45 0A 54                                   // ANE.T

        Method (_Q04, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   231FD: 14 1B 5F 51 30 34 00                             // .._Q04.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x55)
            }
        }


   23204: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23214: 41 4E 45 0A 55                                   // ANE.U

        Method (_Q05, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23219: 14 1B 5F 51 30 35 00                             // .._Q05.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x56)
            }
        }


   23220: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23230: 41 4E 45 0A 56                                   // ANE.V

        Method (_Q0A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23235: 14 0D 5F 51 30 41 00                             // .._Q0A.

            Notify (SLPB, 0x80) // Status Change
        }


   2323C: 86 53 4C 50 42 0A 80                             // .SLPB..

        Method (_Q0B, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23243: 14 4A 32 5F 51 30 42 00                          // .J2_Q0B.

            If (
   2324B: A0 12 92                                         // ...

LGreaterEqual (MSOS (), OSW8))
            {

   2324E: 95 4D 53 4F 53 4F 53 57 38                       // .MSOSOSW8

                Notify (ASHS, 0x88) // Device-Specific
            }

   23257: 86 41 53 48 53 0A 88                             // .ASHS..

            ElseIf
   2325E: A1 4F 30                                         // .O0

 (And (^^^^ATKD.WAPF, 0x04))
            {

   23261: A0 27 7B 5E 5E 5E 5E 2E 41 54 4B 44 57 41 50 46  // .'{^^^^.ATKDWAPF
   23271: 0A 04 00                                         // ...

                If (ATKP)
                {
                    ^^^^ATKD.IANE (0x88)
                }
            }

   23274: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23284: 41 4E 45 0A 88                                   // ANE..

            Else
            {
                Store (OHWR (), Local0)

   23289: A1 44 2E 70 4F 48 57 52 60                       // .D.pOHWR`

                If (And (Local0, 0x02))
                {

   23292: A0 14 7B 60 0A 02 00                             // ..{`...

                    If (And (Local0, One))
                    {

   23299: A0 08 7B 60 01 00                                // ..{`..

                        Store (One, Local0)
                    }

   2329F: 70 01 60                                         // p.`

                    Else
                    {

   232A2: A1 04                                            // ..

                        Store (Zero, Local0)
                    }
                }

   232A4: 70 00 60                                         // p.`

                Else
                {

   232A7: A1 04                                            // ..

                    Store (One, Local0)
                }


   232A9: 70 01 60                                         // p.`

                If (Local0)
                {

   232AC: A0 44 29 60                                      // .D)`

                    If (And (^^^^ATKD.WAPF, One))
                    {

   232B0: A0 41 12 7B 5E 5E 5E 5E 2E 41 54 4B 44 57 41 50  // .A.{^^^^.ATKDWAP
   232C0: 46 01 00                                         // F..

                        If (LAnd (WLDP, BTDP))
                        {
                            Store (WRST, Local0)
                            Or (ShiftLeft (BRST, One), Local0, Local0)
                            Increment (Local0)

   232C3: A0 4E 0B 90 57 4C 44 50 42 54 44 50 70 57 52 53  // .N..WLDPBTDPpWRS
   232D3: 54 60 7D 79 42 52 53 54 01 00 60 60 75 60        // T`}yBRST..``u`

                            If (LGreater (Local0, 0x03))
                            {

   232E1: A0 08 94 60 0A 03                                // ...`..

                                Store (Zero, Local0)
                            }

                            Store (DerefOf (
   232E7: 70 00 60 70 83                                   // p.`p.

Index (WBTL, Local0)), Local1)

   232EC: 88 57 42 54 4C 60 00 61                          // .WBTL`.a

                            If (LEqual (Local1, Zero))
                            {
                                ^^^^ATKD.IANE (0x74)
                                OWLD (Zero)
                                Sleep (0x0DAC)
                                OBTD (Zero)
                            }


   232F4: A0 22 93 61 00 5E 5E 5E 5E 2E 41 54 4B 44 49 41  // .".a.^^^^.ATKDIA
   23304: 4E 45 0A 74 4F 57 4C 44 00 5B 22 0B AC 0D 4F 42  // NE.tOWLD.["...OB
   23314: 54 44 00                                         // TD.

                            If (LEqual (Local1, One))
                            {
                                ^^^^ATKD.IANE (0x73)
                                OWLD (One)
                                Sleep (0x0DAC)
                                OBTD (One)
                            }


   23317: A0 22 93 61 01 5E 5E 5E 5E 2E 41 54 4B 44 49 41  // .".a.^^^^.ATKDIA
   23327: 4E 45 0A 73 4F 57 4C 44 01 5B 22 0B AC 0D 4F 42  // NE.sOWLD.["...OB
   23337: 54 44 01                                         // TD.

                            If (LEqual (Local1, 0x02))
                            {
                                ^^^^ATKD.IANE (0x74)
                                OWLD (Zero)
                                Sleep (0x0DAC)
                                OBTD (Zero)
                            }


   2333A: A0 23 93 61 0A 02 5E 5E 5E 5E 2E 41 54 4B 44 49  // .#.a..^^^^.ATKDI
   2334A: 41 4E 45 0A 74 4F 57 4C 44 00 5B 22 0B AC 0D 4F  // ANE.tOWLD.["...O
   2335A: 42 54 44 00                                      // BTD.

                            If (LEqual (Local1, 0x03))
                            {
                                ^^^^ATKD.IANE (0x74)
                                OWLD (Zero)
                                Sleep (0x0DAC)
                                OBTD (Zero)
                            }
                        }

   2335E: A0 23 93 61 0A 03 5E 5E 5E 5E 2E 41 54 4B 44 49  // .#.a..^^^^.ATKDI
   2336E: 41 4E 45 0A 74 4F 57 4C 44 00 5B 22 0B AC 0D 4F  // ANE.tOWLD.["...O
   2337E: 42 54 44 00                                      // BTD.

                        ElseIf
   23382: A1 4F 04                                         // .O.

 (WLDP)
                        {
                            ^^^^ATKD.IANE (0x5D)
                        }

   23385: A0 14 57 4C 44 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..WLDP^^^^.ATKDI
   23395: 41 4E 45 0A 5D                                   // ANE.]

                        ElseIf
   2339A: A1 37                                            // .7

 (BTDP)
                        {

   2339C: A0 35 42 54 44 50                                // .5BTDP

                            If (BRST)
                            {
                                OBTD (Zero)
                                ^^^^ATKD.IANE (0x7E)
                            }

   233A2: A0 19 42 52 53 54 4F 42 54 44 00 5E 5E 5E 5E 2E  // ..BRSTOBTD.^^^^.
   233B2: 41 54 4B 44 49 41 4E 45 0A 7E                    // ATKDIANE.~

                            Else
                            {
                                OBTD (One)
                                ^^^^ATKD.IANE (0x7D)
                            }
                        }
                    }

   233BC: A1 15 4F 42 54 44 01 5E 5E 5E 5E 2E 41 54 4B 44  // ..OBTD.^^^^.ATKD
   233CC: 49 41 4E 45 0A 7D                                // IANE.}

                    ElseIf
   233D2: A1 4E 16                                         // .N.

 (LAnd (WLDP, BTDP))
                    {
                        Store (WRST, Local0)
                        Or (ShiftLeft (BRST, One), Local0, Local0)
                        Increment (Local0)

   233D5: A0 4A 0F 90 57 4C 44 50 42 54 44 50 70 57 52 53  // .J..WLDPBTDPpWRS
   233E5: 54 60 7D 79 42 52 53 54 01 00 60 60 75 60        // T`}yBRST..``u`

                        If (LGreater (Local0, 0x03))
                        {

   233F3: A0 08 94 60 0A 03                                // ...`..

                            Store (Zero, Local0)
                        }

                        Store (DerefOf (
   233F9: 70 00 60 70 83                                   // p.`p.

Index (WBTL, Local0)), Local1)

   233FE: 88 57 42 54 4C 60 00 61                          // .WBTL`.a

                        If (LEqual (Local1, Zero))
                        {
                            OWLD (Zero)
                            ^^^^ATKD.IANE (0x5F)
                            Sleep (0x0DAC)
                            OBTD (Zero)
                            ^^^^ATKD.IANE (0x7E)
                        }


   23406: A0 31 93 61 00 4F 57 4C 44 00 5E 5E 5E 5E 2E 41  // .1.a.OWLD.^^^^.A
   23416: 54 4B 44 49 41 4E 45 0A 5F 5B 22 0B AC 0D 4F 42  // TKDIANE._["...OB
   23426: 54 44 00 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E 45  // TD.^^^^.ATKDIANE
   23436: 0A 7E                                            // .~

                        If (LEqual (Local1, One))
                        {
                            OWLD (One)
                            ^^^^ATKD.IANE (0x5E)
                            Sleep (0x0DAC)
                            OBTD (Zero)
                            ^^^^ATKD.IANE (0x7E)
                        }


   23438: A0 31 93 61 01 4F 57 4C 44 01 5E 5E 5E 5E 2E 41  // .1.a.OWLD.^^^^.A
   23448: 54 4B 44 49 41 4E 45 0A 5E 5B 22 0B AC 0D 4F 42  // TKDIANE.^["...OB
   23458: 54 44 00 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E 45  // TD.^^^^.ATKDIANE
   23468: 0A 7E                                            // .~

                        If (LEqual (Local1, 0x02))
                        {
                            OWLD (Zero)
                            ^^^^ATKD.IANE (0x5F)
                            Sleep (0x0DAC)
                            OBTD (One)
                            ^^^^ATKD.IANE (0x7D)
                        }


   2346A: A0 32 93 61 0A 02 4F 57 4C 44 00 5E 5E 5E 5E 2E  // .2.a..OWLD.^^^^.
   2347A: 41 54 4B 44 49 41 4E 45 0A 5F 5B 22 0B AC 0D 4F  // ATKDIANE._["...O
   2348A: 42 54 44 01 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E  // BTD.^^^^.ATKDIAN
   2349A: 45 0A 7D                                         // E.}

                        If (LEqual (Local1, 0x03))
                        {
                            OWLD (One)
                            ^^^^ATKD.IANE (0x5E)
                            Sleep (0x0DAC)
                            OBTD (One)
                            ^^^^ATKD.IANE (0x7D)
                        }
                    }

   2349D: A0 32 93 61 0A 03 4F 57 4C 44 01 5E 5E 5E 5E 2E  // .2.a..OWLD.^^^^.
   234AD: 41 54 4B 44 49 41 4E 45 0A 5E 5B 22 0B AC 0D 4F  // ATKDIANE.^["...O
   234BD: 42 54 44 01 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E  // BTD.^^^^.ATKDIAN
   234CD: 45 0A 7D                                         // E.}

                    ElseIf
   234D0: A1 40 07                                         // .@.

 (WLDP)
                    {

   234D3: A0 35 57 4C 44 50                                // .5WLDP

                        If (WRST)
                        {
                            OWLD (Zero)
                            ^^^^ATKD.IANE (0x5F)
                        }

   234D9: A0 19 57 52 53 54 4F 57 4C 44 00 5E 5E 5E 5E 2E  // ..WRSTOWLD.^^^^.
   234E9: 41 54 4B 44 49 41 4E 45 0A 5F                    // ATKDIANE._

                        Else
                        {
                            OWLD (One)
                            ^^^^ATKD.IANE (0x5E)
                        }
                    }

   234F3: A1 15 4F 57 4C 44 01 5E 5E 5E 5E 2E 41 54 4B 44  // ..OWLD.^^^^.ATKD
   23503: 49 41 4E 45 0A 5E                                // IANE.^

                    ElseIf
   23509: A1 37                                            // .7

 (BTDP)
                    {

   2350B: A0 35 42 54 44 50                                // .5BTDP

                        If (BRST)
                        {
                            OBTD (Zero)
                            ^^^^ATKD.IANE (0x7E)
                        }

   23511: A0 19 42 52 53 54 4F 42 54 44 00 5E 5E 5E 5E 2E  // ..BRSTOBTD.^^^^.
   23521: 41 54 4B 44 49 41 4E 45 0A 7E                    // ATKDIANE.~

                        Else
                        {
                            OBTD (One)
                            ^^^^ATKD.IANE (0x7D)
                        }
                    }
                }

   2352B: A1 15 4F 42 54 44 01 5E 5E 5E 5E 2E 41 54 4B 44  // ..OBTD.^^^^.ATKD
   2353B: 49 41 4E 45 0A 7D                                // IANE.}

                Else
                {

   23541: A1 2C                                            // .,

                    If (WLDP){}

   23543: A0 05 57 4C 44 50                                // ..WLDP

                    If (LAnd (WLDP, BTDP))
                    {

   23549: A0 0F 90 57 4C 44 50 42 54 44 50                 // ...WLDPBTDP

                        Sleep (0x0DAC)
                    }


   23554: 5B 22 0B AC 0D                                   // ["...

                    If (BTDP)
                    {
                        ^^^^ATKD.IANE (0x7E)
                    }
                }
            }
        }


   23559: A0 14 42 54 44 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..BTDP^^^^.ATKDI
   23569: 41 4E 45 0A 7E                                   // ANE.~

        Name (WBTL, 
   2356E: 08 57 42 54 4C                                   // .WBTL

Package (0x04)
        {
            Zero, 
            One, 
            0x02, 
            0x03
        })

   23573: 12 08 04 00 01 0A 02 0A 03                       // .........

        Method (_Q0C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ^^^^ATKD.IANE (0xC5)
        }


   2357C: 14 15 5F 51 30 43 00 5E 5E 5E 5E 2E 41 54 4B 44  // .._Q0C.^^^^.ATKD
   2358C: 49 41 4E 45 0A C5                                // IANE..

        Method (_Q0D, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ^^^^ATKD.IANE (0xC4)
        }


   23592: 14 15 5F 51 30 44 00 5E 5E 5E 5E 2E 41 54 4B 44  // .._Q0D.^^^^.ATKD
   235A2: 49 41 4E 45 0A C4                                // IANE..

        Name (ASBN, Zero)

   235A8: 08 41 53 42 4E 00                                // .ASBN.

        Method (SBRN, 0, Serialized)
        {

   235AE: 14 43 04 53 42 52 4E 08                          // .C.SBRN.

            If (^^^GFX0.PRST)
            {
                Store (^^^GFX0.GCBL, ^^^GFX0.CBLV) /* External reference */
                Local0
                Subtract (0x0A, Local0, Local1)

   235B6: A0 3B 5E 5E 5E 2E 47 46 58 30 50 52 53 54 70 5E  // .;^^^.GFX0PRSTp^
   235C6: 5E 5E 2E 47 46 58 30 47 43 42 4C 5E 5E 5E 2E 47  // ^^.GFX0GCBL^^^.G
   235D6: 46 58 30 43 42 4C 56 60 74 0A 0A 60 61           // FX0CBLV`t..`a

                If (
   235E3: A0 0E 92                                         // ...

LNotEqual (Local1, LBTN))
                {

   235E6: 93 61 4C 42 54 4E                                // .aLBTN

                    Store (Local1, LBTN) /* \_SB_.LBTN */
                }
            }
        }


   235EC: 70 61 4C 42 54 4E                                // paLBTN

        Method (_Q0E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   235F2: 14 44 13 5F 51 30 45 00                          // .D._Q0E.

            If (LLess (MSOS (), OSW8))
            {
                SBRN ()
            }


   235FA: A0 0E 95 4D 53 4F 53 4F 53 57 38 53 42 52 4E     // ...MSOSOSW8SBRN

            If (
   23609: A0 4D 0D 92                                      // .M..

LGreaterEqual (MSOS (), OSVT))
            {
                Store (LBTN, Local0)

   2360D: 95 4D 53 4F 53 4F 53 56 54 70 4C 42 54 4E 60     // .MSOSOSVTpLBTN`

                If (^^^GFX0.PRST)
                {

   2361C: A0 38 5E 5E 5E 2E 47 46 58 30 50 52 53 54        // .8^^^.GFX0PRST

                    If (
   2362A: A0 18 92                                         // ...

LNotEqual (^^^GFX0.LCDD._DCS, 0x1F))
                    {

   2362D: 93 5E 5E 5E 2F 03 47 46 58 30 4C 43 44 44 5F 44  // .^^^/.GFX0LCDD_D
   2363D: 43 53 0A 1F                                      // CS..

                        Return (Zero)
                    }

                    ^^^GFX0.DWBL ()

   23641: A4 00 5E 5E 5E 2E 47 46 58 30 44 57 42 4C        // ..^^^.GFX0DWBL

                    Store (One, ASBN) /* \_SB_.PCI0.LPCB.EC0_.ASBN */
                }


   2364F: 70 01 41 53 42 4E                                // p.ASBN

                If (^^^PEG0.PEGP.PRST)
                {

   23655: A0 4E 04 5E 5E 5E 2F 03 50 45 47 30 50 45 47 50  // .N.^^^/.PEG0PEGP
   23665: 50 52 53 54                                      // PRST

                    If (LNot (ASBN))
                    {

   23669: A0 3A 92 41 53 42 4E                             // .:.ASBN

                        If (
   23670: A0 1C 92                                         // ...

LNotEqual (^^^PEG0.PEGP.LCDD._DCS, 0x1F))
                        {

   23673: 93 5E 5E 5E 2F 04 50 45 47 30 50 45 47 50 4C 43  // .^^^/.PEG0PEGPLC
   23683: 44 44 5F 44 43 53 0A 1F                          // DD_DCS..

                            Return (Zero)
                        }

                        ^^^PEG0.PEGP.DWBL ()

   2368B: A4 00 5E 5E 5E 2F 03 50 45 47 30 50 45 47 50 44  // ..^^^/.PEG0PEGPD
   2369B: 57 42 4C                                         // WBL

                        Store (One, ASBN) /* \_SB_.PCI0.LPCB.EC0_.ASBN */
                    }
                }

                Store (Zero, ASBN) /* \_SB_.PCI0.LPCB.EC0_.ASBN */

   2369E: 70 01 41 53 42 4E 70 00 41 53 42 4E              // p.ASBNp.ASBN

                If (ATKP)
                {

   236AA: A0 3C 41 54 4B 50                                // .<ATKP

                    If (
   236B0: A0 0B                                            // ..


   236B2: 92                                               // .

LGreaterEqual (MSOS (), OSW8)){}

   236B3: 95 4D 53 4F 53 4F 53 57 38                       // .MSOSOSW8

                    Else
                    {

   236BC: A1 2A                                            // .*

                        If (LGreater (Local0, Zero))
                        {

   236BE: A0 06 94 60 00                                   // ...`.

                            Decrement (Local0)
                        }


   236C3: 76 60                                            // v`

                        If (LGreater (Local0, 0x0A))
                        {

   236C5: A0 09 94 60 0A 0A                                // ...`..

                            Store (0x0A, Local0)
                        }

                        Store (Local0, LBTN) /* \_SB_.LBTN */
                        ^^^^ATKD.IANE (
   236CB: 70 0A 0A 60 70 60 4C 42 54 4E 5E 5E 5E 5E 2E 41  // p..`p`LBTN^^^^.A
   236DB: 54 4B 44 49 41 4E 45                             // TKDIANE

Add (Local0, 0x20))
                    }
                }
            }

   236E2: 72 60 0A 20 00                                   // r`. .

            Else
            {

   236E7: A1 3D                                            // .=

                If (LGreater (LBTN, Zero))
                {

   236E9: A0 0C 94 4C 42 54 4E 00                          // ...LBTN.

                    Decrement (LBTN)
                }


   236F1: 76 4C 42 54 4E                                   // vLBTN

                If (LGreater (LBTN, 0x0A))
                {

   236F6: A0 0F 94 4C 42 54 4E 0A 0A                       // ...LBTN..

                    Store (0x0A, LBTN) /* \_SB_.LBTN */
                }

                STBR ()

   236FF: 70 0A 0A 4C 42 54 4E 53 54 42 52                 // p..LBTNSTBR

                If (ATKP)
                {
                    ^^^^ATKD.IANE (
   2370A: A0 1A 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   2371A: 41 4E 45                                         // ANE

Add (LBTN, 0x20))
                }
            }


   2371D: 72 4C 42 54 4E 0A 20 00                          // rLBTN. .

            Return (Zero)
        }


   23725: A4 00                                            // ..

        Method (_Q0F, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23727: 14 4B 12 5F 51 30 46 00                          // .K._Q0F.

            If (LLess (MSOS (), OSW8))
            {
                SBRN ()
            }


   2372F: A0 0E 95 4D 53 4F 53 4F 53 57 38 53 42 52 4E     // ...MSOSOSW8SBRN

            If (
   2373E: A0 4A 0D 92                                      // .J..

LGreaterEqual (MSOS (), OSVT))
            {
                Store (LBTN, Local0)

   23742: 95 4D 53 4F 53 4F 53 56 54 70 4C 42 54 4E 60     // .MSOSOSVTpLBTN`

                If (^^^GFX0.PRST)
                {

   23751: A0 38 5E 5E 5E 2E 47 46 58 30 50 52 53 54        // .8^^^.GFX0PRST

                    If (
   2375F: A0 18 92                                         // ...

LNotEqual (^^^GFX0.LCDD._DCS, 0x1F))
                    {

   23762: 93 5E 5E 5E 2F 03 47 46 58 30 4C 43 44 44 5F 44  // .^^^/.GFX0LCDD_D
   23772: 43 53 0A 1F                                      // CS..

                        Return (Zero)
                    }

                    ^^^GFX0.UPBL ()

   23776: A4 00 5E 5E 5E 2E 47 46 58 30 55 50 42 4C        // ..^^^.GFX0UPBL

                    Store (One, ASBN) /* \_SB_.PCI0.LPCB.EC0_.ASBN */
                }


   23784: 70 01 41 53 42 4E                                // p.ASBN

                If (^^^PEG0.PEGP.PRST)
                {

   2378A: A0 4E 04 5E 5E 5E 2F 03 50 45 47 30 50 45 47 50  // .N.^^^/.PEG0PEGP
   2379A: 50 52 53 54                                      // PRST

                    If (LNot (ASBN))
                    {

   2379E: A0 3A 92 41 53 42 4E                             // .:.ASBN

                        If (
   237A5: A0 1C 92                                         // ...

LNotEqual (^^^PEG0.PEGP.LCDD._DCS, 0x1F))
                        {

   237A8: 93 5E 5E 5E 2F 04 50 45 47 30 50 45 47 50 4C 43  // .^^^/.PEG0PEGPLC
   237B8: 44 44 5F 44 43 53 0A 1F                          // DD_DCS..

                            Return (Zero)
                        }

                        ^^^PEG0.PEGP.UPBL ()

   237C0: A4 00 5E 5E 5E 2F 03 50 45 47 30 50 45 47 50 55  // ..^^^/.PEG0PEGPU
   237D0: 50 42 4C                                         // PBL

                        Store (One, ASBN) /* \_SB_.PCI0.LPCB.EC0_.ASBN */
                    }
                }

                Store (Zero, ASBN) /* \_SB_.PCI0.LPCB.EC0_.ASBN */

   237D3: 70 01 41 53 42 4E 70 00 41 53 42 4E              // p.ASBNp.ASBN

                If (ATKP)
                {

   237DF: A0 39 41 54 4B 50                                // .9ATKP

                    If (
   237E5: A0 0B                                            // ..


   237E7: 92                                               // .

LGreaterEqual (MSOS (), OSW8)){}

   237E8: 95 4D 53 4F 53 4F 53 57 38                       // .MSOSOSW8

                    Else
                    {

   237F1: A1 27                                            // .'

                        If (LLess (Local0, 0x0A))
                        {

   237F3: A0 07 95 60 0A 0A                                // ...`..

                            Increment (Local0)
                        }

   237F9: 75 60                                            // u`

                        Else
                        {

   237FB: A1 05                                            // ..

                            Store (0x0A, Local0)
                        }

                        Store (Local0, LBTN) /* \_SB_.LBTN */
                        ^^^^ATKD.IANE (
   237FD: 70 0A 0A 60 70 60 4C 42 54 4E 5E 5E 5E 5E 2E 41  // p..`p`LBTN^^^^.A
   2380D: 54 4B 44 49 41 4E 45                             // TKDIANE

Add (Local0, 0x10))
                    }
                }
            }

   23814: 72 60 0A 10 00                                   // r`...

            Else
            {

   23819: A1 37                                            // .7

                If (LLess (LBTN, 0x0A))
                {

   2381B: A0 0D 95 4C 42 54 4E 0A 0A                       // ...LBTN..

                    Increment (LBTN)
                }

   23824: 75 4C 42 54 4E                                   // uLBTN

                Else
                {

   23829: A1 08                                            // ..

                    Store (0x0A, LBTN) /* \_SB_.LBTN */
                }

                STBR ()

   2382B: 70 0A 0A 4C 42 54 4E 53 54 42 52                 // p..LBTNSTBR

                If (ATKP)
                {
                    ^^^^ATKD.IANE (
   23836: A0 1A 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23846: 41 4E 45                                         // ANE

Add (LBTN, 0x10))
                }
            }


   23849: 72 4C 42 54 4E 0A 10 00                          // rLBTN...

            Return (Zero)
        }


   23851: A4 00                                            // ..

        Method (_Q10, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23853: 14 4D 05 5F 51 31 30 00                          // .M._Q10.

            If (LEqual (BLCT, Zero))
            {
                Store (One, Local0)
                Store (RPIN (0x72), Local0)
                XOr (Local0, One, Local0)
                SPIN (0x72, Local0)

   2385B: A0 36 93 42 4C 43 54 00 70 01 60 70 52 50 49 4E  // .6.BLCT.p.`pRPIN
   2386B: 0A 72 60 7F 60 01 60 53 50 49 4E 0A 72 60        // .r`.`.`SPIN.r`

                If (ATKP)
                {
                    Subtract (0x34, Local0, Local0)
                    ^^^^ATKD.IANE (Local0)
                }
            }

   23879: A0 18 41 54 4B 50 74 0A 34 60 60 5E 5E 5E 5E 2E  // ..ATKPt.4``^^^^.
   23889: 41 54 4B 44 49 41 4E 45 60                       // ATKDIANE`

            ElseIf
   23892: A1 1E                                            // ..

 (LEqual (BLCT, One))
            {

   23894: A0 1C 93 42 4C 43 54 01                          // ...BLCT.

                If (ATKP)
                {
                    ^^^^ATKD.IANE (0x35)
                }
            }
        }


   2389C: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   238AC: 41 4E 45 0A 35                                   // ANE.5

        Method (_Q11, 0, Serialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   238B1: 14 40 12 5F 51 31 31 08                          // .@._Q11.


   238B9: 08 5F 54 5F 30 00                                // ._T_0.

            If (
   238BF: A0 33 92                                         // .3.

LGreaterEqual (MSOS (), OSW8))
            {

   238C2: 95 4D 53 4F 53 4F 53 57 38                       // .MSOSOSW8

                If (LEqual (F8FG, Zero))
                {
                    Store (One, F8FG) /* \_SB_.PCI0.LPCB.EC0_.F8FG */
                    STB2 (0xE0)
                    STB2 (0x5B)
                }

                STB2 (0x19)
                STB2 (0x99)

   238CB: A0 19 93 46 38 46 47 00 70 01 46 38 46 47 53 54  // ...F8FG.p.F8FGST
   238DB: 42 32 0A E0 53 54 42 32 0A 5B 53 54 42 32 0A 19  // B2..STB2.[STB2..
   238EB: 53 54 42 32 0A 99                                // STB2..

                Return (Zero)
            }

            FHKW ()
            Store (ADVG (), Local0)

   238F1: A4 00 46 48 4B 57 70 41 44 56 47 60              // ..FHKWpADVG`

            If (NATK ())
            {

   238FD: A0 49 0C 4E 41 54 4B                             // .I.NATK

                If (LLess (Local0, 0x08))
                {

   23904: A0 0A 95 60 0A 08                                // ...`..

                    Add (Local0, 0x60, Local1)
                }

   2390A: 72 60 0A 60 61                                   // r`.`a

                ElseIf
   2390F: A1 45 09                                         // .E.

 (LLess (Local0, 0x10))
                {
                    Subtract (Local0, 0x08, Local1)

   23912: A0 0F 95 60 0A 10 74 60 0A 08 61                 // ...`..t`..a

                    Add (Local1, 0x8C, Local1)
                }

   2391D: 72 61 0A 8C 61                                   // ra..a

                ElseIf
   23922: A1 42 08                                         // .B.

 (LLess (Local0, 0x20))
                {
                    And (Local0, 0x07, Local1)

   23925: A0 0F 95 60 0A 20 7B 60 0A 07 61                 // ...`. {`..a

                    Add (Local1, 0xA0, Local1)
                }

   23930: 72 61 0A A0 61                                   // ra..a

                ElseIf
   23935: A1 4F 06                                         // .O.

 (LLess (Local0, 0x40))
                {

   23938: A0 4C 06 95 60 0A 40                             // .L..`.@

                    Switch (ToInteger (Local0))
                    {

   2393F: A2 45 06 01 70 99 60 00 5F 54 5F 30              // .E..p.`._T_0

                        Case (0x20)
                        {

   2394B: A0 0C 93 5F 54 5F 30 0A 20                       // ..._T_0. 

                            Store (0xD0, Local1)
                        }

   23954: 70 0A D0 61                                      // p..a

                        Case
   23958: A1 4B 04                                         // .K.

 (0x21)
                        {

   2395B: A0 0C 93 5F 54 5F 30 0A 21                       // ..._T_0.!

                            Store (0xD1, Local1)
                        }

   23964: 70 0A D1 61                                      // p..a

                        Case
   23968: A1 3B                                            // .;

 (0x22)
                        {

   2396A: A0 0C 93 5F 54 5F 30 0A 22                       // ..._T_0."

                            Store (0xD2, Local1)
                        }

   23973: 70 0A D2 61                                      // p..a

                        Case
   23977: A1 2C                                            // .,

 (0x24)
                        {

   23979: A0 0C 93 5F 54 5F 30 0A 24                       // ..._T_0.$

                            Store (0xD3, Local1)
                        }

   23982: 70 0A D3 61                                      // p..a

                        Case
   23986: A1 1D                                            // ..

 (0x28)
                        {

   23988: A0 0C 93 5F 54 5F 30 0A 28                       // ..._T_0.(

                            Store (0xD4, Local1)
                        }

   23991: 70 0A D4 61                                      // p..a

                        Case
   23995: A1 0E                                            // ..

 (0x30)
                        {

   23997: A0 0C 93 5F 54 5F 30 0A 30                       // ..._T_0.0

                            Store (0xD5, Local1)
                        }


   239A0: 70 0A D5 61                                      // p..a

                    }
                }


   239A4: A5                                               // .

                If (ATKP)
                {

   239A5: A0 1A 41 54 4B 50                                // ..ATKP

                    If (
   239AB: A0 14 92                                         // ...

LNotEqual (Local1, 0x60))
                    {
                        ^^^^ATKD.IANE (Local1)
                    }
                }

   239AE: 93 61 0A 60 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E  // .a.`^^^^.ATKDIAN
   239BE: 45 61                                            // Ea

                Else
                {
                    SWHG (Local0)
                }
            }

   239C0: A1 06 53 57 48 47 60                             // ..SWHG`

            Else
            {
                SWHG (Local0)
            }

            FHKS ()
        }


   239C7: A1 06 53 57 48 47 60 46 48 4B 53                 // ..SWHG`FHKS

        Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   239D2: 14 3C 5F 51 31 32 00                             // .<_Q12.

            If (LNot (
   239D9: A0 1E 92                                         // ...

And (DSYN, One)))
            {

   239DC: 7B 44 53 59 4E 01 00                             // {DSYN..

                If (ATKP)
                {
                    ^^^^ATKD.IANE (0x6B)
                }
            }

   239E3: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   239F3: 41 4E 45 0A 6B                                   // ANE.k

            ElseIf
   239F8: A1 16                                            // ..

 (ATKP)
            {
                ^^^^ATKD.IANE (0x6F)
            }
        }


   239FA: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23A0A: 41 4E 45 0A 6F                                   // ANE.o

        Method (_Q13, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23A0F: 14 44 04 5F 51 31 33 00                          // .D._Q13.

            If (
   23A17: A0 25 92                                         // .%.

LGreaterEqual (MSOS (), OSW8))
            {
                STB2 (0xE0)
                STB2 (0x20)
                STB2 (0xE0)
                STB2 (0xA0)

   23A1A: 95 4D 53 4F 53 4F 53 57 38 53 54 42 32 0A E0 53  // .MSOSOSW8STB2..S
   23A2A: 54 42 32 0A 20 53 54 42 32 0A E0 53 54 42 32 0A  // TB2. STB2..STB2.
   23A3A: A0                                               // .

                Return (Zero)
            }


   23A3B: A4 00                                            // ..

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x32)
            }


   23A3D: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23A4D: 41 4E 45 0A 32                                   // ANE.2

            Return (Zero)
        }


   23A52: A4 00                                            // ..

        Method (_Q14, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23A54: 14 42 05 5F 51 31 34 00                          // .B._Q14.

            If (
   23A5C: A0 25 92                                         // .%.

LGreaterEqual (MSOS (), OSW8))
            {
                STB2 (0xE0)
                STB2 (0x2E)
                STB2 (0xE0)
                STB2 (0xAE)

   23A5F: 95 4D 53 4F 53 4F 53 57 38 53 54 42 32 0A E0 53  // .MSOSOSW8STB2..S
   23A6F: 54 42 32 0A 2E 53 54 42 32 0A E0 53 54 42 32 0A  // TB2..STB2..STB2.
   23A7F: AE                                               // .

                Return (Zero)
            }


   23A80: A4 00                                            // ..

            If (LLess (AVOL, 0x0F))
            {

   23A82: A0 0D 95 41 56 4F 4C 0A 0F                       // ...AVOL..

                Increment (AVOL)
            }


   23A8B: 75 41 56 4F 4C                                   // uAVOL

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x31)
            }


   23A90: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23AA0: 41 4E 45 0A 31                                   // ANE.1

            Return (Zero)
        }


   23AA5: A4 00                                            // ..

        Method (_Q15, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23AA7: 14 41 05 5F 51 31 35 00                          // .A._Q15.

            If (
   23AAF: A0 25 92                                         // .%.

LGreaterEqual (MSOS (), OSW8))
            {
                STB2 (0xE0)
                STB2 (0x30)
                STB2 (0xE0)
                STB2 (0xB0)

   23AB2: 95 4D 53 4F 53 4F 53 57 38 53 54 42 32 0A E0 53  // .MSOSOSW8STB2..S
   23AC2: 54 42 32 0A 30 53 54 42 32 0A E0 53 54 42 32 0A  // TB2.0STB2..STB2.
   23AD2: B0                                               // .

                Return (Zero)
            }


   23AD3: A4 00                                            // ..

            If (LGreater (AVOL, Zero))
            {

   23AD5: A0 0C 94 41 56 4F 4C 00                          // ...AVOL.

                Decrement (AVOL)
            }


   23ADD: 76 41 56 4F 4C                                   // vAVOL

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x30)
            }


   23AE2: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23AF2: 41 4E 45 0A 30                                   // ANE.0

            Return (Zero)
        }


   23AF7: A4 00                                            // ..

        Method (_Q6F, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23AF9: 14 1B 5F 51 36 46 00                             // .._Q6F.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x45)
            }
        }


   23B00: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23B10: 41 4E 45 0A 45                                   // ANE.E

        Method (_Q6E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23B15: 14 1B 5F 51 36 45 00                             // .._Q6E.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x43)
            }
        }


   23B1C: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23B2C: 41 4E 45 0A 43                                   // ANE.C

        Method (_Q6C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23B31: 14 1B 5F 51 36 43 00                             // .._Q6C.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x40)
            }
        }


   23B38: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23B48: 41 4E 45 0A 40                                   // ANE.@

        Method (_Q6D, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23B4D: 14 1B 5F 51 36 44 00                             // .._Q6D.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x41)
            }
        }


   23B54: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23B64: 41 4E 45 0A 41                                   // ANE.A

        Method (_Q70, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
        }


   23B69: 14 06 5F 51 37 30 00                             // .._Q70.

        Method (_Q71, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23B70: 14 1B 5F 51 37 31 00                             // .._Q71.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x5C)
            }
        }


   23B77: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23B87: 41 4E 45 0A 5C                                   // ANE.\

        Method (_Q72, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23B8C: 14 1B 5F 51 37 32 00                             // .._Q72.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x8A)
            }
        }


   23B93: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23BA3: 41 4E 45 0A 8A                                   // ANE..

        Method (_Q74, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23BA8: 14 1B 5F 51 37 34 00                             // .._Q74.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x82)
            }
        }


   23BAF: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23BBF: 41 4E 45 0A 82                                   // ANE..

        Method (_Q76, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23BC4: 14 1B 5F 51 37 36 00                             // .._Q76.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x7A)
            }
        }


   23BCB: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23BDB: 41 4E 45 0A 7A                                   // ANE.z

        Method (_Q77, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23BE0: 14 1B 5F 51 37 37 00                             // .._Q77.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0xB5)
            }
        }


   23BE7: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23BF7: 41 4E 45 0A B5                                   // ANE..

        Method (_Q85, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23BFC: 14 1B 5F 51 38 35 00                             // .._Q85.

            If (ATKP)
            {
                ^^^^ATKD.IANE (0x5C)
            }
        }


   23C03: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23C13: 41 4E 45 0A 5C                                   // ANE.\

        Method (_Q84, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            Store (OHWR (), Local0)

   23C18: 14 4A 23 5F 51 38 34 00 70 4F 48 57 52 60        // .J#_Q84.pOHWR`

            If (And (Local0, 0x02))
            {

   23C26: A0 4C 22 7B 60 0A 02 00                          // .L"{`...

                If (And (^^^^ATKD.WAPF, 0x04))
                {

   23C2E: A0 3E 7B 5E 5E 5E 5E 2E 41 54 4B 44 57 41 50 46  // .>{^^^^.ATKDWAPF
   23C3E: 0A 04 00                                         // ...

                    If (ATKP)
                    {

   23C41: A0 2B 41 54 4B 50                                // .+ATKP

                        If (And (Local0, One))
                        {
                            ^^^^ATKD.IANE (0x80)
                        }

   23C47: A0 14 7B 60 01 00 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..{`..^^^^.ATKDI
   23C57: 41 4E 45 0A 80                                   // ANE..

                        Else
                        {
                            ^^^^ATKD.IANE (0x81)
                        }
                    }
                }

   23C5C: A1 10 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E 45 0A  // ..^^^^.ATKDIANE.
   23C6C: 81                                               // .

                ElseIf
   23C6D: A1 45 1E                                         // .E.

 (And (^^^^ATKD.WAPF, One))
                {

   23C70: A0 43 10 7B 5E 5E 5E 5E 2E 41 54 4B 44 57 41 50  // .C.{^^^^.ATKDWAP
   23C80: 46 01 00                                         // F..

                    If (And (Local0, One))
                    {

   23C83: A0 4C 09 7B 60 01 00                             // .L.{`..

                        If (WLDP)
                        {

   23C8A: A0 4F 04 57 4C 44 50                             // .O.WLDP

                            If (LEqual (And (^^^RP03.WLAN.VNUM, 0xFFFF), 0x8086))
                            {

   23C91: A0 20 93 7B 5E 5E 5E 2F 03 52 50 30 33 57 4C 41  // . .{^^^/.RP03WLA
   23CA1: 4E 56 4E 55 4D 0B FF FF 00 0B 86 80              // NVNUM.......

                                Sleep (0x09C4)
                            }


   23CAD: 5B 22 0B C4 09                                   // ["...

                            If (LEqual (WRPS, One))
                            {
                                ^^^^ATKD.IANE (0x5E)
                            }

   23CB2: A0 16 93 57 52 50 53 01 5E 5E 5E 5E 2E 41 54 4B  // ...WRPS.^^^^.ATK
   23CC2: 44 49 41 4E 45 0A 5E                             // DIANE.^

                            Else
                            {
                                ^^^^ATKD.IANE (0x5F)
                            }
                        }


   23CC9: A1 10 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E 45 0A  // ..^^^^.ATKDIANE.
   23CD9: 5F                                               // _

                        If (LAnd (WLDP, BTDP))
                        {

   23CDA: A0 0F 90 57 4C 44 50 42 54 44 50                 // ...WLDPBTDP

                            Sleep (0x0DAC)
                        }


   23CE5: 5B 22 0B AC 0D                                   // ["...

                        If (BTDP)
                        {

   23CEA: A0 35 42 54 44 50                                // .5BTDP

                            If (BRPS)
                            {
                                OBTD (One)
                                ^^^^ATKD.IANE (0x7D)
                            }

   23CF0: A0 19 42 52 50 53 4F 42 54 44 01 5E 5E 5E 5E 2E  // ..BRPSOBTD.^^^^.
   23D00: 41 54 4B 44 49 41 4E 45 0A 7D                    // ATKDIANE.}

                            Else
                            {
                                OBTD (Zero)
                                ^^^^ATKD.IANE (0x7E)
                            }
                        }
                    }

   23D0A: A1 15 4F 42 54 44 00 5E 5E 5E 5E 2E 41 54 4B 44  // ..OBTD.^^^^.ATKD
   23D1A: 49 41 4E 45 0A 7E                                // IANE.~

                    Else
                    {

   23D20: A1 43 05                                         // .C.

                        If (WLDP)
                        {
                            Store (WRST, WRPS) /* \_SB_.WRPS */
                            ^^^^ATKD.IANE (0x5F)
                        }


   23D23: A0 1D 57 4C 44 50 70 57 52 53 54 57 52 50 53 5E  // ..WLDPpWRSTWRPS^
   23D33: 5E 5E 5E 2E 41 54 4B 44 49 41 4E 45 0A 5F        // ^^^.ATKDIANE._

                        If (LAnd (WLDP, BTDP))
                        {

   23D41: A0 0F 90 57 4C 44 50 42 54 44 50                 // ...WLDPBTDP

                            Sleep (0x0DAC)
                        }


   23D4C: 5B 22 0B AC 0D                                   // ["...

                        If (BTDP)
                        {
                            Store (BRST, BRPS) /* \_SB_.BRPS */
                            OBTD (Zero)
                            ^^^^ATKD.IANE (0x7E)
                        }
                    }
                }

   23D51: A0 22 42 54 44 50 70 42 52 53 54 42 52 50 53 4F  // ."BTDPpBRSTBRPSO
   23D61: 42 54 44 00 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E  // BTD.^^^^.ATKDIAN
   23D71: 45 0A 7E                                         // E.~

                ElseIf
   23D74: A1 4E 0D                                         // .N.

 (And (Local0, One))
                {

   23D77: A0 42 08 7B 60 01 00                             // .B.{`..

                    If (WLDP)
                    {

   23D7E: A0 35 57 4C 44 50                                // .5WLDP

                        If (WRPS)
                        {
                            OWLD (One)
                            ^^^^ATKD.IANE (0x5E)
                        }

   23D84: A0 19 57 52 50 53 4F 57 4C 44 01 5E 5E 5E 5E 2E  // ..WRPSOWLD.^^^^.
   23D94: 41 54 4B 44 49 41 4E 45 0A 5E                    // ATKDIANE.^

                        Else
                        {
                            OWLD (Zero)
                            ^^^^ATKD.IANE (0x5F)
                        }
                    }


   23D9E: A1 15 4F 57 4C 44 00 5E 5E 5E 5E 2E 41 54 4B 44  // ..OWLD.^^^^.ATKD
   23DAE: 49 41 4E 45 0A 5F                                // IANE._

                    If (LAnd (WLDP, BTDP))
                    {

   23DB4: A0 0F 90 57 4C 44 50 42 54 44 50                 // ...WLDPBTDP

                        Sleep (0x0DAC)
                    }


   23DBF: 5B 22 0B AC 0D                                   // ["...

                    If (BTDP)
                    {

   23DC4: A0 35 42 54 44 50                                // .5BTDP

                        If (BRPS)
                        {
                            OBTD (One)
                            ^^^^ATKD.IANE (0x7D)
                        }

   23DCA: A0 19 42 52 50 53 4F 42 54 44 01 5E 5E 5E 5E 2E  // ..BRPSOBTD.^^^^.
   23DDA: 41 54 4B 44 49 41 4E 45 0A 7D                    // ATKDIANE.}

                        Else
                        {
                            OBTD (Zero)
                            ^^^^ATKD.IANE (0x7E)
                        }
                    }
                }

   23DE4: A1 15 4F 42 54 44 00 5E 5E 5E 5E 2E 41 54 4B 44  // ..OBTD.^^^^.ATKD
   23DF4: 49 41 4E 45 0A 7E                                // IANE.~

                Else
                {

   23DFA: A1 48 05                                         // .H.

                    If (WLDP)
                    {
                        Store (WRST, WRPS) /* \_SB_.WRPS */
                        OWLD (Zero)
                        ^^^^ATKD.IANE (0x5F)
                    }


   23DFD: A0 22 57 4C 44 50 70 57 52 53 54 57 52 50 53 4F  // ."WLDPpWRSTWRPSO
   23E0D: 57 4C 44 00 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E  // WLD.^^^^.ATKDIAN
   23E1D: 45 0A 5F                                         // E._

                    If (LAnd (WLDP, BTDP))
                    {

   23E20: A0 0F 90 57 4C 44 50 42 54 44 50                 // ...WLDPBTDP

                        Sleep (0x0DAC)
                    }


   23E2B: 5B 22 0B AC 0D                                   // ["...

                    If (BTDP)
                    {
                        Store (BRST, BRPS) /* \_SB_.BRPS */
                        OBTD (Zero)
                        ^^^^ATKD.IANE (0x7E)
                    }
                }
            }
        }


   23E30: A0 22 42 54 44 50 70 42 52 53 54 42 52 50 53 4F  // ."BTDPpBRSTBRPSO
   23E40: 42 54 44 00 5E 5E 5E 5E 2E 41 54 4B 44 49 41 4E  // BTD.^^^^.ATKDIAN
   23E50: 45 0A 7E                                         // E.~

        Method (_QB0, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23E53: 14 13 5F 51 42 30 00                             // .._QB0.

            Notify (\_TZ.THRM, 0x80) // Thermal Status Change
        }


   23E5A: 86 5C 2E 5F 54 5A 5F 54 48 52 4D 0A 80           // .\._TZ_THRM..

        Method (_QA0, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23E67: 14 45 07 5F 51 41 30 00                          // .E._QA0.

            If (ACPS ())
            {
                Store (One, ACPF) /* \_SB_.ACPF */
                Store (0x58, Local0)

   23E6F: A0 24 41 43 50 53 70 01 41 43 50 46 70 0A 58 60  // .$ACPSp.ACPFp.X`

                If (ATKP)
                {
                    ^^^^ATKD.IANE (0xCF)
                }
            }

   23E7F: A0 14 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23E8F: 41 4E 45 0A CF                                   // ANE..

            Else
            {
                Store (Zero, ACPF) /* \_SB_.ACPF */

   23E94: A1 0B 70 00 41 43 50 46                          // ..p.ACPF

                Store (0x57, Local0)
            }


   23E9C: 70 0A 57 60                                      // p.W`

            If (
   23EA0: A0 0F 92                                         // ...

LNotEqual (MSOS (), OSVT))
            {
                STBR ()
            }

            Notify (AC0, 0x80) // Status Change

   23EA3: 93 4D 53 4F 53 4F 53 56 54 53 54 42 52 86 41 43  // .MSOSOSVTSTBR.AC
   23EB3: 30 5F 0A 80                                      // 0_..

            If (ATKP)
            {
                ^^^^ATKD.IANE (Local0)
            }

            Sleep (0x64)
            PNOT ()
            Sleep (0x0A)
            NBAT (0x80)
        }


   23EB7: A0 13 41 54 4B 50 5E 5E 5E 5E 2E 41 54 4B 44 49  // ..ATKP^^^^.ATKDI
   23EC7: 41 4E 45 60 5B 22 0A 64 50 4E 4F 54 5B 22 0A 0A  // ANE`[".dPNOT["..
   23ED7: 4E 42 41 54 0A 80                                // NBAT..

        Method (_Q20, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23EDD: 14 24 5F 51 32 30 00                             // .$_Q20.

            If (CDFG)
            {
                Store (One, SMBF) /* \_SB_.PCI0.LPCB.EC0_.SMBF */

   23EE4: A0 11 43 44 46 47 70 01 53 4D 42 46              // ..CDFGp.SMBF

                Store (Zero, CDFG) /* \_SB_.PCI0.LPCB.EC0_.CDFG */
            }


   23EF0: 70 00 43 44 46 47                                // p.CDFG

            If (ALFG)
            {

   23EF6: A0 0B 41 4C 46 47                                // ..ALFG

                Store (Zero, ALFG) /* \_SB_.PCI0.LPCB.EC0_.ALFG */
            }
        }


   23EFC: 70 00 41 4C 46 47                                // p.ALFG

        Method (_QB3, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ^^^^ATKD.IANE (0x6D)
        }


   23F02: 14 15 5F 51 42 33 00 5E 5E 5E 5E 2E 41 54 4B 44  // .._QB3.^^^^.ATKD
   23F12: 49 41 4E 45 0A 6D                                // IANE.m

        Method (ECRS, 2, Serialized)
        {

   23F18: 14 4E 04 45 43 52 53 0A                          // .N.ECRS.

            If (ECAV ())
            {
                Acquire (MUEC, 0xFFFF)
                Store (Arg0, ADD2) /* \_SB_.PCI0.LPCB.EC0_.ADD2 */
                Store (Arg1, CMD2) /* \_SB_.PCI0.LPCB.EC0_.CMD2 */
                Store (0x07, PRT2) /* \_SB_.PCI0.LPCB.EC0_.PRT2 */
                Store (0x7F, Local0)

   23F20: A0 44 04 45 43 41 56 5B 23 4D 55 45 43 FF FF 70  // .D.ECAV[#MUEC..p
   23F30: 68 41 44 44 32 70 69 43 4D 44 32 70 0A 07 50 52  // hADD2piCMD2p..PR
   23F40: 54 32 70 0A 7F 60                                // T2p..`

                While (PRT2)
                {
                    Sleep (One)

   23F46: A2 0A 50 52 54 32 5B 22 01                       // ..PRT2[".

                    Decrement (Local0)
                }


   23F4F: 76 60                                            // v`

                If (Local0)
                {

   23F51: A0 08 60                                         // ..`

                    Store (DA20, Local0)
                }

   23F54: 70 44 41 32 30 60                                // pDA20`

                Else
                {

   23F5A: A1 04                                            // ..

                    Store (Ones, Local0)
                }


   23F5C: 70 FF 60                                         // p.`

                Release (MUEC)
            }


   23F5F: 5B 27 4D 55 45 43                                // ['MUEC

            Return (Local0)
        }


   23F65: A4 60                                            // .`

        Method (ECWS, 3, Serialized)
        {

   23F67: 14 46 04 45 43 57 53 0B                          // .F.ECWS.

            If (ECAV ())
            {
                Acquire (MUEC, 0xFFFF)
                Store (Arg0, ADD2) /* \_SB_.PCI0.LPCB.EC0_.ADD2 */
                Store (Arg1, CMD2) /* \_SB_.PCI0.LPCB.EC0_.CMD2 */
                Store (Arg2, DA20) /* \_SB_.PCI0.LPCB.EC0_.DA20 */
                Store (0x06, PRT2) /* \_SB_.PCI0.LPCB.EC0_.PRT2 */
                Store (0x07FF, Local0)

   23F6F: A0 3C 45 43 41 56 5B 23 4D 55 45 43 FF FF 70 68  // .<ECAV[#MUEC..ph
   23F7F: 41 44 44 32 70 69 43 4D 44 32 70 6A 44 41 32 30  // ADD2piCMD2pjDA20
   23F8F: 70 0A 06 50 52 54 32 70 0B FF 07 60              // p..PRT2p...`

                While (PRT2)
                {
                    Sleep (One)

   23F9B: A2 0A 50 52 54 32 5B 22 01                       // ..PRT2[".

                    Decrement (Local0)
                }


   23FA4: 76 60                                            // v`

                Release (MUEC)
            }


   23FA6: 5B 27 4D 55 45 43                                // ['MUEC

            Return (Local0)
        }


   23FAC: A4 60                                            // .`

        Method (_QAC, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            Store (ST8E (0x28, Zero), Local0)

   23FAE: 14 1E 5F 51 41 43 00 70 53 54 38 45 0A 28 00 60  // .._QAC.pST8E.(.`

            If (LEqual (And (Local0, One), One))
            {

   23FBE: A0 0E 93 7B 60 01 00 01                          // ...{`...

                Notify (BAT0, 0x80) // Status Change
            }
        }


   23FC6: 86 42 41 54 30 0A 80                             // .BAT0..

        Method (_QD3, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
        }


   23FCD: 14 06 5F 51 44 33 00                             // .._QD3.

        Method (_QD4, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   23FD4: 14 20 5F 51 44 34 00                             // . _QD4.

            If (LEqual (F8FG, One))
            {
                Store (Zero, F8FG) /* \_SB_.PCI0.LPCB.EC0_.F8FG */
                STB2 (0xE0)
                STB2 (0xDB)
            }
        }


   23FDB: A0 19 93 46 38 46 47 01 70 00 46 38 46 47 53 54  // ...F8FG.p.F8FGST
   23FEB: 42 32 0A E0 53 54 42 32 0A DB                    // B2..STB2..

        Method (_QDB, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ^^^^ATKD.IANE (0x6D)
        }


   23FF5: 14 15 5F 51 44 42 00 5E 5E 5E 5E 2E 41 54 4B 44  // .._QDB.^^^^.ATKD
   24005: 49 41 4E 45 0A 6D                                // IANE.m

        Method (_QDC, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ^^^^ATKD.IANE (0x6D)
        }


   2400B: 14 15 5F 51 44 43 00 5E 5E 5E 5E 2E 41 54 4B 44  // .._QDC.^^^^.ATKD
   2401B: 49 41 4E 45 0A 6D                                // IANE.m

        Name (CNTR, Zero)

   24021: 08 43 4E 54 52 00                                // .CNTR.

        Method (_QA8, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   24027: 14 15 5F 51 41 38 00                             // .._QA8.

            Notify (^^^PEG0.PEGP, 0xD4) // Hardware-Specific
        }


   2402E: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A D4     // .^^^.PEG0PEGP..

        Method (_QA9, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   2403D: 14 15 5F 51 41 39 00                             // .._QA9.

            Notify (^^^PEG0.PEGP, 0xD1) // Hardware-Specific
        }
    }


   24044: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A D1     // .^^^.PEG0PEGP..

    Scope (_SB.PCI0.LPCB)
    {

   24053: 10 44 08 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .D./._SB_PCI0LPC
   24063: 42                                               // B

        Device (PS2K)
        {

   24064: 5B 82 42 07 50 53 32 4B                          // [.B.PS2K

            Name (_HID, EisaId ("ATK3001"))  // _HID: Hardware ID

   2406C: 08 5F 48 49 44 0C 06 8B 30 01                    // ._HID...0.

            Name (_CID, EisaId ("PNP030B"))  // _CID: Compatible ID

   24076: 08 5F 43 49 44 0C 41 D0 03 0B                    // ._CID.A...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

   24080: 14 18 5F 53 54 41 00                             // .._STA.

                If (And (IOST, 0x0400))
                {

   24087: A0 0D 7B 49 4F 53 54 0B 00 04 00                 // ..{IOST....

                    Return (0x0F)
                }

   24092: A4 0A 0F                                         // ...

                Else
                {

   24095: A1 03                                            // ..

                    Return (Zero)
                }
            }


   24097: A4 00                                            // ..

            Name (_CRS, 
   24099: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0060,             // Range Minimum
                    0x0060,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0064,             // Range Minimum
                    0x0064,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
                IRQNoFlags ()
                    {1}
            })

   2409E: 11 18 0A 15 47 01 60 00 60 00 00 01 47 01 64 00  // ....G.`.`...G.d.
   240AE: 64 00 00 01 22 02 00 79 00                       // d..."..y.

            Name (_PRS, 
   240B7: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                StartDependentFn (0x00, 0x00)
                {
                    IO (Decode16,
                        0x0060,             // Range Minimum
                        0x0060,             // Range Maximum
                        0x00,               // Alignment
                        0x01,               // Length
                        )
                    IO (Decode16,
                        0x0064,             // Range Minimum
                        0x0064,             // Range Maximum
                        0x00,               // Alignment
                        0x01,               // Length
                        )
                    IRQNoFlags ()
                        {1}
                }
                EndDependentFn ()
            })
        }
    }


   240BC: 11 1B 0A 18 31 00 47 01 60 00 60 00 00 01 47 01  // ....1.G.`.`...G.
   240CC: 64 00 64 00 00 01 22 02 00 38 79 00              // d.d..."..8y.

    Scope (_SB.PCI0.I2C1)
    {

   240D8: 10 49 13 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .I./._SB_PCI0I2C
   240E8: 31                                               // 1

        Device (ETPD)
        {

   240E9: 5B 82 47 12 45 54 50 44                          // [.G.ETPD

            Name (SBFB, 
   240F1: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
            {
                I2cSerialBusV2 (0x004C, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                    0x00, ResourceConsumer, _Y34, Exclusive,
                    )
            })

   240F6: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
   24106: 80 1A 06 00 4C 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....L.\_SB.PCI0.
   24116: 49 32 43 31 00 79 00                             // I2C1.y.

            Name (SBFI, 
   2411D: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x0000005F,
                }
            })

   24122: 11 0E 0A 0B 89 06 00 01 01 5F 00 00 00 79 00     // ........._...y.

            CreateWordField (SBFB, \_SB.PCI0.I2C1.ETPD._Y34._ADR, BADR)  // _ADR: Address

   24131: 8B 53 42 46 42 0A 10 42 41 44 52                 // .SBFB..BADR

            Name (_ADR, One)  // _ADR: Address

   2413C: 08 5F 41 44 52 01                                // ._ADR.

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

   24142: 14 29 5F 48 49 44 00                             // .)_HID.

                If (ELAN)
                {
                    Store (0x15, BADR) /* \_SB_.PCI0.I2C1.ETPD.BADR */

   24149: A0 17 45 4C 41 4E 70 0A 15 42 41 44 52           // ..ELANp..BADR

                    Return ("ELAN1000")
                }


   24156: A4 0D 45 4C 41 4E 31 30 30 30 00                 // ..ELAN1000.

                Return ("ELAN1000")
            }


   24161: A4 0D 45 4C 41 4E 31 30 30 30 00                 // ..ELAN1000.

            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID

   2416C: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

            Name (_UID, One)  // _UID: Unique ID

   2417A: 08 5F 55 49 44 01                                // ._UID.

            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State

   24180: 08 5F 53 30 57 0A 03                             // ._S0W..

            Method (_S3W, 0, NotSerialized)  // _S3W: S3 Device Wake State
            {

   24187: 14 15 5F 53 33 57 00                             // .._S3W.

                If (LEqual (S0ID, Zero))
                {

   2418E: A0 0A 93 53 30 49 44 00                          // ...S0ID.

                    Return (0x03)
                }

   24196: A4 0A 03                                         // ...

                Else
                {

   24199: A1 03                                            // ..

                    Return (Zero)
                }
            }


   2419B: A4 00                                            // ..

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {

   2419D: 14 43 04 5F 44 53 4D 04                          // .C._DSM.

                If (LEqual (Arg0, 
   241A5: A0 34 93 68                                      // .4.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {

   241A9: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
   241B9: 3D 89 38 DE                                      // =.8.

                    If (LEqual (Arg2, Zero))
                    {

   241BD: A0 15 93 6A 00                                   // ...j.

                        If (LEqual (Arg1, One))
                        {

   241C2: A0 09 93 69 01                                   // ...i.

                            Return (
   241C7: A4                                               // .

Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }

   241C8: 11 03 01 03                                      // ....

                        Else
                        {

   241CC: A1 06                                            // ..

                            Return (
   241CE: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }


   241CF: 11 03 01 00                                      // ....

                    If (LEqual (Arg2, One))
                    {

   241D3: A0 06 93 6A 01                                   // ...j.

                        Return (One)
                    }
                }

   241D8: A4 01                                            // ..

                Else
                {

   241DA: A1 06                                            // ..

                    Return (
   241DC: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }


   241DD: 11 03 01 00                                      // ....

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

   241E1: 14 1E 5F 53 54 41 00                             // .._STA.

                If (LEqual (TPIF, Zero))
                {

   241E8: A0 09 93 54 50 49 46 00                          // ...TPIF.

                    Return (Zero)
                }


   241F0: A4 00                                            // ..

                If (And (DSYN, One))
                {

   241F2: A0 0A 7B 44 53 59 4E 01 00                       // ..{DSYN..

                    Return (Zero)
                }


   241FB: A4 00                                            // ..

                Return (0x0F)
            }


   241FD: A4 0A 0F                                         // ...

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

   24200: 14 11 5F 43 52 53 00                             // .._CRS.

                Return (
   24207: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }
        }
    }


   24208: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

    Scope (_SB)
    {

   24212: 10 40 06 5F 53 42 5F                             // .@._SB_

        Device (LID)
        {

   24219: 5B 82 48 05 4C 49 44 5F                          // [.H.LID_

            Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID

   24221: 08 5F 48 49 44 0C 41 D0 0C 0D                    // ._HID.A...

            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                Store (One, Local0)
                Store (^^PCI0.LPCB.EC0.RPIN (0x11), Local0)

   2422B: 14 47 04 5F 4C 49 44 00 70 01 60 70 5E 5E 2F 04  // .G._LID.p.`p^^/.
   2423B: 50 43 49 30 4C 50 43 42 45 43 30 5F 52 50 49 4E  // PCI0LPCBEC0_RPIN
   2424B: 0A 11 60                                         // ..`

                If (LEqual (Local0, Ones))
                {

   2424E: A0 07 93 60 FF                                   // ...`.

                    Store (One, Local0)
                }


   24253: 70 01 60                                         // p.`

                If (And (VGAF, One))
                {

   24256: A0 1A 7B 56 47 41 46 01 00                       // ..{VGAF..

                    Store (One, ^^PCI0.GFX0.CLID) /* External reference */
                }


   2425F: 70 01 5E 5E 2F 03 50 43 49 30 47 46 58 30 43 4C  // p.^^/.PCI0GFX0CL
   2426F: 49 44                                            // ID

                Return (Local0)
            }
        }
    }


   24271: A4 60                                            // .`

    Scope (_GPE)
    {
    }


   24273: 10 05 5F 47 50 45                                // .._GPE

    Scope (_SB.PCI0.LPCB.EC0)
    {

   24279: 10 4D 08 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43  // .M./._SB_PCI0LPC
   24289: 42 45 43 30 5F                                   // BEC0_

        Name (KLDT, Zero)

   2428E: 08 4B 4C 44 54 00                                // .KLDT.

        Method (_Q80, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {

   24294: 14 42 07 5F 51 38 30 00                          // .B._Q80.

            If (GLID ())
            {
                WRAM (0x04B1, KLDT)
            }

   2429C: A0 10 47 4C 49 44 57 52 41 4D 0B B1 04 4B 4C 44  // ..GLIDWRAM...KLD
   242AC: 54                                               // T

            Else
            {
                Store (RRAM (0x04B1), KLDT) /* \_SB_.PCI0.LPCB.EC0_.KLDT */
                WRAM (0x04B1, Zero)
            }

            Notify (LID, 0x80) // Status Change

   242AD: A1 15 70 52 52 41 4D 0B B1 04 4B 4C 44 54 57 52  // ..pRRAM...KLDTWR
   242BD: 41 4D 0B B1 04 00 86 4C 49 44 5F 0A 80           // AM.....LID_..

            If (And (VGAF, One))
            {
                Store (GLID (), Local0)
                Store (Local0, LIDS ())

   242CA: A0 3C 7B 56 47 41 46 01 00 70 47 4C 49 44 60 70  // .<{VGAF..pGLID`p
   242DA: 60 4C 49 44 53                                   // `LIDS

                If (CondRefOf (\_SB.PCI0.GFX0.GLID))
                {
                    ^^^GFX0.GLID (LIDS ())
                }
            }
        }
    }


   242DF: A0 27 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 47  // .'[.\/._SB_PCI0G
   242EF: 46 58 30 47 4C 49 44 00 5E 5E 5E 2E 47 46 58 30  // FX0GLID.^^^.GFX0
   242FF: 47 4C 49 44 4C 49 44 53                          // GLIDLIDS

    Scope (_SB)
    {

   24307: 10 25 5F 53 42 5F                                // .%_SB_

        Device (SLPB)
        {

   2430D: 5B 82 1E 53 4C 50 42                             // [..SLPB

            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID

   24314: 08 5F 48 49 44 0C 41 D0 0C 0E                    // ._HID.A...

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   2431E: 14 0E 5F 50 52 57 00                             // .._PRW.

                Return (
   24325: A4                                               // .

Package (0x02)
                {
                    0x0B, 
                    0x04
                })
            }
        }
    }


   24326: 12 06 02 0A 0B 0A 04                             // .......

    Scope (_SB.ATKD)
    {

   2432D: 10 4E 1B 2E 5F 53 42 5F 41 54 4B 44              // .N.._SB_ATKD

        Method (FSMI, 1, NotSerialized)
        {
            Store (Arg0, FSFN) /* \_SB_.FSFN */
            Or (Arg0, 0xA0, Local0)
            ISMI (0x90)

   24339: 14 1C 46 53 4D 49 01 70 68 46 53 46 4E 7D 68 0A  // ..FSMI.phFSFN}h.
   24349: A0 60 49 53 4D 49 0A 90                          // .`ISMI..

            Return (FSTA) /* \_SB_.FSTA */
        }


   24351: A4 46 53 54 41                                   // .FSTA

        Method (FLSH, 1, NotSerialized)
        {
            Store (Arg0, FSTA) /* \_SB_.FSTA */
            FSMI (Zero)
        }


   24356: 14 11 46 4C 53 48 01 70 68 46 53 54 41 46 53 4D  // ..FLSH.phFSTAFSM
   24366: 49 00                                            // I.

        Method (FINI, 1, NotSerialized)
        {
            Store (Arg0, FADR) /* \_SB_.FADR */

   24368: 14 12 46 49 4E 49 01 70 68 46 41 44 52           // ..FINI.phFADR

            Return (FSMI (One))
        }


   24375: A4 46 53 4D 49 01                                // .FSMI.

        Method (FERS, 1, NotSerialized)
        {
            Store (Arg0, FSTA) /* \_SB_.FSTA */

   2437B: 14 13 46 45 52 53 01 70 68 46 53 54 41           // ..FERS.phFSTA

            Return (FSMI (0x02))
        }


   24388: A4 46 53 4D 49 0A 02                             // .FSMI..

        Method (FWRI, 1, NotSerialized)
        {
            Store (Arg0, FADR) /* \_SB_.FADR */
            Store (0x1000, FSIZ) /* \_SB_.FSIZ */

   2438F: 14 20 46 57 52 49 01 70 68 46 41 44 52 70 0B 00  // . FWRI.phFADRp..
   2439F: 10 46 53 49 5A                                   // .FSIZ

            Return (
   243A4: A4                                               // .

Subtract (0x1000, FSMI (0x03)))
        }


   243A5: 74 0B 00 10 46 53 4D 49 0A 03 00                 // t...FSMI...

        Method (FCPW, 1, NotSerialized)
        {
            Store (Arg0, FADR) /* \_SB_.FADR */
            Store (0x1000, FSIZ) /* \_SB_.FSIZ */

   243B0: 14 1B 46 43 50 57 01 70 68 46 41 44 52 70 0B 00  // ..FCPW.phFADRp..
   243C0: 10 46 53 49 5A                                   // .FSIZ

            Return (FSMI (0x0D))
        }


   243C5: A4 46 53 4D 49 0A 0D                             // .FSMI..

        Method (FCPP, 0, NotSerialized)
        {
            Store (Zero, FSIZ) /* \_SB_.FSIZ */

   243CC: 14 13 46 43 50 50 00 70 00 46 53 49 5A           // ..FCPP.p.FSIZ

            Return (FSMI (0x0D))
        }


   243D9: A4 46 53 4D 49 0A 0D                             // .FSMI..

        Method (FWRP, 0, NotSerialized)
        {
            Store (Zero, FSIZ) /* \_SB_.FSIZ */

   243E0: 14 18 46 57 52 50 00 70 00 46 53 49 5A           // ..FWRP.p.FSIZ

            Return (
   243ED: A4                                               // .

Subtract (0x1000, FSMI (0x03)))
        }


   243EE: 74 0B 00 10 46 53 4D 49 0A 03 00                 // t...FSMI...

        Method (FEBW, 1, NotSerialized)
        {
            Store (Arg0, FADR) /* \_SB_.FADR */

   243F9: 14 13 46 45 42 57 01 70 68 46 41 44 52           // ..FEBW.phFADR

            Return (FSMI (0x04))
        }


   24406: A4 46 53 4D 49 0A 04                             // .FSMI..

        Method (FEBR, 1, NotSerialized)
        {
            Store (Arg0, FADR) /* \_SB_.FADR */

   2440D: 14 13 46 45 42 52 01 70 68 46 41 44 52           // ..FEBR.phFADR

            Return (FSMI (0x05))
        }


   2441A: A4 46 53 4D 49 0A 05                             // .FSMI..

        Method (FEDW, 0, NotSerialized)
        {

   24421: 14 0D 46 45 44 57 00                             // ..FEDW.

            Return (FSMI (0x06))
        }


   24428: A4 46 53 4D 49 0A 06                             // .FSMI..

        Method (ECSR, 1, NotSerialized)
        {
            Store (Arg0, FSTA) /* \_SB_.FSTA */

   2442F: 14 13 45 43 53 52 01 70 68 46 53 54 41           // ..ECSR.phFSTA

            Return (FSMI (0x07))
        }


   2443C: A4 46 53 4D 49 0A 07                             // .FSMI..

        Method (FLSC, 1, NotSerialized)
        {
            Store (Arg0, FSTA) /* \_SB_.FSTA */

   24443: 14 13 46 4C 53 43 01 70 68 46 53 54 41           // ..FLSC.phFSTA

            Return (FSMI (0x08))
        }


   24450: A4 46 53 4D 49 0A 08                             // .FSMI..

        Method (FIME, 1, NotSerialized)
        {
            Store (Arg0, FSTA) /* \_SB_.FSTA */

   24457: 14 4A 05 46 49 4D 45 01 70 68 46 53 54 41        // .J.FIME.phFSTA

            If (Or (LEqual (Arg0, 0x04), LEqual (Arg0, 0x05)))
            {
                FSMI (0x09)

   24465: A0 2B 7D 93 68 0A 04 93 68 0A 05 00 46 53 4D 49  // .+}.h...h...FSMI
   24475: 0A 09                                            // ..

                If (LEqual (Arg0, 0x04))
                {

   24477: A0 0E 93 68 0A 04                                // ...h..

                    Store (FADR, ULCK) /* \_SB_.ATKD.ULCK */
                }

                Store (Zero, FSTA) /* \_SB_.FSTA */

   2447D: 70 46 41 44 52 55 4C 43 4B 70 00 46 53 54 41     // pFADRULCKp.FSTA

                Return (FSTA) /* \_SB_.FSTA */
            }


   2448C: A4 46 53 54 41                                   // .FSTA

            If (LEqual (Arg0, 0x8000))
            {
                Store (0x1000, FSIZ) /* \_SB_.FSIZ */
                FSMI (0x09)

   24491: A0 19 93 68 0B 00 80 70 0B 00 10 46 53 49 5A 46  // ...h...p...FSIZF
   244A1: 53 4D 49 0A 09                                   // SMI..

                Return (FSTA) /* \_SB_.FSTA */
            }


   244A6: A4 46 53 54 41                                   // .FSTA

            Return (FSMI (0x09))
        }


   244AB: A4 46 53 4D 49 0A 09                             // .FSMI..

        Method (FREC, 1, NotSerialized)
        {

   244B2: 14 33 46 52 45 43 01                             // .3FREC.

            If (LEqual (Arg0, 0x8000))
            {
                Store (Arg0, FSTA) /* \_SB_.FSTA */
                FSMI (0x0A)
                Store (0x1000, FSIZ) /* \_SB_.FSIZ */

   244B9: A0 1F 93 68 0B 00 80 70 68 46 53 54 41 46 53 4D  // ...h...phFSTAFSM
   244C9: 49 0A 0A 70 0B 00 10 46 53 49 5A                 // I..p...FSIZ

                Return (FSTA) /* \_SB_.FSTA */
            }

            Store (Arg0, FSTA) /* \_SB_.FSTA */

   244D4: A4 46 53 54 41 70 68 46 53 54 41                 // .FSTAphFSTA

            Return (FSMI (0x0A))
        }


   244DF: A4 46 53 4D 49 0A 0A                             // .FSMI..

        Name (ULCK, Zero)
    }


   244E6: 08 55 4C 43 4B 00                                // .ULCK.

    Scope (\)
    {

   244EC: 10 46 08 5C 00                                   // .F.\.

        Method (RGPL, 1, Serialized)
        {
            Store (\_SB.GGIV (Arg0), Local0)

   244F1: 14 15 52 47 50 4C 09 70 5C 2E 5F 53 42 5F 47 47  // ..RGPL.p\._SB_GG
   24501: 49 56 68 60                                      // IVh`

            Return (Local0)
        }


   24505: A4 60                                            // .`

        Method (SGPL, 2, Serialized)
        {
            \_SB.SGOV (Arg0, Arg1)
        }


   24507: 14 12 53 47 50 4C 0A 5C 2E 5F 53 42 5F 53 47 4F  // ..SGPL.\._SB_SGO
   24517: 56 68 69                                         // Vhi

        Name (PMEW, Zero)

   2451A: 08 50 4D 45 57 00                                // .PMEW.

        Method (SBRS, 1, NotSerialized)
        {
        }


   24520: 14 06 53 42 52 53 01                             // ..SBRS.

        Method (SBRW, 1, NotSerialized)
        {

   24527: 14 0F 53 42 52 57 01                             // ..SBRW.

            Store (SBPS, PMEW) /* \PMEW */
        }


   2452E: 70 53 42 50 53 50 4D 45 57                       // pSBPSPMEW

        Method (STRP, 1, NotSerialized)
        {

   24537: 14 23 53 54 52 50 01                             // .#STRP.

            If (Arg0)
            {
                Store (One, SLPS) /* \SLPS */

   2453E: A0 0E 68 70 01 53 4C 50 53                       // ..hp.SLPS

                Store (One, SLPE) /* \SLPE */
            }

   24547: 70 01 53 4C 50 45                                // p.SLPE

            Else
            {
                Store (Zero, SLPE) /* \SLPE */

   2454D: A1 0D 70 00 53 4C 50 45                          // ..p.SLPE

                Store (One, SLPS) /* \SLPS */
            }
        }


   24555: 70 01 53 4C 50 53                                // p.SLPS

        Method (HKTH, 0, Serialized)
        {

   2455B: 14 17 48 4B 54 48 08                             // ..HKTH.

            If (THLS)
            {

   24562: A0 0A 54 48 4C 53                                // ..THLS

                Return (TTDT) /* \TTDT */
            }

   24568: A4 54 54 44 54                                   // .TTDT

            Else
            {

   2456D: A1 05                                            // ..

                Return (0xFFFF)
            }
        }
    }


   2456F: A4 0B FF FF                                      // ....

    Scope (_SB.PCI0.LPCB)
    {

   24573: 10 4E 06 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .N./._SB_PCI0LPC
   24583: 42                                               // B

        OperationRegion (RX40, PCI_Config, 0x40, 0x10)

   24584: 5B 80 52 58 34 30 02 0A 40 0A 10                 // [.RX40..@..

        Field (RX40, ByteAcc, NoLock, Preserve)
        {
            Offset (0x0C), 
            GPLK,   1
        }


   2458F: 5B 81 0E 52 58 34 30 01 00 40 06 47 50 4C 4B 01  // [..RX40..@.GPLK.

        OperationRegion (RXA0, PCI_Config, 0xA0, 0x20)

   2459F: 5B 80 52 58 41 30 02 0A A0 0A 20                 // [.RXA0.... 

        Field (RXA0, ByteAcc, NoLock, Preserve)
        {
                ,   9, 
            PBLV,   1, 
            BCPE,   1, 
            Offset (0x10), 
                ,   1, 
            PBMS,   1, 
                ,   1, 
            PMCS,   1, 
            ECNS,   1, 
            Offset (0x11), 
            ECT1,   16, 
            ELEN,   1, 
            Offset (0x14)
        }
    }


   245AA: 5B 81 36 52 58 41 30 01 00 09 50 42 4C 56 01 42  // [.6RXA0...PBLV.B
   245BA: 43 50 45 01 00 45 07 00 01 50 42 4D 53 01 00 01  // CPE..E...PBMS...
   245CA: 50 4D 43 53 01 45 43 4E 53 01 00 03 45 43 54 31  // PMCS.ECNS...ECT1
   245DA: 10 45 4C 45 4E 01 00 07                          // .ELEN...

    Scope (\)
    {

   245E2: 10 41 42 5C 00                                   // .AB\.

        OperationRegion (SMB0, SystemIO, \_SB.SMBB, 0x10)

   245E7: 5B 80 53 4D 42 30 01 5C 2E 5F 53 42 5F 53 4D 42  // [.SMB0.\._SB_SMB
   245F7: 42 0A 10                                         // B..

        Field (SMB0, ByteAcc, NoLock, Preserve)
        {
            HSTS,   8, 
            SSTS,   8, 
            HSTC,   8, 
            HCMD,   8, 
            HADR,   8, 
            HDT0,   8, 
            HDT1,   8, 
            BLKD,   8, 
            SPEC,   8, 
            SRCV,   8, 
            SLVD,   16, 
            AUXS,   8, 
            AUXC,   8
        }


   245FA: 5B 81 48 04 53 4D 42 30 01 48 53 54 53 08 53 53  // [.H.SMB0.HSTS.SS
   2460A: 54 53 08 48 53 54 43 08 48 43 4D 44 08 48 41 44  // TS.HSTC.HCMD.HAD
   2461A: 52 08 48 44 54 30 08 48 44 54 31 08 42 4C 4B 44  // R.HDT0.HDT1.BLKD
   2462A: 08 53 50 45 43 08 53 52 43 56 08 53 4C 56 44 10  // .SPEC.SRCV.SLVD.
   2463A: 41 55 58 53 08 41 55 58 43 08                    // AUXS.AUXC.

        Name (RBUF, 
   24644: 08 52 42 55 46                                   // .RBUF

Buffer (0x20){})

   24649: 11 03 0A 20                                      // ... 

        Method (HBSY, 0, NotSerialized)
        {
            Store (0x000FFFFF, Local0)

   2464D: 14 21 48 42 53 59 00 70 0C FF FF 0F 00 60        // .!HBSY.p.....`

            While (Local0)
            {
                And (HSTS, One, Local1)

   2465B: A2 11 60 7B 48 53 54 53 01 61                    // ..`{HSTS.a

                If (LNot (Local1))
                {

   24665: A0 05 92 61                                      // ...a

                    Return (Zero)
                }


   24669: A4 00                                            // ..

                Decrement (Local0)
            }


   2466B: 76 60                                            // v`

            Return (One)
        }


   2466D: A4 01                                            // ..

        Method (WTSB, 0, NotSerialized)
        {
            Store (0x000FFFFF, Local0)

   2466F: 14 29 57 54 53 42 00 70 0C FF FF 0F 00 60        // .)WTSB.p.....`

            While (Local0)
            {
                Decrement (Local0)
                And (HSTS, 0x1E, Local1)

   2467D: A2 19 60 76 60 7B 48 53 54 53 0A 1E 61           // ..`v`{HSTS..a

                If (LEqual (Local1, 0x02))
                {

   2468A: A0 07 93 61 0A 02                                // ...a..

                    Return (One)
                }


   24690: A4 01                                            // ..

                If (Local1)
                {

   24692: A0 04 61                                         // ..a

                    Return (Zero)
                }
            }


   24695: A4 00                                            // ..

            Return (Zero)
        }


   24697: A4 00                                            // ..

        Mutex (P4SM, 0x00)

   24699: 5B 01 50 34 53 4D 00                             // [.P4SM.

        Method (SBYT, 2, Serialized)
        {
            Acquire (P4SM, 0xFFFF)
            Store (AUXC, Local0)
            Store (Zero, AUXC) /* \AUXC */
            Store (Arg0, HADR) /* \HADR */
            Store (Arg1, HCMD) /* \HCMD */
            Store (0xFF, HSTS) /* \HSTS */
            Store (0x44, HSTC) /* \HSTC */

   246A0: 14 4B 05 53 42 59 54 0A 5B 23 50 34 53 4D FF FF  // .K.SBYT.[#P4SM..
   246B0: 70 41 55 58 43 60 70 00 41 55 58 43 70 68 48 41  // pAUXC`p.AUXCphHA
   246C0: 44 52 70 69 48 43 4D 44 70 0A FF 48 53 54 53 70  // DRpiHCMDp..HSTSp
   246D0: 0A 44 48 53 54 43                                // .DHSTC

            If (WTSB ())
            {
                Store (Local0, AUXC) /* \AUXC */
                Release (P4SM)

   246D6: A0 13 57 54 53 42 70 60 41 55 58 43 5B 27 50 34  // ..WTSBp`AUXC['P4
   246E6: 53 4D                                            // SM

                Return (One)
            }

   246E8: A4 01                                            // ..

            Else
            {
                Store (Local0, AUXC) /* \AUXC */
                Release (P4SM)

   246EA: A1 0F 70 60 41 55 58 43 5B 27 50 34 53 4D        // ..p`AUXC['P4SM

                Return (Zero)
            }


   246F8: A4 00                                            // ..

            Return (Ones)
        }


   246FA: A4 FF                                            // ..

        Method (WBYT, 3, Serialized)
        {
            Acquire (P4SM, 0xFFFF)
            Store (0x05, Local0)

   246FC: 14 4A 05 57 42 59 54 0B 5B 23 50 34 53 4D FF FF  // .J.WBYT.[#P4SM..
   2470C: 70 0A 05 60                                      // p..`

            While (Local0)
            {

   24710: A2 3E 60                                         // .>`

                If (HBSY ())
                {

   24713: A0 07 48 42 53 59                                // ..HBSY

                    Decrement (Local0)
                }

   24719: 76 60                                            // v`

                Else
                {
                    Store (Arg0, HADR) /* \HADR */
                    Store (Arg1, HCMD) /* \HCMD */
                    Store (Arg2, HDT0) /* \HDT0 */
                    Store (0xFF, HSTS) /* \HSTS */
                    Store (0x48, HSTC) /* \HSTC */

   2471B: A1 33 70 68 48 41 44 52 70 69 48 43 4D 44 70 6A  // .3phHADRpiHCMDpj
   2472B: 48 44 54 30 70 0A FF 48 53 54 53 70 0A 48 48 53  // HDT0p..HSTSp.HHS
   2473B: 54 43                                            // TC

                    If (WTSB ())
                    {
                        Release (P4SM)

   2473D: A0 0D 57 54 53 42 5B 27 50 34 53 4D              // ..WTSB['P4SM

                        Return (One)
                    }

   24749: A4 01                                            // ..

                    Else
                    {

   2474B: A1 03                                            // ..

                        Decrement (Local0)
                    }
                }
            }

            Release (P4SM)

   2474D: 76 60 5B 27 50 34 53 4D                          // v`['P4SM

            Return (Ones)
        }


   24755: A4 FF                                            // ..

        Method (WWRD, 3, Serialized)
        {
            Acquire (P4SM, 0xFFFF)
            Store (0x05, Local0)

   24757: 14 41 07 57 57 52 44 0B 5B 23 50 34 53 4D FF FF  // .A.WWRD.[#P4SM..
   24767: 70 0A 05 60                                      // p..`

            While (Local0)
            {

   2476B: A2 45 05 60                                      // .E.`

                If (HBSY ())
                {

   2476F: A0 07 48 42 53 59                                // ..HBSY

                    Decrement (Local0)
                }

   24775: 76 60                                            // v`

                Else
                {
                    Store (Arg0, HADR) /* \HADR */
                    Store (Arg1, HCMD) /* \HCMD */
                    And (Arg2, 0xFF, Local1)
                    ShiftRight (Arg2, 0x08, Local2)
                    And (Local2, 0xFF, Local2)
                    Store (Local2, HDT0) /* \HDT0 */
                    Store (Local1, HDT1) /* \HDT1 */
                    Store (0xFF, HSTS) /* \HSTS */
                    Store (0x4C, HSTC) /* \HSTC */

   24777: A1 49 04 70 68 48 41 44 52 70 69 48 43 4D 44 7B  // .I.phHADRpiHCMD{
   24787: 6A 0A FF 61 7A 6A 0A 08 62 7B 62 0A FF 62 70 62  // j..azj..b{b..bpb
   24797: 48 44 54 30 70 61 48 44 54 31 70 0A FF 48 53 54  // HDT0paHDT1p..HST
   247A7: 53 70 0A 4C 48 53 54 43                          // Sp.LHSTC

                    If (WTSB ())
                    {
                        Release (P4SM)

   247AF: A0 0D 57 54 53 42 5B 27 50 34 53 4D              // ..WTSB['P4SM

                        Return (One)
                    }

   247BB: A4 01                                            // ..

                    Else
                    {

   247BD: A1 03                                            // ..

                        Decrement (Local0)
                    }
                }
            }

            Release (P4SM)

   247BF: 76 60 5B 27 50 34 53 4D                          // v`['P4SM

            Return (Ones)
        }


   247C7: A4 FF                                            // ..

        Method (WBLK, 3, Serialized)
        {
            Acquire (P4SM, 0xFFFF)
            Store (0x05, Local0)

   247C9: 14 4D 08 57 42 4C 4B 0B 5B 23 50 34 53 4D FF FF  // .M.WBLK.[#P4SM..
   247D9: 70 0A 05 60                                      // p..`

            While (Local0)
            {

   247DD: A2 41 07 60                                      // .A.`

                If (HBSY ())
                {

   247E1: A0 07 48 42 53 59                                // ..HBSY

                    Decrement (Local0)
                }

   247E7: 76 60                                            // v`

                Else
                {
                    Or (AUXC, 0x02, AUXC) /* \AUXC */
                    Store (Arg0, HADR) /* \HADR */
                    Store (Arg1, HCMD) /* \HCMD */
                    Store (HSTC, Local1)
                    Store (Arg2, Local2)
                    Store (Zero, Local1)

   247E9: A1 45 06 7D 41 55 58 43 0A 02 41 55 58 43 70 68  // .E.}AUXC..AUXCph
   247F9: 48 41 44 52 70 69 48 43 4D 44 70 48 53 54 43 61  // HADRpiHCMDpHSTCa
   24809: 70 6A 62 70 00 61                                // pjbp.a

                    While (Local2)
                    {
                        Store (DerefOf (
   2480F: A2 13 62 70 83                                   // ..bp.

Index (RBUF, Local1)), BLKD) /* \BLKD */
                        Decrement (Local2)

   24814: 88 52 42 55 46 61 00 42 4C 4B 44 76 62           // .RBUFa.BLKDvb

                        Increment (Local1)
                    }

                    Store (Arg2, HDT0) /* \HDT0 */
                    Store (HSTC, Local1)
                    Store (0xFF, HSTS) /* \HSTS */
                    Store (0x54, HSTC) /* \HSTC */

   24821: 75 61 70 6A 48 44 54 30 70 48 53 54 43 61 70 0A  // uapjHDT0pHSTCap.
   24831: FF 48 53 54 53 70 0A 54 48 53 54 43              // .HSTSp.THSTC

                    If (WTSB ())
                    {
                        Release (P4SM)

   2483D: A0 0D 57 54 53 42 5B 27 50 34 53 4D              // ..WTSB['P4SM

                        Return (One)
                    }

   24849: A4 01                                            // ..

                    Else
                    {

   2484B: A1 03                                            // ..

                        Decrement (Local0)
                    }
                }
            }

            Release (P4SM)

   2484D: 76 60 5B 27 50 34 53 4D                          // v`['P4SM

            Return (Ones)
        }


   24855: A4 FF                                            // ..

        Method (RSBT, 2, Serialized)
        {
            Acquire (P4SM, 0xFFFF)
            Store (0x05, Local0)

   24857: 14 48 05 52 53 42 54 0A 5B 23 50 34 53 4D FF FF  // .H.RSBT.[#P4SM..
   24867: 70 0A 05 60                                      // p..`

            While (Local0)
            {

   2486B: A2 3C 60                                         // .<`

                If (HBSY ())
                {

   2486E: A0 07 48 42 53 59                                // ..HBSY

                    Decrement (Local0)
                }

   24874: 76 60                                            // v`

                Else
                {
                    Or (Arg0, One, HADR) /* \HADR */
                    Store (Arg1, HCMD) /* \HCMD */
                    Store (0xFF, HSTS) /* \HSTS */
                    Store (0x44, HSTC) /* \HSTC */

   24876: A1 31 7D 68 01 48 41 44 52 70 69 48 43 4D 44 70  // .1}h.HADRpiHCMDp
   24886: 0A FF 48 53 54 53 70 0A 44 48 53 54 43           // ..HSTSp.DHSTC

                    If (WTSB ())
                    {
                        Release (P4SM)

   24893: A0 10 57 54 53 42 5B 27 50 34 53 4D              // ..WTSB['P4SM

                        Return (HDT0) /* \HDT0 */
                    }

   2489F: A4 48 44 54 30                                   // .HDT0

                    Else
                    {

   248A4: A1 03                                            // ..

                        Decrement (Local0)
                    }
                }
            }

            Release (P4SM)

   248A6: 76 60 5B 27 50 34 53 4D                          // v`['P4SM

            Return (Ones)
        }


   248AE: A4 FF                                            // ..

        Method (RBYT, 2, Serialized)
        {
            Acquire (P4SM, 0xFFFF)
            Store (0x05, Local0)

   248B0: 14 48 05 52 42 59 54 0A 5B 23 50 34 53 4D FF FF  // .H.RBYT.[#P4SM..
   248C0: 70 0A 05 60                                      // p..`

            While (Local0)
            {

   248C4: A2 3C 60                                         // .<`

                If (HBSY ())
                {

   248C7: A0 07 48 42 53 59                                // ..HBSY

                    Decrement (Local0)
                }

   248CD: 76 60                                            // v`

                Else
                {
                    Or (Arg0, One, HADR) /* \HADR */
                    Store (Arg1, HCMD) /* \HCMD */
                    Store (0xFF, HSTS) /* \HSTS */
                    Store (0x48, HSTC) /* \HSTC */

   248CF: A1 31 7D 68 01 48 41 44 52 70 69 48 43 4D 44 70  // .1}h.HADRpiHCMDp
   248DF: 0A FF 48 53 54 53 70 0A 48 48 53 54 43           // ..HSTSp.HHSTC

                    If (WTSB ())
                    {
                        Release (P4SM)

   248EC: A0 10 57 54 53 42 5B 27 50 34 53 4D              // ..WTSB['P4SM

                        Return (HDT0) /* \HDT0 */
                    }

   248F8: A4 48 44 54 30                                   // .HDT0

                    Else
                    {

   248FD: A1 03                                            // ..

                        Decrement (Local0)
                    }
                }
            }

            Release (P4SM)

   248FF: 76 60 5B 27 50 34 53 4D                          // v`['P4SM

            Return (Ones)
        }


   24907: A4 FF                                            // ..

        Method (RWRD, 2, Serialized)
        {
            Acquire (P4SM, 0xFFFF)
            Store (0x05, Local0)

   24909: 14 4C 06 52 57 52 44 0A 5B 23 50 34 53 4D FF FF  // .L.RWRD.[#P4SM..
   24919: 70 0A 05 60                                      // p..`

            While (Local0)
            {

   2491D: A2 40 05 60                                      // .@.`

                If (HBSY ())
                {

   24921: A0 07 48 42 53 59                                // ..HBSY

                    Decrement (Local0)
                }

   24927: 76 60                                            // v`

                Else
                {
                    Or (Arg0, One, HADR) /* \HADR */
                    Store (Arg1, HCMD) /* \HCMD */
                    Store (0xFF, HSTS) /* \HSTS */
                    Store (0x4C, HSTC) /* \HSTC */

   24929: A1 44 04 7D 68 01 48 41 44 52 70 69 48 43 4D 44  // .D.}h.HADRpiHCMD
   24939: 70 0A FF 48 53 54 53 70 0A 4C 48 53 54 43        // p..HSTSp.LHSTC

                    If (WTSB ())
                    {
                        Store (HDT0, Local1)
                        ShiftLeft (Local1, 0x08, Local1)
                        Store (HDT1, Local2)
                        Add (Local1, Local2, Local1)
                        Release (P4SM)

   24947: A0 22 57 54 53 42 70 48 44 54 30 61 79 61 0A 08  // ."WTSBpHDT0aya..
   24957: 61 70 48 44 54 31 62 72 61 62 61 5B 27 50 34 53  // apHDT1braba['P4S
   24967: 4D                                               // M

                        Return (Local1)
                    }

   24968: A4 61                                            // .a

                    Else
                    {

   2496A: A1 03                                            // ..

                        Decrement (Local0)
                    }
                }
            }

            Release (P4SM)

   2496C: 76 60 5B 27 50 34 53 4D                          // v`['P4SM

            Return (Ones)
        }


   24974: A4 FF                                            // ..

        Method (RBLK, 3, Serialized)
        {
            Acquire (P4SM, 0xFFFF)
            Store (0x05, Local0)

   24976: 14 4D 08 52 42 4C 4B 0B 5B 23 50 34 53 4D FF FF  // .M.RBLK.[#P4SM..
   24986: 70 0A 05 60                                      // p..`

            While (Local0)
            {

   2498A: A2 41 07 60                                      // .A.`

                If (HBSY ())
                {

   2498E: A0 07 48 42 53 59                                // ..HBSY

                    Decrement (Local0)
                }

   24994: 76 60                                            // v`

                Else
                {
                    Or (AUXC, 0x02, AUXC) /* \AUXC */
                    Or (Arg0, One, HADR) /* \HADR */
                    Store (Arg1, HCMD) /* \HCMD */
                    Store (0xFF, HSTS) /* \HSTS */
                    Store (0x54, HSTC) /* \HSTC */

   24996: A1 45 06 7D 41 55 58 43 0A 02 41 55 58 43 7D 68  // .E.}AUXC..AUXC}h
   249A6: 01 48 41 44 52 70 69 48 43 4D 44 70 0A FF 48 53  // .HADRpiHCMDp..HS
   249B6: 54 53 70 0A 54 48 53 54 43                       // TSp.THSTC

                    If (WTSB ())
                    {
                        Store (HSTC, Local1)
                        Store (HDT0, Local2)
                        Store (Local2, Local3)
                        Store (Zero, RBUF) /* \RBUF */
                        Store (Zero, Local1)

   249BF: A0 38 57 54 53 42 70 48 53 54 43 61 70 48 44 54  // .8WTSBpHSTCapHDT
   249CF: 30 62 70 62 63 70 00 52 42 55 46 70 00 61        // 0bpbcp.RBUFp.a

                        While (Local2)
                        {
                            Store (BLKD, 
   249DD: A2 12 62 70 42 4C 4B 44                          // ..bpBLKD

Index (RBUF, Local1))
                            Decrement (Local2)

   249E5: 88 52 42 55 46 61 00 76 62                       // .RBUFa.vb

                            Increment (Local1)
                        }

                        Release (P4SM)

   249EE: 75 61 5B 27 50 34 53 4D                          // ua['P4SM

                        Return (Local3)
                    }

   249F6: A4 63                                            // .c

                    Else
                    {

   249F8: A1 03                                            // ..

                        Decrement (Local0)
                    }
                }
            }

            Release (P4SM)

   249FA: 76 60 5B 27 50 34 53 4D                          // v`['P4SM

            Return (Ones)
        }
    }


   24A02: A4 FF                                            // ..

    Scope (\)
    {

   24A04: 10 40 13 5C 00                                   // .@.\.

        Name (CNTB, 
   24A09: 08 43 4E 54 42                                   // .CNTB

Buffer (0x0E)
        {
            /* 0000 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,  // ........
            /* 0008 */  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00               // ......
        })

   24A0E: 11 11 0A 0E FF FF FF FF FF FF 00 00 FF 00 00 00  // ................
   24A1E: 00 00                                            // ..

        Name (VISB, 
   24A20: 08 56 49 53 42                                   // .VISB

Buffer (0x0E)
        {
            /* 0000 */  0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // ......
        })

   24A25: 11 11 0A 0E 01 01 01 00 01 01 00 00 00 00 00 00  // ................
   24A35: 00 00                                            // ..

        Name (SHPB, 
   24A37: 08 53 48 50 42                                   // .SHPB

Buffer (0x0E)
        {
            /* 0000 */  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,  // ........
            /* 0008 */  0x07, 0x07, 0x07, 0x07, 0x07, 0x07               // ......
        })

   24A3C: 11 11 0A 0E 07 07 07 07 07 07 07 07 07 07 07 07  // ................
   24A4C: 07 07                                            // ..

        Name (BUPC, 
   24A4E: 08 42 55 50 43                                   // .BUPC

Package (0x04)
        {
            0xFF, 
            Zero, 
            Zero, 
            Zero
        })

   24A53: 12 07 04 0A FF 00 00 00                          // ........

        Name (BPLD, 
   24A5B: 08 42 50 4C 44                                   // .BPLD

Buffer (0x10)
        {
             0x81, 0x00, 0x31, 0x00                           // ..1.
        })

   24A60: 11 07 0A 10 81 00 31 00                          // ......1.

        Method (OUPC, 2, Serialized)
        {
            Store (DerefOf (
   24A68: 14 28 4F 55 50 43 0A 70 83                       // .(OUPC.p.

Index (CNTB, Arg0)), Local0)
            Store (Local0, 
   24A71: 88 43 4E 54 42 68 00 60 70 60                    // .CNTBh.`p`

Index (BUPC, Zero))

   24A7B: 88 42 55 50 43 00 00                             // .BUPC..

            If (LEqual (Arg1, One))
            {

   24A82: A0 0E 93 69 01                                   // ...i.

                Store (0x03, 
   24A87: 70 0A 03                                         // p..

Index (BUPC, One))
            }
        }


   24A8A: 88 42 55 50 43 01 00                             // .BUPC..

        Method (OPLD, 1, Serialized)
        {
            Store (DerefOf (
   24A91: 14 43 0A 4F 50 4C 44 09 70 83                    // .C.OPLD.p.

Index (VISB, Arg0)), Local0)
            Store (DerefOf (
   24A9B: 88 56 49 53 42 68 00 60 70 83                    // .VISBh.`p.

Index (BPLD, 0x08)), Local1)
            And (Local1, 0xFE, Local1)
            Or (Local1, Local0, Local1)
            Store (Local1, 
   24AA5: 88 42 50 4C 44 0A 08 00 61 7B 61 0A FE 61 7D 61  // .BPLD...a{a..a}a
   24AB5: 60 61 70 61                                      // `apa

Index (BPLD, 0x08))
            Store (DerefOf (
   24AB9: 88 42 50 4C 44 0A 08 00 70 83                    // .BPLD...p.

Index (SHPB, Arg0)), Local0)
            Store (DerefOf (
   24AC3: 88 53 48 50 42 68 00 60 70 83                    // .SHPBh.`p.

Index (BPLD, 0x09)), Local1)
            And (Local1, 0xC3, Local1)
            Or (Local1, Local0, Local1)
            Store (Local1, 
   24ACD: 88 42 50 4C 44 0A 09 00 61 7B 61 0A C3 61 7D 61  // .BPLD...a{a..a}a
   24ADD: 60 61 70 61                                      // `apa

Index (BPLD, 0x09))
            Store (DerefOf (
   24AE1: 88 42 50 4C 44 0A 09 00 70 83                    // .BPLD...p.

Index (BPLD, 0x0A)), Local0)
            Store (DerefOf (
   24AEB: 88 42 50 4C 44 0A 0A 00 60 70 83                 // .BPLD...`p.

Index (BPLD, 0x0B)), Local1)
            Store (Add (Arg0, One), Local2)
            Store (Or (And (Local0, 0x7F), ShiftLeft (And (Local2, One), 0x07
                )), 
   24AF6: 88 42 50 4C 44 0A 0B 00 61 70 72 68 01 00 62 70  // .BPLD...aprh..bp
   24B06: 7D 7B 60 0A 7F 00 79 7B 62 01 00 0A 07 00 00     // }{`...y{b......

Index (BPLD, 0x0A))

   24B15: 88 42 50 4C 44 0A 0A 00                          // .BPLD...

            Store (Or (And (Local1, 0x80), ShiftRight (And (Local2, 0xFE), One
                )), 
   24B1D: 70 7D 7B 61 0A 80 00 7A 7B 62 0A FE 00 01 00 00  // p}{a...z{b......

Index (BPLD, 0x0B))
        }
    }


   24B2D: 88 42 50 4C 44 0A 0B 00                          // .BPLD...

    If (LEqual (RTD3, Zero))
    {

   24B35: A0 41 0C 93 52 54 44 33 00                       // .A..RTD3.

        Scope (_SB.PCI0.SAT0.PRT1)
        {

   24B3E: 10 48 0B 2F 04 5F 53 42 5F 50 43 49 30 53 41 54  // .H./._SB_PCI0SAT
   24B4E: 30 50 52 54 31                                   // 0PRT1

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

   24B53: 14 43 0A 5F 44 53 4D 0C                          // .C._DSM.


   24B5B: 08 5F 54 5F 31 00                                // ._T_1.


   24B61: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
   24B67: A0 4B 08 93 68                                   // .K..h

ToUUID ("bdfaef30-aebb-11de-8a39-0800200c9a66") /* Unknown UUID */))
                {

   24B6C: 11 13 0A 10 30 EF FA BD BB AE DE 11 8A 39 08 00  // ....0........9..
   24B7C: 20 0C 9A 66                                      //  ..f

                    Switch (ToInteger (Arg2))
                    {

   24B80: A2 42 07 01 70 99 6A 00 5F 54 5F 30              // .B..p.j._T_0

                        Case (Zero)
                        {

   24B8C: A0 27 93 5F 54 5F 30 00                          // .'._T_0.

                            Switch (ToInteger (Arg1))
                            {

   24B94: A2 1F 01 70 99 69 00 5F 54 5F 31                 // ...p.i._T_1

                                Case (One)
                                {

   24B9F: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                                    Return (
   24BA7: A4                                               // .

Buffer (One)
                                    {
                                         0x0F                                             // .
                                    })
                                }

   24BA8: 11 03 01 0F                                      // ....

                                Default
                                {

   24BAC: A1 06                                            // ..

                                    Return (
   24BAE: A4                                               // .

Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }


   24BAF: 11 03 01 00                                      // ....

                            }
                        }

   24BB3: A5                                               // .

                        Case
   24BB4: A1 3D                                            // .=

 (One)
                        {

   24BB6: A0 09 93 5F 54 5F 30 01                          // ..._T_0.

                            Return (One)
                        }

   24BBE: A4 01                                            // ..

                        Case
   24BC0: A1 31                                            // .1

 (0x02)
                        {
                            SGOV (0x01060001, One)

   24BC2: A0 14 93 5F 54 5F 30 0A 02 53 47 4F 56 0C 01 00  // ..._T_0..SGOV...
   24BD2: 06 01 01                                         // ...

                            Return (One)
                        }

   24BD5: A4 01                                            // ..

                        Case
   24BD7: A1 1A                                            // ..

 (0x03)
                        {
                            SGOV (0x01060001, Zero)

   24BD9: A0 14 93 5F 54 5F 30 0A 03 53 47 4F 56 0C 01 00  // ..._T_0..SGOV...
   24BE9: 06 01 00                                         // ...

                            Return (One)
                        }

   24BEC: A4 01                                            // ..

                        Default
                        {

   24BEE: A1 03                                            // ..

                            Return (Zero)
                        }


   24BF0: A4 00                                            // ..

                    }
                }

   24BF2: A5                                               // .

                Else
                {

   24BF3: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


   24BF5: A4 00                                            // ..

    Scope (_GPE)
    {

   24BF7: 10 25 5F 47 50 45                                // .%_GPE

        Method (_E02, 0, NotSerialized)  // _Exx: Edge-Triggered GPE, xx=0x00-0xFF
        {
            Store (One, Local0)
            Add (0x80, Local0, Local0)

   24BFD: 14 1F 5F 45 30 32 00 70 01 60 72 0A 80 60 60     // .._E02.p.`r..``

            Notify (\_SB.PCI0.SAT0, Local0)
        }
    }


   24C0C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 53 41 54 30  // .\/._SB_PCI0SAT0
   24C1C: 60                                               // `

    Scope (_SB)
    {

   24C1D: 10 45 28 5F 53 42 5F                             // .E(_SB_

        Name (XCPD, Zero)

   24C24: 08 58 43 50 44 00                                // .XCPD.

        Name (XNPT, One)

   24C2A: 08 58 4E 50 54 01                                // .XNPT.

        Name (XCAP, 0x02)

   24C30: 08 58 43 41 50 0A 02                             // .XCAP..

        Name (XDCP, 0x04)

   24C37: 08 58 44 43 50 0A 04                             // .XDCP..

        Name (XDCT, 0x08)

   24C3E: 08 58 44 43 54 0A 08                             // .XDCT..

        Name (XDST, 0x0A)

   24C45: 08 58 44 53 54 0A 0A                             // .XDST..

        Name (XLCP, 0x0C)

   24C4C: 08 58 4C 43 50 0A 0C                             // .XLCP..

        Name (XLCT, 0x10)

   24C53: 08 58 4C 43 54 0A 10                             // .XLCT..

        Name (XLST, 0x12)

   24C5A: 08 58 4C 53 54 0A 12                             // .XLST..

        Name (XSCP, 0x14)

   24C61: 08 58 53 43 50 0A 14                             // .XSCP..

        Name (XSCT, 0x18)

   24C68: 08 58 53 43 54 0A 18                             // .XSCT..

        Name (XSST, 0x1A)

   24C6F: 08 58 53 53 54 0A 1A                             // .XSST..

        Name (XRCT, 0x1C)

   24C76: 08 58 52 43 54 0A 1C                             // .XRCT..

        Mutex (MUTE, 0x00)

   24C7D: 5B 01 4D 55 54 45 00                             // [.MUTE.

        Method (BDFR, 4, NotSerialized)
        {
            ShiftLeft (Arg0, 0x14, Arg0)
            ShiftLeft (Arg1, 0x0F, Arg1)
            ShiftLeft (Arg2, 0x0C, Arg2)
            Add (Arg0, Zero, Local0)
            Add (Arg1, Local0, Local0)
            Add (Arg2, Local0, Local0)
            Add (Arg3, Local0, Local0)

   24C84: 14 27 42 44 46 52 04 79 68 0A 14 68 79 69 0A 0F  // .'BDFR.yh..hyi..
   24C94: 69 79 6A 0A 0C 6A 72 68 00 60 72 69 60 60 72 6A  // iyj..jrh.`ri``rj
   24CA4: 60 60 72 6B 60 60                                // ``rk``

            Return (Local0)
        }


   24CAA: A4 60                                            // .`

        Method (RBPE, 1, NotSerialized)
        {
            Acquire (MUTE, 0xFFFF)
            Add (Arg0, PEBS, Local0)

   24CAC: 14 36 52 42 50 45 01 5B 23 4D 55 54 45 FF FF 72  // .6RBPE.[#MUTE..r
   24CBC: 68 50 45 42 53 60                                // hPEBS`

            OperationRegion (PCFG, SystemMemory, Local0, One)

   24CC2: 5B 80 50 43 46 47 00 60 01                       // [.PCFG.`.

            Field (PCFG, ByteAcc, NoLock, Preserve)
            {
                XCFG,   8
            }

            Release (MUTE)

   24CCB: 5B 81 0B 50 43 46 47 01 58 43 46 47 08 5B 27 4D  // [..PCFG.XCFG.['M
   24CDB: 55 54 45                                         // UTE

            Return (XCFG) /* \_SB_.RBPE.XCFG */
        }


   24CDE: A4 58 43 46 47                                   // .XCFG

        Method (RWPE, 1, NotSerialized)
        {
            Acquire (MUTE, 0xFFFF)
            And (Arg0, 0xFFFFFFFE, Arg0)
            Add (Arg0, PEBS, Local0)

   24CE3: 14 3F 52 57 50 45 01 5B 23 4D 55 54 45 FF FF 7B  // .?RWPE.[#MUTE..{
   24CF3: 68 0C FE FF FF FF 68 72 68 50 45 42 53 60        // h.....hrhPEBS`

            OperationRegion (PCFG, SystemMemory, Local0, 0x02)

   24D01: 5B 80 50 43 46 47 00 60 0A 02                    // [.PCFG.`..

            Field (PCFG, WordAcc, NoLock, Preserve)
            {
                XCFG,   16
            }

            Release (MUTE)

   24D0B: 5B 81 0B 50 43 46 47 02 58 43 46 47 10 5B 27 4D  // [..PCFG.XCFG.['M
   24D1B: 55 54 45                                         // UTE

            Return (XCFG) /* \_SB_.RWPE.XCFG */
        }


   24D1E: A4 58 43 46 47                                   // .XCFG

        Method (RDPE, 1, NotSerialized)
        {
            Acquire (MUTE, 0xFFFF)
            And (Arg0, 0xFFFFFFFC, Arg0)
            Add (Arg0, PEBS, Local0)

   24D23: 14 3F 52 44 50 45 01 5B 23 4D 55 54 45 FF FF 7B  // .?RDPE.[#MUTE..{
   24D33: 68 0C FC FF FF FF 68 72 68 50 45 42 53 60        // h.....hrhPEBS`

            OperationRegion (PCFG, SystemMemory, Local0, 0x04)

   24D41: 5B 80 50 43 46 47 00 60 0A 04                    // [.PCFG.`..

            Field (PCFG, DWordAcc, NoLock, Preserve)
            {
                XCFG,   32
            }

            Release (MUTE)

   24D4B: 5B 81 0B 50 43 46 47 03 58 43 46 47 20 5B 27 4D  // [..PCFG.XCFG ['M
   24D5B: 55 54 45                                         // UTE

            Return (XCFG) /* \_SB_.RDPE.XCFG */
        }


   24D5E: A4 58 43 46 47                                   // .XCFG

        Method (WBPE, 2, NotSerialized)
        {
            Acquire (MUTE, 0xFFFF)
            Add (Arg0, PEBS, Local0)

   24D63: 14 37 57 42 50 45 02 5B 23 4D 55 54 45 FF FF 72  // .7WBPE.[#MUTE..r
   24D73: 68 50 45 42 53 60                                // hPEBS`

            OperationRegion (PCFG, SystemMemory, Local0, One)

   24D79: 5B 80 50 43 46 47 00 60 01                       // [.PCFG.`.

            Field (PCFG, ByteAcc, NoLock, Preserve)
            {
                XCFG,   8
            }

            Store (Arg1, XCFG) /* \_SB_.WBPE.XCFG */

   24D82: 5B 81 0B 50 43 46 47 01 58 43 46 47 08 70 69 58  // [..PCFG.XCFG.piX
   24D92: 43 46 47                                         // CFG

            Release (MUTE)
        }


   24D95: 5B 27 4D 55 54 45                                // ['MUTE

        Method (WWPE, 2, NotSerialized)
        {
            Acquire (MUTE, 0xFFFF)
            And (Arg0, 0xFFFFFFFE, Arg0)
            Add (Arg0, PEBS, Local0)

   24D9B: 14 41 04 57 57 50 45 02 5B 23 4D 55 54 45 FF FF  // .A.WWPE.[#MUTE..
   24DAB: 7B 68 0C FE FF FF FF 68 72 68 50 45 42 53 60     // {h.....hrhPEBS`

            OperationRegion (PCFG, SystemMemory, Local0, 0x02)

   24DBA: 5B 80 50 43 46 47 00 60 0A 02                    // [.PCFG.`..

            Field (PCFG, WordAcc, NoLock, Preserve)
            {
                XCFG,   16
            }

            Store (Arg1, XCFG) /* \_SB_.WWPE.XCFG */

   24DC4: 5B 81 0B 50 43 46 47 02 58 43 46 47 10 70 69 58  // [..PCFG.XCFG.piX
   24DD4: 43 46 47                                         // CFG

            Release (MUTE)
        }


   24DD7: 5B 27 4D 55 54 45                                // ['MUTE

        Method (WDPE, 2, NotSerialized)
        {
            Acquire (MUTE, 0xFFFF)
            And (Arg0, 0xFFFFFFFC, Arg0)
            Add (Arg0, PEBS, Local0)

   24DDD: 14 41 04 57 44 50 45 02 5B 23 4D 55 54 45 FF FF  // .A.WDPE.[#MUTE..
   24DED: 7B 68 0C FC FF FF FF 68 72 68 50 45 42 53 60     // {h.....hrhPEBS`

            OperationRegion (PCFG, SystemMemory, Local0, 0x04)

   24DFC: 5B 80 50 43 46 47 00 60 0A 04                    // [.PCFG.`..

            Field (PCFG, DWordAcc, NoLock, Preserve)
            {
                XCFG,   32
            }

            Store (Arg1, XCFG) /* \_SB_.WDPE.XCFG */

   24E06: 5B 81 0B 50 43 46 47 03 58 43 46 47 20 70 69 58  // [..PCFG.XCFG piX
   24E16: 43 46 47                                         // CFG

            Release (MUTE)
        }


   24E19: 5B 27 4D 55 54 45                                // ['MUTE

        Method (RWDP, 3, NotSerialized)
        {
            Acquire (MUTE, 0xFFFF)
            And (Arg0, 0xFFFFFFFC, Arg0)
            Add (Arg0, PEBS, Local0)

   24E1F: 14 49 04 52 57 44 50 03 5B 23 4D 55 54 45 FF FF  // .I.RWDP.[#MUTE..
   24E2F: 7B 68 0C FC FF FF FF 68 72 68 50 45 42 53 60     // {h.....hrhPEBS`

            OperationRegion (PCFG, SystemMemory, Local0, 0x04)

   24E3E: 5B 80 50 43 46 47 00 60 0A 04                    // [.PCFG.`..

            Field (PCFG, DWordAcc, NoLock, Preserve)
            {
                XCFG,   32
            }

            And (XCFG, Arg2, Local1)
            Or (Local1, Arg1, XCFG) /* \_SB_.RWDP.XCFG */

   24E48: 5B 81 0B 50 43 46 47 03 58 43 46 47 20 7B 58 43  // [..PCFG.XCFG {XC
   24E58: 46 47 6A 61 7D 61 69 58 43 46 47                 // FGja}aiXCFG

            Release (MUTE)
        }


   24E63: 5B 27 4D 55 54 45                                // ['MUTE

        Method (RPME, 1, NotSerialized)
        {
            Add (Arg0, 0x84, Local0)
            Store (RDPE (Local0), Local1)

   24E69: 14 39 52 50 4D 45 01 72 68 0A 84 60 70 52 44 50  // .9RPME.rh..`pRDP
   24E79: 45 60 61                                         // E`a

            If (LEqual (Local1, 0xFFFFFFFF))
            {

   24E7C: A0 0A 93 61 0C FF FF FF FF                       // ...a.....

                Return (Zero)
            }

   24E85: A4 00                                            // ..

            Else
            {

   24E87: A1 1B                                            // ..

                If (LAnd (Local1, 0x00010000))
                {
                    WDPE (Local0, 
   24E89: A0 17 90 61 0C 00 00 01 00 57 44 50 45 60        // ...a.....WDPE`

And (Local1, 0x00010000))

   24E97: 7B 61 0C 00 00 01 00 00                          // {a......

                    Return (One)
                }


   24E9F: A4 01                                            // ..

                Return (Zero)
            }
        }
    }


   24EA1: A4 00                                            // ..

    Scope (\)
    {

   24EA3: 10 41 4E 5C 00                                   // .AN\.

        Method (LIMT, 0, NotSerialized)
        {
            Subtract (\_SB.CPUP, \_SB.SLMT, Local0)

   24EA8: 14 1E 4C 49 4D 54 00 74 5C 2E 5F 53 42 5F 43 50  // ..LIMT.t\._SB_CP
   24EB8: 55 50 5C 2E 5F 53 42 5F 53 4C 4D 54 60           // UP\._SB_SLMT`

            Return (Local0)
        }


   24EC5: A4 60                                            // .`

        Method (NCPS, 1, Serialized)
        {
            Notify (\_PR.CPU0, Arg0)
            Notify (\_PR.CPU1, Arg0)

   24EC7: 14 47 08 4E 43 50 53 09 86 5C 2E 5F 50 52 5F 43  // .G.NCPS..\._PR_C
   24ED7: 50 55 30 68 86 5C 2E 5F 50 52 5F 43 50 55 31 68  // PU0h.\._PR_CPU1h

            If (
   24EE7: A0 27 92                                         // .'.

LGreaterEqual (\_SB.CPUN, 0x04))
            {
                Notify (\_PR.CPU2, Arg0)

   24EEA: 95 5C 2E 5F 53 42 5F 43 50 55 4E 0A 04 86 5C 2E  // .\._SB_CPUN...\.
   24EFA: 5F 50 52 5F 43 50 55 32 68                       // _PR_CPU2h

                Notify (\_PR.CPU3, Arg0)
            }


   24F03: 86 5C 2E 5F 50 52 5F 43 50 55 33 68              // .\._PR_CPU3h

            If (
   24F0F: A0 3F 92                                         // .?.

LGreaterEqual (\_SB.CPUN, 0x08))
            {
                Notify (\_PR.CPU4, Arg0)
                Notify (\_PR.CPU5, Arg0)
                Notify (\_PR.CPU6, Arg0)

   24F12: 95 5C 2E 5F 53 42 5F 43 50 55 4E 0A 08 86 5C 2E  // .\._SB_CPUN...\.
   24F22: 5F 50 52 5F 43 50 55 34 68 86 5C 2E 5F 50 52 5F  // _PR_CPU4h.\._PR_
   24F32: 43 50 55 35 68 86 5C 2E 5F 50 52 5F 43 50 55 36  // CPU5h.\._PR_CPU6
   24F42: 68                                               // h

                Notify (\_PR.CPU7, Arg0)
            }
        }


   24F43: 86 5C 2E 5F 50 52 5F 43 50 55 37 68              // .\._PR_CPU7h

        Name (LCDB, Zero)

   24F4F: 08 4C 43 44 42 00                                // .LCDB.

        Method (PPRJ, 1, Serialized)
        {
        }


   24F55: 14 06 50 50 52 4A 09                             // ..PPRJ.

        Method (PRJS, 1, Serialized)
        {
            SGPL (0x0103000F, Zero)
        }


   24F5C: 14 10 50 52 4A 53 09 53 47 50 4C 0C 0F 00 03 01  // ..PRJS.SGPL.....
   24F6C: 00                                               // .

        Method (PRJW, 1, Serialized)
        {
            KINI ()
            \_SB.PCI0.LPCB.EC0.STBR ()
        }


   24F6D: 14 21 50 52 4A 57 09 4B 49 4E 49 5C 2F 05 5F 53  // .!PRJW.KINI\/._S
   24F7D: 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54  // B_PCI0LPCBEC0_ST
   24F8D: 42 52                                            // BR

        Method (GLID, 0, Serialized)
        {

   24F8F: 14 20 47 4C 49 44 08                             // . GLID.

            Return (\_SB.PCI0.LPCB.EC0.RPIN (0x11))
        }


   24F96: A4 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // .\/._SB_PCI0LPCB
   24FA6: 45 43 30 5F 52 50 49 4E 0A 11                    // EC0_RPIN..

        Method (TLID, 0, Serialized)
        {
        }


   24FB0: 14 06 54 4C 49 44 08                             // ..TLID.

        Method (TGAC, 0, Serialized)
        {
        }


   24FB7: 14 06 54 47 41 43 08                             // ..TGAC.

        Method (TGDC, 1, Serialized)
        {
        }


   24FBE: 14 06 54 47 44 43 09                             // ..TGDC.

        Method (FCTR, 3, Serialized)
        {
        }


   24FC5: 14 06 46 43 54 52 0B                             // ..FCTR.

        Method (OWGD, 1, Serialized)
        {
            SGPL (0x0103000F, Arg0)
            SGPL (0x0103000F, Arg0)
        }


   24FCC: 14 1A 4F 57 47 44 09 53 47 50 4C 0C 0F 00 03 01  // ..OWGD.SGPL.....
   24FDC: 68 53 47 50 4C 0C 0F 00 03 01 68                 // hSGPL.....h

        Method (OWGS, 0, Serialized)
        {
            Store (RGPL (0x0103000F), Local0)

   24FE7: 14 13 4F 57 47 53 08 70 52 47 50 4C 0C 0F 00 03  // ..OWGS.pRGPL....
   24FF7: 01 60                                            // .`

            Return (Local0)
        }


   24FF9: A4 60                                            // .`

        Method (OWLD, 1, Serialized)
        {
            Store (Arg0, \_SB.WRST)
            XOr (Arg0, One, Arg0)

   24FFB: 14 36 4F 57 4C 44 09 70 68 5C 2E 5F 53 42 5F 57  // .6OWLD.ph\._SB_W
   2500B: 52 53 54 7F 68 01 68                             // RST.h.h

            If (LEqual (LAnd (\_SB.ATKD.WAPF, 0x05), Zero))
            {
                SGPL (0x01030007, Arg0)
            }
        }


   25012: A0 1F 93 90 5C 2F 03 5F 53 42 5F 41 54 4B 44 57  // ....\/._SB_ATKDW
   25022: 41 50 46 0A 05 00 53 47 50 4C 0C 07 00 03 01 68  // APF...SGPL.....h

        Method (OBTD, 1, Serialized)
        {
            Store (Arg0, \_SB.BRST)
            SGPL (0x01010013, Arg0)
            SGPL (0x0103000F, Arg0)
        }


   25032: 14 26 4F 42 54 44 09 70 68 5C 2E 5F 53 42 5F 42  // .&OBTD.ph\._SB_B
   25042: 52 53 54 53 47 50 4C 0C 13 00 01 01 68 53 47 50  // RSTSGPL.....hSGP
   25052: 4C 0C 0F 00 03 01 68                             // L.....h

        Method (ODSP, 1, Serialized)
        {

   25059: 14 12 4F 44 53 50 09                             // ..ODSP.

            Store (Arg0, \_SB.DP3S)
        }


   25060: 70 68 5C 2E 5F 53 42 5F 44 50 33 53              // ph\._SB_DP3S

        Method (OUWD, 1, Serialized)
        {
            Store (Arg0, \_SB.UWST)

   2506C: 14 14 4F 55 57 44 09 70 68 5C 2E 5F 53 42 5F 55  // ..OUWD.ph\._SB_U
   2507C: 57 53 54                                         // WST

            Return (One)
        }


   2507F: A4 01                                            // ..

        Method (OWMD, 1, Serialized)
        {
            Store (Arg0, \_SB.WMST)

   25081: 14 14 4F 57 4D 44 09 70 68 5C 2E 5F 53 42 5F 57  // ..OWMD.ph\._SB_W
   25091: 4D 53 54                                         // MST

            Return (One)
        }


   25094: A4 01                                            // ..

        Method (OGPD, 1, Serialized)
        {
            Store (Arg0, \_SB.GPST)

   25096: 14 14 4F 47 50 44 09 70 68 5C 2E 5F 53 42 5F 47  // ..OGPD.ph\._SB_G
   250A6: 50 53 54                                         // PST

            Return (One)
        }


   250A9: A4 01                                            // ..

        Method (OTGD, 1, Serialized)
        {
            Store (Arg0, \_SB.TGST)

   250AB: 14 44 05 4F 54 47 44 09 70 68 5C 2E 5F 53 42 5F  // .D.OTGD.ph\._SB_
   250BB: 54 47 53 54                                      // TGST

            If (Arg0)
            {

   250BF: A0 1F 68                                         // ..h

                Store (\_SB.PCI0.LPCB.EC0.ST87 (0x40, 0xFF), Local0)
            }

   250C2: 70 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // p\/._SB_PCI0LPCB
   250D2: 45 43 30 5F 53 54 38 37 0A 40 0A FF 60           // EC0_ST87.@..`

            Else
            {

   250DF: A1 1E                                            // ..

                Store (\_SB.PCI0.LPCB.EC0.ST87 (0x20, 0xFF), Local0)
            }


   250E1: 70 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // p\/._SB_PCI0LPCB
   250F1: 45 43 30 5F 53 54 38 37 0A 20 0A FF 60           // EC0_ST87. ..`

            Return (One)
        }


   250FE: A4 01                                            // ..

        Method (OFGD, 1, Serialized)
        {
            Store (Arg0, \_SB.FGST)

   25100: 14 14 4F 46 47 44 09 70 68 5C 2E 5F 53 42 5F 46  // ..OFGD.ph\._SB_F
   25110: 47 53 54                                         // GST

            Return (One)
        }


   25113: A4 01                                            // ..

        Method (OHWS, 0, Serialized)
        {

   25115: 14 08 4F 48 57 53 08                             // ..OHWS.

            Return (Zero)
        }


   2511C: A4 00                                            // ..

        Method (OHWR, 0, Serialized)
        {
            Store (Zero, Local0)

   2511E: 14 44 09 4F 48 57 52 08 70 00 60                 // .D.OHWR.p.`

            If (LEqual (OHWS (), Zero))
            {

   25129: A0 0D 93 4F 48 57 53 00                          // ...OHWS.

                And (Local0, 0xFFFE, Local0)
            }

   25131: 7B 60 0B FE FF 60                                // {`...`

            Else
            {

   25137: A1 05                                            // ..

                Or (Local0, One, Local0)
            }


   25139: 7D 60 01 60                                      // }`.`

            If (\_SB.PCI0.RP03.WLAN.MPDP ())
            {

   2513D: A0 1D 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30  // ..\/._SB_PCI0RP0
   2514D: 33 57 4C 41 4E 4D 50 44 50                       // 3WLANMPDP

                Or (Local0, 0x80, Local0)
            }


   25156: 7D 60 0A 80 60                                   // }`..`

            If (\_SB.BTDP)
            {

   2515B: A0 11 5C 2E 5F 53 42 5F 42 54 44 50              // ..\._SB_BTDP

                Or (Local0, 0x0100, Local0)
            }


   25167: 7D 60 0B 00 01 60                                // }`...`

            If (\_SB.UWDP)
            {

   2516D: A0 10 5C 2E 5F 53 42 5F 55 57 44 50              // ..\._SB_UWDP

                Or (Local0, 0x08, Local0)
            }


   25179: 7D 60 0A 08 60                                   // }`..`

            If (\_SB.WMDP)
            {

   2517E: A0 10 5C 2E 5F 53 42 5F 57 4D 44 50              // ..\._SB_WMDP

                Or (Local0, 0x10, Local0)
            }


   2518A: 7D 60 0A 10 60                                   // }`..`

            If (\_SB.GPDP)
            {

   2518F: A0 10 5C 2E 5F 53 42 5F 47 50 44 50              // ..\._SB_GPDP

                Or (Local0, 0x20, Local0)
            }


   2519B: 7D 60 0A 20 60                                   // }`. `

            If (\_SB.TGDP)
            {

   251A0: A0 10 5C 2E 5F 53 42 5F 54 47 44 50              // ..\._SB_TGDP

                Or (Local0, 0x40, Local0)
            }


   251AC: 7D 60 0A 40 60                                   // }`.@`

            Return (Local0)
        }


   251B1: A4 60                                            // .`

        Method (ORST, 0, Serialized)
        {
            Store (Zero, Local0)

   251B3: 14 41 07 4F 52 53 54 08 70 00 60                 // .A.ORST.p.`

            If (\_SB.WRST)
            {

   251BE: A0 0F 5C 2E 5F 53 42 5F 57 52 53 54              // ..\._SB_WRST

                Or (Local0, One, Local0)
            }


   251CA: 7D 60 01 60                                      // }`.`

            If (\_SB.BRST)
            {

   251CE: A0 10 5C 2E 5F 53 42 5F 42 52 53 54              // ..\._SB_BRST

                Or (Local0, 0x02, Local0)
            }


   251DA: 7D 60 0A 02 60                                   // }`..`

            If (\_SB.UWST)
            {

   251DF: A0 10 5C 2E 5F 53 42 5F 55 57 53 54              // ..\._SB_UWST

                Or (Local0, 0x04, Local0)
            }


   251EB: 7D 60 0A 04 60                                   // }`..`

            If (\_SB.WMST)
            {

   251F0: A0 10 5C 2E 5F 53 42 5F 57 4D 53 54              // ..\._SB_WMST

                Or (Local0, 0x08, Local0)
            }


   251FC: 7D 60 0A 08 60                                   // }`..`

            If (\_SB.GPST)
            {

   25201: A0 10 5C 2E 5F 53 42 5F 47 50 53 54              // ..\._SB_GPST

                Or (Local0, 0x10, Local0)
            }


   2520D: 7D 60 0A 10 60                                   // }`..`

            If (\_SB.TGST)
            {

   25212: A0 10 5C 2E 5F 53 42 5F 54 47 53 54              // ..\._SB_TGST

                Or (Local0, 0x20, Local0)
            }


   2521E: 7D 60 0A 20 60                                   // }`. `

            Return (Local0)
        }


   25223: A4 60                                            // .`

        Method (GBTL, 0, Serialized)
        {

   25225: 14 20 47 42 54 4C 08                             // . GBTL.

            Return (\_SB.PCI0.LPCB.EC0.RPIN (0xFF))
        }


   2522C: A4 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // .\/._SB_PCI0LPCB
   2523C: 45 43 30 5F 52 50 49 4E 0A FF                    // EC0_RPIN..

        Method (SBTL, 1, Serialized)
        {
            \_SB.PCI0.LPCB.EC0.SPIN (0xFF, Arg0)
        }


   25246: 14 20 53 42 54 4C 09 5C 2F 05 5F 53 42 5F 50 43  // . SBTL.\/._SB_PC
   25256: 49 30 4C 50 43 42 45 43 30 5F 53 50 49 4E 0A FF  // I0LPCBEC0_SPIN..
   25266: 68                                               // h

        Method (BL2C, 0, NotSerialized)
        {

   25267: 14 08 42 4C 32 43 00                             // ..BL2C.

            Return (Zero)
        }


   2526E: A4 00                                            // ..

        Method (STCF, 1, Serialized)
        {

   25270: 14 25 53 54 43 46 09                             // .%STCF.

            If (LEqual (Arg0, One))
            {
                \_SB.PCI0.LPCB.EC0.FNCT (0x84, Zero)
            }
        }


   25277: A0 1E 93 68 01 5C 2F 05 5F 53 42 5F 50 43 49 30  // ...h.\/._SB_PCI0
   25287: 4C 50 43 42 45 43 30 5F 46 4E 43 54 0A 84 00     // LPCBEC0_FNCT...

        Method (OTGB, 0, Serialized)
        {
            Store (One, Local0)

   25296: 14 0B 4F 54 47 42 08 70 01 60                    // ..OTGB.p.`

            Return (Local0)
        }


   252A0: A4 60                                            // .`

        Method (DCPS, 1, Serialized)
        {
            Store (\_SB.PCI0.LPCB.EC0.RPIN (0x26), Local0)
            XOr (Local0, One, Local0)

   252A2: 14 27 44 43 50 53 09 70 5C 2F 05 5F 53 42 5F 50  // .'DCPS.p\/._SB_P
   252B2: 43 49 30 4C 50 43 42 45 43 30 5F 52 50 49 4E 0A  // CI0LPCBEC0_RPIN.
   252C2: 26 60 7F 60 01 60                                // &`.`.`

            Return (Local0)
        }


   252C8: A4 60                                            // .`

        Method (ACPS, 0, Serialized)
        {
            Store (\_SB.PCI0.LPCB.EC0.RPIN (0x10), Local0)
            XOr (Local0, One, Local0)

   252CA: 14 27 41 43 50 53 08 70 5C 2F 05 5F 53 42 5F 50  // .'ACPS.p\/._SB_P
   252DA: 43 49 30 4C 50 43 42 45 43 30 5F 52 50 49 4E 0A  // CI0LPCBEC0_RPIN.
   252EA: 10 60 7F 60 01 60                                // .`.`.`

            Return (Local0)
        }


   252F0: A4 60                                            // .`

        Method (KINI, 0, Serialized)
        {

   252F2: 14 42 09 4B 49 4E 49 08                          // .B.KINI.

            If (
   252FA: A0 4A 04 92                                      // .J..

LGreaterEqual (MSOS (), OSW8))
            {
                \_SB.PCI0.LPCB.EC0.STB1 (0x02)
                \_SB.PCI0.LPCB.EC0.STB1 (0x04)

   252FE: 95 4D 53 4F 53 4F 53 57 38 5C 2F 05 5F 53 42 5F  // .MSOSOSW8\/._SB_
   2530E: 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54 42 31  // PCI0LPCBEC0_STB1
   2531E: 0A 02 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // ..\/._SB_PCI0LPC
   2532E: 42 45 43 30 5F 53 54 42 31 0A 04                 // BEC0_STB1..

                Store (Zero, \_SB.FNIV)
            }

   25339: 70 00 5C 2E 5F 53 42 5F 46 4E 49 56              // p.\._SB_FNIV

            Else
            {
                \_SB.PCI0.LPCB.EC0.STB1 (0x02)
                \_SB.PCI0.LPCB.EC0.STB1 (0x03)

   25345: A1 3F 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // .?\/._SB_PCI0LPC
   25355: 42 45 43 30 5F 53 54 42 31 0A 02 5C 2F 05 5F 53  // BEC0_STB1..\/._S
   25365: 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54  // B_PCI0LPCBEC0_ST
   25375: 42 31 0A 03                                      // B1..

                Store (Zero, \_SB.FNIV)
            }
        }
    }


   25379: 70 00 5C 2E 5F 53 42 5F 46 4E 49 56              // p.\._SB_FNIV

    Scope (_SB.PCI0.LPCB.EC0)
    {
    }


   25385: 10 13 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43 42  // ../._SB_PCI0LPCB
   25395: 45 43 30 5F                                      // EC0_

    Scope (_SB.PCI0.XHC.RHUB.SS04)
    {

   25399: 10 42 05 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // .B./._SB_PCI0XHC
   253A9: 5F 52 48 55 42 53 53 30 34                       // _RHUBSS04

        Name (CAPD, 
   253B2: 08 43 41 50 44                                   // .CAPD

Package (0x01)
        {

   253B7: 12 1A 01                                         // ...

            Buffer (0x14)
            {
                /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x14, 0x00, 0x14, 0x00,  // ........
                /* 0008 */  0x25, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // %.......
                /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
            }
        })

   253BA: 11 17 0A 14 82 00 00 00 14 00 14 00 25 1D 00 00  // ............%...
   253CA: 00 00 00 00 FF FF FF FF                          // ........

        Device (DCAM)
        {

   253D2: 5B 82 18 44 43 41 4D                             // [..DCAM

            Name (_ADR, 0x04)  // _ADR: Address

   253D9: 08 5F 41 44 52 0A 04                             // ._ADR..

            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {

   253E0: 14 0B 5F 50 4C 44 00                             // .._PLD.

                Return (CAPD) /* \_SB_.PCI0.XHC_.RHUB.SS04.CAPD */
            }
        }
    }


   253E7: A4 43 41 50 44                                   // .CAPD

    Scope (_SB.TPM)
    {

   253EC: 10 47 09 2E 5F 53 42 5F 54 50 4D 5F              // .G.._SB_TPM_

        Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
        {

   253F8: 14 20 5F 48 49 44 00                             // . _HID.

            If (LEqual (TTDP, Zero))
            {

   253FF: A0 0C 93 54 54 44 50 00                          // ...TTDP.

                Return (OTID ())
            }

   25407: A4 4F 54 49 44                                   // .OTID

            Else
            {

   2540C: A1 0C                                            // ..

                Return ("MSFT0101")
            }
        }


   2540E: A4 0D 4D 53 46 54 30 31 30 31 00                 // ..MSFT0101.

        OperationRegion (TCMM, SystemMemory, 0xFED40000, 0x5000)

   25419: 5B 80 54 43 4D 4D 00 0C 00 00 D4 FE 0B 00 50     // [.TCMM........P

        Field (TCMM, ByteAcc, Lock, Preserve)
        {
            Offset (0xF00), 
            VDID,   32
        }


   25428: 5B 81 0F 54 43 4D 4D 11 00 80 80 07 56 44 49 44  // [..TCMM.....VDID
   25438: 20                                               //  

        Method (OTID, 0, Serialized)
        {
            Store (ACCS, Local0)

   25439: 14 4A 04 4F 54 49 44 08 70 41 43 43 53 60        // .J.OTID.pACCS`

            If (
   25447: A0 34 92                                         // .4.

LNotEqual (Local0, 0xFF))
            {

   2544A: 93 60 0A FF                                      // .`..

                If (LEqual (VDID, 0x687119FA))
                {

   2544E: A0 11 93 56 44 49 44 0C FA 19 71 68              // ...VDID...qh

                    Return (0x0435CF4D)
                }

   2545A: A4 0C 4D CF 35 04                                // ..M.5.

                ElseIf
   25460: A1 1B                                            // ..

 (LEqual (VDID, 0x000B15D1))
                {

   25462: A0 11 93 56 44 49 44 0C D1 15 0B 00              // ...VDID.....

                    Return (0x0201D824)
                }

   2546E: A4 0C 24 D8 01 02                                // ..$...

                Else
                {

   25474: A1 07                                            // ..

                    Return (0x310CD041)
                }
            }

   25476: A4 0C 41 D0 0C 31                                // ..A..1

            Else
            {

   2547C: A1 07                                            // ..

                Return (0x310CD041)
            }
        }
    }


   2547E: A4 0C 41 D0 0C 31                                // ..A..1

    If (CondRefOf (_SB.PCI0.RP01))
    {

   25484: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25494: 30 31 00                                         // 01.

        Scope (_SB.PCI0.RP01)
        {

   25497: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // ../._SB_PCI0RP01

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   254A7: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   254AE: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP01.PXSX))
    {

   254B7: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   254C7: 30 31 50 58 53 58 00                             // 01PXSX.

        Scope (_SB.PCI0.RP01.PXSX)
        {

   254CE: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 31  // .#/._SB_PCI0RP01
   254DE: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   254E2: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   254E9: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP02))
    {

   254F2: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25502: 30 32 00                                         // 02.

        Scope (_SB.PCI0.RP02)
        {

   25505: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // ../._SB_PCI0RP02

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25515: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   2551C: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP02.PXSX))
    {

   25525: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25535: 30 32 50 58 53 58 00                             // 02PXSX.

        Scope (_SB.PCI0.RP02.PXSX)
        {

   2553C: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 32  // .#/._SB_PCI0RP02
   2554C: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25550: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25557: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP04))
    {

   25560: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25570: 30 34 00                                         // 04.

        Scope (_SB.PCI0.RP04)
        {

   25573: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // ../._SB_PCI0RP04

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25583: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   2558A: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP04.PXSX))
    {

   25593: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   255A3: 30 34 50 58 53 58 00                             // 04PXSX.

        Scope (_SB.PCI0.RP04.PXSX)
        {

   255AA: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 34  // .#/._SB_PCI0RP04
   255BA: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   255BE: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   255C5: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP05))
    {

   255CE: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   255DE: 30 35 00                                         // 05.

        Scope (_SB.PCI0.RP05)
        {

   255E1: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // ../._SB_PCI0RP05

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   255F1: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   255F8: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP05.PXSX))
    {

   25601: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25611: 30 35 50 58 53 58 00                             // 05PXSX.

        Scope (_SB.PCI0.RP05.PXSX)
        {

   25618: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 35  // .#/._SB_PCI0RP05
   25628: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   2562C: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25633: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP06))
    {

   2563C: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   2564C: 30 36 00                                         // 06.

        Scope (_SB.PCI0.RP06)
        {

   2564F: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // ../._SB_PCI0RP06

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   2565F: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25666: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP06.PXSX))
    {

   2566F: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   2567F: 30 36 50 58 53 58 00                             // 06PXSX.

        Scope (_SB.PCI0.RP06.PXSX)
        {

   25686: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 36  // .#/._SB_PCI0RP06
   25696: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   2569A: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   256A1: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP07))
    {

   256AA: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   256BA: 30 37 00                                         // 07.

        Scope (_SB.PCI0.RP07)
        {

   256BD: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // ../._SB_PCI0RP07

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   256CD: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   256D4: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP07.PXSX))
    {

   256DD: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   256ED: 30 37 50 58 53 58 00                             // 07PXSX.

        Scope (_SB.PCI0.RP07.PXSX)
        {

   256F4: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 37  // .#/._SB_PCI0RP07
   25704: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25708: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   2570F: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP08))
    {

   25718: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25728: 30 38 00                                         // 08.

        Scope (_SB.PCI0.RP08)
        {

   2572B: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // ../._SB_PCI0RP08

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   2573B: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25742: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP08.PXSX))
    {

   2574B: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   2575B: 30 38 50 58 53 58 00                             // 08PXSX.

        Scope (_SB.PCI0.RP08.PXSX)
        {

   25762: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 38  // .#/._SB_PCI0RP08
   25772: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25776: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   2577D: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP09))
    {

   25786: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25796: 30 39 00                                         // 09.

        Scope (_SB.PCI0.RP09)
        {

   25799: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 39  // ../._SB_PCI0RP09

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   257A9: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   257B0: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP09.PXSX))
    {

   257B9: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   257C9: 30 39 50 58 53 58 00                             // 09PXSX.

        Scope (_SB.PCI0.RP09.PXSX)
        {

   257D0: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 39  // .#/._SB_PCI0RP09
   257E0: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   257E4: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   257EB: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP10))
    {

   257F4: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25804: 31 30 00                                         // 10.

        Scope (_SB.PCI0.RP10)
        {

   25807: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 30  // ../._SB_PCI0RP10

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25817: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   2581E: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP10.PXSX))
    {

   25827: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25837: 31 30 50 58 53 58 00                             // 10PXSX.

        Scope (_SB.PCI0.RP10.PXSX)
        {

   2583E: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 30  // .#/._SB_PCI0RP10
   2584E: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25852: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25859: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP11))
    {

   25862: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25872: 31 31 00                                         // 11.

        Scope (_SB.PCI0.RP11)
        {

   25875: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 31  // ../._SB_PCI0RP11

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25885: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   2588C: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP11.PXSX))
    {

   25895: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   258A5: 31 31 50 58 53 58 00                             // 11PXSX.

        Scope (_SB.PCI0.RP11.PXSX)
        {

   258AC: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 31  // .#/._SB_PCI0RP11
   258BC: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   258C0: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   258C7: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP12))
    {

   258D0: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   258E0: 31 32 00                                         // 12.

        Scope (_SB.PCI0.RP12)
        {

   258E3: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 32  // ../._SB_PCI0RP12

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   258F3: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   258FA: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP12.PXSX))
    {

   25903: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25913: 31 32 50 58 53 58 00                             // 12PXSX.

        Scope (_SB.PCI0.RP12.PXSX)
        {

   2591A: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 32  // .#/._SB_PCI0RP12
   2592A: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   2592E: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25935: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP13))
    {

   2593E: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   2594E: 31 33 00                                         // 13.

        Scope (_SB.PCI0.RP13)
        {

   25951: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 33  // ../._SB_PCI0RP13

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25961: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25968: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP13.PXSX))
    {

   25971: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25981: 31 33 50 58 53 58 00                             // 13PXSX.

        Scope (_SB.PCI0.RP13.PXSX)
        {

   25988: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 33  // .#/._SB_PCI0RP13
   25998: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   2599C: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   259A3: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP14))
    {

   259AC: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   259BC: 31 34 00                                         // 14.

        Scope (_SB.PCI0.RP14)
        {

   259BF: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 34  // ../._SB_PCI0RP14

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   259CF: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   259D6: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP14.PXSX))
    {

   259DF: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   259EF: 31 34 50 58 53 58 00                             // 14PXSX.

        Scope (_SB.PCI0.RP14.PXSX)
        {

   259F6: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 34  // .#/._SB_PCI0RP14
   25A06: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25A0A: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25A11: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP15))
    {

   25A1A: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25A2A: 31 35 00                                         // 15.

        Scope (_SB.PCI0.RP15)
        {

   25A2D: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 35  // ../._SB_PCI0RP15

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25A3D: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25A44: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP15.PXSX))
    {

   25A4D: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25A5D: 31 35 50 58 53 58 00                             // 15PXSX.

        Scope (_SB.PCI0.RP15.PXSX)
        {

   25A64: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 35  // .#/._SB_PCI0RP15
   25A74: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25A78: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25A7F: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP16))
    {

   25A88: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25A98: 31 36 00                                         // 16.

        Scope (_SB.PCI0.RP16)
        {

   25A9B: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 36  // ../._SB_PCI0RP16

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25AAB: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25AB2: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP16.PXSX))
    {

   25ABB: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25ACB: 31 36 50 58 53 58 00                             // 16PXSX.

        Scope (_SB.PCI0.RP16.PXSX)
        {

   25AD2: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 36  // .#/._SB_PCI0RP16
   25AE2: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25AE6: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25AED: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP17))
    {

   25AF6: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25B06: 31 37 00                                         // 17.

        Scope (_SB.PCI0.RP17)
        {

   25B09: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 37  // ../._SB_PCI0RP17

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25B19: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25B20: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP17.PXSX))
    {

   25B29: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25B39: 31 37 50 58 53 58 00                             // 17PXSX.

        Scope (_SB.PCI0.RP17.PXSX)
        {

   25B40: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 37  // .#/._SB_PCI0RP17
   25B50: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25B54: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25B5B: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP18))
    {

   25B64: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25B74: 31 38 00                                         // 18.

        Scope (_SB.PCI0.RP18)
        {

   25B77: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 38  // ../._SB_PCI0RP18

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25B87: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25B8E: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP18.PXSX))
    {

   25B97: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25BA7: 31 38 50 58 53 58 00                             // 18PXSX.

        Scope (_SB.PCI0.RP18.PXSX)
        {

   25BAE: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 38  // .#/._SB_PCI0RP18
   25BBE: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25BC2: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25BC9: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP19))
    {

   25BD2: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25BE2: 31 39 00                                         // 19.

        Scope (_SB.PCI0.RP19)
        {

   25BE5: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 39  // ../._SB_PCI0RP19

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25BF5: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25BFC: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP19.PXSX))
    {

   25C05: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25C15: 31 39 50 58 53 58 00                             // 19PXSX.

        Scope (_SB.PCI0.RP19.PXSX)
        {

   25C1C: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 39  // .#/._SB_PCI0RP19
   25C2C: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25C30: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25C37: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP20))
    {

   25C40: A0 32 5B 12 2F 03 5F 53 42 5F 50 43 49 30 52 50  // .2[./._SB_PCI0RP
   25C50: 32 30 00                                         // 20.

        Scope (_SB.PCI0.RP20)
        {

   25C53: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 30  // ../._SB_PCI0RP20

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25C63: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }


   25C6A: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

    If (CondRefOf (_SB.PCI0.RP20.PXSX))
    {

   25C73: A0 3A 5B 12 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .:[./._SB_PCI0RP
   25C83: 32 30 50 58 53 58 00                             // 20PXSX.

        Scope (_SB.PCI0.RP20.PXSX)
        {

   25C8A: 10 23 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 30  // .#/._SB_PCI0RP20
   25C9A: 50 58 53 58                                      // PXSX

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

   25C9E: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }
        }
    }
}



Table Header:
Table Body (Length 0x25CAE)
